# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/smtplib.rst:2
msgid ":mod:`smtplib` --- SMTP protocol client"
msgstr ":mod:`smtplib` --- SMTP プロトコルクライアント"

#: ../../library/smtplib.rst:9
msgid "**Source code:** :source:`Lib/smtplib.py`"
msgstr "**ソースコード:** :source:`Lib/smtplib.py`"

#: ../../library/smtplib.rst:17
msgid ""
"The :mod:`smtplib` module defines an SMTP client session object that can be "
"used to send mail to any internet machine with an SMTP or ESMTP listener "
"daemon.  For details of SMTP and ESMTP operation, consult :rfc:`821` (Simple "
"Mail Transfer Protocol) and :rfc:`1869` (SMTP Service Extensions)."
msgstr ""

#: ../../library/smtplib.rst:25
msgid ""
"An :class:`SMTP` instance encapsulates an SMTP connection.  It has methods "
"that support a full repertoire of SMTP and ESMTP operations. If the optional "
"host and port parameters are given, the SMTP :meth:`connect` method is "
"called with those parameters during initialization.  If specified, "
"*local_hostname* is used as the FQDN of the local host in the HELO/EHLO "
"command.  Otherwise, the local hostname is found using :func:`socket."
"getfqdn`.  If the :meth:`connect` call returns anything other than a success "
"code, an :exc:`SMTPConnectError` is raised. The optional *timeout* parameter "
"specifies a timeout in seconds for blocking operations like the connection "
"attempt (if not specified, the global default timeout setting will be "
"used).  If the timeout expires, :exc:`TimeoutError` is raised.  The optional "
"source_address parameter allows binding to some specific source address in a "
"machine with multiple network interfaces, and/or to some specific source TCP "
"port. It takes a 2-tuple (host, port), for the socket to bind to as its "
"source address before connecting. If omitted (or if host or port are ``''`` "
"and/or 0 respectively) the OS default behavior will be used."
msgstr ""

#: ../../library/smtplib.rst:43
msgid ""
"For normal use, you should only require the initialization/connect, :meth:"
"`sendmail`, and :meth:`SMTP.quit` methods. An example is included below."
msgstr ""
"普通に使う場合は、初期化と接続を行ってから、 :meth:`sendmail` と :meth:`SMTP."
"quit` メソッドを呼びます。使用例は先の方で記載しています。"

#: ../../library/smtplib.rst:47
msgid ""
"The :class:`SMTP` class supports the :keyword:`with` statement.  When used "
"like this, the SMTP ``QUIT`` command is issued automatically when the :"
"keyword:`!with` statement exits.  E.g.::"
msgstr ""
" :class:`SMTP` クラスは :keyword:`with` 構文をサポートしています。このように"
"使用すると、 :keyword:`!with` 構文が終了すると、SMTPの ``QUIT`` コマンドが自"
"動的に発行されます。たとえば、"

#: ../../library/smtplib.rst:58
msgid ""
"Raises an :ref:`auditing event <auditing>` ``smtplib.send`` with arguments "
"``self``, ``data``."
msgstr ""
"引数 ``self``, ``data`` を指定して :ref:`監査イベント <auditing>` ``smtplib."
"send`` を送出します。 "

#: ../../library/smtplib.rst:60
msgid ""
"All commands will raise an :ref:`auditing event <auditing>` ``smtplib.SMTP."
"send`` with arguments ``self`` and ``data``, where ``data`` is the bytes "
"about to be sent to the remote host."
msgstr ""
"全てのコマンドは引数 ``self`` と ``data`` を指定して :ref:`auditing event "
"<auditing>` ``smtplib.SMTP.send`` を送出します。ここで ``data`` はリモートホ"
"ストに送信されるバイト数です。"

#: ../../library/smtplib.rst:64
msgid "Support for the :keyword:`with` statement was added."
msgstr ":keyword:`with` 構文のサポートが追加されました。"

#: ../../library/smtplib.rst:67 ../../library/smtplib.rst:99
msgid "source_address argument was added."
msgstr "source_address 引数が追加されました。"

#: ../../library/smtplib.rst:70
msgid "The SMTPUTF8 extension (:rfc:`6531`) is now supported."
msgstr "SMTPUTF8 拡張 (:rfc:`6531`) がサポートされました。"

#: ../../library/smtplib.rst:73 ../../library/smtplib.rst:114
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a :class:"
"`ValueError` to prevent the creation of a non-blocking socket"
msgstr ""
"*timeout* パラメータが0に設定されている場合、非ブロッキングソケットの作成を防"
"ぐために :class:`ValueError` を送出します。"

#: ../../library/smtplib.rst:81
msgid ""
"An :class:`SMTP_SSL` instance behaves exactly the same as instances of :"
"class:`SMTP`. :class:`SMTP_SSL` should be used for situations where SSL is "
"required from the beginning of the connection and using :meth:`starttls` is "
"not appropriate. If *host* is not specified, the local host is used. If "
"*port* is zero, the standard SMTP-over-SSL port (465) is used.  The optional "
"arguments *local_hostname*, *timeout* and *source_address* have the same "
"meaning as they do in the :class:`SMTP` class.  *context*, also optional, "
"can contain a :class:`~ssl.SSLContext` and allows configuring various "
"aspects of the secure connection.  Please read :ref:`ssl-security` for best "
"practices."
msgstr ""
":class:`SMTP_SSL` インスタンスは :class:`SMTP` と全く同じように動作します。:"
"class:`SMTP_SSL` は、接続の始めからSSLが必要であり、 :meth:`starttls` が適切"
"でない状況で使用するべきです。 *host* が指定されていない場合、ローカルホスト"
"が使用されます。 *port* が0の場合、標準のSMTP-over-SSLポート（465）が使用され"
"ます。オプション引数 *local_hostname*, *timeout*, *source_address* は :class:"
"`SMTP` クラスと同じ意味を持ちます。 *context* オプションは :class:`~ssl."
"SSLContext` を含むことができ、安全な接続のさまざまな側面を設定することができ"
"ます。ベストプラクティスについては :ref:`ssl-security` を読んでください。"

#: ../../library/smtplib.rst:92
msgid ""
"*keyfile* and *certfile* are a legacy alternative to *context*, and can "
"point to a PEM formatted private key and certificate chain file for the SSL "
"connection."
msgstr ""

#: ../../library/smtplib.rst:96 ../../library/smtplib.rst:427
msgid "*context* was added."
msgstr "*context* が追加されました。"

#: ../../library/smtplib.rst:102
msgid ""
"The class now supports hostname check with :attr:`ssl.SSLContext."
"check_hostname` and *Server Name Indication* (see :data:`ssl.HAS_SNI`)."
msgstr ""
"このクラスは :attr:`ssl.SSLContext.check_hostname` と *Server Name "
"Indication* でホスト名のチェックをサポートしました。(:data:`ssl.HAS_SNI` を参"
"照してください)。"

#: ../../library/smtplib.rst:109 ../../library/smtplib.rst:413
msgid ""
"*keyfile* and *certfile* are deprecated in favor of *context*. Please use :"
"meth:`ssl.SSLContext.load_cert_chain` instead, or let :func:`ssl."
"create_default_context` select the system's trusted CA certificates for you."
msgstr ""
"*keyfile* および *certfile* は非推奨となったので、 *context* を使ってくださ"
"い。\n"
"代わりに :meth:`ssl.SSLContext.load_cert_chain` を使うか、または :func:`ssl."
"create_default_context` にシステムが信頼する CA 証明書を選んでもらうかしてく"
"ださい。"

#: ../../library/smtplib.rst:121
msgid ""
"The LMTP protocol, which is very similar to ESMTP, is heavily based on the "
"standard SMTP client. It's common to use Unix sockets for LMTP, so our :meth:"
"`connect` method must support that as well as a regular host:port server. "
"The optional arguments local_hostname and source_address have the same "
"meaning as they do in the :class:`SMTP` class. To specify a Unix socket, you "
"must use an absolute path for *host*, starting with a '/'."
msgstr ""

#: ../../library/smtplib.rst:128
msgid ""
"Authentication is supported, using the regular SMTP mechanism. When using a "
"Unix socket, LMTP generally don't support or require any authentication, but "
"your mileage might vary."
msgstr ""
"認証は、通常のSMTP機構を利用してサポートされています。 Unixソケットを利用する"
"場合、LMTPは通常認証をサポートしたり要求したりはしません。しかし、あなたが必"
"要であれば、利用することができます。"

#: ../../library/smtplib.rst:132
msgid "The optional *timeout* parameter was added."
msgstr "オプションの *timeout* 引数が追加されました。"

#: ../../library/smtplib.rst:136
msgid "A nice selection of exceptions is defined as well:"
msgstr "このモジュールの例外には次のものがあります:"

#: ../../library/smtplib.rst:141
msgid ""
"Subclass of :exc:`OSError` that is the base exception class for all the "
"other exceptions provided by this module."
msgstr ""
":exc:`OSError` の派生クラスで、このモジュールが提供する他の全ての例外の基底ク"
"ラスです。"

#: ../../library/smtplib.rst:144
msgid "SMTPException became subclass of :exc:`OSError`"
msgstr "SMTPException が :exc:`OSError` の派生クラスになりました。"

#: ../../library/smtplib.rst:150
msgid ""
"This exception is raised when the server unexpectedly disconnects, or when "
"an attempt is made to use the :class:`SMTP` instance before connecting it to "
"a server."
msgstr ""
"この例外はサーバが突然接続が切断されるか、:class:`SMTP` インスタンスを生成す"
"る前に接続しようとした場合に送出されます。"

#: ../../library/smtplib.rst:157
msgid ""
"Base class for all exceptions that include an SMTP error code. These "
"exceptions are generated in some instances when the SMTP server returns an "
"error code.  The error code is stored in the :attr:`smtp_code` attribute of "
"the error, and the :attr:`smtp_error` attribute is set to the error message."
msgstr ""
"SMTPのエラーコードを含んだ例外のクラスです。これらの例外はSMTPサーバがエラー"
"コードを返すときに生成されます。エラーコードは :attr:`smtp_code` 属性に格納さ"
"れます。また、 :attr:`smtp_error` 属性にはエラーメッセージが格納されます。"

#: ../../library/smtplib.rst:165
msgid ""
"Sender address refused.  In addition to the attributes set by on all :exc:"
"`SMTPResponseException` exceptions, this sets 'sender' to the string that "
"the SMTP server refused."
msgstr ""
"送信者のアドレスが弾かれたときに送出される例外です。全ての :exc:"
"`SMTPResponseException` 例外に、 SMTPサーバが弾いた 'sender' アドレスの文字列"
"がセットされます。"

#: ../../library/smtplib.rst:172
msgid ""
"All recipient addresses refused.  The errors for each recipient are "
"accessible through the attribute :attr:`recipients`, which is a dictionary "
"of exactly the same sort as :meth:`SMTP.sendmail` returns."
msgstr ""
"全ての受取人アドレスが弾かれたときに送出される例外です。各受取人のエラーは属"
"性 :attr:`recipients` によってアクセス可能で、 :meth:`SMTP.sendmail` が返す辞"
"書と同じ並びの辞書になっています。"

#: ../../library/smtplib.rst:179
msgid "The SMTP server refused to accept the message data."
msgstr ""
"SMTPサーバが、メッセージのデータを受け入れることを拒絶したときに送出される例"
"外です。"

#: ../../library/smtplib.rst:184
msgid "Error occurred during establishment of a connection  with the server."
msgstr "サーバへの接続時にエラーが発生したときに送出される例外です。"

#: ../../library/smtplib.rst:189
msgid "The server refused our ``HELO`` message."
msgstr "サーバーが ``HELO`` メッセージを弾いたときに送出される例外です。"

#: ../../library/smtplib.rst:194
msgid "The command or option attempted is not supported by the server."
msgstr "試行したコマンドやオプションはサーバにサポートされていません。"

#: ../../library/smtplib.rst:201
msgid ""
"SMTP authentication went wrong.  Most probably the server didn't accept the "
"username/password combination provided."
msgstr ""
"SMTP 認証が失敗しました。最もあり得るのは、サーバーがユーザ名/パスワードのペ"
"アを受け付なかった事です。"

#: ../../library/smtplib.rst:209
msgid ":rfc:`821` - Simple Mail Transfer Protocol"
msgstr ":rfc:`821` - Simple Mail Transfer Protocol"

#: ../../library/smtplib.rst:208
msgid ""
"Protocol definition for SMTP.  This document covers the model, operating "
"procedure, and protocol details for SMTP."
msgstr ""
"SMTP のプロトコル定義です。このドキュメントでは SMTP のモデル、操作手順、プロ"
"トコルの詳細についてカバーしています。"

#: ../../library/smtplib.rst:213
msgid ":rfc:`1869` - SMTP Service Extensions"
msgstr ":rfc:`1869` - SMTP Service Extensions"

#: ../../library/smtplib.rst:212
msgid ""
"Definition of the ESMTP extensions for SMTP.  This describes a framework for "
"extending SMTP with new commands, supporting dynamic discovery of the "
"commands provided by the server, and defines a few additional commands."
msgstr ""
"SMTP に対する ESMTP 拡張の定義です。このドキュメントでは、新たな命令による "
"SMTP の拡張、サーバによって提供される命令を動的に発見する機能のサポート、およ"
"びいくつかの追加命令定義について記述しています。"

#: ../../library/smtplib.rst:220
msgid "SMTP Objects"
msgstr "SMTP オブジェクト"

#: ../../library/smtplib.rst:222
msgid "An :class:`SMTP` instance has the following methods:"
msgstr ":class:`SMTP` クラスインスタンスは次のメソッドを提供します:"

#: ../../library/smtplib.rst:227
msgid ""
"Set the debug output level.  A value of 1 or ``True`` for *level* results in "
"debug messages for connection and for all messages sent to and received from "
"the server.  A value of 2 for *level* results in these messages being "
"timestamped."
msgstr ""
"デバッグ出力レベルを設定します。*level* が 1 や ``True`` の場合、接続ならびに"
"サーバとの送受信のメッセージがデバッグメッセージとなります。*level* が 2 の場"
"合、それらのメッセージにタイムスタンプが付きます。"

#: ../../library/smtplib.rst:232
msgid "Added debuglevel 2."
msgstr "デバッグレベル2が追加されました。"

#: ../../library/smtplib.rst:237
msgid ""
"Send a command *cmd* to the server.  The optional argument *args* is simply "
"concatenated to the command, separated by a space."
msgstr ""
"サーバへコマンド *cmd* を送信します。オプション引数 *args* はスペース文字でコ"
"マンドに連結します。戻り値は、整数値のレスポンスコードと、サーバからの応答の"
"値をタプルで返します (サーバからの応答が数行に渡る場合でも一つの大きな文字列"
"で返します)。"

#: ../../library/smtplib.rst:240
msgid ""
"This returns a 2-tuple composed of a numeric response code and the actual "
"response line (multiline responses are joined into one long line.)"
msgstr ""
"数値応答コードと実際の応答行 (複数の応答は 1 つの長い行に結合されます) からな"
"る 2 値タプルを返します。"

#: ../../library/smtplib.rst:243
msgid ""
"In normal operation it should not be necessary to call this method "
"explicitly. It is used to implement other methods and may be useful for "
"testing private extensions."
msgstr ""
"通常、このメソッドを明示的に使う必要はありません。他のメソッドを実装するのに"
"使い、自分で拡張したものをテストするのに役立つかもしれません。"

#: ../../library/smtplib.rst:247
msgid ""
"If the connection to the server is lost while waiting for the reply, :exc:"
"`SMTPServerDisconnected` will be raised."
msgstr ""
"応答待ちのときにサーバへの接続が切れると :exc:`SMTPServerDisconnected` が送出"
"されます。"

#: ../../library/smtplib.rst:253
msgid ""
"Connect to a host on a given port.  The defaults are to connect to the local "
"host at the standard SMTP port (25). If the hostname ends with a colon "
"(``':'``) followed by a number, that suffix will be stripped off and the "
"number interpreted as the port number to use. This method is automatically "
"invoked by the constructor if a host is specified during instantiation.  "
"Returns a 2-tuple of the response code and message sent by the server in its "
"connection response."
msgstr ""
"ホスト名とポート番号をもとに接続します。デフォルトはlocalhostの標準的なSMTP"
"ポート(25番)に接続します。もしホスト名の末尾がコロン(``':'``)で、後に番号がつ"
"いている場合は、「ホスト名:ポート番号」として扱われます。このメソッドはコンス"
"トラクタにホスト名及びポート番号が指定されている場合、自動的に呼び出されま"
"す。戻り値は、この接続の応答内でサーバによって送信された応答コードとメッセー"
"ジの2要素タプルです。"

#: ../../library/smtplib.rst:261
msgid ""
"Raises an :ref:`auditing event <auditing>` ``smtplib.connect`` with "
"arguments ``self``, ``host``, ``port``."
msgstr ""
"引数 ``self``, ``host``, ``port`` を指定して :ref:`監査イベント <auditing>` "
"``smtplib.connect`` を送出します。 "

#: ../../library/smtplib.rst:266
msgid ""
"Identify yourself to the SMTP server using ``HELO``.  The hostname argument "
"defaults to the fully qualified domain name of the local host. The message "
"returned by the server is stored as the :attr:`helo_resp` attribute of the "
"object."
msgstr ""
"SMTPサーバに ``HELO`` コマンドで身元を示します。デフォルトではhostname引数は"
"ローカルホストを指します。サーバーが返したメッセージは、オブジェクトの :attr:"
"`helo_resp` 属性に格納されます。"

#: ../../library/smtplib.rst:271
msgid ""
"In normal operation it should not be necessary to call this method "
"explicitly. It will be implicitly called by the :meth:`sendmail` when "
"necessary."
msgstr ""
"通常は :meth:`sendmail` が呼びだすため、これを明示的に呼び出す必要はありませ"
"ん。"

#: ../../library/smtplib.rst:277
msgid ""
"Identify yourself to an ESMTP server using ``EHLO``.  The hostname argument "
"defaults to the fully qualified domain name of the local host.  Examine the "
"response for ESMTP option and store them for use by :meth:`has_extn`. Also "
"sets several informational attributes: the message returned by the server is "
"stored as the :attr:`ehlo_resp` attribute, :attr:`does_esmtp` is set to "
"``True`` or ``False`` depending on whether the server supports ESMTP, and :"
"attr:`esmtp_features` will be a dictionary containing the names of the SMTP "
"service extensions this server supports, and their parameters (if any)."
msgstr ""

#: ../../library/smtplib.rst:287
msgid ""
"Unless you wish to use :meth:`has_extn` before sending mail, it should not "
"be necessary to call this method explicitly.  It will be implicitly called "
"by :meth:`sendmail` when necessary."
msgstr ""
"メールを送信する前に :meth:`has_extn` を使おうとしない限り、このメソッドを明"
"示的に呼ぶ必要はないはずです。必要な場合は :meth:`sendmail` に暗黙的に呼ばれ"
"ます。"

#: ../../library/smtplib.rst:293
msgid ""
"This method calls :meth:`ehlo` and/or :meth:`helo` if there has been no "
"previous ``EHLO`` or ``HELO`` command this session.  It tries ESMTP ``EHLO`` "
"first."
msgstr ""
"このメソッドは、現在のセッションでまだ ``EHLO`` か ``HELO`` コマンドが実行さ"
"れていない場合、 :meth:`ehlo` and/or :meth:`helo` メソッドを呼び出します。こ"
"のメソッドは先に ESMTP ``EHLO`` を試します。"

#: ../../library/smtplib.rst:297 ../../library/smtplib.rst:327
#: ../../library/smtplib.rst:419 ../../library/smtplib.rst:488
msgid ":exc:`SMTPHeloError`"
msgstr ":exc:`SMTPHeloError`"

#: ../../library/smtplib.rst:298 ../../library/smtplib.rst:327
#: ../../library/smtplib.rst:419 ../../library/smtplib.rst:488
msgid "The server didn't reply properly to the ``HELO`` greeting."
msgstr "サーバーが ``HELO`` に正しく返答しませんでした。"

#: ../../library/smtplib.rst:302
msgid ""
"Return :const:`True` if *name* is in the set of SMTP service extensions "
"returned by the server, :const:`False` otherwise. Case is ignored."
msgstr ""
"*name* が拡張SMTPサービスセットに含まれている場合には :const:`True` を返し、"
"そうでなければ :const:`False` を返します。大小文字は区別されません。"

#: ../../library/smtplib.rst:308
msgid ""
"Check the validity of an address on this server using SMTP ``VRFY``. Returns "
"a tuple consisting of code 250 and a full :rfc:`822` address (including "
"human name) if the user address is valid. Otherwise returns an SMTP error "
"code of 400 or greater and an error string."
msgstr ""
"``VRFY`` を利用してSMTPサーバにアドレスの妥当性をチェックします。妥当である場"
"合はコード250と完全な :rfc:`822` アドレス (人名を含む) のタプルを返します。そ"
"れ以外の場合は、400以上のエラーコードとエラー文字列を返します。"

#: ../../library/smtplib.rst:315
msgid "Many sites disable SMTP ``VRFY`` in order to foil spammers."
msgstr ""
"ほとんどのサイトはスパマーの裏をかくためにSMTPの ``VRFY`` は使用不可になって"
"います。"

#: ../../library/smtplib.rst:320
msgid ""
"Log in on an SMTP server that requires authentication. The arguments are the "
"username and the password to authenticate with. If there has been no "
"previous ``EHLO`` or ``HELO`` command this session, this method tries ESMTP "
"``EHLO`` first. This method will return normally if the authentication was "
"successful, or may raise the following exceptions:"
msgstr ""
"認証が必要なSMTPサーバにログインします。認証に使用する引数はユーザ名とパス"
"ワードです。まだセッションが無い場合は、 ``EHLO`` または ``HELO`` コマンドで"
"セッションを作ります。ESMTPの場合は ``EHLO`` が先に試されます。認証が成功した"
"場合は通常このメソッドは戻りますが、例外が起こった場合は以下の例外が上がりま"
"す:"

#: ../../library/smtplib.rst:330
msgid ":exc:`SMTPAuthenticationError`"
msgstr ":exc:`SMTPAuthenticationError`"

#: ../../library/smtplib.rst:330
msgid "The server didn't accept the username/password combination."
msgstr "サーバがユーザ名/パスワードでの認証に失敗しました。"

#: ../../library/smtplib.rst:333 ../../library/smtplib.rst:422
#: ../../library/smtplib.rst:499
msgid ":exc:`SMTPNotSupportedError`"
msgstr ":exc:`SMTPNotSupportedError`"

#: ../../library/smtplib.rst:333
msgid "The ``AUTH`` command is not supported by the server."
msgstr "``AUTH`` コマンドはサーバにサポートされていません。"

#: ../../library/smtplib.rst:336
msgid ":exc:`SMTPException`"
msgstr ":exc:`SMTPException`"

#: ../../library/smtplib.rst:336
msgid "No suitable authentication method was found."
msgstr "適当な認証方法が見付かりませんでした。"

#: ../../library/smtplib.rst:338
msgid ""
"Each of the authentication methods supported by :mod:`smtplib` are tried in "
"turn if they are advertised as supported by the server.  See :meth:`auth` "
"for a list of supported authentication methods.  *initial_response_ok* is "
"passed through to :meth:`auth`."
msgstr ""

#: ../../library/smtplib.rst:343
msgid ""
"Optional keyword argument *initial_response_ok* specifies whether, for "
"authentication methods that support it, an \"initial response\" as specified "
"in :rfc:`4954` can be sent along with the ``AUTH`` command, rather than "
"requiring a challenge/response."
msgstr ""
"オプションのキーワード引数 *initial_response_ok* は、それをサポートする認証方"
"法に対して、チャレンジ/レスポンスを要求するのではなく、 \"AUTH\"コマンドとと"
"もに :rfc:`4954` で指定された\"初期応答\"を送信できるかどうかを指定します。"

#: ../../library/smtplib.rst:348
msgid ""
":exc:`SMTPNotSupportedError` may be raised, and the *initial_response_ok* "
"parameter was added."
msgstr ""
":exc:`SMTPNotSupportedError` が送出される場合があります。"
"*initial_response_ok* 引数が追加されました。"

#: ../../library/smtplib.rst:355
msgid ""
"Issue an ``SMTP`` ``AUTH`` command for the specified authentication "
"*mechanism*, and handle the challenge response via *authobject*."
msgstr ""

#: ../../library/smtplib.rst:358
msgid ""
"*mechanism* specifies which authentication mechanism is to be used as "
"argument to the ``AUTH`` command; the valid values are those listed in the "
"``auth`` element of :attr:`esmtp_features`."
msgstr ""

#: ../../library/smtplib.rst:362
msgid ""
"*authobject* must be a callable object taking an optional single argument:"
msgstr ""

#: ../../library/smtplib.rst:364
msgid "data = authobject(challenge=None)"
msgstr "data = authobject(challenge=None)"

#: ../../library/smtplib.rst:366
msgid ""
"If optional keyword argument *initial_response_ok* is true, ``authobject()`` "
"will be called first with no argument.  It can return the :rfc:`4954` "
"\"initial response\" ASCII ``str`` which will be encoded and sent with the "
"``AUTH`` command as below.  If the ``authobject()`` does not support an "
"initial response (e.g. because it requires a challenge), it should return "
"``None`` when called with ``challenge=None``.  If *initial_response_ok* is "
"false, then ``authobject()`` will not be called first with ``None``."
msgstr ""

#: ../../library/smtplib.rst:374
msgid ""
"If the initial response check returns ``None``, or if *initial_response_ok* "
"is false, ``authobject()`` will be called to process the server's challenge "
"response; the *challenge* argument it is passed will be a ``bytes``.  It "
"should return ASCII ``str`` *data* that will be base64 encoded and sent to "
"the server."
msgstr ""

#: ../../library/smtplib.rst:380
msgid ""
"The ``SMTP`` class provides ``authobjects`` for the ``CRAM-MD5``, ``PLAIN``, "
"and ``LOGIN`` mechanisms; they are named ``SMTP.auth_cram_md5``, ``SMTP."
"auth_plain``, and ``SMTP.auth_login`` respectively.  They all require that "
"the ``user`` and ``password`` properties of the ``SMTP`` instance are set to "
"appropriate values."
msgstr ""

#: ../../library/smtplib.rst:386
msgid ""
"User code does not normally need to call ``auth`` directly, but can instead "
"call the :meth:`login` method, which will try each of the above mechanisms "
"in turn, in the order listed.  ``auth`` is exposed to facilitate the "
"implementation of authentication methods not (or not yet) supported directly "
"by :mod:`smtplib`."
msgstr ""

#: ../../library/smtplib.rst:397
msgid ""
"Put the SMTP connection in TLS (Transport Layer Security) mode.  All SMTP "
"commands that follow will be encrypted.  You should then call :meth:`ehlo` "
"again."
msgstr ""
"TLS (Transport Layer Security) モードで SMTP 接続します。続く全てのSMTP コマ"
"ンドは暗号化されます。その後、もう一度 :meth:`ehlo` を呼んでください。"

#: ../../library/smtplib.rst:401
msgid ""
"If *keyfile* and *certfile* are provided, they are used to create an :class:"
"`ssl.SSLContext`."
msgstr ""

#: ../../library/smtplib.rst:404
msgid ""
"Optional *context* parameter is an :class:`ssl.SSLContext` object; This is "
"an alternative to using a keyfile and a certfile and if specified both "
"*keyfile* and *certfile* should be ``None``."
msgstr ""

#: ../../library/smtplib.rst:408
msgid ""
"If there has been no previous ``EHLO`` or ``HELO`` command this session, "
"this method tries ESMTP ``EHLO`` first."
msgstr ""
"もしまだ ``EHLO`` か ``HELO`` コマンドが実行されていない場合、このメソッドは "
"ESMTP ``EHLO`` を先に試します。"

#: ../../library/smtplib.rst:422
msgid "The server does not support the STARTTLS extension."
msgstr "サーバーが STARTTLS 拡張に対応していません。"

#: ../../library/smtplib.rst:425
msgid ":exc:`RuntimeError`"
msgstr ":exc:`RuntimeError`"

#: ../../library/smtplib.rst:425
msgid "SSL/TLS support is not available to your Python interpreter."
msgstr "実行中の Python インタプリタで、SSL/TLS サポートが利用できません。"

#: ../../library/smtplib.rst:430
msgid ""
"The method now supports hostname check with :attr:`SSLContext."
"check_hostname` and *Server Name Indicator* (see :data:`~ssl.HAS_SNI`)."
msgstr ""
"このメソッドは :attr:`SSLContext.check_hostname` と *Server Name Indicator* "
"でホスト名のチェックをサポートしました。(:data:`~ssl.HAS_SNI` を参照してくだ"
"さい)。"

#: ../../library/smtplib.rst:435
msgid ""
"The error raised for lack of STARTTLS support is now the :exc:"
"`SMTPNotSupportedError` subclass instead of the base :exc:`SMTPException`."
msgstr ""

#: ../../library/smtplib.rst:443
msgid ""
"Send mail.  The required arguments are an :rfc:`822` from-address string, a "
"list of :rfc:`822` to-address strings (a bare string will be treated as a "
"list with 1 address), and a message string.  The caller may pass a list of "
"ESMTP options (such as ``8bitmime``) to be used in ``MAIL FROM`` commands as "
"*mail_options*. ESMTP options (such as ``DSN`` commands) that should be used "
"with all ``RCPT`` commands can be passed as *rcpt_options*.  (If you need to "
"use different ESMTP options to different recipients you have to use the low-"
"level methods such as :meth:`mail`, :meth:`rcpt` and :meth:`data` to send "
"the message.)"
msgstr ""
"メールを送信します。必要な引数は :rfc:`822` のfromアドレス文字列、 :rfc:"
"`822` のtoアドレス文字列またはアドレス文字列のリスト、メッセージ文字列です。"
"送信側は ``MAIL FROM`` コマンドで使用される *mail_options* の ESMTPオプション"
"(``8bitmime`` のような)のリストを得るかもしれません。全ての ``RCPT`` コマンド"
"で使われるべきESMTPオプション (例えば ``DSN`` コマンド)は、 *rcpt_options* を"
"通して利用することができます。(もし送信先別にESMTPオプションを使う必要があれ"
"ば、メッセージを送るために :meth:`mail` 、 :meth:`rcpt` 、 :meth:`data` と"
"いった下位レベルのメソッドを使う必要があります。)"

#: ../../library/smtplib.rst:454
msgid ""
"The *from_addr* and *to_addrs* parameters are used to construct the message "
"envelope used by the transport agents.  ``sendmail`` does not modify the "
"message headers in any way."
msgstr ""
"配送エージェントは *from_addr*、*to_addrs* 引数を使い、メッセージのエンベロー"
"プを構成します。``sendmail`` はメッセージヘッダを修正しません。"

#: ../../library/smtplib.rst:458
msgid ""
"*msg* may be a string containing characters in the ASCII range, or a byte "
"string.  A string is encoded to bytes using the ascii codec, and lone "
"``\\r`` and ``\\n`` characters are converted to ``\\r\\n`` characters.  A "
"byte string is not modified."
msgstr ""

#: ../../library/smtplib.rst:463
msgid ""
"If there has been no previous ``EHLO`` or ``HELO`` command this session, "
"this method tries ESMTP ``EHLO`` first. If the server does ESMTP, message "
"size and each of the specified options will be passed to it (if the option "
"is in the feature set the server advertises).  If ``EHLO`` fails, ``HELO`` "
"will be tried and ESMTP options suppressed."
msgstr ""
"まだセッションが無い場合は、 ``EHLO`` または ``HELO`` コマンドでセッションを"
"作ります。ESMTPの場合は ``EHLO`` が先に試されます。また、サーバがESMTP対応な"
"らば、メッセージサイズとそれぞれ指定されたオプションも渡します。(featureオプ"
"ションがあればサーバの広告をセットします) ``EHLO`` が失敗した場合は、ESMTPオ"
"プションの無い ``HELO`` が試されます。"

#: ../../library/smtplib.rst:469
msgid ""
"This method will return normally if the mail is accepted for at least one "
"recipient. Otherwise it will raise an exception.  That is, if this method "
"does not raise an exception, then someone should get your mail. If this "
"method does not raise an exception, it returns a dictionary, with one entry "
"for each recipient that was refused.  Each entry contains a tuple of the "
"SMTP error code and the accompanying error message sent by the server."
msgstr ""
"このメソッドは最低でも1人の受信者にメールが受け取られたときは正常に戻ります。"
"そうでない場合は例外を投げます。つまり、このメソッドが例外を送出しないときは"
"誰かが送信したメールを受け取ったはずです。また、例外を送出しない場合は拒絶さ"
"れた受信者ごとに項目のある辞書を返します。各項目はサーバーが送ったSMTPエラー"
"コードと付随するエラーメッセージのタプルを持ちます。"

#: ../../library/smtplib.rst:476
msgid ""
"If ``SMTPUTF8`` is included in *mail_options*, and the server supports it, "
"*from_addr* and *to_addrs* may contain non-ASCII characters."
msgstr ""
"*mail_options* に ``SMTPUTF8`` があり、サーバがサポートしている場合は、"
"*from_addr* と *to_addrs* に非 ASCII 文字を含めることが出来ます。"

#: ../../library/smtplib.rst:479
msgid "This method may raise the following exceptions:"
msgstr "このメソッドは次の例外を送出することがあります:"

#: ../../library/smtplib.rst:485
msgid ":exc:`SMTPRecipientsRefused`"
msgstr ":exc:`SMTPRecipientsRefused`"

#: ../../library/smtplib.rst:482
msgid ""
"All recipients were refused.  Nobody got the mail.  The :attr:`recipients` "
"attribute of the exception object is a dictionary with information about the "
"refused recipients (like the one returned when at least one recipient was "
"accepted)."
msgstr ""
"全ての受信を拒否され、誰にもメールが届けられませんでした。例外オブジェクト"
"の :attr:`recipients` 属性は、受信拒否についての情報の入った辞書オブジェクト"
"です。 (辞書は少なくとも一つは受信されたときに似ています)。"

#: ../../library/smtplib.rst:491
msgid ":exc:`SMTPSenderRefused`"
msgstr ":exc:`SMTPSenderRefused`"

#: ../../library/smtplib.rst:491
msgid "The server didn't accept the *from_addr*."
msgstr "サーバが *from_addr* を受理しませんでした。"

#: ../../library/smtplib.rst:495
msgid ":exc:`SMTPDataError`"
msgstr ":exc:`SMTPDataError`"

#: ../../library/smtplib.rst:494
msgid ""
"The server replied with an unexpected error code (other than a refusal of a "
"recipient)."
msgstr "サーバが予期しないエラーコードを返しました (受信拒否以外)。"

#: ../../library/smtplib.rst:498
msgid ""
"``SMTPUTF8`` was given in the *mail_options* but is not supported by the "
"server."
msgstr ""
"*mail_options* に ``SMTPUTF8`` が与えられましたが、サーバがサポートしていませ"
"ん。"

#: ../../library/smtplib.rst:501
msgid ""
"Unless otherwise noted, the connection will be open even after an exception "
"is raised."
msgstr ""
"また、この他の注意として、例外が上がった後もコネクションは開いたままになって"
"います。"

#: ../../library/smtplib.rst:504
msgid "*msg* may be a byte string."
msgstr "*msg* はバイト文字列でも構いません。"

#: ../../library/smtplib.rst:507
msgid ""
"``SMTPUTF8`` support added, and :exc:`SMTPNotSupportedError` may be raised "
"if ``SMTPUTF8`` is specified but the server does not support it."
msgstr ""
"``SMTPUTF8`` のサポートが追加されました。``SMTPUTF8`` が与えられたが、サーバ"
"がサポートしていない場合は :exc:`SMTPNotSupportedError` が送出されます。"

#: ../../library/smtplib.rst:515
msgid ""
"This is a convenience method for calling :meth:`sendmail` with the message "
"represented by an :class:`email.message.Message` object.  The arguments have "
"the same meaning as for :meth:`sendmail`, except that *msg* is a ``Message`` "
"object."
msgstr ""

#: ../../library/smtplib.rst:520
msgid ""
"If *from_addr* is ``None`` or *to_addrs* is ``None``, ``send_message`` fills "
"those arguments with addresses extracted from the headers of *msg* as "
"specified in :rfc:`5322`\\: *from_addr* is set to the :mailheader:`Sender` "
"field if it is present, and otherwise to the :mailheader:`From` field. "
"*to_addrs* combines the values (if any) of the :mailheader:`To`, :mailheader:"
"`Cc`, and :mailheader:`Bcc` fields from *msg*.  If exactly one set of :"
"mailheader:`Resent-*` headers appear in the message, the regular headers are "
"ignored and the :mailheader:`Resent-*` headers are used instead. If the "
"message contains more than one set of :mailheader:`Resent-*` headers, a :exc:"
"`ValueError` is raised, since there is no way to unambiguously detect the "
"most recent set of :mailheader:`Resent-` headers."
msgstr ""

#: ../../library/smtplib.rst:532
msgid ""
"``send_message`` serializes *msg* using :class:`~email.generator."
"BytesGenerator` with ``\\r\\n`` as the *linesep*, and calls :meth:`sendmail` "
"to transmit the resulting message.  Regardless of the values of *from_addr* "
"and *to_addrs*, ``send_message`` does not transmit any :mailheader:`Bcc` or :"
"mailheader:`Resent-Bcc` headers that may appear in *msg*.  If any of the "
"addresses in *from_addr* and *to_addrs* contain non-ASCII characters and the "
"server does not advertise ``SMTPUTF8`` support, an :exc:`SMTPNotSupported` "
"error is raised.  Otherwise the ``Message`` is serialized with a clone of "
"its :mod:`~email.policy` with the :attr:`~email.policy.EmailPolicy.utf8` "
"attribute set to ``True``, and ``SMTPUTF8`` and ``BODY=8BITMIME`` are added "
"to *mail_options*."
msgstr ""

#: ../../library/smtplib.rst:546
msgid "Support for internationalized addresses (``SMTPUTF8``)."
msgstr "国際化アドレスのサポート (``SMTPUTF8``)。"

#: ../../library/smtplib.rst:552
msgid ""
"Terminate the SMTP session and close the connection.  Return the result of "
"the SMTP ``QUIT`` command."
msgstr ""
"SMTPセッションを終了し、接続を閉じます。SMTP ``QUIT`` コマンドの結果を返しま"
"す。"

#: ../../library/smtplib.rst:556
msgid ""
"Low-level methods corresponding to the standard SMTP/ESMTP commands "
"``HELP``, ``RSET``, ``NOOP``, ``MAIL``, ``RCPT``, and ``DATA`` are also "
"supported. Normally these do not need to be called directly, so they are not "
"documented here.  For details, consult the module code."
msgstr ""
"下位レベルのメソッドは標準SMTP/ESMTPコマンド ``HELP`` 、 ``RSET`` 、 "
"``NOOP`` 、 ``MAIL`` 、 ``RCPT`` 、 ``DATA`` に対応しています。通常これらは直"
"接呼ぶ必要はなく、また、ドキュメントもありません。詳細はモジュールのコードを"
"調べてください。"

#: ../../library/smtplib.rst:565
msgid "SMTP Example"
msgstr "SMTP 使用例"

#: ../../library/smtplib.rst:567
msgid ""
"This example prompts the user for addresses needed in the message envelope "
"('To' and 'From' addresses), and the message to be delivered.  Note that the "
"headers to be included with the message must be included in the message as "
"entered; this example doesn't do any processing of the :rfc:`822` headers.  "
"In particular, the 'To' and 'From' addresses must be included in the message "
"headers explicitly. ::"
msgstr ""
"次の例は最低限必要なメールアドレス('To' と 'From')を含んだメッセージを送信す"
"るものです。この例では :rfc:`822` ヘッダの加工もしていません。メッセージに含"
"まれるヘッダは、メッセージに含まれる必要があり、特に、明確な 'To'、と 'From' "
"アドレスはメッセージヘッダに含まれている必要があります。 ::"

#: ../../library/smtplib.rst:603
msgid ""
"In general, you will want to use the :mod:`email` package's features to "
"construct an email message, which you can then send via :meth:`~smtplib.SMTP."
"send_message`; see :ref:`email-examples`."
msgstr ""
"多くの場合、 :mod:`email` パッケージの機能を使って email メッセージを構築し、"
"それを、 :meth:`~smtplib.SMTP.send_message` で送信する、という手順を用いま"
"す。 :ref:`email-examples` を参照してください。"
