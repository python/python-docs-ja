# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/mutex.rst:3
msgid ":mod:`mutex` --- Mutual exclusion support"
msgstr ":mod:`mutex` --- 排他制御"

#: ../../library/mutex.rst:9
msgid "The :mod:`mutex` module has been removed in Python 3."
msgstr ":mod:`mutex` モジュールは Python 3 で削除されました。"

#: ../../library/mutex.rst:15
msgid ""
"The :mod:`mutex` module defines a class that allows mutual-exclusion via "
"acquiring and releasing locks. It does not require (or imply) :mod:"
"`threading` or multi-tasking, though it could be useful for those purposes."
msgstr ""
":mod:`mutex` モジュールでは、ロック (lock) の獲得と解除によって排他制御を可能"
"にするクラスを定義しています。排他制御は :mod:`threading` やマルチタスクを使"
"う上で便利かもしれませんが、このクラスがそうした機能を必要として (いたり、想"
"定して) いるわけではありません。"

#: ../../library/mutex.rst:20
msgid "The :mod:`mutex` module defines the following class:"
msgstr ":mod:`mutex` モジュールでは以下のクラスを定義しています:"

#: ../../library/mutex.rst:25
msgid "Create a new (unlocked) mutex."
msgstr "新しい (ロックされてない) mutex を作ります。"

#: ../../library/mutex.rst:27
msgid ""
"A mutex has two pieces of state --- a \"locked\" bit and a queue. When the "
"mutex is not locked, the queue is empty. Otherwise, the queue contains zero "
"or more ``(function, argument)`` pairs representing functions (or methods) "
"waiting to acquire the lock. When the mutex is unlocked while the queue is "
"not empty, the first queue entry is removed and its  ``function(argument)`` "
"pair called, implying it now has the lock."
msgstr ""
"mutex には 2 つの状態変数 --- \"ロック\" ビット (locked bit) とキュー "
"(queue) があります。 mutex がロックされていなければ、キューは空です。それ以外"
"の場合、キューは空になっているか、 ``(function, argument)`` のペアが一つ以上"
"入っています。このペアはロックを獲得しようと待機している関数 (またはメソッ"
"ド) を表しています。キューが空でないときに mutex をロック解除すると、キューの"
"先頭のエントリをキューから除去し、そのエントリのペアに基づいて "
"``function(argument)`` を呼び出します。これによって、先頭にあったエントリが新"
"たなロックを獲得します。"

#: ../../library/mutex.rst:34
msgid ""
"Of course, no multi-threading is implied -- hence the funny interface for :"
"meth:`lock`, where a function is called once the lock is acquired."
msgstr ""
"当然のことながらマルチスレッドの制御には利用できません -- というのも、 :meth:"
"`lock` が、ロックを獲得したら関数を呼び出すという変なインタフェースだからで"
"す。"

#: ../../library/mutex.rst:41
msgid "Mutex Objects"
msgstr "mutex オブジェクト"

#: ../../library/mutex.rst:43
msgid ":class:`~mutex.mutex` objects have following methods:"
msgstr ":class:`~mutex.mutex` には以下のメソッドがあります:"

#: ../../library/mutex.rst:48
msgid "Check whether the mutex is locked."
msgstr "mutex がロックされているかどうか調べます。"

#: ../../library/mutex.rst:53
msgid ""
"\"Atomic\" test-and-set, grab the lock if it is not set, and return "
"``True``, otherwise, return ``False``."
msgstr ""
"「原子的 (Atomic)」な Test-and-Set 操作です。ロックがセットされていなければ獲"
"得して ``True`` を返します。それ以外の場合には ``False`` を返します。"

#: ../../library/mutex.rst:59
msgid ""
"Execute ``function(argument)``, unless the mutex is locked. In the case it "
"is locked, place the function and argument on the queue. See :meth:`unlock` "
"for explanation of when ``function(argument)`` is executed in that case."
msgstr ""
"mutex がロックされていなければ ``function(argument)`` を実行します。 mutex が"
"ロックされている場合、関数とその引数をキューに置きます。キューに置かれた "
"``function(argument)`` がいつ実行されるかについては :meth:`unlock` を参照して"
"ください。"

#: ../../library/mutex.rst:66
msgid ""
"Unlock the mutex if queue is empty, otherwise execute the first element in "
"the queue."
msgstr ""
"キューが空ならば mutex をロック解除します。そうでなければ、キューの最初の要素"
"を実行します。"
