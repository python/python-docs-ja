# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/lzma.rst:2
msgid ":mod:`lzma` --- Compression using the LZMA algorithm"
msgstr ":mod:`lzma` --- LZMA アルゴリズムを使用した圧縮"

#: ../../library/lzma.rst:12
msgid "**Source code:** :source:`Lib/lzma.py`"
msgstr "**ソースコード:** :source:`Lib/lzma.py`"

#: ../../library/lzma.rst:16
msgid ""
"This module provides classes and convenience functions for compressing and "
"decompressing data using the LZMA compression algorithm. Also included is a "
"file interface supporting the ``.xz`` and legacy ``.lzma`` file formats used "
"by the :program:`xz` utility, as well as raw compressed streams."
msgstr ""
"このモジュールは LZMA 圧縮アルゴリズムを使用したデータ圧縮および展開のための"
"クラスや便利な関数を提供しています。また、:program:`xz` ユーティリティを使用"
"した ``.xz`` およびレガシーな ``.lzma`` ファイル形式へのファイルインターフェ"
"イスの他、RAW 圧縮ストリームもサポートしています。"

#: ../../library/lzma.rst:21
msgid ""
"The interface provided by this module is very similar to that of the :mod:"
"`bz2` module. Note that :class:`LZMAFile` and :class:`bz2.BZ2File` are *not* "
"thread-safe, so if you need to use a single :class:`LZMAFile` instance from "
"multiple threads, it is necessary to protect it with a lock."
msgstr ""
"このモジュールが提供するインターフェイスは :mod:`bz2` モジュールと非常によく"
"似ています。\n"
":class:`LZMAFile` と :class:`bz2.BZ2File` はスレッドセーフでは *ない* 点に注"
"意してください。\n"
"そのため、単一の :class:`LZMAFile` インスタンスを複数スレッドから使用する場合"
"は、ロックで保護する必要があります。"

#: ../../library/lzma.rst:29
msgid ""
"This exception is raised when an error occurs during compression or "
"decompression, or while initializing the compressor/decompressor state."
msgstr ""
"この例外は圧縮あるいは展開中にエラーが発生した場合、または圧縮/展開状態の初期"
"化中に送出されます。"

#: ../../library/lzma.rst:34
msgid "Reading and writing compressed files"
msgstr "圧縮ファイルへの読み書き"

#: ../../library/lzma.rst:38
msgid ""
"Open an LZMA-compressed file in binary or text mode, returning a :term:`file "
"object`."
msgstr ""
"LZMA 圧縮ファイルをバイナリまたはテキストモードでオープンし、:term:`ファイル"
"オブジェクト <file object>` を返します。"

#: ../../library/lzma.rst:41
msgid ""
"The *filename* argument can be either an actual file name (given as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object), in "
"which case the named file is opened, or it can be an existing file object to "
"read from or write to."
msgstr ""
"*filename* 引数には、ファイルをオープンする際には実際のファイル名 (:class:"
"`str`、 :class:`bytes`、または :term:`path-like <path-like object>` オブジェ"
"クトとして指定します)か、読み込みまたは書き込むためであれば、すでに存在する"
"ファイルオブジェクトを指定できます。"

#: ../../library/lzma.rst:46
msgid ""
"The *mode* argument can be any of ``\"r\"``, ``\"rb\"``, ``\"w\"``, "
"``\"wb\"``, ``\"x\"``, ``\"xb\"``, ``\"a\"`` or ``\"ab\"`` for binary mode, "
"or ``\"rt\"``, ``\"wt\"``, ``\"xt\"``, or ``\"at\"`` for text mode. The "
"default is ``\"rb\"``."
msgstr ""
"引数 *mode* は、バイナリモードでは ``\"r\"``、``\"rb\"``、``\"w\"``、"
"``\"wb\"``、``\"x\"``、``\"xb\"``、``\"a\"``、あるいは ``\"ab\"`` の、テキス"
"トモードでは ``\"rt\"``、``\"wt\"``、``\"xt\"``、あるいは ``\"at\"`` のいずれ"
"かになります。デフォルトは ``\"rb\"`` です。"

#: ../../library/lzma.rst:50 ../../library/lzma.rst:95
msgid ""
"When opening a file for reading, the *format* and *filters* arguments have "
"the same meanings as for :class:`LZMADecompressor`. In this case, the "
"*check* and *preset* arguments should not be used."
msgstr ""
"読み込み用にファイルをオープンした場合、引数 *format* および *filters* は :"
"class:`LZMADecompressor` と同じ意味になります。この時、引数 *check* および "
"*preset* は使用しないでください。"

#: ../../library/lzma.rst:54 ../../library/lzma.rst:99
msgid ""
"When opening a file for writing, the *format*, *check*, *preset* and "
"*filters* arguments have the same meanings as for :class:`LZMACompressor`."
msgstr ""
"書き出し用にオープンした場合、引数 *format*、*check*、*preset*、および "
"*filters* は :class:`LZMACompressor` と同じ意味になります。"

#: ../../library/lzma.rst:57
msgid ""
"For binary mode, this function is equivalent to the :class:`LZMAFile` "
"constructor: ``LZMAFile(filename, mode, ...)``. In this case, the "
"*encoding*, *errors* and *newline* arguments must not be provided."
msgstr ""
"バイナリモードでは、この関数は :class:`LZMAFile` コンストラクタと等価になりま"
"す (``LZMAFile(filename, mode, ...)``)。この場合、引数 *encoding*、*errors*、"
"および *newline* を指定しなければなりません。"

#: ../../library/lzma.rst:61
msgid ""
"For text mode, a :class:`LZMAFile` object is created, and wrapped in an :"
"class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""
"テキストモードでは、:class:`LZMAFile` オブジェクトが生成され、指定したエン"
"コーディング、エラーハンドラの挙動、および改行コードで :class:`io."
"TextIOWrapper` にラップされます。"

#: ../../library/lzma.rst:65
msgid "Added support for the ``\"x\"``, ``\"xb\"`` and ``\"xt\"`` modes."
msgstr "``\"x\"``, ``\"xb\"``, ``\"xt\"`` モードのサポートが追加されました。"

#: ../../library/lzma.rst:68 ../../library/lzma.rst:126
msgid "Accepts a :term:`path-like object`."
msgstr ":term:`path-like object` を受け入れるようになりました。"

#: ../../library/lzma.rst:74
msgid "Open an LZMA-compressed file in binary mode."
msgstr "LZMA 圧縮ファイルをバイナリモードで開きます。"

#: ../../library/lzma.rst:76
msgid ""
"An :class:`LZMAFile` can wrap an already-open :term:`file object`, or "
"operate directly on a named file. The *filename* argument specifies either "
"the file object to wrap, or the name of the file to open (as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object). When "
"wrapping an existing file object, the wrapped file will not be closed when "
"the :class:`LZMAFile` is closed."
msgstr ""
":class:`LZMAFile` はすでにオープンしている :term:`file object` をラップ、また"
"は名前付きファイルを直接操作できます。引数 *filename* にはラップするファイル"
"オブジェクトかオープンするファイル名 (:class:`str` オブジェクトま、:class:"
"`bytes` オブジェクト、または :term:`path-like <path-like object>` オブジェク"
"ト) を指定します。既存のファイルオブジェクトをラップした場合、:class:"
"`LZMAFile` をクローズしてもラップしたファイルはクローズされません。"

#: ../../library/lzma.rst:83
msgid ""
"The *mode* argument can be either ``\"r\"`` for reading (default), ``\"w\"`` "
"for overwriting, ``\"x\"`` for exclusive creation, or ``\"a\"`` for "
"appending. These can equivalently be given as ``\"rb\"``, ``\"wb\"``, "
"``\"xb\"`` and ``\"ab\"`` respectively."
msgstr ""
"引数 *mode* は読み込みモードの ``\"r\"`` (デフォルト)、上書きモードの "
"``\"w\"``、排他的生成モードの ``\"x\"``、あるいは追記モードの ``\"a\"`` のい"
"ずれかを指定できます。これらはそれぞれ ``\"rb\"``、``\"wb\"``、``\"xb\"``、お"
"よび ``\"ab\"`` と等価です。"

#: ../../library/lzma.rst:88
msgid ""
"If *filename* is a file object (rather than an actual file name), a mode of "
"``\"w\"`` does not truncate the file, and is instead equivalent to ``\"a\"``."
msgstr ""
"*filename* が (実際のファイル名でなく) ファイルオブジェクトの場合、``\"w\"`` "
"モードはファイルを上書きせず、``\"a\"`` と等価になります。"

#: ../../library/lzma.rst:91
msgid ""
"When opening a file for reading, the input file may be the concatenation of "
"multiple separate compressed streams. These are transparently decoded as a "
"single logical stream."
msgstr ""
"読み込みモードでファイルをオープンした時、入力ファイルは複数に分割された圧縮"
"ストリームを連結したものでもかまいません。これらは透過的に単一論理ストリーム"
"としてデコードされます。"

#: ../../library/lzma.rst:102
msgid ""
":class:`LZMAFile` supports all the members specified by :class:`io."
"BufferedIOBase`, except for :meth:`detach` and :meth:`truncate`. Iteration "
"and the :keyword:`with` statement are supported."
msgstr ""
":class:`LZMAFile` は :class:`io.BufferedIOBase` で規定されているメンバのう"
"ち、:meth:`detach` と :meth:`truncate` を除くすべてをサポートします。イテレー"
"ションと :keyword:`with` 文をサポートしています。"

#: ../../library/lzma.rst:106
msgid "The following method is also provided:"
msgstr "次のメソッドを提供しています:"

#: ../../library/lzma.rst:110
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned, unless EOF has been reached. The exact number of "
"bytes returned is unspecified (the *size* argument is ignored)."
msgstr ""
"ファイル上の現在位置を変更せずにバッファのデータを返します。EOF に達しない限"
"り、少なくとも 1 バイトが返されます。返される正確なバイト数は規定されていませ"
"ん (引数 *size* は無視されます)。"

#: ../../library/lzma.rst:114
msgid ""
"While calling :meth:`peek` does not change the file position of the :class:"
"`LZMAFile`, it may change the position of the underlying file object (e.g. "
"if the :class:`LZMAFile` was constructed by passing a file object for "
"*filename*)."
msgstr ""
":meth:`peek` の呼び出しでは :class:`LZMAFile` のファイル位置は変わりません"
"が、下層のファイルオブジェクトの位置が変わる惧れがあります。(e.g. :class:"
"`LZMAFile` を *filename* にファイルオブジェクトを渡して作成した場合)"

#: ../../library/lzma.rst:119
msgid "Added support for the ``\"x\"`` and ``\"xb\"`` modes."
msgstr "``'x'``, ``'xb'`` モードがサポートが追加されました。"

#: ../../library/lzma.rst:122
msgid ""
"The :meth:`~io.BufferedIOBase.read` method now accepts an argument of "
"``None``."
msgstr ""
":meth:`~io.BufferedIOBase.read` メソッドが ``None`` を引数として受け取るよう"
"になりました。"

#: ../../library/lzma.rst:131
msgid "Compressing and decompressing data in memory"
msgstr "メモリ上での圧縮と展開"

#: ../../library/lzma.rst:135
msgid ""
"Create a compressor object, which can be used to compress data incrementally."
msgstr "データをインクリメンタルに圧縮する圧縮オブジェクトを作成します。"

#: ../../library/lzma.rst:137
msgid ""
"For a more convenient way of compressing a single chunk of data, see :func:"
"`compress`."
msgstr ""
"大量の単一データを圧縮する、より便利な方法については :func:`compress` を参照"
"してください。"

#: ../../library/lzma.rst:140
msgid ""
"The *format* argument specifies what container format should be used. "
"Possible values are:"
msgstr ""
"引数 *format* には使用するコンテナフォーマットを指定します。以下の値が指定で"
"きます:"

#: ../../library/lzma.rst:144
msgid ":const:`FORMAT_XZ`: The ``.xz`` container format."
msgstr ":const:`FORMAT_XZ`: The ``.xz`` コンテナフォーマット。"

#: ../../library/lzma.rst:144
msgid "This is the default format."
msgstr "デフォルトのフォーマットです。"

#: ../../library/lzma.rst:148
msgid ":const:`FORMAT_ALONE`: The legacy ``.lzma`` container format."
msgstr ":const:`FORMAT_ALONE`: レガシーな ``.lzma`` コンテナフォーマット。"

#: ../../library/lzma.rst:147
msgid ""
"This format is more limited than ``.xz`` -- it does not support integrity "
"checks or multiple filters."
msgstr ""
"このフォーマットは ``.xz`` より制限があります -- インテグリティチェックや複数"
"フィルタをサポートしていません。"

#: ../../library/lzma.rst:154
msgid ":const:`FORMAT_RAW`: A raw data stream, not using any container format."
msgstr ""
":const:`FORMAT_RAW`: 特定のコンテナフォーマットを使わない、生のデータストリー"
"ム。"

#: ../../library/lzma.rst:151
msgid ""
"This format specifier does not support integrity checks, and requires that "
"you always specify a custom filter chain (for both compression and "
"decompression). Additionally, data compressed in this manner cannot be "
"decompressed using :const:`FORMAT_AUTO` (see :class:`LZMADecompressor`)."
msgstr ""
"このフォーマット指定子はインテグリティチェックをサポートしておらず、(圧縮およ"
"び展開双方のために) 常にカスタムフィルタチェインを指定する必要があります。さ"
"らに、この方法で圧縮されたデータは :const:`FORMAT_AUTO` を使っても展開できま"
"せん (:class:`LZMADecompressor` を参照)。"

#: ../../library/lzma.rst:156
msgid ""
"The *check* argument specifies the type of integrity check to include in the "
"compressed data. This check is used when decompressing, to ensure that the "
"data has not been corrupted. Possible values are:"
msgstr ""
"引数 *check* には圧縮データに組み込むインテグリティチェックのタイプを指定しま"
"す。このチェックは展開時に使用され、データが破損していないことを保証します。"
"以下の値が指定できます:"

#: ../../library/lzma.rst:160
msgid ""
":const:`CHECK_NONE`: No integrity check. This is the default (and the only "
"acceptable value) for :const:`FORMAT_ALONE` and :const:`FORMAT_RAW`."
msgstr ""
":const:`CHECK_NONE`: インテグリティチェックなし。:const:`FORMAT_ALONE` およ"
"び :const:`FORMAT_RAW` のデフォルト (かつ唯一指定可能な値) です。"

#: ../../library/lzma.rst:164
msgid ":const:`CHECK_CRC32`: 32-bit Cyclic Redundancy Check."
msgstr ":const:`CHECK_CRC32`: 32-bit 巡回冗長検査。"

#: ../../library/lzma.rst:166
msgid ""
":const:`CHECK_CRC64`: 64-bit Cyclic Redundancy Check. This is the default "
"for :const:`FORMAT_XZ`."
msgstr ""
":const:`CHECK_CRC64`: 64-bit 巡回冗長検査。:const:`FORMAT_XZ` のデフォルトで"
"す。"

#: ../../library/lzma.rst:169
msgid ":const:`CHECK_SHA256`: 256-bit Secure Hash Algorithm."
msgstr ":const:`CHECK_SHA256`: 256-bit セキュアハッシュアルゴリズム (SHA)。"

#: ../../library/lzma.rst:171
msgid ""
"If the specified check is not supported, an :class:`LZMAError` is raised."
msgstr ""
"指定したチェック方法がサポートされていない場合、:class:`LZMAError` が送出され"
"ます。"

#: ../../library/lzma.rst:173
msgid ""
"The compression settings can be specified either as a preset compression "
"level (with the *preset* argument), or in detail as a custom filter chain "
"(with the *filters* argument)."
msgstr ""
"圧縮設定はプリセット圧縮レベル (引数 *preset* で指定) またはカスタムフィルタ"
"チェイン (引数 *filters* で指定) のどちらかを指定します。"

#: ../../library/lzma.rst:177
msgid ""
"The *preset* argument (if provided) should be an integer between ``0`` and "
"``9`` (inclusive), optionally OR-ed with the constant :const:"
"`PRESET_EXTREME`. If neither *preset* nor *filters* are given, the default "
"behavior is to use :const:`PRESET_DEFAULT` (preset level ``6``). Higher "
"presets produce smaller output, but make the compression process slower."
msgstr ""
"引数 *preset* を指定する場合、``0`` から ``9`` までの整数値でなければならず、"
"オプションで定数 :const:`PRESET_EXTREME` を論理和指定できます。*preset* も "
"*filters* も指定されなかった場合、デフォルトの挙動として :const:"
"`PRESET_DEFAULT` (プリセットレベル ``6``) が使用されます。高いプリセット値を"
"指定すると圧縮率が上がりますが、圧縮にかかる時間が長くなります。"

#: ../../library/lzma.rst:186
msgid ""
"In addition to being more CPU-intensive, compression with higher presets "
"also requires much more memory (and produces output that needs more memory "
"to decompress). With preset ``9`` for example, the overhead for an :class:"
"`LZMACompressor` object can be as high as 800 MiB. For this reason, it is "
"generally best to stick with the default preset."
msgstr ""
"CPU の使用量が多いのに加えて、高いプリセットで圧縮を行うには、メモリをずっと"
"多く必要とします (さらに、生成される出力も展開により多くのメモリを必要としま"
"す)。例えば、プリセットが ``9`` の場合、:class:`LZMACompressor` オブジェクト"
"のオーバーヘッドは 800 MiB にまで高くなる場合があります。このため、通常はデ"
"フォルトのプリセットを使用するのがよいでしょう。"

#: ../../library/lzma.rst:192
msgid ""
"The *filters* argument (if provided) should be a filter chain specifier. "
"See :ref:`filter-chain-specs` for details."
msgstr ""
"引数 *filters* を指定する場合、フィルタチェイン指定子でなければなりません。詳"
"しくは :ref:`filter-chain-specs` を参照してください。"

#: ../../library/lzma.rst:197
msgid ""
"Compress *data* (a :class:`bytes` object), returning a :class:`bytes` object "
"containing compressed data for at least part of the input. Some of *data* "
"may be buffered internally, for use in later calls to :meth:`compress` and :"
"meth:`flush`. The returned data should be concatenated with the output of "
"any previous calls to :meth:`compress`."
msgstr ""
"*data* (:class:`bytes` オブジェクト) を圧縮し、少なくともその一部が圧縮された"
"データを格納する :class:`bytes` オブジェクトを返します。*data* の一部は、後"
"で :meth:`compress` および :meth:`flush` の呼び出しに使用するため内部でバッ"
"ファされている場合があります。返すデータは以前の :meth:`compress` 呼び出しの"
"出力を連結したものです。"

#: ../../library/lzma.rst:205
msgid ""
"Finish the compression process, returning a :class:`bytes` object containing "
"any data stored in the compressor's internal buffers."
msgstr ""
"圧縮処理を終了し、コンプレッサの内部バッファにあるあらゆるデータを格納する :"
"class:`bytes` オブジェクトを返します。"

#: ../../library/lzma.rst:208
msgid "The compressor cannot be used after this method has been called."
msgstr "コンプレッサはこのメソッドが呼び出された後は使用できません。"

#: ../../library/lzma.rst:213
msgid ""
"Create a decompressor object, which can be used to decompress data "
"incrementally."
msgstr ""
"データをインクリメンタルに展開するために使用できる展開オブジェクトを作成しま"
"す。"

#: ../../library/lzma.rst:216
msgid ""
"For a more convenient way of decompressing an entire compressed stream at "
"once, see :func:`decompress`."
msgstr ""
"圧縮されたストリーム全体を一度に展開にする、より便利な方法については、:func:"
"`decompress` を参照してください。"

#: ../../library/lzma.rst:219
msgid ""
"The *format* argument specifies the container format that should be used. "
"The default is :const:`FORMAT_AUTO`, which can decompress both ``.xz`` and "
"``.lzma`` files. Other possible values are :const:`FORMAT_XZ`, :const:"
"`FORMAT_ALONE`, and :const:`FORMAT_RAW`."
msgstr ""
"引数 *format* には使用するコンテナフォーマットを指定します。デフォルトは :"
"const:`FORMAT_AUTO` で、``.xz`` および ``.lzma`` ファイルを展開できます。その"
"他に指定できる値は、:const:`FORMAT_XZ`、:const:`FORMAT_ALONE`、および :const:"
"`FORMAT_RAW` です。"

#: ../../library/lzma.rst:224
msgid ""
"The *memlimit* argument specifies a limit (in bytes) on the amount of memory "
"that the decompressor can use. When this argument is used, decompression "
"will fail with an :class:`LZMAError` if it is not possible to decompress the "
"input within the given memory limit."
msgstr ""
"引数 *memlimit* にはデコンプレッサが使用できるメモリ量をバイトで指定します。"
"この引数を指定した場合、そのメモリ量で展開ができないと :class:`LZMAError` を"
"送出します。"

#: ../../library/lzma.rst:229
msgid ""
"The *filters* argument specifies the filter chain that was used to create "
"the stream being decompressed. This argument is required if *format* is :"
"const:`FORMAT_RAW`, but should not be used for other formats. See :ref:"
"`filter-chain-specs` for more information about filter chains."
msgstr ""
"引数 *filters* には展開されるストリームの作成に使用するフィルタチェインを指定"
"します。この引数を使用する際は、引数 *format* に :const:`FORMAT_RAW` を指定し"
"なければなりません。フィルタチェインについての詳細は :ref:`filter-chain-"
"specs` を参照してください。"

#: ../../library/lzma.rst:235
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed streams, unlike :func:`decompress` and :class:`LZMAFile`. To "
"decompress a multi-stream input with :class:`LZMADecompressor`, you must "
"create a new decompressor for each stream."
msgstr ""
"このクラスは :func:`decompress` および :class:`LZMAFile` と異なり、複数の圧縮"
"ストリームを含む入力を透過的に扱いません。 :class:`LZMADecompressor` で複数ス"
"トリーム入力を展開するには、各ストリームごとに新しいデコンプレッサを作成しな"
"ければなりません。"

#: ../../library/lzma.rst:242
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data "
"as bytes. Some of *data* may be buffered internally, for use in later calls "
"to :meth:`decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`decompress`."
msgstr ""
"*data* (:term:`bytes-like object`) を展開し、未圧縮のデータを bytes で返しま"
"す。\n"
"*data* の一部は、後で :meth:`decompress` の呼び出しに使用するため内部でバッ"
"ファされている場合があります。\n"
"返されたデータは、以前の :meth:`decompress` の呼び出しの出力に連結する必要が"
"あります。"

#: ../../library/lzma.rst:248
msgid ""
"If *max_length* is nonnegative, returns at most *max_length* bytes of "
"decompressed data. If this limit is reached and further output can be "
"produced, the :attr:`~.needs_input` attribute will be set to ``False``. In "
"this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""
"*max_length* が非負の場合、最大 *max_length* バイトの展開データを返します。こ"
"の制限に達して、出力がさらに生成できる場合、 :attr:`~.needs_input` が "
"``False`` に設定されます。この場合、 :meth:`~.decompress` を次に呼び出すと、"
"*data* を ``b''`` として提供し、出力をさらに取得することができます。"

#: ../../library/lzma.rst:255
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), "
"the :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""
"入力データの全てが圧縮され返された (*max_length* バイトより少ないためか "
"*max_length* が負のため) 場合、\n"
":attr:`~.needs_input` 属性は ``True`` になります。"

#: ../../library/lzma.rst:260
msgid ""
"Attempting to decompress data after the end of stream is reached raises an :"
"exc:`EOFError`.  Any data found after the end of the stream is ignored and "
"saved in the :attr:`~.unused_data` attribute."
msgstr ""
"ストリームの終端に到達した後にデータを展開しようとすると :exc:`EOFError` が送"
"出されます。\n"
"ストリームの終端の後ろの全てのデータは無視され、その部分は :attr:"
"`unused_data` 属性に保存されます。"

#: ../../library/lzma.rst:264
msgid "Added the *max_length* parameter."
msgstr "``max_length`` パラメータが追加されました。"

#: ../../library/lzma.rst:269
msgid ""
"The ID of the integrity check used by the input stream. This may be :const:"
"`CHECK_UNKNOWN` until enough of the input has been decoded to determine what "
"integrity check it uses."
msgstr ""
"入力ストリームに使用されるインテグリティチェックの ID です。これは何のインテ"
"グリティチェックが使用されているか決定するために十分な入力がデコードされるま"
"では :const:`CHECK_UNKNOWN` になることがあります。"

#: ../../library/lzma.rst:275
msgid "``True`` if the end-of-stream marker has been reached."
msgstr "ストリーム終端記号に到達した場合 ``True`` を返します。"

#: ../../library/lzma.rst:279
msgid "Data found after the end of the compressed stream."
msgstr "圧縮ストリームの末尾以降に存在したデータを表します。"

#: ../../library/lzma.rst:281
msgid "Before the end of the stream is reached, this will be ``b\"\"``."
msgstr "ストリームの末尾に達する前は、これは ``b\"\"`` になります。"

#: ../../library/lzma.rst:285
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new uncompressed input."
msgstr ""
":meth:`.decompress` メソッドが、新しい非圧縮入力を必要とせずにさらに展開デー"
"タを提供できる場合、 ``False`` です。"

#: ../../library/lzma.rst:292
msgid ""
"Compress *data* (a :class:`bytes` object), returning the compressed data as "
"a :class:`bytes` object."
msgstr ""
"*data* (:class:`bytes` オブジェクト) を圧縮し、圧縮データを :class:`bytes` オ"
"ブジェクトとして返します。"

#: ../../library/lzma.rst:295
msgid ""
"See :class:`LZMACompressor` above for a description of the *format*, "
"*check*, *preset* and *filters* arguments."
msgstr ""
"引数 *format*、*check*、*preset*、および *filters* についての説明は上記の :"
"class:`LZMACompressor` を参照してください。"

#: ../../library/lzma.rst:301
msgid ""
"Decompress *data* (a :class:`bytes` object), returning the uncompressed data "
"as a :class:`bytes` object."
msgstr ""
"*data* (:class:`bytes` オブジェクト) を展開し、展開データを :class:`bytes` オ"
"ブジェクトとして返します。"

#: ../../library/lzma.rst:304
msgid ""
"If *data* is the concatenation of multiple distinct compressed streams, "
"decompress all of these streams, and return the concatenation of the results."
msgstr ""
"*data* が複数の明確な圧縮ストリームの連結だった場合、すべてのストリームを展開"
"し、結果の連結を返します。"

#: ../../library/lzma.rst:307
msgid ""
"See :class:`LZMADecompressor` above for a description of the *format*, "
"*memlimit* and *filters* arguments."
msgstr ""
"引数 *format*、*memlimit*、および *filters* の説明は、上記 :class:"
"`LZMADecompressor` を参照してください。"

#: ../../library/lzma.rst:312
msgid "Miscellaneous"
msgstr "その他"

#: ../../library/lzma.rst:316
msgid ""
"Return ``True`` if the given integrity check is supported on this system."
msgstr ""
"指定したインテグリティチェックがシステムでサポートされていれば ``True`` を返"
"します。"

#: ../../library/lzma.rst:318
msgid ""
":const:`CHECK_NONE` and :const:`CHECK_CRC32` are always supported. :const:"
"`CHECK_CRC64` and :const:`CHECK_SHA256` may be unavailable if you are using "
"a version of :program:`liblzma` that was compiled with a limited feature set."
msgstr ""
":const:`CHECK_NONE` および :const:`CHECK_CRC32` は常にサポートされています。:"
"const:`CHECK_CRC64` および :const:`CHECK_SHA256` は :program:`liblzma` が機能"
"制限セットでコンパイルされている場合利用できないことがあります。"

#: ../../library/lzma.rst:327
msgid "Specifying custom filter chains"
msgstr "カスタムフィルタチェインの指定"

#: ../../library/lzma.rst:329
msgid ""
"A filter chain specifier is a sequence of dictionaries, where each "
"dictionary contains the ID and options for a single filter. Each dictionary "
"must contain the key ``\"id\"``, and may contain additional keys to specify "
"filter-dependent options. Valid filter IDs are as follows:"
msgstr ""
"フィルタチェイン指定子は、辞書のシーケンスで、各辞書は ID と単一フィルタのオ"
"プションからなります。各辞書はキー ``\"id\"`` を持たなければならず、フィルタ"
"依存のオプションを指定する追加キーを持つ場合もあります。有効なフィルタ ID は"
"以下のとおりです:"

#: ../../library/lzma.rst:336
msgid "Compression filters:"
msgstr "圧縮フィルタ:"

#: ../../library/lzma.rst:335
msgid ":const:`FILTER_LZMA1` (for use with :const:`FORMAT_ALONE`)"
msgstr ":const:`FILTER_LZMA1` (:const:`FORMAT_ALONE` と共に使用)"

#: ../../library/lzma.rst:336
msgid ""
":const:`FILTER_LZMA2` (for use with :const:`FORMAT_XZ` and :const:"
"`FORMAT_RAW`)"
msgstr ""
":const:`FILTER_LZMA2` (:const:`FORMAT_XZ` および :const:`FORMAT_RAW` と共に使"
"用)"

#: ../../library/lzma.rst:339
msgid "Delta filter:"
msgstr "デルタフィルター:"

#: ../../library/lzma.rst:339
msgid ":const:`FILTER_DELTA`"
msgstr ":const:`FILTER_DELTA`"

#: ../../library/lzma.rst:347
msgid "Branch-Call-Jump (BCJ) filters:"
msgstr "ブランチコールジャンプ (BCJ) フィルター:"

#: ../../library/lzma.rst:342
msgid ":const:`FILTER_X86`"
msgstr ":const:`FILTER_X86`"

#: ../../library/lzma.rst:343
msgid ":const:`FILTER_IA64`"
msgstr ":const:`FILTER_IA64`"

#: ../../library/lzma.rst:344
msgid ":const:`FILTER_ARM`"
msgstr ":const:`FILTER_ARM`"

#: ../../library/lzma.rst:345
msgid ":const:`FILTER_ARMTHUMB`"
msgstr ":const:`FILTER_ARMTHUMB`"

#: ../../library/lzma.rst:346
msgid ":const:`FILTER_POWERPC`"
msgstr ":const:`FILTER_POWERPC`"

#: ../../library/lzma.rst:347
msgid ":const:`FILTER_SPARC`"
msgstr ":const:`FILTER_SPARC`"

#: ../../library/lzma.rst:349
msgid ""
"A filter chain can consist of up to 4 filters, and cannot be empty. The last "
"filter in the chain must be a compression filter, and any other filters must "
"be delta or BCJ filters."
msgstr ""
"一つのフィルタチェインは 4 個までのフィルタを定義することができ、空にはできま"
"せん。チェインの最後は圧縮フィルタでなくてはならず、その他のフィルタはデルタ"
"または BCJ フィルタでなければなりません。"

#: ../../library/lzma.rst:353
msgid ""
"Compression filters support the following options (specified as additional "
"entries in the dictionary representing the filter):"
msgstr ""
"圧縮フィルタは以下のオプション (追加エントリとしてフィルタを表す辞書に指定) "
"をサポートしています:"

#: ../../library/lzma.rst:356
msgid ""
"``preset``: A compression preset to use as a source of default values for "
"options that are not specified explicitly."
msgstr ""
"``preset``: 明示されていないオプションのデフォルト値のソースとして使用する圧"
"縮プリセット。"

#: ../../library/lzma.rst:358
msgid ""
"``dict_size``: Dictionary size in bytes. This should be between 4 KiB and "
"1.5 GiB (inclusive)."
msgstr ""
"``dict_size``: 辞書のサイズのバイト数。これは、 4 KiB から 1.5 GiB の間にして"
"ください (両端を含みます)。"

#: ../../library/lzma.rst:360
msgid "``lc``: Number of literal context bits."
msgstr "``lc``: リテラルコンテキストビットの数。"

#: ../../library/lzma.rst:361
msgid ""
"``lp``: Number of literal position bits. The sum ``lc + lp`` must be at most "
"4."
msgstr "``lp``: リテラル位置ビットの数。``lc + lp`` で最大 4 までです。"

#: ../../library/lzma.rst:363
msgid "``pb``: Number of position bits; must be at most 4."
msgstr "``pb``: 位置ビットの数。最大で 4 までです。"

#: ../../library/lzma.rst:364
msgid "``mode``: :const:`MODE_FAST` or :const:`MODE_NORMAL`."
msgstr "``mode``: :const:`MODE_FAST` または :const:`MODE_NORMAL`。"

#: ../../library/lzma.rst:365
msgid ""
"``nice_len``: What should be considered a \"nice length\" for a match. This "
"should be 273 or less."
msgstr ""
"``nice_len``: マッチに \"良い\" とみなす長さ。273 以下でなければなりません。"

#: ../../library/lzma.rst:367
msgid ""
"``mf``: What match finder to use -- :const:`MF_HC3`, :const:`MF_HC4`, :const:"
"`MF_BT2`, :const:`MF_BT3`, or :const:`MF_BT4`."
msgstr ""
"``mf``: 使用するマッチファインダ -- :const:`MF_HC3`、:const:`MF_HC4`、:const:"
"`MF_BT2`、:const:`MF_BT3`、または :const:`MF_BT4`。"

#: ../../library/lzma.rst:369
msgid ""
"``depth``: Maximum search depth used by match finder. 0 (default) means to "
"select automatically based on other filter options."
msgstr ""
"``depth``: マッチファインダが使用する検索の最大深度。0 (デフォルト) では他の"
"フィルタオプションをベースに自動選択します。"

#: ../../library/lzma.rst:372
msgid ""
"The delta filter stores the differences between bytes, producing more "
"repetitive input for the compressor in certain circumstances. It supports "
"one option, ``dist``. This indicates the distance between bytes to be "
"subtracted. The default is 1, i.e. take the differences between adjacent "
"bytes."
msgstr ""
"デルタフィルターは、バイト間の差異を保存し、特定の状況で、コンプレッサーに対"
"してさらに反復的な入力を生成します。\n"
"デルタフィルターは、1 つのオプション ``dist`` のみをサポートします。\n"
"これは差し引くバイトどうしの距離を示します。\n"
"デフォルトは 1 で、隣接するバイトの差異を扱います。"

#: ../../library/lzma.rst:377
msgid ""
"The BCJ filters are intended to be applied to machine code. They convert "
"relative branches, calls and jumps in the code to use absolute addressing, "
"with the aim of increasing the redundancy that can be exploited by the "
"compressor. These filters support one option, ``start_offset``. This "
"specifies the address that should be mapped to the beginning of the input "
"data. The default is 0."
msgstr ""
" BMC フィルターは、マシンコードに対して適用されるように設計されています。この"
"フィルターは、コード内の相対的なブランチ、呼び出し、ジャンプを変換し、絶対ア"
"ドレス指定として使用します。ここでは、コンプレッサーにより exploit されうる冗"
"長性を増加させることが目的です。これらのフィルターは、 ``start_offset`` オプ"
"ションをサポートしています。これは、入力データの先頭にマップされるべきアドレ"
"スを指定します。"

#: ../../library/lzma.rst:385
msgid "Examples"
msgstr "使用例"

#: ../../library/lzma.rst:387
msgid "Reading in a compressed file::"
msgstr "圧縮ファイルからの読み込み::"

#: ../../library/lzma.rst:393
msgid "Creating a compressed file::"
msgstr "圧縮ファイルの作成::"

#: ../../library/lzma.rst:400
msgid "Compressing data in memory::"
msgstr "メモリ上でデータを圧縮::"

#: ../../library/lzma.rst:406
msgid "Incremental compression::"
msgstr "逐次圧縮::"

#: ../../library/lzma.rst:417
msgid "Writing compressed data to an already-open file::"
msgstr "すでにオープンしているファイルへの圧縮データの書き出し::"

#: ../../library/lzma.rst:426
msgid "Creating a compressed file using a custom filter chain::"
msgstr "カスタムフィルタチェインを使った圧縮ファイルの作成::"
