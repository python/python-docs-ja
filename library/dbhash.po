# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/dbhash.rst:2
msgid ":mod:`dbhash` --- DBM-style interface to the BSD database library"
msgstr ""
":mod:`dbhash` --- BSD データベースライブラリへの DBM 形式のインタフェース"

#: ../../library/dbhash.rst:8
msgid "The :mod:`dbhash` module has been removed in Python 3."
msgstr ":mod:`dbhash` モジュールは Python 3 で削除されました。"

#: ../../library/dbhash.rst:13
msgid ""
"The :mod:`dbhash` module provides a function to open databases using the BSD "
"``db`` library.  This module mirrors the interface of the other Python "
"database modules that provide access to DBM-style databases.  The :mod:"
"`bsddb` module is required  to use :mod:`dbhash`."
msgstr ""
":mod:`dbhash` モジュールでは BSD ``db`` ライブラリを使ってデータベースを開く"
"ための関数を提供します。このモジュールは、 DBM 形式のデータベースへのアクセス"
"を提供する他の Python データベースモジュールのインタフェースをそのまま反映し"
"ています。 :mod:`dbhash` を使うには :mod:`bsddb` モジュールが必要です。"

#: ../../library/dbhash.rst:18
msgid "This module provides an exception and a function:"
msgstr "このモジュールは 1 つの例外と 1 つの関数を提供しています:"

#: ../../library/dbhash.rst:23
msgid ""
"Exception raised on database errors other than :exc:`KeyError`.  It is a "
"synonym for :exc:`bsddb.error`."
msgstr ""
":exc:`KeyError` 以外のデータベースのエラーで送出されます。 :exc:`bsddb."
"error` の別名です。"

#: ../../library/dbhash.rst:29
msgid ""
"Open a ``db`` database and return the database object.  The *path* argument "
"is the name of the database file."
msgstr ""
"データベース ``db`` を開き、データベースオブジェクトを返します。引数 *path* "
"はデータベースファイルの名前です。"

#: ../../library/dbhash.rst:32
msgid "The *flag* argument can be:"
msgstr "*flag* 引数は、次のいずれかの値になります:"

#: ../../library/dbhash.rst:35
msgid "Value"
msgstr "``値``"

#: ../../library/dbhash.rst:35
msgid "Meaning"
msgstr "意味"

#: ../../library/dbhash.rst:37
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/dbhash.rst:37
msgid "Open existing database for reading only (default)"
msgstr "既存のデータベースを読み込み専用で開く (デフォルト)"

#: ../../library/dbhash.rst:40
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/dbhash.rst:40
msgid "Open existing database for reading and writing"
msgstr "既存のデータベースを読み書き用に開く"

#: ../../library/dbhash.rst:43
msgid "``'c'``"
msgstr "``'c'``"

#: ../../library/dbhash.rst:43
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr "データベースを読み書き用に開く。ただし存在しない場合には新たに作成する"

#: ../../library/dbhash.rst:46
msgid "``'n'``"
msgstr "``'n'``"

#: ../../library/dbhash.rst:46
msgid "Always create a new, empty database, open for reading and writing"
msgstr "常に新たに読み書き用の新規のデータベースを作成する"

#: ../../library/dbhash.rst:50
msgid ""
"For platforms on which the BSD ``db`` library supports locking, an ``'l'`` "
"can be appended to indicate that locking should be used."
msgstr ""
"BSD ``db`` ライブラリがロックをサポートしているプラットフォームでは、 flag "
"に ``'l'`` を追加して、ロックを利用することを指定できます。"

#: ../../library/dbhash.rst:53
msgid ""
"The optional *mode* parameter is used to indicate the Unix permission bits "
"that should be set if a new database must be created; this will be masked by "
"the current umask value for the process."
msgstr ""
"オプションの *mode* 引数は、新たにデータベースを作成しなければならないときに"
"データベースファイルに設定すべき Unix ファイル権限ビットを表すために使われま"
"す; この値はプロセスの現在の umask 値でマスクされます。"

#: ../../library/dbhash.rst:61
msgid "Module :mod:`anydbm`"
msgstr ":mod:`anydbm` モジュール"

#: ../../library/dbhash.rst:61
msgid "Generic interface to ``dbm``\\ -style databases."
msgstr "``dbm`` スタイルの汎用的なインタフェース"

#: ../../library/dbhash.rst:64
msgid "Module :mod:`bsddb`"
msgstr ":mod:`bsddb` モジュール"

#: ../../library/dbhash.rst:64
msgid "Lower-level interface to the BSD ``db`` library."
msgstr "BSD ``db`` ライブラリへの低レベルインタフェース。"

#: ../../library/dbhash.rst:66
msgid "Module :mod:`whichdb`"
msgstr ":mod:`whichdb` モジュール"

#: ../../library/dbhash.rst:67
msgid "Utility module used to determine the type of an existing database."
msgstr ""
"既存のデータベースがどの形式のデータベースか判定するユーティリティモジュー"
"ル。"

#: ../../library/dbhash.rst:73
msgid "Database Objects"
msgstr "データベースオブジェクト"

#: ../../library/dbhash.rst:75
msgid ""
"The database objects returned by :func:`.open` provide the methods  common "
"to all the DBM-style databases and mapping objects.  The following methods "
"are available in addition to the standard methods."
msgstr ""
":func:`.open` によって返されるデータベースオブジェクトは、全ての DBM 形式デー"
"タベースやマップ型オブジェクトで共通のメソッドを提供します。それら標準のメ"
"ソッドに加えて、以下のメソッドが利用可能です。"

#: ../../library/dbhash.rst:82
msgid ""
"It's possible to loop over every key/value pair in the database using this "
"method and the :meth:`!next` method.  The traversal is ordered by the "
"databases internal hash values, and won't be sorted by the key values.  This "
"method returns the starting key."
msgstr ""
"このメソッドと  :meth:`!next` メソッドを使って、データベースの全てのキー/値の"
"ペアにわたってループ処理を行えます。探索はデータベースの内部ハッシュ値の順番"
"に行われ、キーの値に順に並んでいるとは限りません。このメソッドは最初のキーを"
"返します。"

#: ../../library/dbhash.rst:90
msgid ""
"Return the last key/value pair in a database traversal.  This may be used to "
"begin a reverse-order traversal; see :meth:`previous`."
msgstr ""
"データベース探索における最後のキー/値を返します。逆順探索を開始する際に使うこ"
"とができます; :meth:`previous` を参照してください。"

#: ../../library/dbhash.rst:96
msgid ""
"Returns the key next key/value pair in a database traversal.  The following "
"code prints every key in the database ``db``, without having to create a "
"list in memory that contains them all::"
msgstr ""
"データベースの順方向探索において、次のキー/値のペアを返します。以下のコードは"
"データベース ``db`` について、キー全てを含むリストをメモリ上に生成することな"
"く全てのキーを出力します。 ::"

#: ../../library/dbhash.rst:107
msgid ""
"Returns the previous key/value pair in a forward-traversal of the database. "
"In conjunction with :meth:`last`, this may be used to implement a reverse-"
"order traversal."
msgstr ""
"データベースの順方向探索において、一つ前のキー/値のペアを返します。 :meth:"
"`last` と併せて、逆方向の探索に用いられます。"

#: ../../library/dbhash.rst:114
msgid "This method forces any unwritten data to be written to the disk."
msgstr ""
"このメソッドはディスクにまだ書き込まれていないデータを全て書き込ませます。"
