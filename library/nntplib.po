# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/nntplib.rst:3
msgid ":mod:`nntplib` --- NNTP protocol client"
msgstr ":mod:`nntplib` --- NNTP プロトコルクライアント"

#: ../../library/nntplib.rst:13
msgid "**Source code:** :source:`Lib/nntplib.py`"
msgstr "**Source code:** :source:`Lib/nntplib.py`"

#: ../../library/nntplib.rst:17
msgid ""
"This module defines the class :class:`NNTP` which implements the client side "
"of the NNTP protocol.  It can be used to implement a news reader or poster, "
"or automated news processors.  For more information on NNTP (Network News "
"Transfer Protocol), see Internet :rfc:`977`."
msgstr ""
"このモジュールでは、クラス :class:`NNTP` を定義しています。このクラスは NNTP "
"プロトコルのクライアント側を実装しています。このモジュールを使えば、ニュース"
"リーダや記事投稿プログラム、または自動的にニュース記事を 処理するプログラムを"
"実装することができます。NNTP (Network News Transfer Protocol、ネットニュース"
"転送プロトコル) の詳細については、インターネット :rfc:`977` を参照してくださ"
"い。"

#: ../../library/nntplib.rst:22
msgid ""
"Here are two small examples of how it can be used.  To list some statistics "
"about a newsgroup and print the subjects of the last 10 articles::"
msgstr ""
"以下にこのモジュールの使い方の小さな例を二つ示します。ニュースグループに関す"
"る統計情報を列挙し、最新 10 件の記事を出力するには以下のようにします::"

#: ../../library/nntplib.rst:45
msgid ""
"To post an article from a file (this assumes that the article has valid "
"headers, and that you have right to post on the particular newsgroup)::"
msgstr ""
"ファイルから記事を投稿するには、以下のようにします。 (この例では記事番号は有"
"効な番号を指定していて、あなたがそのニュースグループに投稿する 権限を持ってい"
"ると仮定しています) ::"

#: ../../library/nntplib.rst:55
msgid "The module itself defines the following items:"
msgstr "このモジュール自体では以下の内容を定義しています:"

#: ../../library/nntplib.rst:60
msgid ""
"Return a new instance of the :class:`NNTP` class, representing a connection "
"to the NNTP server running on host *host*, listening at port *port*.  The "
"default *port* is 119.  If the optional *user* and *password* are provided, "
"or if suitable credentials are present in :file:`/.netrc` and the optional "
"flag *usenetrc* is true (the default), the ``AUTHINFO USER`` and ``AUTHINFO "
"PASS`` commands are used to identify and authenticate the user to the "
"server. If the optional flag *readermode* is true, then a ``mode reader`` "
"command is sent before authentication is performed.  Reader mode is "
"sometimes necessary if you are connecting to an NNTP server on the local "
"machine and intend to call reader-specific commands, such as ``group``.  If "
"you get unexpected :exc:`NNTPPermanentError`\\ s, you might need to set "
"*readermode*. *readermode* defaults to ``None``. *usenetrc* defaults to "
"``True``."
msgstr ""
"ホスト *host* 上で動作し、ポート番号 *port* で要求待ちをしている NNTP サーバ"
"との接続を表現する新たな :class:`NNTP` クラスのインスタンスを返します。標準"
"の *port* は 119 です。オプションの *user* および *password* が与えられている"
"か、 または :file:`/.netrc` に適切な認証情報が指定されていて *usenetrc* が真 "
"(デフォルト) の場合、 ``AUTHINFO USER`` および ``AUTHINFO PASS`` 命令を使って"
"サーバに対して身元証明および認証を行います。オプションのフラグ *readermode* "
"が真の場合、認証の実行に先立って ``mode reader``  命令が送信されます。reader "
"モードは、ローカルマシン上の NNTP サーバ に接続していて、 ``group`` のような "
"reader 特有の命令を呼び出したい場合に便利なことがあります。予期せず :exc:"
"`NNTPPermanentError` に遭遇したなら、 *readermode* を設定する必要があるかもし"
"れません。 *readermode* のデフォルト値は ``None`` です。 *usenetrc* のデフォ"
"ルト値は ``True`` です。"

#: ../../library/nntplib.rst:73
msgid "*usenetrc* argument added."
msgstr "*usenetrc* 引数を追加しました."

#: ../../library/nntplib.rst:79
msgid ""
"Derived from the standard exception :exc:`Exception`, this is the base class "
"for all exceptions raised by the :mod:`nntplib` module."
msgstr ""
"標準の例外 :exc:`Exception` から派生しており、 :mod:`nntplib` モジュールが送"
"出する全ての例外の基底クラスです。"

#: ../../library/nntplib.rst:85
msgid ""
"Exception raised when an unexpected reply is received from the server.  For "
"backwards compatibility, the exception ``error_reply`` is equivalent to this "
"class."
msgstr ""
"期待はずれの応答がサーバから返された場合に送出される例外です。以前のバージョ"
"ンとの互換性のために、 ``error_reply`` はこのクラスと等価になっています。"

#: ../../library/nntplib.rst:92
msgid ""
"Exception raised when an error code in the range 400--499 is received.  For "
"backwards compatibility, the exception ``error_temp`` is equivalent to this "
"class."
msgstr ""
"エラーコードの範囲が 400-499 のエラーを受信した場合に送出される例外です。以前"
"のバージョンとの互換性のために、 ``error_temp`` はこのクラスと等価になってい"
"ます。"

#: ../../library/nntplib.rst:99
msgid ""
"Exception raised when an error code in the range 500--599 is received.  For "
"backwards compatibility, the exception ``error_perm`` is equivalent to this "
"class."
msgstr ""
"エラーコードの範囲が 500-599 のエラーを受信した場合に送出される例外です。以前"
"のバージョンとの互換性のために、 ``error_perm`` はこのクラスと等価になってい"
"ます。"

#: ../../library/nntplib.rst:106
msgid ""
"Exception raised when a reply is received from the server that does not "
"begin with a digit in the range 1--5.  For backwards compatibility, the "
"exception ``error_proto`` is equivalent to this class."
msgstr ""
"サーバから返される応答が 1--5 の範囲の数字で始まっていない場合に送出される例"
"外です。以前のバージョンとの互換性のために、 ``error_proto`` はこのクラスと等"
"価になっています。"

#: ../../library/nntplib.rst:113
msgid ""
"Exception raised when there is some error in the response data.  For "
"backwards compatibility, the exception ``error_data`` is equivalent to this "
"class."
msgstr ""
"応答データ中に何らかのエラーが存在する場合に送出される例外です。以前のバー"
"ジョンとの互換性のために、 ``error_data`` はこのクラスと等価になっています。"

#: ../../library/nntplib.rst:120
msgid "NNTP Objects"
msgstr "NNTP オブジェクト"

#: ../../library/nntplib.rst:122
msgid ""
"NNTP instances have the following methods.  The *response* that is returned "
"as the first item in the return tuple of almost all methods is the server's "
"response: a string beginning with a three-digit code. If the server's "
"response indicates an error, the method raises one of the above exceptions."
msgstr ""
"NNTP インスタンスは以下のメソッドを持っています。全てのメソッドにおける戻り値"
"のタプルで最初の要素となる *response* は、サーバの応答です: この文字列は 3 桁"
"の数字からなるコードで始まります。サーバの応答がエラーを示す場合、上記のいず"
"れかの例外が送出されます。"

#: ../../library/nntplib.rst:130
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr ""
"サーバに最初に接続した際に送信される応答中のウェルカムメッセージを返します。"
"(このメッセージには時に、ユーザにとって重要な免責事項や ヘルプ情報が入ってい"
"ます。)"

#: ../../library/nntplib.rst:137
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request or response.  A value of ``2`` or higher produces the "
"maximum amount of debugging output, logging each line sent and received on "
"the connection (including message text)."
msgstr ""
"インスタンスのデバッグレベルを設定します。このメソッドは印字されるデバッグ出"
"力の量を制御します。標準では ``0`` に設定されていて、 これはデバッグ出力を全"
"く印字しません。 ``1`` はそこそこの量、一般に NNTP 要求や応答あたり 1 行のデ"
"バッグ出力を生成します。値が ``2`` やそれ以上の場合、(メッセージテキストを含"
"めて) NNTP 接続上で送受信された全ての内容を一行ごとにログ出力する、最大限のデ"
"バッグ出力を生成します。"

#: ../../library/nntplib.rst:147
msgid ""
"Send a ``NEWGROUPS`` command.  The *date* argument should be a string of the "
"form ``'yymmdd'`` indicating the date, and *time* should be a string of the "
"form ``'hhmmss'`` indicating the time.  Return a pair ``(response, groups)`` "
"where *groups* is a list of group names that are new since the given date "
"and time. If the *file* parameter is supplied, then the output of the  "
"``NEWGROUPS`` command is stored in a file.  If *file* is a string,  then the "
"method will open a file object with that name, write to it  then close it.  "
"If *file* is a file object, then it will start calling :meth:`write` on it "
"to store the lines of the command output. If *file* is supplied, then the "
"returned *list* is an empty list."
msgstr ""
"``NEWSGROUPS`` 命令を送信します。 *date* 引数は ``'yymmdd'`` の形式を取り、日"
"付を表します。 *time* 引数は ``'hhmmss'`` の形式をとり、時刻を表します。与え"
"られた日付および時刻以後新たに出現したニュースグループ名のリストを *groups* "
"として、 ``(response, groups)`` を返します。 *file* 引数が指定されている場"
"合、 ``NEWGROUPS`` コマンドの出力結果は ファイルに格納されます。 *file* が文"
"字列の場合、この文字列をファイル名としてファイルをオープンし、書き込み後にク"
"ローズします。 *file* がファ イルオブジェクトの場合、オブジェクトの :meth:"
"`write` メソッドを呼び出して出力結果を格納します。 *file* が指定されている場"
"合は戻り値として空の リストを返します。"

#: ../../library/nntplib.rst:160
msgid ""
"Send a ``NEWNEWS`` command.  Here, *group* is a group name or ``'*'``, and "
"*date* and *time* have the same meaning as for :meth:`newgroups`.  Return a "
"pair ``(response, articles)`` where *articles* is a list of message ids. If "
"the *file* parameter is supplied, then the output of the  ``NEWNEWS`` "
"command is stored in a file.  If *file* is a string,  then the method will "
"open a file object with that name, write to it  then close it.  If *file* is "
"a file object, then it will start calling :meth:`write` on it to store the "
"lines of the command output. If *file* is supplied, then the returned *list* "
"is an empty list."
msgstr ""
"``NEWNEWS`` 命令を送信します。ここで、 *group* はグループ名または ``'*'`` "
"で、 *date* および *time* は :meth:`newsgrups` における引数と同じ意味を持ちま"
"す。 ``(response, articles)`` からなるペアを返し、 *articles* はメッセージ "
"ID のリストです。 *file* 引数が指定されている場合、 ``NEWNEWS`` コマンドの出"
"力結果は ファイルに格納されます。 *file* が文字列の場合、この文字列をファイル"
"名としてファイルをオープンし、書き込み後にクローズします。 *file* がファ イル"
"オブジェクトの場合、オブジェクトの :meth:`write` メソッドを呼び出して出力結果"
"を格納します。 *file* が指定されている場合は戻り値として空の リストを返しま"
"す。"

#: ../../library/nntplib.rst:172
msgid ""
"Send a ``LIST`` command.  Return a pair ``(response, list)`` where *list* is "
"a list of tuples.  Each tuple has the form ``(group, last, first, flag)``, "
"where *group* is a group name, *last* and *first* are the last and first "
"article numbers (as strings), and *flag* is ``'y'`` if posting is allowed, "
"``'n'`` if not, and ``'m'`` if the newsgroup is moderated.  (Note the "
"ordering: *last*, *first*.) If the *file* parameter is supplied, then the "
"output of the  ``LIST`` command is stored in a file.  If *file* is a "
"string,  then the method will open a file object with that name, write to "
"it  then close it.  If *file* is a file object, then it will start calling :"
"meth:`write` on it to store the lines of the command output. If *file* is "
"supplied, then the returned *list* is an empty list."
msgstr ""
"``LIST`` 命令を送信します。 ``(response, list)``  からなるペアを返します。 "
"*list* はタプルからなるリストです。各タプルは ``(group, last, first, flag)`` "
"の形式をとり、 *group* がグループ名、 *last* および *first* はそれぞれ最新お"
"よび最初の記事の記事番号 (を表す文字列)、そして *flag* は投稿が可能な場合に"
"は ``'y'``, そうでない場合には ``'n'``, グループがモデレート (moderated) され"
"ている場合には ``'m'`` となります。(順番に注意してください: *last*, *first* "
"の順です。) *file* 引数が指定されている場合、 ``LIST`` コマンドの出力結果は "
"ファイルに格納されます。 *file* が文字列の場合、この文字列をファイル名として"
"ファイルをオープンし、書き込み後にクローズします。 *file* がファ イルオブジェ"
"クトの場合、オブジェクトの :meth:`write` メソッドを呼び出して出力結果を格納し"
"ます。 *file* が指定されている場合は戻り値として空の リストを返します。"

#: ../../library/nntplib.rst:187
msgid ""
"Send a ``LIST NEWSGROUPS`` command, where *grouppattern* is a wildmat string "
"as specified in RFC2980 (it's essentially the same as DOS or UNIX shell "
"wildcard strings).  Return a pair ``(response, list)``, where *list* is a "
"list of tuples containing ``(name, title)``."
msgstr ""
"``LIST NEWSGROUPS`` 命令を送信します。 *grouppattern* は RFC2980 の定義に従"
"う wildmat 文字列です (実際には、 DOS や UNIX のシェルワイルドカード文字列と"
"同じです)。 ``(response,list)`` からなるペアを返し、 *list* はタプル "
"``(name, title)`` リストになります。"

#: ../../library/nntplib.rst:197
msgid ""
"Get a description for a single group *group*.  If more than one group "
"matches (if 'group' is a real wildmat string), return the first match.   If "
"no group matches, return an empty string."
msgstr ""
"単一のグループ *group* から説明文字列を取り出します。 ('group' が実際には "
"wildmat 文字列で) 複数のグループがマッチした場合、 最初にマッチしたものを返し"
"ます。何もマッチしなければ空文字列を返します。"

#: ../../library/nntplib.rst:201
msgid ""
"This elides the response code from the server.  If the response code is "
"needed, use :meth:`descriptions`."
msgstr ""
"このメソッドはサーバからの応答コードを省略します。応答コードが必要なら、 :"
"meth:`descriptions` を使ってください。"

#: ../../library/nntplib.rst:209
msgid ""
"Send a ``GROUP`` command, where *name* is the group name. Return a tuple "
"``(response, count, first, last, name)`` where *count* is the (estimated) "
"number of articles in the group, *first* is the first article number in the "
"group, *last* is the last article number in the group, and *name* is the "
"group name. The numbers are returned as strings."
msgstr ""
"``GROUP`` 命令を送信します。 *name* はグループ名です。タプル  ``(response, "
"count, first, last, name)`` を返します。 *count* はグループ中の記事数 (の推定"
"値) で、 *first* はグループ中の最初の記事番号、 *last* はグループ中の 最新の"
"記事番号、 *name* はグループ名です。記事番号は文字列で返されます。"

#: ../../library/nntplib.rst:218
msgid ""
"Send a ``HELP`` command.  Return a pair ``(response, list)`` where *list* is "
"a list of help strings. If the *file* parameter is supplied, then the output "
"of the  ``HELP`` command is stored in a file.  If *file* is a string,  then "
"the method will open a file object with that name, write to it  then close "
"it.  If *file* is a file object, then it will start calling :meth:`write` on "
"it to store the lines of the command output. If *file* is supplied, then the "
"returned *list* is an empty list."
msgstr ""
"``HELP`` 命令を送信します。 ``(response, list)``  からなるペアを返します。 "
"*list* はヘルプ文字列からなるリストです。 *file* 引数が指定されている場合、 "
"``HELP`` コマンドの出力結果はファイルに格納されます。 *file* が文字列の場合、"
"この文字列をファイル名 としてファイルをオープンし、書き込み後にクローズしま"
"す。 *file* がファイルオブジェクトの場合、オブジェクトの :meth:`write` メソッ"
"ドを呼び出し て出力結果を格納します。 *file* が指定されている場合は戻り値とし"
"て空のリストを返します。"

#: ../../library/nntplib.rst:229
msgid ""
"Send a ``STAT`` command, where *id* is the message id (enclosed in ``'<'`` "
"and ``'>'``) or an article number (as a string). Return a triple "
"``(response, number, id)`` where *number* is the article number (as a "
"string) and *id* is the message id  (enclosed in ``'<'`` and ``'>'``)."
msgstr ""
"``STAT`` 命令を送信します。 *id* は (``'<'`` と ``'>'`` に囲まれた形式の) "
"メッセージ ID か、 (文字列の) 記事番号です。 三つ組み ``(response, number, "
"id)`` を返します。 *number* は (文字列の) 記事番号で、 *id* は (``'<'`` と "
"``'>'`` に囲まれた形式の) メッセージ ID です。"

#: ../../library/nntplib.rst:237
msgid "Send a ``NEXT`` command.  Return as for :meth:`.stat`."
msgstr "``NEXT`` 命令を送信します。 :meth:`.stat` のような応答を返します。"

#: ../../library/nntplib.rst:242
msgid "Send a ``LAST`` command.  Return as for :meth:`.stat`."
msgstr "``LAST`` 命令を送信します。 :meth:`.stat` のような応答を返します。"

#: ../../library/nntplib.rst:247
msgid ""
"Send a ``HEAD`` command, where *id* has the same meaning as for :meth:`."
"stat`. Return a tuple ``(response, number, id, list)`` where the first three "
"are the same as for :meth:`.stat`, and *list* is a list of the article's "
"headers (an uninterpreted list of lines, without trailing newlines)."
msgstr ""
"``HEAD`` 命令を送信します。 *id* は :meth:`stat` におけるのと同じ意味を持ちま"
"す。 ``(response, number, id, list)`` からなるタプルを返します。最初の 3 要素"
"は :meth:`stat` と同じもので、 *list* は記事のヘッダからなるリスト (まだ解析"
"されておらず、末尾の改行が取り去られたヘッダ行のリスト) です。"

#: ../../library/nntplib.rst:255
msgid ""
"Send a ``BODY`` command, where *id* has the same meaning as for :meth:`."
"stat`. If the *file* parameter is supplied, then the body is stored in a "
"file.  If *file* is a string, then the method will open a file object with "
"that name, write to it then close it. If *file* is a file object, then it "
"will start calling :meth:`write` on it to store the lines of the body. "
"Return as for :meth:`head`.  If *file* is supplied, then the returned *list* "
"is an empty list."
msgstr ""
"``BODY`` 命令を送信します。 *id* は :meth:`stat` におけるのと同じ意味を持ちま"
"す。 *file* 引数が与えられている場合、記事本体 (body) はファイルに保存されま"
"す。 *file* が文字列の場合、このメソッドはその名前を持つファイルオブジェクト"
"を 開き、記事を書き込んで閉じます。 *file* がファイルオブジェクトの場合、 :"
"meth:`write` を呼び出して記事本体を記録します。 :meth:`head` のような戻り値を"
"返します。 *file* が与えられていた場合、返される *list* は空のリストになりま"
"す。"

#: ../../library/nntplib.rst:265
msgid ""
"Send an ``ARTICLE`` command, where *id* has the same meaning as for :meth:`."
"stat`.  Return as for :meth:`head`."
msgstr ""
"``ARTICLE`` 命令を送信します。 *id* は :meth:`stat` におけるのと同じ意味を持"
"ちます。 :meth:`head` のような戻り値を返します。"

#: ../../library/nntplib.rst:271
msgid "Send a ``SLAVE`` command.  Return the server's *response*."
msgstr "``SLAVE`` 命令を送信します。サーバの *response* を返します。"

#: ../../library/nntplib.rst:276
msgid ""
"Send an ``XHDR`` command.  This command is not defined in the RFC but is a "
"common extension.  The *header* argument is a header keyword, e.g. "
"``'subject'``.  The *string* argument should have the form ``'first-last'`` "
"where *first* and *last* are the first and last article numbers to search. "
"Return a pair ``(response, list)``, where *list* is a list of pairs ``(id, "
"text)``, where *id* is an article number (as a string) and *text* is the "
"text of the requested header for that article. If the *file* parameter is "
"supplied, then the output of the  ``XHDR`` command is stored in a file.  If "
"*file* is a string, then the method will open a file object with that name, "
"write to it  then close it.  If *file* is a file object, then it will start "
"calling :meth:`write` on it to store the lines of the command output. If "
"*file* is supplied, then the returned *list* is an empty list."
msgstr ""
"``XHDR`` 命令を送信します、この命令は RFC には定義されていませんが、一般に広"
"まっている拡張です。 *header* 引数は、例えば ``'subject'`` といったヘッダキー"
"ワードです。 *string* 引数は  ``'first-last'`` の形式でなければならず、ここ"
"で *first* および *last* は検索の対象とする記事範囲の最初と最後の記事番号で"
"す。 ``(response, list)`` のペアを返します。 *list* は ``(id, text)`` のペア"
"からなるリストで、 *id* が (文字列で表した) 記事番号、 *text* がその記事の "
"ヘッダテキストです。 *file* 引数が指定されている場合、 ``XHDR`` コマンドの出"
"力結果は ファイルに格納されます。 *file* が文字列の場合、この文字列をファイル"
"名としてファイルをオープンし、書き込み後にクローズします。 *file* がファ イル"
"オブジェクトの場合、オブジェクトの :meth:`write` メソッドを呼び出して出力結果"
"を格納します。 *file* が指定されている場合は戻り値として空の リストを返しま"
"す。"

#: ../../library/nntplib.rst:292
msgid ""
"Post an article using the ``POST`` command.  The *file* argument is an open "
"file object which is read until EOF using its :meth:`~file.readline` "
"method.  It should be a well-formed news article, including the required "
"headers.  The :meth:`post` method automatically escapes lines beginning with "
"``.``."
msgstr ""
"``POST`` 命令を使って記事をポストします。 *file* 引数は開かれているファイルオ"
"ブジェクトで、その内容は :meth:`readline` メソッドを使って EOF まで読み出され"
"ます。内容は必要なヘッダを含め、正しい形式のニュース記事でなければなりませ"
"ん。 :meth:`post` メソッドは ``.`` で始まる行を自動的にエスケープします。"

#: ../../library/nntplib.rst:300
msgid ""
"Send an ``IHAVE`` command. *id* is a message id (enclosed in  ``'<'`` and "
"``'>'``). If the response is not an error, treat *file* exactly as for the :"
"meth:`post` method."
msgstr ""
"``IHAVE`` 命令を送信します。 *id* は (``'<'`` と ``'>'`` に囲まれた) メッセー"
"ジ ID です。 応答がエラーでない場合、 *file* を :meth:`post` と全く同じように"
"扱います。"

#: ../../library/nntplib.rst:307
msgid ""
"Return a triple ``(response, date, time)``, containing the current date and "
"time in a form suitable for the :meth:`newnews` and :meth:`newgroups` "
"methods. This is an optional NNTP extension, and may not be supported by all "
"servers."
msgstr ""
"タプル ``(response, date, time)`` を返します。このタプルには :meth:`newnews` "
"および :meth:`newgroups` メソッドに合った形式の、現在の日付および時刻が入って"
"います。これはオプションの NNTP 拡張なので、全てのサーバでサポートされている"
"とは限りません。"

#: ../../library/nntplib.rst:314
msgid ""
"Process an ``XGTITLE`` command, returning a pair ``(response, list)``, where "
"*list* is a list of tuples containing ``(name, title)``. If the *file* "
"parameter is supplied, then the output of the  ``XGTITLE`` command is stored "
"in a file. If *file* is a string,  then the method will open a file object "
"with that name, write to it  then close it.  If *file* is a file object, "
"then it will start calling :meth:`write` on it to store the lines of the "
"command output. If *file* is supplied, then the returned *list* is an empty "
"list. This is an optional NNTP extension, and may not be supported by all "
"servers."
msgstr ""
"``XGTITLE`` 命令を処理し、 ``(response, list)`` からなるペアを返します。 "
"*list* は ``(name, title)`` を含むタプルのリストです。 *file* 引数が指定され"
"ている場合、 ``XHDR`` コマンドの出力結果は ファイルに格納されます。 *file* が"
"文字列の場合、この文字列をファイル名としてファイルをオープンし、書き込み後に"
"クローズします。 *file* がファ イルオブジェクトの場合、オブジェクトの :meth:"
"`write` メソッドを呼び出して出力結果を格納します。 *file* が指定されている場"
"合は戻り値として空の リストを返します。これはオプションの NNTP 拡張なので、全"
"てのサーバでサポートされているとは限りません。"

#: ../../library/nntplib.rst:323
msgid ""
"RFC2980 says \"It is suggested that this extension be deprecated\".  Use :"
"meth:`descriptions` or :meth:`description` instead."
msgstr ""
"RFC2980 では、 \"この拡張は撤廃すべきである\" と主張しています。 :meth:"
"`descriptions` または :meth:`description` を使うようにしてください。"

#: ../../library/nntplib.rst:329
msgid ""
"Return a pair ``(resp, list)``.  *list* is a list of tuples, one for each "
"article in the range delimited by the *start* and *end* article numbers.  "
"Each tuple is of the form ``(article number, subject, poster, date, id, "
"references, size, lines)``. If the *file* parameter is supplied, then the "
"output of the ``XOVER`` command is stored in a file.  If *file* is a "
"string,  then the method will open a file object with that name, write to "
"it  then close it.  If *file* is a file object, then it will start calling :"
"meth:`write` on it to store the lines of the command output. If *file* is "
"supplied, then the returned *list* is an empty list. This is an optional "
"NNTP extension, and may not be supported by all servers."
msgstr ""
"``(resp, list)`` からなるペアを返します。 *list* はタプルからなるリストで、各"
"タプルは記事番号 *start*  および *end* の間に区切られた記事です。各タプルは "
"``(article number, subject, poster, date, id, references, size, lines)`` の形"
"式をとります。 *file* 引数が指定されている場合、 ``XHDR`` コマンドの出力結果"
"は ファイルに格納されます。 *file* が文字列の場合、この文字列をファイル名とし"
"てファイルをオープンし、書き込み後にクローズします。 *file* がファ イルオブ"
"ジェクトの場合、オブジェクトの :meth:`write` メソッドを呼び出して出力結果を格"
"納します。 *file* が指定されている場合は戻り値として空の リストを返します。こ"
"れはオプションの NNTP 拡張なので、全てのサーバでサポートされているとは限りま"
"せん。"

#: ../../library/nntplib.rst:343
msgid ""
"Return a pair ``(resp, path)``, where *path* is the directory path to the "
"article with message ID *id*.  This is an optional NNTP extension, and may "
"not be supported by all servers."
msgstr ""
"``(resp, path)`` からなるペアを返します。 *path* はメッセージ ID が *id* であ"
"る記事のディレクトリパスです。 これはオプションの NNTP 拡張なので、全てのサー"
"バでサポートされているとは限りません。"

#: ../../library/nntplib.rst:350
msgid ""
"Send a ``QUIT`` command and close the connection.  Once this method has been "
"called, no other methods of the NNTP object should be called."
msgstr ""
"``QUIT`` 命令を送信し、接続を閉じます。このメソッドを呼び出した後は、NTTP オ"
"ブジェクトの他のいかなるメソッドも呼び出してはいけません。"
