# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:02+0000\n"
"PO-Revision-Date: 2019-09-01 03:13+0000\n"
"Last-Translator: tomo, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/crypt.rst:2
msgid ":mod:`crypt` --- Function to check Unix passwords"
msgstr ":mod:`crypt` --- Unix パスワードをチェックするための関数"

#: ../../library/crypt.rst:12
msgid "**Source code:** :source:`Lib/crypt.py`"
msgstr "**ソースコード:** :source:`Lib/crypt.py`"

#: ../../library/crypt.rst:20
msgid ""
"This module implements an interface to the :manpage:`crypt(3)` routine, "
"which is a one-way hash function based upon a modified DES algorithm; see "
"the Unix man page for further details.  Possible uses include storing hashed "
"passwords so you can check passwords without storing the actual password, or "
"attempting to crack Unix passwords with a dictionary."
msgstr ""
"このモジュールは修正 DES アルゴリズムに基づいた一方向ハッシュ関数である :"
"manpage:`crypt(3)`  ルーチンを実装しています。詳細については Unix マニュアル"
"ページを参照してください。このモジュールは、実際に入力されたパスワードを記録"
"することなくチェック出来るようにするためのハッシュ化パスワードを記録したり、"
"Unix パスワードに (脆弱性検査のための) 辞書攻撃を試みるのに使えます。"

#: ../../library/crypt.rst:28
msgid ""
"Notice that the behavior of this module depends on the actual "
"implementation  of the :manpage:`crypt(3)` routine in the running system.  "
"Therefore, any extensions available on the current implementation will also  "
"be available on this module."
msgstr ""
"このモジュールは実行環境の :manpage:`crypt(3)` の実装に依存しています。そのた"
"め、現在の実装で利用可能な拡張を、このモジュールでもそのまま利用できます。"

#: ../../library/crypt.rst:34
msgid "Hashing Methods"
msgstr "ハッシュ化方式"

#: ../../library/crypt.rst:38
msgid ""
"The :mod:`crypt` module defines the list of hashing methods (not all methods "
"are available on all platforms):"
msgstr ""
":mod:`crypt` モジュールはハッシュ化方式の一覧を定義しています (すべての方式が"
"すべてのプラットフォームで使えるわけではありません):"

#: ../../library/crypt.rst:43
msgid ""
"A Modular Crypt Format method with 16 character salt and 86 character hash "
"based on the SHA-512 hash function.  This is the strongest method."
msgstr ""

#: ../../library/crypt.rst:48
msgid ""
"Another Modular Crypt Format method with 16 character salt and 43 character "
"hash based on the SHA-256 hash function."
msgstr ""

#: ../../library/crypt.rst:53
msgid ""
"Another Modular Crypt Format method with 22 character salt and 31 character "
"hash based on the Blowfish cipher."
msgstr ""

#: ../../library/crypt.rst:60
msgid ""
"Another Modular Crypt Format method with 8 character salt and 22 character "
"hash based on the MD5 hash function."
msgstr ""

#: ../../library/crypt.rst:65
msgid ""
"The traditional method with a 2 character salt and 13 characters of hash.  "
"This is the weakest method."
msgstr ""
"2文字のソルトと13文字のハッシュ値を持つモジュラー暗号形式です。これが最も弱い"
"方式です。"

#: ../../library/crypt.rst:70
msgid "Module Attributes"
msgstr "モジュール属性"

#: ../../library/crypt.rst:76
msgid ""
"A list of available password hashing algorithms, as ``crypt.METHOD_*`` "
"objects.  This list is sorted from strongest to weakest."
msgstr ""
"利用可能なパスワードのハッシュアルゴリズムのリストを、``crypt.METHOD_*`` オブ"
"ジェクトとして返します。\n"
"このリストは最も強いものから弱いものの順で並べられています。"

#: ../../library/crypt.rst:82
msgid "Module Functions"
msgstr "モジュール関数"

#: ../../library/crypt.rst:84
msgid "The :mod:`crypt` module defines the following functions:"
msgstr ":mod:`crypt` モジュールは以下の関数を定義しています:"

#: ../../library/crypt.rst:88
msgid ""
"*word* will usually be a user's password as typed at a prompt or  in a "
"graphical interface.  The optional *salt* is either a string as returned "
"from :func:`mksalt`, one of the ``crypt.METHOD_*`` values (though not all "
"may be available on all platforms), or a full encrypted password including "
"salt, as returned by this function.  If *salt* is not provided, the "
"strongest method will be used (as returned by :func:`methods`)."
msgstr ""

#: ../../library/crypt.rst:96
msgid ""
"Checking a password is usually done by passing the plain-text password as "
"*word* and the full results of a previous :func:`crypt` call, which should "
"be the same as the results of this call."
msgstr ""
"通常は、生の文字列のパスワードを *word* として渡し、前回の :func:`crypt` を呼"
"び出した結果と今回の呼び出しの結果が同じになることで、パスワードの確認を行い"
"ます。"

#: ../../library/crypt.rst:100
msgid ""
"*salt* (either a random 2 or 16 character string, possibly prefixed with "
"``$digit$`` to indicate the method) which will be used to perturb the "
"encryption algorithm.  The characters in *salt* must be in the set ``[./a-zA-"
"Z0-9]``, with the exception of Modular Crypt Format which prefixes a "
"``$digit$``."
msgstr ""
"*salt* (2文字から16文字のランダムな文字列で、方式を示す ``$digit$`` が先頭に"
"付いているかもしれません) は、暗号化アルゴリズムにぶれを生じさせるために使わ"
"れます。 *salt* に含まれる文字は、モジュラー暗号形式の先頭にある ``$digit$`` "
"を除いて、集合 ``[./a-zA-Z0-9]`` に含まれていなければいけません。"

#: ../../library/crypt.rst:106
msgid ""
"Returns the hashed password as a string, which will be composed of "
"characters from the same alphabet as the salt."
msgstr ""
"ハッシュ化されたパスワードを文字列として返します。それは salt と同じアルファ"
"ベット文字から構成されます。"

#: ../../library/crypt.rst:111
msgid ""
"Since a few :manpage:`crypt(3)` extensions allow different values, with "
"different sizes in the *salt*, it is recommended to use  the full crypted "
"password as salt when checking for a password."
msgstr ""
"いくつかの拡張された :manpage:`crypt(3)` は異なる値と *salt* の長さを許してい"
"るので、パスワードをチェックする際には crypt されたパスワード文字列全体を "
"*salt* として渡すよう勧めます。"

#: ../../library/crypt.rst:115
msgid "Accept ``crypt.METHOD_*`` values in addition to strings for *salt*."
msgstr ""
"文字列に加え、 *salt* が ``crypt.METHOD_*`` 値も受け取るようになりました。"

#: ../../library/crypt.rst:121
msgid ""
"Return a randomly generated salt of the specified method.  If no *method* is "
"given, the strongest method available as returned by :func:`methods` is used."
msgstr ""
"指定された方式のランダムに生成されたソルトを返します。 *method* が与えられな"
"かった場合は、 :func:`methods` で返される方式のうち最も強いものが使われます。"

#: ../../library/crypt.rst:125
msgid ""
"The return value is a string suitable for passing as the *salt* argument to :"
"func:`crypt`."
msgstr ""

#: ../../library/crypt.rst:128
msgid ""
"*rounds* specifies the number of rounds for ``METHOD_SHA256``, "
"``METHOD_SHA512`` and ``METHOD_BLOWFISH``. For ``METHOD_SHA256`` and "
"``METHOD_SHA512`` it must be an integer between ``1000`` and "
"``999_999_999``, the default is ``5000``.  For ``METHOD_BLOWFISH`` it must "
"be a power of two between ``16`` (2\\ :sup:`4`) and ``2_147_483_648`` (2\\ :"
"sup:`31`), the default is ``4096`` (2\\ :sup:`12`)."
msgstr ""

#: ../../library/crypt.rst:138
msgid "Added the *rounds* parameter."
msgstr ""

#: ../../library/crypt.rst:143
msgid "Examples"
msgstr "使用例"

#: ../../library/crypt.rst:145
msgid ""
"A simple example illustrating typical use (a constant-time comparison "
"operation is needed to limit exposure to timing attacks. :func:`hmac."
"compare_digest` is suitable for this purpose)::"
msgstr ""
"典型的な使い方を簡単な例で示します (タイミング攻撃に晒されないように、一定時"
"間の比較演算子を使う必要があり、 :func:`hmac.compare_digest` がこの目的にちょ"
"うど良いです)::"

#: ../../library/crypt.rst:165
msgid ""
"To generate a hash of a password using the strongest available method and "
"check it against the original::"
msgstr ""
"利用可能な方式のうち最も強い方式を使いパスワードのハッシュ値を生成し、元のパ"
"スワードと比較してチェックします::"
