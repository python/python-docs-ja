# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: 秘湯 <xwhhsprings@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/macosa.rst:6
msgid "MacPython OSA Modules"
msgstr "MacPython OSA モジュール"

#: ../../library/macosa.rst:8
msgid ""
"This chapter describes the current implementation of the Open Scripting "
"Architecture (OSA, also commonly referred to as AppleScript) for Python, "
"allowing you to control scriptable applications from your Python program, "
"and with a fairly pythonic interface. Development on this set of modules has "
"stopped."
msgstr ""
"この章では、オープンスクリプティングアーキテクチャ (Open Scripting "
"Architecture、OSA、一般的には AppleScript として知られている) の現在の "
"Python 用実装について説明します。これを使うとスクリプト可能なアプリケーション"
"を Python プログラムから実に python らしいインタフェースとともに制御すること"
"ができます。このモジュール群の開発は停止しました。"

#: ../../library/macosa.rst:14
msgid ""
"For a description of the various components of AppleScript and OSA, and to "
"get an understanding of the architecture and terminology, you should read "
"Apple's documentation. The \"Applescript Language Guide\" explains the "
"conceptual model and the terminology, and documents the standard suite. The "
"\"Open Scripting Architecture\" document explains how to use OSA from an "
"application programmers point of view. In the Apple Help Viewer these books "
"are located in the Developer Documentation, Core Technologies section."
msgstr ""
"AppleScript や OSA の様々なコンポーネントの説明、およびそのアーキテクチャや用"
"語の理解のために、 Apple のドキュメントを読んでおく方がよいでしょう。 "
"\"Applescript Language Guide\" は概念モデルと用語を説明し、標準スイートについ"
"て文書にまとめてあります。 \"Open Scripting Architecture\" はアプリケーション"
"プログラマの視点から、 OSA を使用する方法について説明しています。 Apple ヘル"
"プビューワにおいてこれらは Developer Documentation, Core Technologies セク"
"ションで見つかります。"

#: ../../library/macosa.rst:22
msgid ""
"As an example of scripting an application, the following piece of "
"AppleScript will get the name of the frontmost :program:`Finder` window and "
"print it::"
msgstr ""
"アプリケーションでスクリプト制御する例として、以下の AppleScript コードは、最"
"前面にある :program:`Finder` のウィンドウの名前を取得して表示させます::"

#: ../../library/macosa.rst:29
msgid "In Python, the following code fragment will do the same::"
msgstr "Python では、以下のコードで同じ事ができます::"

#: ../../library/macosa.rst:36
msgid ""
"As distributed the Python library includes packages that implement the "
"standard suites, plus packages that interface to a small number of common "
"applications."
msgstr ""
"配布されている Python ライブラリには、標準スイートを実装したパッケージに加え"
"て、いくつかのよくあるアプリケーションへのインタフェースを実装したパッケージ"
"が含まれています。"

#: ../../library/macosa.rst:39
msgid ""
"To send AppleEvents to an application you must first create the Python "
"package interfacing to the terminology of the application (what :program:"
"`Script Editor` calls the \"Dictionary\"). This can be done from within the :"
"program:`PythonIDE` or by running the :file:`gensuitemodule.py` module as a "
"standalone program from the command line."
msgstr ""
"AppleEvent をアプリケーションに送るためには、最初にアプリケーションの用語 (:"
"program:`Script Editor` が「辞書」と呼んでいるもの) を話せる Python パッケー"
"ジを作らなければなりません。この作業は :program:`PythonIDE` の中から行うこと"
"もできますし、コマンドラインから :file:`gensuitemodule.py` モジュールをスタン"
"ドアロンのプログラムとして実行することでもできます。"

#: ../../library/macosa.rst:45
msgid ""
"The generated output is a package with a number of modules, one for every "
"suite used in the program plus an :mod:`__init__` module to glue it all "
"together. The Python inheritance graph follows the AppleScript inheritance "
"graph, so if a program's dictionary specifies that it includes support for "
"the Standard Suite, but extends one or two verbs with extra arguments then "
"the output suite will contain a module :mod:`Standard_Suite` that imports "
"and re-exports everything from :mod:`StdSuites.Standard_Suite` but overrides "
"the methods that have extra functionality. The output of :mod:"
"`gensuitemodule` is pretty readable, and contains the documentation that was "
"in the original AppleScript dictionary in Python docstrings, so reading it "
"is a good source of documentation."
msgstr ""
"作成されるのはいくつものモジュールからなるパッケージで、それぞれのモジュール"
"はプログラムで使われるスイートであり :mod:`__init__` モジュールがそれらを取り"
"まとめています。 Python の継承グラフは AppleScript の継承グラフに従っています"
"ので、プログラムの辞書が標準スイートのサポートを含みつつ、一つ二つ動詞を追加"
"の引数で拡張するように指定しているならば、出力されるスイートは :mod:"
"`Standard_Suite` という :mod:`StdSuites.Standard_Suite` からすべてをインポー"
"トしてエクスポートし直しつつ追加された機能を持つようにメソッドをオーバーライ"
"ドしたモジュールを含みます。 :mod:`gensuitemodule` の出力は非常に読み易く、ま"
"た元々の AppleScript 辞書にあったドキュメントを Python 文書化文字列 "
"(docstring) 中に含みますので、それを読むことは有用な情報源となります。"

#: ../../library/macosa.rst:56
msgid ""
"The output package implements a main class with the same name as the package "
"which contains all the AppleScript verbs as methods, with the direct object "
"as the first argument and all optional parameters as keyword arguments. "
"AppleScript classes are also implemented as Python classes, as are "
"comparisons and all the other thingies."
msgstr ""
"出力されたパッケージはパッケージと同じ名前のメインクラスを実装しており、これ"
"は全ての AppleScript 動詞を直接のオブジェクトは第 1 引数で、オプションのパラ"
"メータはキーワード引数で受けるメソッドとして含みます。 AppleScript クラスも "
"Python クラスとして実装されたり、その他諸々も同様です。"

#: ../../library/macosa.rst:62
msgid ""
"The main Python class implementing the verbs also allows access to the "
"properties and elements declared in the AppleScript class \"application\". "
"In the current release that is as far as the object orientation goes, so in "
"the example above we need to use ``f.get(f.window(1).name)`` instead of the "
"more Pythonic ``f.window(1).name.get()``."
msgstr ""
"動詞を実装しているメインの Python クラスはまた AppleScript の "
"\"application\" クラスで宣言されたプロパティおよび要素へのアクセスも許しま"
"す。現在のリリースではこれはオブジェクト指向的というには程遠く、上の例で見た"
"ように ``f.get(f.window(1).name)`` と書かねばならず、より Python らしい ``f."
"window(1).name.get()`` という書き方はできません。"

#: ../../library/macosa.rst:68
msgid ""
"If an AppleScript identifier is not a Python identifier the name is mangled "
"according to a small number of rules:"
msgstr ""
"AppleScript の識別子が Python の識別子として扱えない場合以下の少数のルールで"
"変換します:"

#: ../../library/macosa.rst:71
msgid "spaces are replaced with underscores"
msgstr "空白はアンダースコアに置き換えられます"

#: ../../library/macosa.rst:73
msgid ""
"other non-alphanumeric characters are replaced with ``_xx_`` where ``xx`` is "
"the hexadecimal character value"
msgstr ""
"その他の英数字以外の文字は ``_xx_`` に置き換えられます。ここで ``xx`` はその"
"文字の 16 進値です。"

#: ../../library/macosa.rst:76
msgid "any Python reserved word gets an underscore appended"
msgstr "Python の予約語にはアンダースコアが後ろに付けられます"

#: ../../library/macosa.rst:78
msgid ""
"Python also has support for creating scriptable applications in Python, but "
"The following modules are relevant to MacPython AppleScript support:"
msgstr ""
"Python はスクリプト可能なアプリケーションを Python で作成することもサポートし"
"ていますが、以下のモジュールは MacPython の AppleScript サポートに関係するモ"
"ジュールのみです:"

#: ../../library/macosa.rst:90
msgid ""
"In addition, support modules have been pre-generated for :mod:`Finder`, :mod:"
"`Terminal`, :mod:`Explorer`, :mod:`Netscape`, :mod:`CodeWarrior`, :mod:"
"`SystemEvents` and :mod:`StdSuites`."
msgstr ""
"他に、以下のサポートモジュールが事前に生成されています: :mod:`Finder`, :mod:"
"`Terminal`, :mod:`Explorer`, :mod:`Netscape`, :mod:`CodeWarrior`, :mod:"
"`SystemEvents`, :mod:`StdSuites` 。"
