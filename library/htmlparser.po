# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/htmlparser.rst:3
msgid ":mod:`HTMLParser` --- Simple HTML and XHTML parser"
msgstr ":mod:`HTMLParser` --- HTML および XHTML のシンプルなパーサー"

#: ../../library/htmlparser.rst:10
msgid ""
"The :mod:`HTMLParser` module has been renamed to :mod:`html.parser` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""
":mod:`HTMLParser` モジュールは Python 3 で :mod:`html.parser` に改名されまし"
"た。ソースを 3 用に移行する際には :term:`2to3` がインポートを自動的に直してく"
"れます。"

#: ../../library/htmlparser.rst:21
msgid "**Source code:** :source:`Lib/HTMLParser.py`"
msgstr "**ソースコード:** :source:`Lib/HTMLParser.py`"

#: ../../library/htmlparser.rst:25
msgid ""
"This module defines a class :class:`.HTMLParser` which serves as the basis "
"for parsing text files formatted in HTML (HyperText Mark-up Language) and "
"XHTML. Unlike the parser in :mod:`htmllib`, this parser is not based on the "
"SGML parser in :mod:`sgmllib`."
msgstr ""
"このモジュールでは :class:`.HTMLParser` クラスを定義します。このクラスは "
"HTML (ハイパーテキスト記述言語、 HyperText Mark-up Language) および XHTML で"
"書式化されているテキストファイルを解釈するための基礎となります。 :mod:"
"`htmllib` にあるパーサーと違って、このパーサーは :mod:`sgmllib` の SGML パー"
"サーに基づいてはいません。"

#: ../../library/htmlparser.rst:33
msgid ""
"An :class:`.HTMLParser` instance is fed HTML data and calls handler methods "
"when start tags, end tags, text, comments, and other markup elements are "
"encountered.  The user should subclass :class:`.HTMLParser` and override its "
"methods to implement the desired behavior."
msgstr ""
":class:`.HTMLParser` インスタンスは、HTML データが入力されると、開始タグ、終"
"了タグ、およびその他の要素が見つかる度にハンドラーメソッドを呼び出します。各"
"メソッドの挙動を実装するには :class:`.HTMLParser` サブクラスを使ってそれぞれ"
"を上書きして行います。"

#: ../../library/htmlparser.rst:38
msgid "The :class:`.HTMLParser` class is instantiated without arguments."
msgstr ":class:`.HTMLParser` クラスは引数なしでインスタンス化します。"

#: ../../library/htmlparser.rst:40
msgid ""
"Unlike the parser in :mod:`htmllib`, this parser does not check that end "
"tags match start tags or call the end-tag handler for elements which are "
"closed implicitly by closing an outer element."
msgstr ""
":mod:`htmllib` のパーサーと違い、このパーサーは終了タグが開始タグと一致してい"
"るか調べたり、外側のタグ要素が閉じるときに内側で明示的に閉じられていないタグ"
"要素のタグ終了ハンドラを呼び出したりはしません。"

#: ../../library/htmlparser.rst:44
msgid "An exception is defined as well:"
msgstr "例外も定義されています:"

#: ../../library/htmlparser.rst:48
msgid ""
":class:`.HTMLParser` is able to handle broken markup, but in some cases it "
"might raise this exception when it encounters an error while parsing. This "
"exception provides three attributes: :attr:`msg` is a brief message "
"explaining the error, :attr:`lineno` is the number of the line on which the "
"broken construct was detected, and :attr:`offset` is the number of "
"characters into the line at which the construct starts."
msgstr ""
":class:`.HTMLParser` は正しくないマークアップを処理することが出来ますが、ある"
"ケースにおいてはこの例外が発生しえます。これは、パース中にエラーに遭遇した場"
"合の例外です。この例外は三つの属性を提供しています: :attr:`msg` はエラーの内"
"容を説明する簡単なメッセージ、:attr:`lineno` は壊れたマークアップ構造を検出し"
"た場所の行番号、:attr:`offset` は問題のマークアップ構造の行内での開始位置を示"
"す文字数です。"

#: ../../library/htmlparser.rst:57
msgid "Example HTML Parser Application"
msgstr "HTML パーサーアプリケーションの例"

#: ../../library/htmlparser.rst:59
msgid ""
"As a basic example, below is a simple HTML parser that uses the :class:`."
"HTMLParser` class to print out start tags, end tags and data as they are "
"encountered::"
msgstr ""
"基礎的な例として、:class:`.HTMLParser` クラスを使い、発見した開始タグ、終了タ"
"グ、およびデータを出力する、シンプルな HTML パーサーを以下に示します::"

#: ../../library/htmlparser.rst:81
msgid "The output will then be:"
msgstr "出力は以下のようになります:"

#: ../../library/htmlparser.rst:100
msgid ":class:`.HTMLParser` Methods"
msgstr ":class:`.HTMLParser` メソッド"

#: ../../library/htmlparser.rst:102
msgid ":class:`.HTMLParser` instances have the following methods:"
msgstr ":class:`.HTMLParser` インスタンスは以下のメソッドを提供します:"

#: ../../library/htmlparser.rst:107
msgid ""
"Feed some text to the parser.  It is processed insofar as it consists of "
"complete elements; incomplete data is buffered until more data is fed or :"
"meth:`close` is called.  *data* can be either :class:`unicode` or :class:"
"`str`, but passing :class:`unicode` is advised."
msgstr ""
"パーサーにテキストを入力します。入力が完全なタグ要素で構成されている場合に限"
"り処理が行われます; 不完全なデータであった場合、新たにデータが入力されるか、:"
"meth:`close` が呼び出されるまでバッファーされます。 *data* は :class:"
"`unicode` でも :class:`str` でも構いませんが、 :class:`unicode` の方が良いで"
"す。"

#: ../../library/htmlparser.rst:115
msgid ""
"Force processing of all buffered data as if it were followed by an end-of-"
"file mark.  This method may be redefined by a derived class to define "
"additional processing at the end of the input, but the redefined version "
"should always call the :class:`.HTMLParser` base class method :meth:`close`."
msgstr ""
"全てのバッファされているデータについて、その後にファイル終了マークが続いてい"
"るとみなして強制的に処理を行います。このメソッドは入力データの終端で行うべき"
"追加処理を定義するために派生クラスで上書きすることができますが、再定義を行っ"
"たクラスでは常に、 :class:`.HTMLParser` 基底クラスのメソッド :meth:`close` を"
"呼び出さなくてはなりません。"

#: ../../library/htmlparser.rst:123
msgid ""
"Reset the instance.  Loses all unprocessed data.  This is called implicitly "
"at instantiation time."
msgstr ""
"インスタンスをリセットします。未処理のデータはすべて失われます。インスタンス"
"化の際に暗黙的に呼び出されます。"

#: ../../library/htmlparser.rst:129
msgid "Return current line number and offset."
msgstr "現在の行番号およびオフセット値を返します。"

#: ../../library/htmlparser.rst:134
msgid ""
"Return the text of the most recently opened start tag.  This should not "
"normally be needed for structured processing, but may be useful in dealing "
"with HTML \"as deployed\" or for re-generating input with minimal changes "
"(whitespace between attributes can be preserved, etc.)."
msgstr ""
"最も最近開かれた開始タグのテキスト部分を返します。このテキストは必ずしも元"
"データを構造化する上で必須ではありませんが、 \"広く知られている (as "
"deployed)\" HTML を扱ったり、入力を最小限の変更で再生成 (属性間の空白をそのま"
"まにする、など) したりする場合に便利なことがあります。"

#: ../../library/htmlparser.rst:140
msgid ""
"The following methods are called when data or markup elements are "
"encountered and they are meant to be overridden in a subclass.  The base "
"class implementations do nothing (except for :meth:`~HTMLParser."
"handle_startendtag`):"
msgstr ""
"以下のメソッドはデータまたはマークアップ要素が見つかる度に呼び出されます。こ"
"れらはサブクラスで上書きされることを想定されています。基底クラスの実装は (:"
"meth:`~HTMLParser.handle_startendtag` を除き) 何もしません:"

#: ../../library/htmlparser.rst:147
msgid ""
"This method is called to handle the start of a tag (e.g. ``<div "
"id=\"main\">``)."
msgstr ""
"このメソッドは開始タグを扱うために呼び出されます (例: ``<div "
"id=\"main\">``)。"

#: ../../library/htmlparser.rst:149
msgid ""
"The *tag* argument is the name of the tag converted to lower case. The "
"*attrs* argument is a list of ``(name, value)`` pairs containing the "
"attributes found inside the tag's ``<>`` brackets.  The *name* will be "
"translated to lower case, and quotes in the *value* have been removed, and "
"character and entity references have been replaced."
msgstr ""
"引数 *tag* はタグの名前で、小文字に変換されます。引数 *attrs* は ``(name, "
"value)`` のペアからなるリストで、タグの ``<>`` 括弧内にある属性が収められてい"
"ます。*name* は小文字に変換され、*value* 内の引用符は取り除かれ、文字参照と実"
"態参照は置き換えられます。"

#: ../../library/htmlparser.rst:155
msgid ""
"For instance, for the tag ``<A HREF=\"https://www.cwi.nl/\">``, this method "
"would be called as ``handle_starttag('a', [('href', 'https://www.cwi."
"nl/')])``."
msgstr ""
"例えば、タグ ``<A HREF=\"https://www.cwi.nl/\">`` を処理する場合、このメソッ"
"ドは ``handle_starttag('a', [('href', 'https://www.cwi.nl/')])`` として呼び出"
"されます。"

#: ../../library/htmlparser.rst:158
msgid ""
"All entity references from :mod:`htmlentitydefs` are now replaced in the "
"attribute values."
msgstr ""
"属性中の :mod:`htmlentitydefs` の全てのエンティティ参照が置換されるようになり"
"ました。"

#: ../../library/htmlparser.rst:165
msgid ""
"This method is called to handle the end tag of an element (e.g. ``</div>``)."
msgstr ""
"このメソッドは要素の終了タグを扱うために呼び出されます (例: ``</div>``)。"

#: ../../library/htmlparser.rst:167
msgid "The *tag* argument is the name of the tag converted to lower case."
msgstr "引数 *tag* はタグの名前で、小文字に変換されます。"

#: ../../library/htmlparser.rst:172
msgid ""
"Similar to :meth:`handle_starttag`, but called when the parser encounters an "
"XHTML-style empty tag (``<img ... />``).  This method may be overridden by "
"subclasses which require this particular lexical information; the default "
"implementation simply calls :meth:`handle_starttag` and :meth:"
"`handle_endtag`."
msgstr ""
":meth:`handle_starttag` と似ていますが、パーサーが XHTML 形式の空タグ "
"(``<img ... />``) を見つける度に呼び出されます。この特定の字句情報が必要な場"
"合にこのメソッドをサブクラスで上書きすることができます; 既定の実装では、単"
"に :meth:`handle_starttag` および :meth:`handle_endtag` を呼び出します。"

#: ../../library/htmlparser.rst:180
msgid ""
"This method is called to process arbitrary data (e.g. text nodes and the "
"content of ``<script>...</script>`` and ``<style>...</style>``)."
msgstr ""
"このメソッドは任意のデータを処理するために呼び出されます (例: テキストノード"
"および ``<script>...</script>`` aや ``<style>...</style>`` の内容)。"

#: ../../library/htmlparser.rst:186
msgid ""
"This method is called to process a named character reference of the form "
"``&name;`` (e.g. ``&gt;``), where *name* is a general entity reference (e.g. "
"``'gt'``)."
msgstr ""
"このメソッドは ``&name;`` 形式の名前指定文字参照 (例: ``&gt;``) を処理するた"
"めに呼び出されます。*name* は一般実体参照になります (例: ``'gt'``)。"

#: ../../library/htmlparser.rst:193
msgid ""
"This method is called to process decimal and hexadecimal numeric character "
"references of the form ``&#NNN;`` and ``&#xNNN;``.  For example, the decimal "
"equivalent for ``&gt;`` is ``&#62;``, whereas the hexadecimal is ``&#x3E;``; "
"in this case the method will receive ``'62'`` or ``'x3E'``."
msgstr ""
"このメソッドは ``&#NNN;`` あるいは ``&#xNNN;`` 形式の 10進および 16 進数値文"
"字参照を処理するために呼び出されます。例えば、``&gt;`` と等価な 10 進数は "
"``&#62;`` で、16進数は ``&#x3E;`` になります。この場合、メソッドは ``'62'`` "
"あるいは ``'x3E'`` を受け取ります。"

#: ../../library/htmlparser.rst:201
msgid ""
"This method is called when a comment is encountered (e.g. ``<!--comment--"
">``)."
msgstr ""
"このメソッドはコメントが見つかった場合に呼び出されます (例: ``<!--comment--"
">``)。"

#: ../../library/htmlparser.rst:203
msgid ""
"For example, the comment ``<!-- comment -->`` will cause this method to be "
"called with the argument ``' comment '``."
msgstr ""
"例えば、コメント ``<!-- comment -->`` があると。このメソッドを引数 ``' "
"comment '`` で呼び出されます。"

#: ../../library/htmlparser.rst:206
msgid ""
"The content of Internet Explorer conditional comments (condcoms) will also "
"be sent to this method, so, for ``<!--[if IE 9]>IE9-specific content<!"
"[endif]-->``, this method will receive ``'[if IE 9]>IE9-specific content<!"
"[endif]'``."
msgstr ""
"Internet Explorer 独自拡張の条件付きコメント (condcoms) はこのメソッドに送る"
"ことができます。``<!--[if IE 9]>IE9-specific content<![endif]-->`` の場合、こ"
"のメソッドは ``'[if IE 9]>IE9-specific content<![endif]'`` を受け取ります。"

#: ../../library/htmlparser.rst:213
msgid ""
"This method is called to handle an HTML doctype declaration (e.g. ``<!"
"DOCTYPE html>``)."
msgstr ""
"このメソッドは HTML doctype 宣言を扱うために呼び出されます (例: ``<!DOCTYPE "
"html>``)。"

#: ../../library/htmlparser.rst:216
msgid ""
"The *decl* parameter will be the entire contents of the declaration inside "
"the ``<!...>`` markup (e.g. ``'DOCTYPE html'``)."
msgstr ""
"引数 *decl* は ``<!...>`` マークアップ内の宣言の内容全体になります (例: "
"``'DOCTYPE html'``)。"

#: ../../library/htmlparser.rst:222
msgid ""
"This method is called when a processing instruction is encountered.  The "
"*data* parameter will contain the entire processing instruction.  For "
"example, for the processing instruction ``<?proc color='red'>``, this method "
"would be called as ``handle_pi(\"proc color='red'\")``."
msgstr ""
"処理指令 (processing instruction) が見つかった場合に呼び出されます。*data* に"
"は、処理指令全体が含まれ、例えば ``<?proc color='red'>`` という処理指令の場"
"合、``handle_pi(\"proc color='red'\")`` のように呼び出されます。"

#: ../../library/htmlparser.rst:229
msgid ""
"The :class:`.HTMLParser` class uses the SGML syntactic rules for processing "
"instructions.  An XHTML processing instruction using the trailing ``'?'`` "
"will cause the ``'?'`` to be included in *data*."
msgstr ""
"The :class:`.HTMLParser` クラスでは、処理指令に SGML の構文を使用します。末尾"
"に ``'?'`` がある XHTML の処理指令では、 ``'?'`` が *data* に含まれることにな"
"ります。"

#: ../../library/htmlparser.rst:236
msgid ""
"This method is called when an unrecognized declaration is read by the parser."
msgstr "このメソッドはパーサーが未知の宣言を読み込んだ時に呼び出されます。"

#: ../../library/htmlparser.rst:238
msgid ""
"The *data* parameter will be the entire contents of the declaration inside "
"the ``<![...]>`` markup.  It is sometimes useful to be overridden by a "
"derived class."
msgstr ""
"パラメーター *data* は ``<![...]>`` マークアップ内の宣言の内容全体になりま"
"す。これは派生クラスで上書きする時に役立つ場合があります。"

#: ../../library/htmlparser.rst:246
msgid "Examples"
msgstr "例"

#: ../../library/htmlparser.rst:248
msgid ""
"The following class implements a parser that will be used to illustrate more "
"examples::"
msgstr "以下のクラスは、より多くの例を示すのに用いられるパーサーの実装です::"

#: ../../library/htmlparser.rst:285
msgid "Parsing a doctype::"
msgstr "doctype をパースします::"

#: ../../library/htmlparser.rst:291
msgid "Parsing an element with a few attributes and a title::"
msgstr "要素のタイトルと一部属性をパースします::"

#: ../../library/htmlparser.rst:303
msgid ""
"The content of ``script`` and ``style`` elements is returned as is, without "
"further parsing::"
msgstr ""
"それ以上のパースを行わずに、``script`` と ``style`` 要素の内容をそのまま返し"
"ます::"

#: ../../library/htmlparser.rst:319
msgid "Parsing comments::"
msgstr "コメントをパースします::"

#: ../../library/htmlparser.rst:326
msgid ""
"Parsing named and numeric character references and converting them to the "
"correct char (note: these 3 references are all equivalent to ``'>'``)::"
msgstr ""
"名前指定および数値文字参照をパースし、正しい文字に変換します (注: これら 3 個"
"の参照はすべて ``'>'`` と等価です)::"

#: ../../library/htmlparser.rst:334
msgid ""
"Feeding incomplete chunks to :meth:`~HTMLParser.feed` works, but :meth:"
"`~HTMLParser.handle_data` might be called more than once::"
msgstr ""
"不完全なチャンクを :meth:`~HTMLParser.feed` に処理させても、:meth:"
"`~HTMLParser.handle_data` は 1 回以上呼び出される場合があります::"

#: ../../library/htmlparser.rst:346
msgid "Parsing invalid HTML (e.g. unquoted attributes) also works::"
msgstr ""
"不正な HTML (例えば属性が引用符で括られていない) のパースも動作します::"
