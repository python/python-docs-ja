# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/types.rst:2
msgid ":mod:`types` --- Names for built-in types"
msgstr ":mod:`types` --- 組み込み型の名前"

#: ../../library/types.rst:7
msgid "**Source code:** :source:`Lib/types.py`"
msgstr "**ソースコード:** :source:`Lib/types.py`"

#: ../../library/types.rst:11
msgid ""
"This module defines names for some object types that are used by the "
"standard Python interpreter, but not for the types defined by various "
"extension modules. Also, it does not include some of the types that arise "
"during processing such as the ``listiterator`` type. It is safe to use "
"``from types import *`` --- the module does not export any names besides the "
"ones listed here. New names exported by future versions of this module will "
"all end in ``Type``."
msgstr ""
"このモジュールは標準のPythonインタプリタで使われているオブジェクトの型につい"
"て、名前を定義しています(拡張モジュールで定義されている型を除く)。また、この"
"モジュールには ``listiterator`` 型のような処理中に例外が起きる型は含まれませ"
"ん。 ``from types import *`` のように使っても安全です -- モジュールはここでリ"
"ストされている以外の名前をエクスポートしません。このモジュールの将来のバー"
"ジョンで追加される名前は、 ``Type`` で終わる予定です。"

#: ../../library/types.rst:18
msgid ""
"Typical use is for functions that do different things depending on their "
"argument types, like the following::"
msgstr ""
"典型的な利用方法は、関数が以下のように引数の型によって異なる動作をする場合で"
"す::"

#: ../../library/types.rst:28
msgid ""
"Starting in Python 2.2, built-in factory functions such as :func:`int` and :"
"func:`str` are also names for the corresponding types.  This is now the "
"preferred way to access the type instead of using the :mod:`types` module. "
"Accordingly, the example above should be written as follows::"
msgstr ""
"Python 2.2以降では、 :func:`int` や :func:`str` のようなファクトリ関数は、型"
"の名前となりましたので、 :mod:`types` を使用する必要はなくなりました。上記の"
"サンプルは、以下のように記述する事が推奨されています。 ::"

#: ../../library/types.rst:39
msgid "The module defines the following names:"
msgstr "このモジュールは以下の名前を定義しています。"

#: ../../library/types.rst:44
msgid "The type of ``None``."
msgstr "``None`` の型です。"

#: ../../library/types.rst:51
msgid ""
"The type of type objects (such as returned by :func:`type`); alias of the "
"built-in :class:`type`."
msgstr ""
"typeオブジェクトの型です (:func:`type` などによって返されます)。組み込みの :"
"class:`type` のエイリアスになります。"

#: ../../library/types.rst:57
msgid ""
"The type of the :class:`bool` values ``True`` and ``False``; alias of the "
"built-in :class:`bool`."
msgstr ""
":class:`bool` の ``True`` と ``False`` の型です。これは組み込みの :class:"
"`bool` のエイリアスです。"

#: ../../library/types.rst:65
msgid "The type of integers (e.g. ``1``); alias of the built-in :class:`int`."
msgstr ""
"整数の型です (e.g. ``1``)。組み込みの :class:`int` のエイリアスになります。"

#: ../../library/types.rst:70
msgid ""
"The type of long integers (e.g. ``1L``); alias of the built-in :class:`long`."
msgstr ""
"長整数の型です (e.g. ``1L``)。組み込みの :class:`long` のエイリアスになりま"
"す。"

#: ../../library/types.rst:75
msgid ""
"The type of floating point numbers (e.g. ``1.0``); alias of the built-in :"
"class:`float`."
msgstr ""
"浮動小数点数の型です (e.g. ``1.0``)。組み込みの :class:`float` のエイリアスに"
"なります。"

#: ../../library/types.rst:81
msgid ""
"The type of complex numbers (e.g. ``1.0j``).  This is not defined if Python "
"was built without complex number support."
msgstr ""
"複素数の型です (e.g. ``1.0j``)。 Python が複素数のサポートなしでコンパイルさ"
"れていた場合には定義されません。"

#: ../../library/types.rst:87
msgid ""
"The type of character strings (e.g. ``'Spam'``); alias of the built-in :"
"class:`str`."
msgstr ""
"文字列の型です (e.g. ``'Spam'``)。組み込みの :class:`str` のエイリアスになり"
"ます。"

#: ../../library/types.rst:93
msgid ""
"The type of Unicode character strings (e.g. ``u'Spam'``).  This is not "
"defined if Python was built without Unicode support.  It's an alias of the "
"built-in :class:`unicode`."
msgstr ""
"Unicode 文字列の型です (e.g. ``u'Spam'``)。 Python が Unicode のサポートなし"
"でコンパイルされていた場合には定義されません。組み込みの :class:`Unicode` の"
"エイリアスになります。"

#: ../../library/types.rst:100
msgid ""
"The type of tuples (e.g. ``(1, 2, 3, 'Spam')``); alias of the built-in :"
"class:`tuple`."
msgstr ""
"タプルの型です (e.g. ``(1, 2, 3, 'Spam')``)。組み込みの :class:`tuple` のエイ"
"リアスになります。"

#: ../../library/types.rst:106
msgid ""
"The type of lists (e.g. ``[0, 1, 2, 3]``); alias of the built-in :class:"
"`list`."
msgstr ""
"リストの型です (e.g. ``[0, 1, 2, 3]``)。組み込みの :class:`list` のエイリアス"
"になります。"

#: ../../library/types.rst:112
msgid ""
"The type of dictionaries (e.g. ``{'Bacon': 1, 'Ham': 0}``); alias of the "
"built-in :class:`dict`."
msgstr ""
"辞書の型です (e.g. ``{'Bacon': 1, 'Ham': 0}``)。組み込みの :class:`dict` のエ"
"イリアスになります。"

#: ../../library/types.rst:118
msgid "An alternate name for ``DictType``."
msgstr "``DictType`` の別名です。"

#: ../../library/types.rst:124
msgid ""
"The type of user-defined functions and functions created by :keyword:"
"`lambda` expressions."
msgstr ""
"ユーザー定義の関数または :keyword:`lambda` 式によって作成された関数の型です。"

#: ../../library/types.rst:130
msgid ""
"The type of :term:`generator`-iterator objects, produced by calling a "
"generator function."
msgstr ""
"ジェネレータ (:term:`generator`) 関数の呼び出しによって生成されたイテレータオ"
"ブジェクトの型です。"

#: ../../library/types.rst:140
msgid "The type for code objects such as returned by :func:`compile`."
msgstr ":func:`compile` 関数などによって返されるコードオブジェクトの型です。"

#: ../../library/types.rst:145
msgid "The type of user-defined old-style classes."
msgstr "ユーザー定義の、旧形式クラスの型です。"

#: ../../library/types.rst:150
msgid "The type of instances of user-defined old-style classes."
msgstr "ユーザー定義の旧形式クラスのインスタンスの型です。"

#: ../../library/types.rst:155
msgid "The type of methods of user-defined class instances."
msgstr "ユーザー定義のクラスのインスタンスのメソッドの型です。"

#: ../../library/types.rst:160
msgid "An alternate name for ``MethodType``."
msgstr "``MethodType`` の別名です。"

#: ../../library/types.rst:166
msgid ""
"The type of built-in functions like :func:`len` or :func:`sys.exit`, and "
"methods of built-in classes.  (Here, the term \"built-in\" means \"written "
"in C\".)"
msgstr ""
":func:`len` や :func:`sys.exit` のような組み込み関数や、組み込み型のメソッド"
"の型です。 (ここでは、\"組み込み\"という単語を、\"C で書かれた\" という意味で"
"使っています)"

#: ../../library/types.rst:173
msgid "The type of modules."
msgstr "モジュールの型です。"

#: ../../library/types.rst:178
msgid ""
"The type of open file objects such as ``sys.stdout``; alias of the built-in :"
"class:`file`."
msgstr ""
"``sys.stdout`` のような open されたファイルオブジェクトの型です。組み込みの :"
"class:`file` のエイリアスになります。"

#: ../../library/types.rst:186
msgid ""
"The type of range objects returned by :func:`xrange`; alias of the built-in :"
"class:`xrange`."
msgstr ""
":func:`xrange` 関数によって返される range オブジェクトの型です。組み込みの :"
"class:`xrange` のエイリアスになります。"

#: ../../library/types.rst:194
msgid ""
"The type of objects returned by :func:`slice`; alias of the built-in :class:"
"`slice`."
msgstr ""
":func:`slice` 関数によって返されるオブジェクトの型です。組み込みの :class:"
"`slice` のエイリアスになります。"

#: ../../library/types.rst:200
msgid "The type of ``Ellipsis``."
msgstr "``Ellipsis`` の型です。"

#: ../../library/types.rst:205
msgid "The type of traceback objects such as found in ``sys.exc_traceback``."
msgstr ""
"``sys.exc_traceback`` に含まれるようなトレースバックオブジェクトの型です。"

#: ../../library/types.rst:210
msgid ""
"The type of frame objects such as found in ``tb.tb_frame`` if ``tb`` is a "
"traceback object."
msgstr ""
"フレームオブジェクトの型です。トレースバックオブジェクト ``tb`` の ``tb."
"tb_frame`` などです。"

#: ../../library/types.rst:218
msgid "The type of buffer objects created by the :func:`buffer` function."
msgstr ":func:`buffer` 関数によって作られるバッファオブジェクトの型です。"

#: ../../library/types.rst:223
msgid "The type of dict proxies, such as ``TypeType.__dict__``."
msgstr "``TypeType.__dict__`` のような dict へのプロキシ型です。"

#: ../../library/types.rst:228
msgid "The type of ``NotImplemented``"
msgstr "``NotImplemented`` の型です。"

#: ../../library/types.rst:233
msgid ""
"The type of objects defined in extension modules with ``PyGetSetDef``, such "
"as ``FrameType.f_locals`` or ``array.array.typecode``.  This type is used as "
"descriptor for object attributes; it has the same purpose as the :class:"
"`property` type, but for classes defined in extension modules."
msgstr ""
"``FrameType.f_locals`` や ``array.array.typecode`` のような、拡張モジュールに"
"おいて ``PyGetSetDef`` によって定義されたオブジェクトの型です。この型はオブ"
"ジェクト属性のディスクリプタとして利用されます。 :class:`property` 型と同じ目"
"的を持った型ですが、こちらは拡張モジュールで定義された型のためのものです。"

#: ../../library/types.rst:243
msgid ""
"The type of objects defined in extension modules with ``PyMemberDef``, such "
"as ``datetime.timedelta.days``.  This type is used as descriptor for simple "
"C data members which use standard conversion functions; it has the same "
"purpose as the :class:`property` type, but for classes defined in extension "
"modules."
msgstr ""
"``datetime.timedelta.days`` のような、拡張モジュールにおいて ``PyMemberDef`` "
"によって定義されたオブジェクトの型です。この型は、標準の変換関数を利用するよ"
"うな、Cのシンプルなデータメンバで利用されます。 :class:`property` 型と同じ目"
"的を持った型ですが、こちらは拡張モジュールで定義された型のためのものです。"

#: ../../library/types.rst:250
msgid ""
"In other implementations of Python, this type may be identical to "
"``GetSetDescriptorType``."
msgstr ""
"Pythonの他の実装では、この型は ``GetSetDescriptorType`` と同じかもしれませ"
"ん。"

#: ../../library/types.rst:258
msgid ""
"A sequence containing ``StringType`` and ``UnicodeType`` used to facilitate "
"easier checking for any string object.  Using this is more portable than "
"using a sequence of the two string types constructed elsewhere since it only "
"contains ``UnicodeType`` if it has been built in the running version of "
"Python.  For example: ``isinstance(s, types.StringTypes)``."
msgstr ""
"文字列型のチェックを簡単にするための ``StringType`` と ``UnicodeType`` を含む"
"シーケンスです。 ``UnicodeType`` は実行中の版の Python に含まれている場合にだ"
"け含まれるので、2 つの文字列型のシーケンスを使うよりこれを使う方が移植性が高"
"くなります。例: ``isinstance(s, types.StringTypes)``."
