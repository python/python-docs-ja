# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.errors.rst:2
msgid ":mod:`email.errors`: Exception and Defect classes"
msgstr ":mod:`email.errors`: 例外及び欠陥クラス"

#: ../../library/email.errors.rst:8
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr ""
":mod:`email.errors` モジュールでは、以下の例外クラスが定義されています:"

#: ../../library/email.errors.rst:13
msgid ""
"This is the base class for all exceptions that the :mod:`email` package can "
"raise.  It is derived from the standard :exc:`Exception` class and defines "
"no additional methods."
msgstr ""
"これは :mod:`email` パッケージが発生しうるすべての例外の基底クラスです。これ"
"は標準の :exc:`Exception` クラスから派生しており、追加のメソッドはまったく定"
"義されていません。"

#: ../../library/email.errors.rst:20
msgid ""
"This is the base class for exceptions raised by the :class:`~email.parser."
"Parser` class.  It is derived from :exc:`MessageError`."
msgstr ""
"これは :class:`~email.parser.Parser` クラスが発生しうる例外の基底クラスで"
"す。 :exc:`MessageError` から派生しています。"

#: ../../library/email.errors.rst:26 ../../library/email.errors.rst:39
msgid ""
"Raised under some error conditions when parsing the :rfc:`2822` headers of a "
"message, this class is derived from :exc:`MessageParseError`. It can be "
"raised from the :meth:`Parser.parse <email.parser.Parser.parse>` or :meth:"
"`Parser.parsestr <email.parser.Parser.parsestr>` methods."
msgstr ""
"メッセージの :rfc:`2822` ヘッダを解析している途中にある条件でエラーがおこると"
"発生します。これは :exc:`MessageParseError` から派生しています。この例外が起"
"こる可能性があるのは :meth:`Parser.parse <email.parser.Parser.parse>` メソッ"
"ドまたは :meth:`Parser.parsestr <email.parser.Parser.parsestr>` メソッドで"
"す。"

#: ../../library/email.errors.rst:31
msgid ""
"Situations where it can be raised include finding an envelope header after "
"the first :rfc:`2822` header of the message, finding a continuation line "
"before the first :rfc:`2822` header is found, or finding a line in the "
"headers which is neither a header or a continuation line."
msgstr ""
"この例外が発生するのはメッセージ中で最初の :rfc:`2822` ヘッダが現れたあとにエ"
"ンベロープヘッダが見つかったとか、最初の :rfc:`2822` ヘッダが現れる前に前の"
"ヘッダからの継続行が見つかったとかいう状況を含みます。あるいはヘッダでも継続"
"行でもない行がヘッダ中に見つかった場合でもこの例外が発生します。"

#: ../../library/email.errors.rst:44
msgid ""
"Situations where it can be raised include not being able to find the "
"starting or terminating boundary in a :mimetype:`multipart/\\*` message when "
"strict parsing is used."
msgstr ""
"この例外が発生するのは、厳格なパーズ方式が用いられているときに、 :mimetype:"
"`multipart/\\*` 形式の開始あるいは終了の文字列が見つからなかった場合などで"
"す。"

#: ../../library/email.errors.rst:51
msgid ""
"Raised when a payload is added to a :class:`~email.message.Message` object "
"using :meth:`add_payload`, but the payload is already a scalar and the "
"message's :mailheader:`Content-Type` main type is not either :mimetype:"
"`multipart` or missing.  :exc:`MultipartConversionError` multiply inherits "
"from :exc:`MessageError` and the built-in :exc:`TypeError`."
msgstr ""
"この例外は、 :class:`~email.message.Message` オブジェクトに :meth:"
"`add_payload` メソッドを使ってペイロードを追加するとき、そのペイロードがすで"
"にスカラー値である (訳注: リストでない) にもかかわらず、そのメッセージの :"
"mailheader:`Content-Type` ヘッダのメインタイプがすでに設定されていて、それ"
"が :mimetype:`multipart` 以外になってしまっている場合にこの例外が発生しま"
"す。 :exc:`MultipartConversionError` は :exc:`MessageError` と組み込みの :"
"exc:`TypeError` を両方継承しています。"

#: ../../library/email.errors.rst:57
msgid ""
"Since :meth:`Message.add_payload` is deprecated, this exception is rarely "
"raised in practice.  However the exception may also be raised if the :meth:"
"`~email.message.Message.attach` method is called on an instance of a class "
"derived from :class:`~email.mime.nonmultipart.MIMENonMultipart` (e.g. :class:"
"`~email.mime.image.MIMEImage`)."
msgstr ""
":meth:`Message.add_payload` はもはや推奨されないメソッドのため、この例外は"
"めったに発生しません。しかしこの例外は :meth:`~email.message.Message.attach` "
"メソッドが :class:`~email.mime.nonmultipart.MIMENonMultipart` から派生したク"
"ラスのインスタンス (例: :class:`~email.mime.image.MIMEImage` など) に対して呼"
"ばれたときにも発生することがあります。"

#: ../../library/email.errors.rst:64
msgid ""
"Here's the list of the defects that the :class:`~email.parser.FeedParser` "
"can find while parsing messages.  Note that the defects are added to the "
"message where the problem was found, so for example, if a message nested "
"inside a :mimetype:`multipart/alternative` had a malformed header, that "
"nested message object would have a defect, but the containing messages would "
"not."
msgstr ""
"以下は :class:`~email.parser.FeedParser` がメッセージの解析中に検出する障害 "
"(defect) の一覧です。これらの障害は、問題が見つかったメッセージに追加されるた"
"め、たとえば :mimetype:`multipart/alternative` 内にあるネストしたメッセージが"
"異常なヘッダをもっていた場合には、そのネストしたメッセージが障害を持っている"
"が、その親メッセージには障害はないとみなされることに注意してください。"

#: ../../library/email.errors.rst:70
msgid ""
"All defect classes are subclassed from :class:`email.errors.MessageDefect`, "
"but this class is *not* an exception!"
msgstr ""
"すべての障害クラスは :class:`email.errors.MessageDefect` のサブクラスですが、"
"これは例外とは *違います* ので注意してください！"

#: ../../library/email.errors.rst:73
msgid "All the defect classes were added."
msgstr "全ての障害クラスが追加されました。"

#: ../../library/email.errors.rst:76
msgid ""
":class:`NoBoundaryInMultipartDefect` -- A message claimed to be a multipart, "
"but had no :mimetype:`boundary` parameter."
msgstr ""
":class:`NoBoundaryInMultipartDefect` -- メッセージが multipart だと宣言されて"
"いるのに、 :mimetype:`boundary` パラメータがない。"

#: ../../library/email.errors.rst:79
msgid ""
":class:`StartBoundaryNotFoundDefect` -- The start boundary claimed in the :"
"mailheader:`Content-Type` header was never found."
msgstr ""
":class:`StartBoundaryNotFoundDefect` -- :mailheader:`Content-Type` ヘッダで宣"
"言された開始境界がない。"

#: ../../library/email.errors.rst:82
msgid ""
":class:`FirstHeaderLineIsContinuationDefect` -- The message had a "
"continuation line as its first header line."
msgstr ""
":class:`FirstHeaderLineIsContinuationDefect` -- メッセージの最初のヘッダが継"
"続行から始まっている。"

#: ../../library/email.errors.rst:85
msgid ""
":class:`MisplacedEnvelopeHeaderDefect` - A \"Unix From\" header was found in "
"the middle of a header block."
msgstr ""
":class:`MisplacedEnvelopeHeaderDefect` -- ヘッダブロックの途中に \"Unix "
"From\" ヘッダがある。"

#: ../../library/email.errors.rst:88
msgid ""
":class:`MalformedHeaderDefect` -- A header was found that was missing a "
"colon, or was otherwise malformed."
msgstr ""
":class:`MalformedHeaderDefect` -- コロンのないヘッダがある、あるいはそれ以外"
"の異常なヘッダである。"

#: ../../library/email.errors.rst:91
msgid ""
":class:`MultipartInvariantViolationDefect` -- A message claimed to be a :"
"mimetype:`multipart`, but no subparts were found.  Note that when a message "
"has this defect, its :meth:`~email.message.Message.is_multipart` method may "
"return false even though its content type claims to be :mimetype:`multipart`."
msgstr ""
":class:`MultipartInvariantViolationDefect` -- メッセージが :mimetype:"
"`multipart` だと宣言されているのに、サブパートが存在しない。注意: メッセージ"
"がこの障害を持っているとき、 :meth:`~email.message.Message.is_multipart` メ"
"ソッドはたとえその content-type が :mimetype:`multipart` であっても false を"
"返すことがあります。"
