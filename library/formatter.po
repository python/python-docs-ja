# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/formatter.rst:3
msgid ":mod:`formatter` --- Generic output formatting"
msgstr ":mod:`formatter` --- 汎用の出力書式化機構"

#: ../../library/formatter.rst:11
msgid ""
"This module supports two interface definitions, each with multiple "
"implementations.  The *formatter* interface is used by the :class:"
"`~HTMLParser.HTMLParser` class of the :mod:`htmllib` module, and the "
"*writer* interface is required by the formatter interface."
msgstr ""
"このモジュールでは、二つのインタフェース定義を提供しており、それらの各インタ"
"フェースについて複数の実装を提供しています。 *formatter* インタフェースは :"
"mod:`htmllib` モジュールの :class:`~HTMLParser.HTMLParser` クラスで使われてお"
"り、 *writer*  インタフェースは formatter インタフェースを使う上で必要です。"

#: ../../library/formatter.rst:16
msgid ""
"Formatter objects transform an abstract flow of formatting events into "
"specific output events on writer objects.  Formatters manage several stack "
"structures to allow various properties of a writer object to be changed and "
"restored; writers need not be able to handle relative changes nor any sort "
"of \"change back\" operation.  Specific writer properties which may be "
"controlled via formatter objects are horizontal alignment, font, and left "
"margin indentations.  A mechanism is provided which supports providing "
"arbitrary, non-exclusive style settings to a writer as well.  Additional "
"interfaces facilitate formatting events which are not reversible, such as "
"paragraph separation."
msgstr ""
"formatter オブジェクトはある抽象化された書式イベントの流れを writer オブジェ"
"クト上の特定の出力イベントに変換します。formatter はいくつかのスタック構造を"
"管理することで、writer  オブジェクトの様々な属性を変更したり復元したりできる"
"ようにしています; このため、writer は相対的な変更や \"元に戻す\" 操作を処理で"
"きなくてもかまいません。writer の特定のプロパティのうち、formatter オブジェク"
"トを介して制御できるのは、水平方向の字揃え、フォント、そして左マージンの字下"
"げです。任意の、非排他的なスタイル設定を writer に提供するためのメカニズムも"
"提供されています。さらに、段落分割のように、可逆でない書式化イベントの機能を"
"提供するインタフェースもあります。"

#: ../../library/formatter.rst:26
msgid ""
"Writer objects encapsulate device interfaces.  Abstract devices, such as "
"file formats, are supported as well as physical devices.  The provided "
"implementations all work with abstract devices.  The interface makes "
"available mechanisms for setting the properties which formatter objects "
"manage and inserting data into the output."
msgstr ""
"writer オブジェクトはデバイスインタフェースをカプセル化します。ファイル形式の"
"ような抽象デバイスも物理デバイス同様にサポートされています。ここで提供されて"
"いる実装内容はすべて抽象デバイス上で動作します。デバイスインタフェースは "
"formatter オブジェクトが管理しているプロパティを設定し、データを出力端に書き"
"込めるようにします。"

#: ../../library/formatter.rst:36
msgid "The Formatter Interface"
msgstr "formatter インタフェース"

#: ../../library/formatter.rst:38
msgid ""
"Interfaces to create formatters are dependent on the specific formatter "
"class being instantiated.  The interfaces described below are the required "
"interfaces which all formatters must support once initialized."
msgstr ""
"formatter を作成するためのインタフェースは、インスタンス化しようとする個々の "
"formatter クラスに依存します。以下で解説するのは、インスタンス化された全ての "
"formatter がサポートしなければならないインタフェースです。"

#: ../../library/formatter.rst:42
msgid "One data element is defined at the module level:"
msgstr "モジュールレベルではデータ要素を一つ定義しています:"

#: ../../library/formatter.rst:47
msgid ""
"Value which can be used in the font specification passed to the "
"``push_font()`` method described below, or as the new value to any other "
"``push_property()`` method.  Pushing the ``AS_IS`` value allows the "
"corresponding ``pop_property()`` method to be called without having to track "
"whether the property was changed."
msgstr ""
"後に述べる ``push_font()`` メソッドでフォント指定をする時に使える値です。ま"
"た、その他の ``push_property()`` メソッドの新しい値として使うことができます。"
"``AS_IS`` の値をスタックに置くと、どのプロパティが変更されたかの追跡を行わず"
"に、対応する ``pop_property()`` メソッドが呼び出されるようになります。"

#: ../../library/formatter.rst:52
msgid "The following attributes are defined for formatter instance objects:"
msgstr "formatter インスタンスオブジェクトには以下の属性が定義されています:"

#: ../../library/formatter.rst:57
msgid "The writer instance with which the formatter interacts."
msgstr "formatter とやり取りを行う writer インスタンスです。"

#: ../../library/formatter.rst:62
msgid ""
"Close any open paragraphs and insert at least *blanklines* before the next "
"paragraph."
msgstr ""
"開かれている段落があれば閉じ、次の段落との間に少なくとも *blanklines* が挿入"
"されるようにします。"

#: ../../library/formatter.rst:68
msgid ""
"Add a hard line break if one does not already exist.  This does not break "
"the logical paragraph."
msgstr ""
"強制改行挿入します。既に強制改行がある場合は挿入しません。論理的な段落は中断"
"しません。"

#: ../../library/formatter.rst:74
msgid ""
"Insert a horizontal rule in the output.  A hard break is inserted if there "
"is data in the current paragraph, but the logical paragraph is not broken.  "
"The arguments and keywords are passed on to the writer's :meth:"
"`send_line_break` method."
msgstr ""
"出力に水平罫線を挿入します。現在の段落に何らかのデータがある場合、強制改行が"
"挿入されますが、論理的な段落は中断しません。引数とキーワードは writer の :"
"meth:`send_line_break` メソッドに渡されます。"

#: ../../library/formatter.rst:82
msgid ""
"Provide data which should be formatted with collapsed whitespace. Whitespace "
"from preceding and successive calls to :meth:`add_flowing_data` is "
"considered as well when the whitespace collapse is performed.  The data "
"which is passed to this method is expected to be word-wrapped by the output "
"device.  Note that any word-wrapping still must be performed by the writer "
"object due to the need to rely on device and font information."
msgstr ""
"空白を折りたたんで書式化しなければならないデータを提供します。空白の折りたた"
"みでは、直前や直後の :meth:`add_flowing_data` 呼び出しに入っている空白も考慮"
"されます。このメソッドに渡されたデータは出力デバイスで行末の折り返し (word-"
"wrap) されるものと想定されています。出力デバイスでの要求やフォント情報に応じ"
"て、writer オブジェクトでも何らかの行末折り返しが行われなければならないので注"
"意してください。"

#: ../../library/formatter.rst:92
msgid ""
"Provide data which should be passed to the writer unchanged. Whitespace, "
"including newline and tab characters, are considered legal in the value of "
"*data*."
msgstr ""
"変更を加えずに writer に渡さなければならないデータを提供します。改行およびタ"
"ブを含む空白を *data* の値にしても問題ありません。"

#: ../../library/formatter.rst:99
msgid ""
"Insert a label which should be placed to the left of the current left "
"margin. This should be used for constructing bulleted or numbered lists.  If "
"the *format* value is a string, it is interpreted as a format specification "
"for *counter*, which should be an integer. The result of this formatting "
"becomes the value of the label; if *format* is not a string it is used as "
"the label value directly. The label value is passed as the only argument to "
"the writer's :meth:`send_label_data` method.  Interpretation of non-string "
"label values is dependent on the associated writer."
msgstr ""
"現在の左マージン位置の左側に配置されるラベルを挿入します。このラベルは箇条書"
"き、数字つき箇条書きの書式を構築する際に使われます。 *format* の値が文字列の"
"場合、整数の値 *counter* の書式指定として解釈されます。 *format* の値が文字列"
"の場合、整数の値をとる *counter* の書式化指定として解釈されます。書式化された"
"文字列はラベルの値になります; *format* が文字列でない場合、ラベルの値として直"
"接使われます。ラベルの値は writer の :meth:`send_label_data` メソッドの唯一の"
"引数として渡されます。非文字列のラベル値をどう解釈するかは関連付けられた "
"writer に依存します。"

#: ../../library/formatter.rst:108
msgid ""
"Format specifications are strings which, in combination with a counter "
"value, are used to compute label values.  Each character in the format "
"string is copied to the label value, with some characters recognized to "
"indicate a transform on the counter value.  Specifically, the character "
"``'1'`` represents the counter value formatter as an Arabic number, the "
"characters ``'A'`` and ``'a'`` represent alphabetic representations of the "
"counter value in upper and lower case, respectively, and ``'I'`` and ``'i'`` "
"represent the counter value in Roman numerals, in upper and lower case.  "
"Note that the alphabetic and roman transforms require that the counter value "
"be greater than zero."
msgstr ""
"書式化指定は文字列からなり、counter の値と合わせてラベルの値を算出するために"
"使われます。書式文字列の各文字はラベル値にコピーされます。このときいくつかの"
"文字は counter 値を変換を指すものとして認識されます。特に、文字 ``'1'`` はア"
"ラビア数字の counter 値を表し、``'A'`` と ``'a'`` はそれぞれ大文字および小文"
"字のアルファベットによる counter 値を表し、``'I'`` と ``'i'`` はそれぞれ大文"
"字および小文字のローマ数字による counter 値を表します。アルファベットおよび"
"ローマ字数字への変換の際には、counter の値はゼロ以上である必要があるので注意"
"してください。"

#: ../../library/formatter.rst:121
msgid ""
"Send any pending whitespace buffered from a previous call to :meth:"
"`add_flowing_data` to the associated writer object.  This should be called "
"before any direct manipulation of the writer object."
msgstr ""
"以前の :meth:`add_flowing_data` 呼び出しでバッファされている出力待ちの空白"
"を、関連付けられている writer オブジェクトに送信します。このメソッドは "
"writer オブジェクトに対するあらゆる直接操作の前に呼び出さなければなりません。"

#: ../../library/formatter.rst:128
msgid ""
"Push a new alignment setting onto the alignment stack.  This may be :const:"
"`AS_IS` if no change is desired.  If the alignment value is changed from the "
"previous setting, the writer's :meth:`new_alignment` method is called with "
"the *align* value."
msgstr ""
"新たな字揃え (alignment) 設定を字揃えスタックの上にプッシュします。変更を行い"
"たくない場合には :const:`AS_IS` にすることができます。字揃え設定値が以前の設"
"定から変更された場合、writer の  :meth:`new_alignment` メソッドが *align* の"
"値と共に呼び出されます。"

#: ../../library/formatter.rst:136
msgid "Restore the previous alignment."
msgstr "以前の字揃え設定を復元します。"

#: ../../library/formatter.rst:141
msgid ""
"Change some or all font properties of the writer object.  Properties which "
"are not set to :const:`AS_IS` are set to the values passed in while others "
"are maintained at their current settings.  The writer's :meth:`new_font` "
"method is called with the fully resolved font specification."
msgstr ""
"writer オブジェクトのフォントプロパティのうち、一部または全てを変更します。 :"
"const:`AS_IS` に設定されていないプロパティは引数で渡された値に設定され、その"
"他の値は現在の設定を維持します。writer の :meth:`new_font` メソッドは完全に設"
"定解決されたフォント指定で呼び出されます。"

#: ../../library/formatter.rst:149
msgid "Restore the previous font."
msgstr "以前のフォント設定を復元します。"

#: ../../library/formatter.rst:154
msgid ""
"Increase the number of left margin indentations by one, associating the "
"logical tag *margin* with the new indentation.  The initial margin level is "
"``0``. Changed values of the logical tag must be true values; false values "
"other than :const:`AS_IS` are not sufficient to change the margin."
msgstr ""
"左マージンのインデント数を一つ増やし、論理タグ *margin* を新たなインデントに"
"関連付けます。マージンレベルの初期値は ``0`` です。変更された論理タグの値は真"
"値とならなければなりません;  :const:`AS_IS` 以外の偽の値はマージンの変更とし"
"ては不適切です。"

#: ../../library/formatter.rst:162
msgid "Restore the previous margin."
msgstr "以前のマージン設定を復元します。"

#: ../../library/formatter.rst:167
msgid ""
"Push any number of arbitrary style specifications.  All styles are pushed "
"onto the styles stack in order.  A tuple representing the entire stack, "
"including :const:`AS_IS` values, is passed to the writer's :meth:"
"`new_styles` method."
msgstr ""
"任意のスタイル指定をスタックにプッシュします。全てのスタイルはスタイルスタッ"
"クに順番にプッシュされます。 :const:`AS_IS` 値を含み、スタック全体を表すタプ"
"ルは writer の :meth:`new_styles` メソッドに渡されます。"

#: ../../library/formatter.rst:174
msgid ""
"Pop the last *n* style specifications passed to :meth:`push_style`.  A tuple "
"representing the revised stack, including :const:`AS_IS` values, is passed "
"to the writer's :meth:`new_styles` method."
msgstr ""
":meth:`push_style` に渡された最新 *n* 個のスタイル指定をポップします。 :"
"const:`AS_IS` 値を含み、変更されたスタックを表すタプルは writer の :meth:"
"`new_styles` メソッドに渡されます。"

#: ../../library/formatter.rst:181
msgid "Set the spacing style for the writer."
msgstr "writer の割り付けスタイル (spacing style) を設定します。"

#: ../../library/formatter.rst:186
msgid ""
"Inform the formatter that data has been added to the current paragraph out-"
"of-band.  This should be used when the writer has been manipulated "
"directly.  The optional *flag* argument can be set to false if the writer "
"manipulations produced a hard line break at the end of the output."
msgstr ""
"現在の段落にデータが予期せず追加されたことを formatter に知らせます。このメ"
"ソッドは writer を直接操作した際に使わなければなりません。writer 操作の結果、"
"出力の末尾が強制改行となった場合、オプションの *flag* 引数を偽に設定すること"
"ができます。"

#: ../../library/formatter.rst:195
msgid "Formatter Implementations"
msgstr "formatter 実装"

#: ../../library/formatter.rst:197
msgid ""
"Two implementations of formatter objects are provided by this module. Most "
"applications may use one of these classes without modification or "
"subclassing."
msgstr ""
"このモジュールでは、formatter オブジェクトに関して二つの実装を提供していま"
"す。ほとんどのアプリケーションではこれらのクラスを変更したりサブクラス化する"
"ことなく使うことができます。"

#: ../../library/formatter.rst:203
msgid ""
"A formatter which does nothing.  If *writer* is omitted, a :class:"
"`NullWriter` instance is created.  No methods of the writer are called by :"
"class:`NullFormatter` instances.  Implementations should inherit from this "
"class if implementing a writer interface but don't need to inherit any "
"implementation."
msgstr ""
"何も行わない formatter です。 *writer* を省略すると、 :class:`NullWriter` イ"
"ンスタンスが生成されます。 :class:`NullFormatter` インスタンスは、writer のメ"
"ソッドを全く呼び出しません。writer へのインタフェースを実装する場合にはこのク"
"ラスのインタフェースを継承する必要がありますが、実装を継承する必要は全くあり"
"ません。"

#: ../../library/formatter.rst:212
msgid ""
"The standard formatter.  This implementation has demonstrated wide "
"applicability to many writers, and may be used directly in most "
"circumstances.  It has been used to implement a full-featured World Wide Web "
"browser."
msgstr ""
"標準の formatter です。この formatter 実装は広範な writer で適用できることが"
"実証されており、ほとんどの状況で直接使うことができます。高機能の WWW ブラウザ"
"を実装するために使われたこともあります。"

#: ../../library/formatter.rst:220
msgid "The Writer Interface"
msgstr "writer インタフェース"

#: ../../library/formatter.rst:222
msgid ""
"Interfaces to create writers are dependent on the specific writer class "
"being instantiated.  The interfaces described below are the required "
"interfaces which all writers must support once initialized. Note that while "
"most applications can use the :class:`AbstractFormatter` class as a "
"formatter, the writer must typically be provided by the application."
msgstr ""
"writer を作成するためのインタフェースは、インスタンス化しようとする個々の "
"writer クラスに依存します。以下で解説するのは、インスタンス化された全ての "
"writer がサポートしなければならないインタフェースです。ほとんどのアプリケー"
"ションでは :class:`AbstractFormatter` クラスを formatter として使うことができ"
"ますが、通常 writer はアプリケーション側で与えなければならないので注意してく"
"ださい。"

#: ../../library/formatter.rst:231
msgid "Flush any buffered output or device control events."
msgstr ""
"バッファに蓄積されている出力データやデバイス制御イベントをフラッシュします。"

#: ../../library/formatter.rst:236
msgid ""
"Set the alignment style.  The *align* value can be any object, but by "
"convention is a string or ``None``, where ``None`` indicates that the "
"writer's \"preferred\" alignment should be used. Conventional *align* values "
"are ``'left'``, ``'center'``, ``'right'``, and ``'justify'``."
msgstr ""
"字揃えのスタイルを設定します。*align* の値は任意のオブジェクトを取りえます"
"が、慣習的な値は文字列または ``None`` で、``None`` は writer の \"好む\" 字揃"
"えを使うことを表します。慣習的な *align* の値は ``'left'``、``'center'``、"
"``'right'``、および ``'justify'`` です。"

#: ../../library/formatter.rst:244
msgid ""
"Set the font style.  The value of *font* will be ``None``, indicating that "
"the device's default font should be used, or a tuple of the form ``(size, "
"italic, bold, teletype)``.  Size will be a string indicating the size of "
"font that should be used; specific strings and their interpretation must be "
"defined by the application.  The *italic*, *bold*, and *teletype* values are "
"Boolean values specifying which of those font attributes should be used."
msgstr ""
"フォントスタイルを設定します。*font* は、デバイスの標準のフォントが使われるこ"
"とを示す ``None`` か、``(size, italic, bold, teletype)`` の形式をとるタプルに"
"なります。size はフォントサイズを示す文字列になります; 特定の文字列やその解釈"
"はアプリケーション側で定義します。*italic*、*bold*、および *teletype* といっ"
"た値はブール値で、それらの属性を使うかどうかを指定します。"

#: ../../library/formatter.rst:254
msgid ""
"Set the margin level to the integer *level* and the logical tag to *margin*. "
"Interpretation of the logical tag is at the writer's discretion; the only "
"restriction on the value of the logical tag is that it not be a false value "
"for non-zero values of *level*."
msgstr ""
"マージンレベルを整数値 *level* に設定し、論理タグ (logical tag) を *margin* "
"に設定します。論理タグの解釈は writer の判断に任されます; 論理タグの値に対す"
"る唯一の制限は *level* が非ゼロの値の際に偽であってはならないということです。"

#: ../../library/formatter.rst:262
msgid "Set the spacing style to *spacing*."
msgstr "割り付けスタイル (spacing style) を *spacing* に設定します。"

#: ../../library/formatter.rst:267
msgid ""
"Set additional styles.  The *styles* value is a tuple of arbitrary values; "
"the value :const:`AS_IS` should be ignored.  The *styles* tuple may be "
"interpreted either as a set or as a stack depending on the requirements of "
"the application and writer implementation."
msgstr ""
"追加のスタイルを設定します。 *styles* の値は任意の値からなるタプルです; :"
"const:`AS_IS` 値は無視されます。 *styles* タプルはアプリケーションや writer "
"の実装上の都合により、集合としても、スタックとしても解釈され得ます。"

#: ../../library/formatter.rst:275
msgid "Break the current line."
msgstr "現在の行を改行します。"

#: ../../library/formatter.rst:280
msgid ""
"Produce a paragraph separation of at least *blankline* blank lines, or the "
"equivalent.  The *blankline* value will be an integer.  Note that the "
"implementation will receive a call to :meth:`send_line_break` before this "
"call if a line break is needed;  this method should not include ending the "
"last line of the paragraph. It is only responsible for vertical spacing "
"between paragraphs."
msgstr ""
"少なくとも *blankline* 空行分の間隔か、空行そのもので段落を分割します。 "
"*blankline* の値は整数になります。 writer の実装では、改行を行う必要がある場"
"合、このメソッドの呼び出しに先立って :meth:`send_line_break` の呼び出しを受け"
"る必要あります; このメソッドには段落の最後の行を閉じる機能は含まれておらず、"
"段落間に垂直スペースを空ける役割しかありません。"

#: ../../library/formatter.rst:290
msgid ""
"Display a horizontal rule on the output device.  The arguments to this "
"method are entirely application- and writer-specific, and should be "
"interpreted with care.  The method implementation may assume that a line "
"break has already been issued via :meth:`send_line_break`."
msgstr ""
"水平罫線を出力デバイスに表示します。このメソッドへの引数は全てアプリケーショ"
"ンおよび writer 特有のものなので、注意して解釈する必要があります。このメソッ"
"ドの実装では、すでに改行が :meth:`send_line_break` によってなされているものと"
"仮定しています。"

#: ../../library/formatter.rst:298
msgid ""
"Output character data which may be word-wrapped and re-flowed as needed.  "
"Within any sequence of calls to this method, the writer may assume that "
"spans of multiple whitespace characters have been collapsed to single space "
"characters."
msgstr ""
"行端が折り返され、必要に応じて再割り付け解析を行った (re-flowed)  文字データ"
"を出力します。このメソッドを連続して呼び出す上では、writer は複数の空白文字は"
"単一のスペース文字に縮約されていると仮定することがあります。"

#: ../../library/formatter.rst:305
msgid ""
"Output character data which has already been formatted for display.  "
"Generally, this should be interpreted to mean that line breaks indicated by "
"newline characters should be preserved and no new line breaks should be "
"introduced.  The data may contain embedded newline and tab characters, "
"unlike data provided to the :meth:`send_formatted_data` interface."
msgstr ""
"すでに表示用に書式化された文字データを出力します。これは通常、改行文字で表さ"
"れた改行を保存し、新たに改行を持ち込まないことを意味します。 :meth:"
"`send_formatted_data` インタフェースと違って、データには改行やタブ文字が埋め"
"込まれていてもかまいません。"

#: ../../library/formatter.rst:314
msgid ""
"Set *data* to the left of the current left margin, if possible. The value of "
"*data* is not restricted; treatment of non-string values is entirely "
"application- and writer-dependent.  This method will only be called at the "
"beginning of a line."
msgstr ""
"可能ならば、*data* を現在の左マージンの左側に設定します。*data* の値には制限"
"がありません; 文字列でない値の扱い方はアプリケーションや writer に完全に依存"
"します。このメソッドは行の先頭でのみ呼び出されます。"

#: ../../library/formatter.rst:323
msgid "Writer Implementations"
msgstr "writer 実装"

#: ../../library/formatter.rst:325
msgid ""
"Three implementations of the writer object interface are provided as "
"examples by this module.  Most applications will need to derive new writer "
"classes from the :class:`NullWriter` class."
msgstr ""
"このモジュールでは、3 種類の writer オブジェクトインタフェース実装を提供して"
"います。ほとんどのアプリケーションでは、 :class:`NullWriter` から新しい "
"writer クラスを派生する必要があるでしょう。"

#: ../../library/formatter.rst:332
msgid ""
"A writer which only provides the interface definition; no actions are taken "
"on any methods.  This should be the base class for all writers which do not "
"need to inherit any implementation methods."
msgstr ""
"インタフェース定義だけを提供する writer クラスです; どのメソッドも何ら処理を"
"行いません。このクラスは、メソッド実装をまったく継承する必要のない writer 全"
"ての基底クラスになります。"

#: ../../library/formatter.rst:339
msgid ""
"A writer which can be used in debugging formatters, but not much else.  Each "
"method simply announces itself by printing its name and arguments on "
"standard output."
msgstr ""
"この writer は formatter をデバッグするのに利用できますが、それ以外に利用でき"
"るほどのものではありません。各メソッドを呼び出すと、メソッド名と引数を標準出"
"力に印字して呼び出されたことを示します。"

#: ../../library/formatter.rst:346
msgid ""
"Simple writer class which writes output on the file object passed in as "
"*file* or, if *file* is ``None``, on standard output.  The output is simply "
"word-wrapped to the number of columns specified by *maxcol*.  This class is "
"suitable for reflowing a sequence of paragraphs."
msgstr ""
"単純な writer クラスで *file* に渡されたファイルオブジェクトか *file* が "
"``None`` の場合には標準出力に出力を書き込みます。出力は *maxcol* で指定された"
"カラム数で単純な行端折り返しが行われます。このクラスは連続した段落を再割り付"
"けするのに適しています。"
