# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Takanori Suzuki <takanori@takanory.net>, 2021
# tomo, 2021
# Nozomu Kaneko <nozom.kaneko@gmail.com>, 2023
# Masato HASHIMOTO <cabezon.hashimoto@gmail.com>, 2023
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/mimetypes.rst:2
msgid ":mod:`!mimetypes` --- Map filenames to MIME types"
msgstr ":mod:`!mimetypes` --- ファイル名を MIME タイプへマップする"

#: ../../library/mimetypes.rst:9
msgid "**Source code:** :source:`Lib/mimetypes.py`"
msgstr "**ソースコード:** :source:`Lib/mimetypes.py`"

#: ../../library/mimetypes.rst:15
msgid ""
"The :mod:`mimetypes` module converts between a filename or URL and the MIME "
"type associated with the filename extension.  Conversions are provided from "
"filename to MIME type and from MIME type to filename extension; encodings "
"are not supported for the latter conversion."
msgstr ""
":mod:`mimetypes` モジュールは、ファイル名あるいは URL と、ファイル名拡張子に"
"関連付けられた MIME 型とを変換します。ファイル名から MIME 型へと、 MIME 型か"
"らファイル名拡張子への変換が提供されます; 後者の変換では符号化方式はサポート"
"されていません。"

#: ../../library/mimetypes.rst:20
msgid ""
"The module provides one class and a number of convenience functions. The "
"functions are the normal interface to this module, but some applications may "
"be interested in the class as well."
msgstr ""
"このモジュールは、一つのクラスと多くの便利な関数を提供します。これらの関数が"
"このモジュールへの標準のインターフェースですが、アプリケーションによっては、"
"そのクラスにも関係するかもしれません。"

#: ../../library/mimetypes.rst:24
msgid ""
"The functions described below provide the primary interface for this "
"module.  If the module has not been initialized, they will call :func:`init` "
"if they rely on the information :func:`init` sets up."
msgstr ""
"以下で説明されている関数は、このモジュールへの主要なインターフェースを提供し"
"ます。たとえモジュールが初期化されていなくても、もしこれらの関数が、 :func:"
"`init` がセットアップする情報に依存していれば、これらの関数は、 :func:`init` "
"を呼びます。"

#: ../../library/mimetypes.rst:33
msgid ""
"Guess the type of a file based on its filename, path or URL, given by *url*. "
"URL can be a string or a :term:`path-like object`."
msgstr ""
"*url* で与えられるファイル名あるいは URL に基づいて、ファイルの型を推定しま"
"す。URL は文字列または :term:`path-like object` です。"

#: ../../library/mimetypes.rst:36
msgid ""
"The return value is a tuple ``(type, encoding)`` where *type* is ``None`` if "
"the type can't be guessed (missing or unknown suffix) or a string of the "
"form ``'type/subtype'``, usable for a MIME :mailheader:`content-type` header."
msgstr ""
"戻り値は、タプル ``(type, encoding)`` です、ここで  *type* は、もし型が(拡張"
"子がないあるいは未定義のため)推定できない場合は、 ``None`` を、あるいは、 "
"MIME :mailheader:`content-type` ヘッダ  に利用できる、 ``'type/subtype'`` の"
"形の文字列です。"

#: ../../library/mimetypes.rst:40
msgid ""
"*encoding* is ``None`` for no encoding or the name of the program used to "
"encode (e.g. :program:`compress` or :program:`gzip`). The encoding is "
"suitable for use as a :mailheader:`Content-Encoding` header, **not** as a :"
"mailheader:`Content-Transfer-Encoding` header. The mappings are table "
"driven. Encoding suffixes are case sensitive; type suffixes are first tried "
"case sensitively, then case insensitively."
msgstr ""
"*encoding* は、符合化方式がない場合は ``None`` を、あるいは、符号化に使われる"
"プログラムの名前 (たとえば、 :program:`compress` あるいは :program:`gzip`)で"
"す。符号化方式は :mailheader:`Content-Encoding` ヘッダとして使うのに適してお"
"り、 :mailheader:`Content-Transfer-Encoding` ヘッダには適して **いません** 。"
"マッピングはテーブル駆動です。符号化方式のサフィックスは大/小文字を区別しま"
"す; データ型サフィックスは、最初大/小文字を区別して試し、それから大/小文字を"
"区別せずに試します。"

#: ../../library/mimetypes.rst:47
msgid ""
"The optional *strict* argument is a flag specifying whether the list of "
"known MIME types is limited to only the official types `registered with IANA "
"<https://www.iana.org/assignments/media-types/media-types.xhtml>`_. When "
"*strict* is ``True`` (the default), only the IANA types are supported; when "
"*strict* is ``False``, some additional non-standard but commonly used MIME "
"types are also recognized."
msgstr ""
"省略可能な *strict* 引数は、既知の MIME 型のリストとして認識されるものが、"
"`IANAに登録された <https://www.iana.org/assignments/media-types/media-types."
"xhtml>`_ 正式な型のみに限定されるかどうかを指定するフラグです。*strict* が "
"``True`` (デフォルト)の時は、IANA 型のみがサポートされます; *strict* が "
"``False`` のときは、いくつかの追加の、非標準ではあるが、一般的に使用される "
"MIME 型も認識されます。"

#: ../../library/mimetypes.rst:54
msgid "Added support for *url* being a :term:`path-like object`."
msgstr ""

#: ../../library/mimetypes.rst:57
msgid ""
"Passing a file path instead of URL is :term:`soft deprecated`. Use :func:"
"`guess_file_type` for this."
msgstr ""

#: ../../library/mimetypes.rst:66
msgid ""
"Guess the type of a file based on its path, given by *path*. Similar to the :"
"func:`guess_type` function, but accepts a path instead of URL. Path can be a "
"string, a bytes object or a :term:`path-like object`."
msgstr ""

#: ../../library/mimetypes.rst:75
msgid ""
"Guess the extensions for a file based on its MIME type, given by *type*. The "
"return value is a list of strings giving all possible filename extensions, "
"including the leading dot (``'.'``).  The extensions are not guaranteed to "
"have been associated with any particular data stream, but would be mapped to "
"the MIME type *type* by :func:`guess_type` and :func:`guess_file_type`."
msgstr ""

#: ../../library/mimetypes.rst:81 ../../library/mimetypes.rst:93
msgid ""
"The optional *strict* argument has the same meaning as with the :func:"
"`guess_type` function."
msgstr ""
"省略可能な *strict* 引数は :func:`guess_type` 関数のものと同じ意味を持ちま"
"す。"

#: ../../library/mimetypes.rst:86
msgid ""
"Guess the extension for a file based on its MIME type, given by *type*. The "
"return value is a string giving a filename extension, including the leading "
"dot (``'.'``).  The extension is not guaranteed to have been associated with "
"any particular data stream, but would be mapped to the MIME type *type* by :"
"func:`guess_type` and :func:`guess_file_type`. If no extension can be "
"guessed for *type*, ``None`` is returned."
msgstr ""

#: ../../library/mimetypes.rst:95
msgid ""
"Some additional functions and data items are available for controlling the "
"behavior of the module."
msgstr ""
"モジュールの動作を制御するために、いくつかの追加の関数とデータ項目が利用でき"
"ます。"

#: ../../library/mimetypes.rst:101
msgid ""
"Initialize the internal data structures.  If given, *files* must be a "
"sequence of file names which should be used to augment the default type "
"map.  If omitted, the file names to use are taken from :const:`knownfiles`; "
"on Windows, the current registry settings are loaded.  Each file named in "
"*files* or :const:`knownfiles` takes precedence over those named before it.  "
"Calling :func:`init` repeatedly is allowed."
msgstr ""
"内部のデータ構造を初期化します。もし  *files* が与えられていれば、これはデ"
"フォルトの type map を増やすために使われる、一連のファイル名でなければなりま"
"せん。もし省略されていれば、使われるファイル名は :const:`knownfiles` から取ら"
"れます。 Windows であれば、現在のレジストリの設定が読み込まれます。 *files* "
"あるいは :const:`knownfiles` 内の各ファイル名は、それ以前に現れる名前より優先"
"されます。繰り返し :func:`init` を呼び出すことは許されています。"

#: ../../library/mimetypes.rst:108
msgid ""
"Specifying an empty list for *files* will prevent the system defaults from "
"being applied: only the well-known values will be present from a built-in "
"list."
msgstr ""
"*files* に空リストを与えることで、システムのデフォルトが適用されるのを避ける"
"ことが出来ます; 組み込みのリストから well-known な値だけが取り込まれます。"

#: ../../library/mimetypes.rst:111
msgid ""
"If *files* is ``None`` the internal data structure is completely rebuilt to "
"its initial default value. This is a stable operation and will produce the "
"same results when called multiple times."
msgstr ""
"*files* が ``None`` の場合、内部のデータ構造は初期のデフォルト値に完全に再構"
"築されます。\n"
"これは安定な操作であり、複数回呼び出されたときは同じ結果になります。"

#: ../../library/mimetypes.rst:115
msgid "Previously, Windows registry settings were ignored."
msgstr "前のバージョンでは、 Windows のレジストリの設定は無視されていました。"

#: ../../library/mimetypes.rst:121
msgid ""
"Load the type map given in the file *filename*, if it exists.  The type map "
"is returned as a dictionary mapping filename extensions, including the "
"leading dot (``'.'``), to strings of the form ``'type/subtype'``.  If the "
"file *filename* does not exist or cannot be read, ``None`` is returned."
msgstr ""
"ファイル *filename* で与えられた型のマップが、もしあればロードします。型の"
"マップは、先頭の dot (``'.'``) を含むファイル名拡張子を、``'type/subtype'`` "
"の形の文字列にマッピングする辞書として返されます。もしファイル *filename* が"
"存在しないか、読み込めなければ、``None`` が返されます。"

#: ../../library/mimetypes.rst:129 ../../library/mimetypes.rst:302
msgid ""
"Add a mapping from the MIME type *type* to the extension *ext*. When the "
"extension is already known, the new type will replace the old one. When the "
"type is already known the extension will be added to the list of known "
"extensions."
msgstr ""
"MIME 型 *type* からのマッピングを拡張子 *ext* に追加します。拡張子がすでに既"
"知であれば、新しい型が古いものに置き替わります。その型がすでに既知であれば、"
"その拡張子が、既知の拡張子のリストに追加されます。"

#: ../../library/mimetypes.rst:133 ../../library/mimetypes.rst:306
msgid ""
"When *strict* is ``True`` (the default), the mapping will be added to the "
"official MIME types, otherwise to the non-standard ones."
msgstr ""
"*strict* が ``True`` の時(デフォルト)は、そのマッピングは正式な MIME 型に、そ"
"うでなければ、非標準の MIME 型に追加されます。"

#: ../../library/mimetypes.rst:139
msgid ""
"Flag indicating whether or not the global data structures have been "
"initialized. This is set to ``True`` by :func:`init`."
msgstr ""
"グローバルなデータ構造が初期化されているかどうかを示すフラグ。これは :func:"
"`init` により ``True`` に設定されます。"

#: ../../library/mimetypes.rst:147
msgid ""
"List of type map file names commonly installed.  These files are typically "
"named :file:`mime.types` and are installed in different locations by "
"different packages."
msgstr ""
"共通にインストールされた型マップファイル名のリスト。これらのファイルは、普"
"通 :file:`mime.types` という名前であり、パッケージごとに異なる場所にインス"
"トールされます。"

#: ../../library/mimetypes.rst:154
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately."
msgstr ""
"サフィックスをサフィックスにマップする辞書。これは、符号化方式と型が同一拡張"
"子で示される符号化ファイルが認識できるように使用されます。例えば、 :file:`."
"tgz` 拡張子は、符号化と型が別個に認識できるように :file:`.tar.gz` にマップさ"
"れます。"

#: ../../library/mimetypes.rst:162
msgid "Dictionary mapping filename extensions to encoding types."
msgstr "ファイル名拡張子を符号化方式型にマッピングする辞書。"

#: ../../library/mimetypes.rst:167
msgid "Dictionary mapping filename extensions to MIME types."
msgstr "ファイル名拡張子を MIME 型にマップする辞書。"

#: ../../library/mimetypes.rst:172
msgid ""
"Dictionary mapping filename extensions to non-standard, but commonly found "
"MIME types."
msgstr ""
"ファイル名拡張子を非標準ではあるが、一般に使われている MIME 型にマップする辞"
"書。"

#: ../../library/mimetypes.rst:176
msgid "An example usage of the module::"
msgstr "モジュールの使用例::"

#: ../../library/mimetypes.rst:178
msgid ""
">>> import mimetypes\n"
">>> mimetypes.init()\n"
">>> mimetypes.knownfiles\n"
"['/etc/mime.types', '/etc/httpd/mime.types', ... ]\n"
">>> mimetypes.suffix_map['.tgz']\n"
"'.tar.gz'\n"
">>> mimetypes.encodings_map['.gz']\n"
"'gzip'\n"
">>> mimetypes.types_map['.tgz']\n"
"'application/x-tar-gz'"
msgstr ""

#: ../../library/mimetypes.rst:193
msgid "MimeTypes Objects"
msgstr "Mime 型オブジェクト"

#: ../../library/mimetypes.rst:195
msgid ""
"The :class:`MimeTypes` class may be useful for applications which may want "
"more than one MIME-type database; it provides an interface similar to the "
"one of the :mod:`mimetypes` module."
msgstr ""
":class:`MimeTypes` クラスは一つ以上の MIME 型データベースが欲しいアプリケー"
"ションにとって有用でしょう。これは :mod:`mimetypes` モジュールのそれと似たイ"
"ンターフェースを提供します。"

#: ../../library/mimetypes.rst:202
msgid ""
"This class represents a MIME-types database.  By default, it provides access "
"to the same database as the rest of this module. The initial database is a "
"copy of that provided by the module, and may be extended by loading "
"additional :file:`mime.types`\\ -style files into the database using the :"
"meth:`read` or :meth:`readfp` methods.  The mapping dictionaries may also be "
"cleared before loading additional data if the default data is not desired."
msgstr ""
"このクラスは、MIME 型データベースを表現します。デフォルトでは、このモジュール"
"の他のものと同じデータベースへのアクセスを提供します。初期データベースは、こ"
"のモジュールによって提供されるもののコピーで、追加の :file:`mime.types` \\ 形"
"式のファイルを、 :meth:`read` あるいは :meth:`readfp` メソッドを使って、デー"
"タベースにロードすることで拡張されます。マッピング辞書も、もしデフォルトの"
"データが望むものでなければ、追加のデータをロードする前にクリアされます。"

#: ../../library/mimetypes.rst:209
msgid ""
"The optional *filenames* parameter can be used to cause additional files to "
"be loaded \"on top\" of the default database."
msgstr ""
"省略可能な *filenames* パラメータは、追加のファイルを、デフォルトデータベース"
"の\"トップに\"ロードさせるのに使うことができます。"

#: ../../library/mimetypes.rst:215
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately.  This "
"is initially a copy of the global :data:`suffix_map` defined in the module."
msgstr ""
"サフィックスをサフィックスにマップする辞書。これは、符号化方式と型が同一拡張"
"子で示されるような符号化ファイルが認識できるように使用されます。例えば、 :"
"file:`.tgz` 拡張子は、符号化方式と型が別個に認識できるように :file:`.tar.gz` "
"に対応づけられます。これは、最初はモジュールで定義されたグローバルな :data:"
"`suffix_map` のコピーです。"

#: ../../library/mimetypes.rst:224
msgid ""
"Dictionary mapping filename extensions to encoding types.  This is initially "
"a copy of the global :data:`encodings_map` defined in the module."
msgstr ""
"ファイル名拡張子を符号化型にマッピングする辞書。これは、最初はモジュールで定"
"義されたグローバルな :data:`encodings_map` のコピーです。"

#: ../../library/mimetypes.rst:230
msgid ""
"Tuple containing two dictionaries, mapping filename extensions to MIME "
"types: the first dictionary is for the non-standards types and the second "
"one is for the standard types. They are initialized by :data:`common_types` "
"and :data:`types_map`."
msgstr ""
"ファイル名拡張子を MIME 型にマッピングする 2 種類の辞書のタプル; 最初の辞書は"
"非標準型、二つ目は標準型の辞書です。初期状態ではそれぞれ :data:"
"`common_types` と :data:`types_map` です。"

#: ../../library/mimetypes.rst:238
msgid ""
"Tuple containing two dictionaries, mapping MIME types to a list of filename "
"extensions: the first dictionary is for the non-standards types and the "
"second one is for the standard types. They are initialized by :data:"
"`common_types` and :data:`types_map`."
msgstr ""
"MIME 型をファイル名拡張子のリストにマッピングする 2 種類の辞書のタプル; 最初"
"の辞書は非標準型、二つ目は標準型の辞書です。初期状態ではそれぞれ :data:"
"`common_types` と :data:`types_map` です。"

#: ../../library/mimetypes.rst:246
msgid ""
"Similar to the :func:`guess_extension` function, using the tables stored as "
"part of the object."
msgstr ""
":func:`guess_extension` 関数と同様ですが、オブジェクトに保存されたテーブルを"
"使用します。"

#: ../../library/mimetypes.rst:252
msgid ""
"Similar to the :func:`guess_type` function, using the tables stored as part "
"of the object."
msgstr ""
":func:`guess_type` 関数と同様ですが、オブジェクトに保存されたテーブルを使用し"
"ます。"

#: ../../library/mimetypes.rst:258
msgid ""
"Similar to the :func:`guess_file_type` function, using the tables stored as "
"part of the object."
msgstr ""

#: ../../library/mimetypes.rst:266
msgid ""
"Similar to the :func:`guess_all_extensions` function, using the tables "
"stored as part of the object."
msgstr ""
":func:`guess_all_extensions` と同様ですが、オブジェクトに保存されたテーブルを"
"参照します。"

#: ../../library/mimetypes.rst:272
msgid ""
"Load MIME information from a file named *filename*.  This uses :meth:"
"`readfp` to parse the file."
msgstr ""
"MIME 情報を、 *filename* という名のファイルからロードします。これはファイルを"
"解析するのに :meth:`readfp` を使用します。"

#: ../../library/mimetypes.rst:275
msgid ""
"If *strict* is ``True``, information will be added to list of standard "
"types, else to the list of non-standard types."
msgstr ""
"*strict* が ``True`` の時 (デフォルト) は、そのマッピングは標準 MIME 型のリス"
"トに、そうでなければ、非標準 MIME 型のリストに追加されます。"

#: ../../library/mimetypes.rst:281
msgid ""
"Load MIME type information from an open file *fp*.  The file must have the "
"format of the standard :file:`mime.types` files."
msgstr ""
"MIME 型情報を、オープンしたファイル *fp* からロードします。ファイルは、標準"
"の :file:`mime.types` ファイルの形式でなければなりません。"

#: ../../library/mimetypes.rst:284 ../../library/mimetypes.rst:294
msgid ""
"If *strict* is ``True``, information will be added to the list of standard "
"types, else to the list of non-standard types."
msgstr ""
"*strict* が ``True`` の時 (デフォルト) は、そのマッピングは標準 MIME 型のリス"
"トに、そうでなければ、非標準 MIME 型のリストに追加されます。"

#: ../../library/mimetypes.rst:290
msgid "Load MIME type information from the Windows registry."
msgstr "MIME type 情報を Windows のレジストリから読み込みます。"

#: ../../library/mimetypes.rst:292
msgid ":ref:`Availability <availability>`: Windows."
msgstr ":ref:`利用可能な環境 <availability>`: Windows 。"

#: ../../library/mimetypes.rst:11 ../../library/mimetypes.rst:31
#: ../../library/mimetypes.rst:64
msgid "MIME"
msgstr "MIME"

#: ../../library/mimetypes.rst:11
msgid "content type"
msgstr ""

#: ../../library/mimetypes.rst:31 ../../library/mimetypes.rst:64
msgid "headers"
msgstr "ヘッダー"

#: ../../library/mimetypes.rst:145
msgid "file"
msgstr "ファイル"

#: ../../library/mimetypes.rst:145
msgid "mime.types"
msgstr ""
