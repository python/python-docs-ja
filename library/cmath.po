# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:48+0900\n"
"PO-Revision-Date: 2018-06-29 17:42+0000\n"
"Last-Translator: tomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`cmath` --- 複素数のための数学関数"

#: ../../library/cmath.rst:9
msgid ""
"This module is always available.  It provides access to mathematical "
"functions for complex numbers.  The functions in this module accept "
"integers, floating-point numbers or complex numbers as arguments. They will "
"also accept any Python object that has either a :meth:`__complex__` or a :"
"meth:`__float__` method: these methods are used to convert the object to a "
"complex or floating-point number, respectively, and the function is then "
"applied to the result of the conversion."
msgstr ""
"このモジュールは常に利用可能です。提供しているのは複素数を扱う数学関数へのア"
"クセスです。このモジュール中の関数は整数、浮動小数点数または複素数を引数にと"
"ります。また、 :meth:`__complex__` または :meth:`__float__` どちらかのメソッ"
"ドを提供している Python オブジェクトも受け付けます。これらのメソッドはそのオ"
"ブジェクトを複素数または浮動小数点数に変換するのにそれぞれ使われ、呼び出され"
"た関数はそうして変換された結果を利用します。"

#: ../../library/cmath.rst:19
msgid ""
"On platforms with hardware and system-level support for signed zeros, "
"functions involving branch cuts are continuous on *both* sides of the branch "
"cut: the sign of the zero distinguishes one side of the branch cut from the "
"other.  On platforms that do not support signed zeros the continuity is as "
"specified below."
msgstr ""
"ハードウェア及びシステムレベルでの符号付きゼロのサポートがあるプラットフォー"
"ムでは、分枝切断 (branch cut) の関わる関数において切断された *両側* の分枝で"
"連続になります。ゼロの符号でどちらの分枝であるかを区別するのです。符号付きゼ"
"ロがサポートされないプラットフォームでは連続性は以下の仕様で述べるようになり"
"ます。"

#: ../../library/cmath.rst:27
msgid "Conversions to and from polar coordinates"
msgstr "極座標変換"

#: ../../library/cmath.rst:29
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""
"Python の複素数 ``z`` は内部的には *直交座標* もしくは *デカルト座標* と呼ば"
"れる座標を使って格納されています。この座標はその複素数の *実部* ``z.real`` "
"と *虚部* ``z.imag`` で決まります。言い換えると::"

#: ../../library/cmath.rst:36
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*極座標* は複素数を表現する別の方法です。極座標では、複素数 *z* は半径 *r* と"
"位相角 *phi* で定義されます。半径 *r* は *z* から原点までの距離です。位相 "
"*phi* は x 軸の正の部分から原点と *z* を結んだ線分までの角度を反時計回りにラ"
"ジアンで測った値です。"

#: ../../library/cmath.rst:43
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"次の関数はネイティブの直交座標を極座標に変換したりその逆を行うのに使えます。"

#: ../../library/cmath.rst:48
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float.  "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-π, π], and the branch cut for this operation lies along "
"the negative real axis, continuous from above.  On systems with support for "
"signed zeros (which includes most systems in current use), this means that "
"the sign of the result is the same as the sign of ``x.imag``, even when ``x."
"imag`` is zero::"
msgstr ""
"*x* の位相 (*x* の *偏角* とも呼びます) を浮動小数点数で返します。"
"``phase(x)`` は ``math.atan2(x.imag, x.real)`` と同等です。返り値は [-π, π] "
"の範囲にあり、この演算の分枝切断は負の実軸に沿って延びていて、上から連続で"
"す。(現在のほとんどのシステムはそうですが) 符号付きゼロをサポートしているシス"
"テムでは、結果の符号は ``x.imag`` がゼロであってさえ ``x.imag`` の符号と等し"
"くなります::"

#: ../../library/cmath.rst:65
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"複素数 *x* のモジュラス (絶対値) は組み込みの :func:`abs` 関数で計算できま"
"す。この演算を行う :mod:`cmath` モジュールの関数はありません。"

#: ../../library/cmath.rst:72
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"*x* の極座標表現を返します。*x* の半径 *r* と *x* の位相 *phi* の組 ``(r, "
"phi)`` を返します。``polar(x)`` は ``(abs(x), phase(x))`` に等しいです。"

#: ../../library/cmath.rst:80
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""
"極座標 *r*, *phi* を持つ複素数 *x* を返します。値は ``r * (math.cos(phi) + "
"math.sin(phi)*1j)`` に等しいです。"

#: ../../library/cmath.rst:85
msgid "Power and logarithmic functions"
msgstr "指数関数と対数関数"

#: ../../library/cmath.rst:89
msgid "Return the exponential value ``e**x``."
msgstr "指数 ``e**x`` を返します。"

#: ../../library/cmath.rst:94
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞, continuous from above."
msgstr ""
"*base* を底とする *x* の対数を返します。もし *base* が指定されていない場合に"
"は、*x* の自然対数を返します。分枝切断を一つもち、``0`` から負の実数軸に沿っ"
"て ``-∞`` へと延びており、上から連続しています。"

#: ../../library/cmath.rst:101
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"*x* の底を 10 とする対数を返します。 :func:`log` と同じ分枝切断を持ちます。"

#: ../../library/cmath.rst:107
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr "*x* の平方根を返します。 :func:`log` と同じ分枝切断を持ちます。"

#: ../../library/cmath.rst:111
msgid "Trigonometric functions"
msgstr "三角関数"

#: ../../library/cmath.rst:115
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞, continuous from below. The other extends "
"left from -1 along the real axis to -∞, continuous from above."
msgstr ""
"*x* の逆余弦を返します。この関数には二つの分枝切断 (branch cut) があります: "
"一つは 1 から右側に実数軸に沿って∞へと延びていて、下から連続しています。もう"
"一つは -1 から左側に実数軸に沿って -∞へと延びていて、上から連続しています。"

#: ../../library/cmath.rst:122
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr "*x* の逆正弦を返します。 :func:`acos` と同じ分枝切断を持ちます。"

#: ../../library/cmath.rst:127
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``, continuous from the right. The "
"other extends from ``-1j`` along the imaginary axis to ``-∞j``, continuous "
"from the left."
msgstr ""
"*x* の逆正接を返します。二つの分枝切断があります: 一つは ``1j`` から虚数軸に"
"沿って ``∞j`` へと延びており、右から連続です。もう一つは ``-1j`` から虚数軸に"
"沿って ``-∞j`` へと延びており、左から連続です。"

#: ../../library/cmath.rst:135
msgid "Return the cosine of *x*."
msgstr "*x* の余弦を返します。"

#: ../../library/cmath.rst:140
msgid "Return the sine of *x*."
msgstr "*x* の正弦を返します。"

#: ../../library/cmath.rst:145
msgid "Return the tangent of *x*."
msgstr "*x* の正接を返します。"

#: ../../library/cmath.rst:149
msgid "Hyperbolic functions"
msgstr "双曲線関数"

#: ../../library/cmath.rst:153
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞, continuous from above."
msgstr ""
"*x* の逆双曲線余弦を返します。分枝切断が一つあり、1 の左側に実数軸に沿って -∞"
"へと延びていて、上から連続しています。"

#: ../../library/cmath.rst:159
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``, continuous from the "
"right.  The other extends from ``-1j`` along the imaginary axis to ``-∞j``, "
"continuous from the left."
msgstr ""
"*x* の逆双曲線正弦を返します。二つの分枝切断があります: 一つは ``1j`` から虚"
"数軸に沿って ``∞j`` へと延びており、右から連続です。もう一つは ``-1j`` から虚"
"数軸に沿って ``-∞j`` へと延びており、左から連続です。"

#: ../../library/cmath.rst:167
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``, continuous from below. The "
"other extends from ``-1`` along the real axis to ``-∞``, continuous from "
"above."
msgstr ""
"*x* の逆双曲線正接を返します。二つの分枝切断があります: 一つは ``1`` から実数"
"軸に沿って ``∞`` へと延びており、下から連続です。もう一つは ``-1`` から実数軸"
"に沿って ``-∞`` へと延びており、上から連続です。"

#: ../../library/cmath.rst:175
msgid "Return the hyperbolic cosine of *x*."
msgstr "*x* の双曲線余弦を返します。"

#: ../../library/cmath.rst:180
msgid "Return the hyperbolic sine of *x*."
msgstr "*x* の双曲線正弦を返します。"

#: ../../library/cmath.rst:185
msgid "Return the hyperbolic tangent of *x*."
msgstr "*x* の双曲線正接を返します。"

#: ../../library/cmath.rst:189
msgid "Classification functions"
msgstr "類別関数"

#: ../../library/cmath.rst:193
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr ""
"*x* の実部、虚部ともに有限であれば ``True`` を返し、それ以外の場合  "
"``False`` を返します。"

#: ../../library/cmath.rst:201
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"*x* の実数部または虚数部が正または負の無限大であれば ``True`` を、そうでなけ"
"れば ``False`` を返します。"

#: ../../library/cmath.rst:207
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"*x* の実部と虚部のどちらかが NaN のとき ``True`` を返し、それ以外の場合  "
"``False`` を返します。"

#: ../../library/cmath.rst:213
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"値 *a* と *b* が互いに近い場合 ``True`` を、そうでない場合は ``False`` を返し"
"ます。"

#: ../../library/cmath.rst:216
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr ""
"2値が近いと見なされるかどうかは与えられた絶対または相対許容差により決定されま"
"す。"

#: ../../library/cmath.rst:219
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""
"*rel_tol* は相対許容差、すなわち *a* と *b* の絶対値の大きい方に対する *a* "
"と *b* の許容される最大の差です。\n"
"例えば許容差を 5% に設定する場合 ``rel_tol=0.05`` を渡します。\n"
"デフォルトの許容差は ``1e-09`` で、2値が9桁同じことを保証します。\n"
"*rel_tol* は0より大きくなければなりません。"

#: ../../library/cmath.rst:225
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr ""
"*abs_tol* は最小の絶対許容差です。0に近い値を比較するのに有用です。*abs_tol* "
"は0より大きくなければなりません。"

#: ../../library/cmath.rst:228
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"エラーが起こらなければ結果は ``abs(a-b) <= max(rel_tol * max(abs(a), "
"abs(b)), abs_tol)`` です。"

#: ../../library/cmath.rst:231
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"IEEE 754 特殊値 ``NaN``、``inf``、``-inf`` は IEEE の規則に従って処理されま"
"す。\n"
"具体的には、``NaN`` は自身を含めたあらゆる値に近いとは見なされません。\n"
"``inf`` と ``-inf`` は自身とのみ近いと見なされます。"

#: ../../library/cmath.rst:240
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- A function for testing approximate equality"

#: ../../library/cmath.rst:244
msgid "Constants"
msgstr "定数"

#: ../../library/cmath.rst:249
msgid "The mathematical constant *π*, as a float."
msgstr "定数 *π* (円周率)で、浮動小数点数です。"

#: ../../library/cmath.rst:254
msgid "The mathematical constant *e*, as a float."
msgstr "定数 *e* (自然対数の底)で、浮動小数点数です。"

#: ../../library/cmath.rst:258
msgid "The mathematical constant *τ*, as a float."
msgstr "数学定数 *τ* で、浮動小数点数です。"

#: ../../library/cmath.rst:264
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "浮動小数点数の正の無限大です。``float('inf')`` と等価です。"

#: ../../library/cmath.rst:270
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"実部がゼロ、虚部が正の無限大の複素数です。``complex(0.0, float('inf'))`` と等"
"価です。"

#: ../../library/cmath.rst:277
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"浮動小数点数の非数 \"not a number\" (NaN) です。``float('nan')`` と等価です。"

#: ../../library/cmath.rst:284
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"実部がゼロ、虚部が NaN の複素数です。``complex(0.0, float('nan'))`` と等価で"
"す。"

#: ../../library/cmath.rst:292
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
":mod:`math` と同じような関数が選ばれていますが、全く同じではないので注意して"
"ください。機能を二つのモジュールに分けているのは、複素数に興味がなかったり、"
"もしかすると複素数とは何かすら知らないようなユーザがいるからです。そういった"
"人たちはむしろ、 ``math.sqrt(-1)`` が複素数を返すよりも例外を送出してほしいと"
"考えます。また、 :mod:`cmath` で定義されている関数は、たとえ結果が実数で表現"
"可能な場合 (虚数部がゼロの複素数) でも、常に複素数を返すので注意してくださ"
"い。"

#: ../../library/cmath.rst:300
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"分枝切断 (branch cut) に関する注釈: 分枝切断を持つ曲線上では、与えられた関数"
"は連続ではなくなります。これらは多くの複素関数における必然的な特性です。複素"
"関数を計算する必要がある場合、これらの分枝に関して理解しているものと仮定して"
"います。悟りに至るために何らかの (到底基礎的とはいえない) 複素数に関する書を"
"ひもといてください。数値計算を目的とした分枝切断の正しい選択方法についての情"
"報としては、以下がよい参考文献となります:"

#: ../../library/cmath.rst:310
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothings's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of "
"the art in numerical analysis. Clarendon Press (1987) pp165--211."
