# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2019
# Osamu NAKAMURA, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:02+0000\n"
"PO-Revision-Date: 2019-09-01 03:12+0000\n"
"Last-Translator: Osamu NAKAMURA, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/compileall.rst:2
msgid ":mod:`compileall` --- Byte-compile Python libraries"
msgstr ":mod:`compileall` --- Python ライブラリをバイトコンパイル"

#: ../../library/compileall.rst:7
msgid "**Source code:** :source:`Lib/compileall.py`"
msgstr "**ソースコード:** :source:`Lib/compileall.py`"

#: ../../library/compileall.rst:11
msgid ""
"This module provides some utility functions to support installing Python "
"libraries.  These functions compile Python source files in a directory tree. "
"This module can be used to create the cached byte-code files at library "
"installation time, which makes them available for use even by users who "
"don't have write permission to the library directories."
msgstr ""
"このモジュールは、Python ライブラリのインストールを助けるユーティリティ関数群"
"を提供します。この関数群は、ディレクトリツリー内の Python ソースファイルをコ"
"ンパイルします。このモジュールを使って、キャッシュされたバイトコードファイル"
"をライブラリのインストール時に生成することで、ライブラリディレクトリに書き込"
"み権限をもたないユーザでも、これらを利用できるようになります。"

#: ../../library/compileall.rst:19
msgid "Command-line use"
msgstr "コマンドラインでの使用"

#: ../../library/compileall.rst:21
msgid ""
"This module can work as a script (using :program:`python -m compileall`) to "
"compile Python sources."
msgstr ""
"このモジュールは、 (:program:`python -m compileall` を使って) Python ソースを"
"コンパイルするスクリプトとして機能します。"

#: ../../library/compileall.rst:29
msgid ""
"Positional arguments are files to compile or directories that contain source "
"files, traversed recursively.  If no argument is given, behave as if the "
"command line was ``-l <directories from sys.path>``."
msgstr ""
"位置引数は、コンパイルするファイル群か、再帰的に横断されるディレクトリでソー"
"スファイル群を含むものです。引数が与えられなければ、``-l <directories from "
"sys.path>`` を渡したのと同じように動作します。"

#: ../../library/compileall.rst:35
msgid ""
"Do not recurse into subdirectories, only compile source code files directly "
"contained in the named or implied directories."
msgstr ""
"サブディレクトリを再帰処理せず、指名または暗示されたディレクトリ群に含まれる"
"ソースコードファイル群だけをコンパイルします。"

#: ../../library/compileall.rst:40
msgid "Force rebuild even if timestamps are up-to-date."
msgstr "タイムスタンプが最新であってもリビルドを強制します。"

#: ../../library/compileall.rst:44
msgid ""
"Do not print the list of files compiled. If passed once, error messages will "
"still be printed. If passed twice (``-qq``), all output is suppressed."
msgstr ""
"コンパイルされたファイルのリストを出力しません。\n"
"一つ渡された場合でもエラーメッセージは出力されます。\n"
"二つ (``-qq``) の場合全ての出力は抑制されます。"

#: ../../library/compileall.rst:49
msgid ""
"Directory prepended to the path to each file being compiled.  This will "
"appear in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"コンパイルされるそれぞれのファイルへのパスの先頭に、ディレクトリを追加しま"
"す。これはコンパイル時トレースバックに使われ、バイトコードファイルが実行され"
"る時点でソースファイルが存在しない場合に、トレースバックやその他のメッセージ"
"に使われるバイトコードファイルにもコンパイルされます。"

#: ../../library/compileall.rst:57
msgid ""
"regex is used to search the full path to each file considered for "
"compilation, and if the regex produces a match, the file is skipped."
msgstr ""
"regex を使って、コンパイル候補のそれぞれのファイルのフルパスを検索し、regex "
"がマッチしたファイルを除外します。"

#: ../../library/compileall.rst:62
msgid ""
"Read the file ``list`` and add each line that it contains to the list of "
"files and directories to compile.  If ``list`` is ``-``, read lines from "
"``stdin``."
msgstr ""
"ファイル ``list`` を読み込み、そのファイルのそれぞれの行を、コンパイルする"
"ファイルとディレクトリのリストに加えます。``list`` が ``-`` なら、``stdin`` "
"の行を読み込みます。"

#: ../../library/compileall.rst:68
msgid ""
"Write the byte-code files to their legacy locations and names, which may "
"overwrite byte-code files created by another version of Python.  The default "
"is to write files to their :pep:`3147` locations and names, which allows "
"byte-code files from multiple versions of Python to coexist."
msgstr ""
"バイトコードファイルを、他のバージョンの Python によって生成されたバイトコー"
"ドファイルを上書きするかもしれない、レガシーな場所に生成します。デフォルトで"
"は :pep:`3147` で決められた場所と名前を使い、複数のバージョンの Python が共存"
"できるようにします。"

#: ../../library/compileall.rst:75
msgid ""
"Control the maximum recursion level for subdirectories. If this is given, "
"then ``-l`` option will not be taken into account. :program:`python -m "
"compileall <directory> -r 0` is equivalent to :program:`python -m compileall "
"<directory> -l`."
msgstr ""
"サブディレクトリの最大再起深度を制御します。\n"
"このオプションが与えられた場合、``-l`` オプションは無視されます。\n"
":program:`python -m compileall <directory> -r 0` は :program:`python -m "
"compileall <directory> -l` と等価です。"

#: ../../library/compileall.rst:82
msgid ""
"Use *N* workers to compile the files within the given directory. If ``0`` is "
"used, then the result of :func:`os.cpu_count()` will be used."
msgstr ""
"与えられたディレクトリ内のファイルを *N* ワーカでコンパイルします。``0`` の場"
"合 :func:`os.cpu_count()` の結果が使用されます。"

#: ../../library/compileall.rst:88
msgid ""
"Control how the generated byte-code files are invalidated at runtime. The "
"``timestamp`` value, means that ``.pyc`` files with the source timestamp and "
"size embedded will be generated. The ``checked-hash`` and ``unchecked-hash`` "
"values cause hash-based pycs to be generated. Hash-based pycs embed a hash "
"of the source file contents rather than a timestamp. See :ref:`pyc-"
"invalidation` for more information on how Python validates bytecode cache "
"files at runtime. The default is ``timestamp`` if the :envvar:"
"`SOURCE_DATE_EPOCH` environment variable is not set, and ``checked-hash`` if "
"the ``SOURCE_DATE_EPOCH`` environment variable is set."
msgstr ""
"生成したバイトコードファイルを実行時に無効化する方法を制御します。"
"``timestamp`` を指定すると、生成した``.pyc`` ファイルにソースファイルのタイム"
"スタンプとサイズを埋め込みます。``checked-hash`` と ``unchecked-hash`` を指定"
"すると、ハッシュベースの pycファイルが生成されます。ハッシュベースのpycファイ"
"ルは、ソースファイルにタイムスタンプではなくハッシュ値を埋め込みます。Python "
"がバイトコードキャッシュファイルを実行時に検証する方法の詳細を知るには、:ref:"
"`pyc-invalidation` を参照してください。デフォルト値は、:envvar:"
"`SOURCE_DATE_EPOCH` 環境変数が設定されていなければ ``timestamp`` で、"
"``SOURCE_DATE_EPOCH`` 環境変数が設定されていれば、``checked-hash`` になりま"
"す。"

#: ../../library/compileall.rst:99
msgid "Added the ``-i``, ``-b`` and ``-h`` options."
msgstr "``-i``, ``-b``, ``-h`` オプションを追加。"

#: ../../library/compileall.rst:102
msgid ""
"Added the  ``-j``, ``-r``, and ``-qq`` options.  ``-q`` option was changed "
"to a multilevel value.  ``-b`` will always produce a byte-code file ending "
"in ``.pyc``, never ``.pyo``."
msgstr ""
"``-j``, ``-r``, ``-qq`` オプションが追加されました。``-q`` オプションが複数の"
"レベルの値に変更されました。``-b`` は常に拡張子 ``.pyc`` のバイトエンコーディ"
"ングファイルを生成し、``.pyo`` を作りません。"

#: ../../library/compileall.rst:107
msgid "Added the ``--invalidation-mode`` option."
msgstr "``--invalidation-mode`` オプションが追加されました。"

#: ../../library/compileall.rst:111
msgid ""
"There is no command-line option to control the optimization level used by "
"the :func:`compile` function, because the Python interpreter itself already "
"provides the option: :program:`python -O -m compileall`."
msgstr ""
":func:`compile` 関数で利用される最適化レベルを制御するコマンドラインオプショ"
"ンはありません。 Python インタプリタ自体のオプションを使ってください: :"
"program:`python -O -m compileall`."

#: ../../library/compileall.rst:116
msgid "Public functions"
msgstr "パブリックな関数"

#: ../../library/compileall.rst:120
msgid ""
"Recursively descend the directory tree named by *dir*, compiling all :file:`."
"py` files along the way. Return a true value if all the files compiled "
"successfully, and a false value otherwise."
msgstr ""
"*dir* という名前のディレクトリーツリーをたどり、途中で見つけた全ての :file:`."
"py` をコンパイルします。全ファイルのコンパイルが成功した場合は真を、それ以外"
"の場合は偽を返します。"

#: ../../library/compileall.rst:124
msgid ""
"The *maxlevels* parameter is used to limit the depth of the recursion; it "
"defaults to ``10``."
msgstr "*maxlevels* 引数で最大再帰深度を制限します。デフォルトは ``10`` です。"

#: ../../library/compileall.rst:127
msgid ""
"If *ddir* is given, it is prepended to the path to each file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"*ddir* が与えられた場合、コンパイルされるそれぞれのファイルへのパスの先頭に、"
"そのディレクトリを追加します。これはコンパイル時トレースバックに使われ、バイ"
"トコードファイルが実行される時点でソースファイルが存在しない場合に、トレース"
"バックやその他のメッセージに使われるバイトコードファイルにもコンパイルされま"
"す。"

#: ../../library/compileall.rst:133
msgid ""
"If *force* is true, modules are re-compiled even if the timestamps are up to "
"date."
msgstr ""
"*force* が真の場合、タイムスタンプが最新のであってもモジュールは再コンパイル"
"されます。"

#: ../../library/compileall.rst:136
msgid ""
"If *rx* is given, its search method is called on the complete path to each "
"file considered for compilation, and if it returns a true value, the file is "
"skipped."
msgstr ""
"*rx* が与えられた場合、コンパイル候補のそれぞれのファイルのフルパスに対して検"
"索メソッドが呼び出され、それが真値を返したら、そのファイルは除外されます。"

#: ../../library/compileall.rst:140 ../../library/compileall.rst:197
msgid ""
"If *quiet* is ``False`` or ``0`` (the default), the filenames and other "
"information are printed to standard out. Set to ``1``, only errors are "
"printed. Set to ``2``, all output is suppressed."
msgstr ""
"*quiet* が ``False`` か ``0`` (デフォルト) の場合、ファイル名とその他の情報は"
"標準出力に表示されます。\n"
"``1`` の場合エラーのみが表示されます。\n"
"``2`` の場合出力はすべて抑制されます。"

#: ../../library/compileall.rst:144 ../../library/compileall.rst:201
msgid ""
"If *legacy* is true, byte-code files are written to their legacy locations "
"and names, which may overwrite byte-code files created by another version of "
"Python.  The default is to write files to their :pep:`3147` locations and "
"names, which allows byte-code files from multiple versions of Python to "
"coexist."
msgstr ""
"*legacy* が真の時、バイトコードファイルは古い場所と名前に書かれ、他のバージョ"
"ンの Python によって作られたバイトコードファイルを上書きする可能性がありま"
"す。デフォルトは :pep:`3147` で決められた場所と名前を使い、複数のバージョン"
"の Python のバイトコードファイルが共存できるようにします。"

#: ../../library/compileall.rst:150 ../../library/compileall.rst:207
msgid ""
"*optimize* specifies the optimization level for the compiler.  It is passed "
"to the built-in :func:`compile` function."
msgstr ""
"*optimize* でコンパイラの最適化レベルを指定します。これは組み込みの :func:"
"`compile` 関数に渡されます。"

#: ../../library/compileall.rst:153
msgid ""
"The argument *workers* specifies how many workers are used to compile files "
"in parallel. The default is to not use multiple workers. If the platform "
"can't use multiple workers and *workers* argument is given, then sequential "
"compilation will be used as a fallback.  If *workers* is lower than ``0``, "
"a :exc:`ValueError` will be raised."
msgstr ""
"引数 *workers* でファイルを並列でコンパイルするワーカの数を指定します。デフォ"
"ルトでは複数のワーカを使いません。\n"
"複数のワーカを使えないプラットフォームで *workers* が与えられた場合、逐次コン"
"パイルにフォールバックします。*workers* が ``0`` 未満の場合 :exc:"
"`ValueError` を送出します。"

#: ../../library/compileall.rst:159 ../../library/compileall.rst:210
msgid ""
"*invalidation_mode* should be a member of the :class:`py_compile."
"PycInvalidationMode` enum and controls how the generated pycs are "
"invalidated at runtime."
msgstr ""
"*invalidation_mode* は、:class:`py_compile.PycInvalidationMode` のメンバーで"
"なければならず、生成されたpycファイルを実行時に無効化する方法を制御します。"

#: ../../library/compileall.rst:163 ../../library/compileall.rst:236
msgid "Added the *legacy* and *optimize* parameter."
msgstr "*legacy* と *optimize* 引数が追加されました。"

#: ../../library/compileall.rst:166
msgid "Added the *workers* parameter."
msgstr "``workers`` パラメータが追加されました。"

#: ../../library/compileall.rst:169 ../../library/compileall.rst:216
#: ../../library/compileall.rst:239
msgid "*quiet* parameter was changed to a multilevel value."
msgstr "*quiet* 引数が複数のレベルの値に変更されました。"

#: ../../library/compileall.rst:172 ../../library/compileall.rst:219
#: ../../library/compileall.rst:242
msgid ""
"The *legacy* parameter only writes out ``.pyc`` files, not ``.pyo`` files no "
"matter what the value of *optimize* is."
msgstr ""
"*optimize* の値に関わらず、*legacy* 引数は ``.pyc`` ファイルのみを書き出し、"
"``.pyo`` ファイルを書き出さないようになりました。"

#: ../../library/compileall.rst:176
msgid "Accepts a :term:`path-like object`."
msgstr ":term:`path-like object` を受け入れるようになりました。"

#: ../../library/compileall.rst:179 ../../library/compileall.rst:223
#: ../../library/compileall.rst:246
msgid "The *invalidation_mode* parameter was added."
msgstr "*invalidation_mode* 引数を追加しました。"

#: ../../library/compileall.rst:184
msgid ""
"Compile the file with path *fullname*. Return a true value if the file "
"compiled successfully, and a false value otherwise."
msgstr ""
"パス *fullname* のファイルをコンパイルします。コンパイルが成功すれば真を、そ"
"うでなければ偽を返します。"

#: ../../library/compileall.rst:187
msgid ""
"If *ddir* is given, it is prepended to the path to the file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"*ddir* が与えられた場合、コンパイルされるファイルのパスの先頭にそのディレクト"
"リを追加します。これはコンパイル時トレースバックに使われ、バイトコードファイ"
"ルが実行される時点でソースファイルが存在しない場合に、トレースバックやその他"
"のメッセージに使われるバイトコードファイルにもコンパイルされます。"

#: ../../library/compileall.rst:193
msgid ""
"If *rx* is given, its search method is passed the full path name to the file "
"being compiled, and if it returns a true value, the file is not compiled and "
"``True`` is returned."
msgstr ""
"*rx* が与えられた場合、コンパイル候補のファイルのフルパスに対して検索メソッド"
"が呼び出され、それが真値を返したら、ファイルはコンパイルされず、``True`` が返"
"されます。"

#: ../../library/compileall.rst:228
msgid ""
"Byte-compile all the :file:`.py` files found along ``sys.path``. Return a "
"true value if all the files compiled successfully, and a false value "
"otherwise."
msgstr ""
"``sys.path`` からたどって見つけたすべての :file:`.py` ファイルをバイトコンパ"
"イルします。\n"
"すべてのファイルを問題なくコンパイルできたときに真を、それ以外のときに偽を返"
"します。"

#: ../../library/compileall.rst:231
msgid ""
"If *skip_curdir* is true (the default), the current directory is not "
"included in the search.  All other parameters are passed to the :func:"
"`compile_dir` function.  Note that unlike the other compile functions, "
"``maxlevels`` defaults to ``0``."
msgstr ""
"*skip_curdir* が真(デフォルト)のとき、カレントディレクトリは走査から除外され"
"ます。\n"
"それ以外のすべての引数は :func:`compile_dir` 関数に渡されます。\n"
"その他の compile 関数群と異なり、 ``maxlevels`` のデフォルトが ``0`` になって"
"いることに注意してください。"

#: ../../library/compileall.rst:249
msgid ""
"To force a recompile of all the :file:`.py` files in the :file:`Lib/` "
"subdirectory and all its subdirectories::"
msgstr ""
":file:`Lib/` ディレクトリ以下にある全ての :file:`.py` ファイルを強制的に再コ"
"ンパイルするには、以下のようにします::"

#: ../../library/compileall.rst:266
msgid "Module :mod:`py_compile`"
msgstr "Module :mod:`py_compile`"

#: ../../library/compileall.rst:267
msgid "Byte-compile a single source file."
msgstr "一つのソースファイルをバイトコンパイルします。"
