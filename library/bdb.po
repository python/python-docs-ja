# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
# Arihiro TAKASE, 2023
# Takanori Suzuki <takanori@takanory.net>, 2024
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-13 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 00:55+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/bdb.rst:2
msgid ":mod:`!bdb` --- Debugger framework"
msgstr ":mod:`!bdb` --- デバッガーフレームワーク"

#: ../../library/bdb.rst:7
msgid "**Source code:** :source:`Lib/bdb.py`"
msgstr "**ソースコード:** :source:`Lib/bdb.py`"

#: ../../library/bdb.rst:11
msgid ""
"The :mod:`bdb` module handles basic debugger functions, like setting "
"breakpoints or managing execution via the debugger."
msgstr ""
":mod:`bdb` モジュールは、ブレークポイントを設定したり、デバッガー経由で実行を"
"管理するような、基本的なデバッガー機能を提供します。"

#: ../../library/bdb.rst:14
msgid "The following exception is defined:"
msgstr "以下の例外が定義されています:"

#: ../../library/bdb.rst:18
msgid "Exception raised by the :class:`Bdb` class for quitting the debugger."
msgstr ":class:`Bdb` クラスが、デバッガーを終了させるために投げる例外。"

#: ../../library/bdb.rst:21
msgid "The :mod:`bdb` module also defines two classes:"
msgstr ":mod:`bdb` モジュールは2つのクラスを定義しています:"

#: ../../library/bdb.rst:25
msgid ""
"This class implements temporary breakpoints, ignore counts, disabling and "
"(re-)enabling, and conditionals."
msgstr ""
"このクラスはテンポラリブレークポイント、無視するカウント、無効化と再有効化、"
"条件付きブレークポイントを実装しています。"

#: ../../library/bdb.rst:28
msgid ""
"Breakpoints are indexed by number through a list called :attr:`bpbynumber` "
"and by ``(file, line)`` pairs through :attr:`bplist`.  The former points to "
"a single instance of class :class:`Breakpoint`.  The latter points to a list "
"of such instances since there may be more than one breakpoint per line."
msgstr ""
"ブレークポイントは :attr:`bpbynumber` という名前のリストで番号によりインデッ"
"クスされ、 :attr:`bplist` により ``(file, line)`` の形でインデックスされま"
"す。 :attr:`bpbynumber` は :class:`Breakpoint` クラスのインスタンスを指してい"
"ます。一方 :attr:`bplist` は、同じ行に複数のブレークポイントが設定される場合"
"があるので、インスタンスのリストを指しています。"

#: ../../library/bdb.rst:33
msgid ""
"When creating a breakpoint, its associated :attr:`file name <file>` should "
"be in canonical form.  If a :attr:`funcname` is defined, a breakpoint :attr:"
"`hit <hits>` will be counted when the first line of that function is "
"executed.  A :attr:`conditional <cond>` breakpoint always counts a :attr:"
"`hit <hits>`."
msgstr ""
"ブレークポイントを作るとき、関連付けられる :attr:`ファイル名 <file>` は正規化"
"されていなければなりません。:attr:`funcname` が定義されると、ブレークポイント"
"の :attr:`ヒット <hits>` はその関数の最初の行が実行されたときにカウントされま"
"す。:attr:`条件付き <cond>` ブレークポイントは毎回 :attr:`ヒット <hits>` をカ"
"ウントします。"

#: ../../library/bdb.rst:39
msgid ":class:`Breakpoint` instances have the following methods:"
msgstr ":class:`Breakpoint` インスタンスは以下のメソッドを持ちます:"

#: ../../library/bdb.rst:43
msgid ""
"Delete the breakpoint from the list associated to a file/line.  If it is the "
"last breakpoint in that position, it also deletes the entry for the file/"
"line."
msgstr ""
"このブレークポイントをファイル/行に関連付けられたリストから削除します。このブ"
"レークポイントがその行に設定された最後のブレークポイントだった場合、そのファ"
"イル/行に対するエントリ自体を削除します。"

#: ../../library/bdb.rst:50
msgid "Mark the breakpoint as enabled."
msgstr "このブレークポイントを有効にします。"

#: ../../library/bdb.rst:55
msgid "Mark the breakpoint as disabled."
msgstr "このブレークポイントを無効にします。"

#: ../../library/bdb.rst:60
msgid ""
"Return a string with all the information about the breakpoint, nicely "
"formatted:"
msgstr "ブレークポイントに関する情報を持つ文字列をフォーマットして返します:"

#: ../../library/bdb.rst:63
msgid "Breakpoint number."
msgstr ""

#: ../../library/bdb.rst:64
msgid "Temporary status (del or keep)."
msgstr ""

#: ../../library/bdb.rst:65
msgid "File/line position."
msgstr ""

#: ../../library/bdb.rst:66
msgid "Break condition."
msgstr ""

#: ../../library/bdb.rst:67
msgid "Number of times to ignore."
msgstr ""

#: ../../library/bdb.rst:68
msgid "Number of times hit."
msgstr ""

#: ../../library/bdb.rst:74
msgid ""
"Print the output of :meth:`bpformat` to the file *out*, or if it is "
"``None``, to standard output."
msgstr ""
"ファイル *out* に、またはそれが ``None`` の場合は標準出力に、 :meth:"
"`bpformat` の出力を表示する。"

#: ../../library/bdb.rst:77
msgid ":class:`Breakpoint` instances have the following attributes:"
msgstr ":class:`Breakpoint` インスタンスは以下の属性を持ちます:"

#: ../../library/bdb.rst:81
msgid "File name of the :class:`Breakpoint`."
msgstr ""

#: ../../library/bdb.rst:85
msgid "Line number of the :class:`Breakpoint` within :attr:`file`."
msgstr ""

#: ../../library/bdb.rst:89
msgid "``True`` if a :class:`Breakpoint` at (file, line) is temporary."
msgstr ""

#: ../../library/bdb.rst:93
msgid "Condition for evaluating a :class:`Breakpoint` at (file, line)."
msgstr ""

#: ../../library/bdb.rst:97
msgid ""
"Function name that defines whether a :class:`Breakpoint` is hit upon "
"entering the function."
msgstr ""

#: ../../library/bdb.rst:102
msgid "``True`` if :class:`Breakpoint` is enabled."
msgstr ""

#: ../../library/bdb.rst:106
msgid "Numeric index for a single instance of a :class:`Breakpoint`."
msgstr ""

#: ../../library/bdb.rst:110
msgid ""
"Dictionary of :class:`Breakpoint` instances indexed by (:attr:`file`, :attr:"
"`line`) tuples."
msgstr ""

#: ../../library/bdb.rst:115
msgid "Number of times to ignore a :class:`Breakpoint`."
msgstr ""

#: ../../library/bdb.rst:119
msgid "Count of the number of times a :class:`Breakpoint` has been hit."
msgstr ""

#: ../../library/bdb.rst:123
msgid "The :class:`Bdb` class acts as a generic Python debugger base class."
msgstr ""
":class:`Bdb` クラスは一般的なPythonデバッガーの基本クラスとして振舞います。"

#: ../../library/bdb.rst:125
msgid ""
"This class takes care of the details of the trace facility; a derived class "
"should implement user interaction.  The standard debugger class (:class:`pdb."
"Pdb`) is an example."
msgstr ""
"このクラスはトレース機能の詳細を扱います。ユーザーとのインタラクションは、派"
"生クラスが実装するべきです。標準ライブラリのデバッガクラス (:class:`pdb."
"Pdb`) がその利用例です。"

#: ../../library/bdb.rst:129
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. Whether a frame is considered to "
"originate in a certain module is determined by the ``__name__`` in the frame "
"globals."
msgstr ""
"*skip* 引数は、もし与えられたならグロブ形式のモジュール名パターンの iterable "
"でなければなりません。デバッガはこれらのパターンのどれかにマッチするモジュー"
"ルで発生したフレームにステップインしなくなります。フレームが特定のモジュール"
"で発生したかどうかは、フレームのグローバル変数の ``__name__`` によって決定さ"
"れます。"

#: ../../library/bdb.rst:135
msgid "Added the *skip* parameter."
msgstr "*skip* パラメータが追加されました。"

#: ../../library/bdb.rst:138
msgid ""
"The following methods of :class:`Bdb` normally don't need to be overridden."
msgstr ""
"以下の :class:`Bdb` のメソッドは、通常オーバーライドする必要はありません。"

#: ../../library/bdb.rst:142
msgid "Return canonical form of *filename*."
msgstr ""

#: ../../library/bdb.rst:144
msgid ""
"For real file names, the canonical form is an operating-system-dependent, :"
"func:`case-normalized <os.path.normcase>` :func:`absolute path <os.path."
"abspath>`. A *filename* with angle brackets, such as ``\"<stdin>\"`` "
"generated in interactive mode, is returned unchanged."
msgstr ""

#: ../../library/bdb.rst:151
msgid ""
"Set the :attr:`!botframe`, :attr:`!stopframe`, :attr:`!returnframe` and :"
"attr:`quitting <Bdb.set_quit>` attributes with values ready to start "
"debugging."
msgstr ""

#: ../../library/bdb.rst:156
msgid ""
"This function is installed as the trace function of debugged frames.  Its "
"return value is the new trace function (in most cases, that is, itself)."
msgstr ""
"この関数は、デバッグされているフレームのトレース関数としてインストールされま"
"す。戻り値は新しいトレース関数(殆どの場合はこの関数自身)です。"

#: ../../library/bdb.rst:159
msgid ""
"The default implementation decides how to dispatch a frame, depending on the "
"type of event (passed as a string) that is about to be executed. *event* can "
"be one of the following:"
msgstr ""
"デフォルトの実装は、実行しようとしている *event* (文字列として渡されます) の"
"種類に基づいてフレームのディスパッチ方法を決定します。*event* は次のうちのど"
"れかです:"

#: ../../library/bdb.rst:163
msgid "``\"line\"``: A new line of code is going to be executed."
msgstr "``\"line\"``: 新しい行を実行しようとしています。"

#: ../../library/bdb.rst:164
msgid ""
"``\"call\"``: A function is about to be called, or another code block "
"entered."
msgstr "``\"call\"``: 関数が呼び出されているか、別のコードブロックに入ります。"

#: ../../library/bdb.rst:166
msgid "``\"return\"``: A function or other code block is about to return."
msgstr "``\"return\"``: 関数か別のコードブロックからreturnしようとしています。"

#: ../../library/bdb.rst:167
msgid "``\"exception\"``: An exception has occurred."
msgstr "``\"exception\"``: 例外が発生しました。"

#: ../../library/bdb.rst:168
msgid "``\"c_call\"``: A C function is about to be called."
msgstr "``\"c_call\"``: C関数を呼び出そうとしています。"

#: ../../library/bdb.rst:169
msgid "``\"c_return\"``: A C function has returned."
msgstr "``\"c_return\"``: C関数からreturnしました。"

#: ../../library/bdb.rst:170
msgid "``\"c_exception\"``: A C function has raised an exception."
msgstr "``\"c_exception\"``: C関数が例外を発生させました。"

#: ../../library/bdb.rst:172
msgid ""
"For the Python events, specialized functions (see below) are called.  For "
"the C events, no action is taken."
msgstr ""
"Pythonのイベントに対しては、以下の専用の関数群が呼ばれます。Cのイベントに対し"
"ては何もしません。"

#: ../../library/bdb.rst:175
msgid "The *arg* parameter depends on the previous event."
msgstr "*arg* 引数は以前のイベントに依存します。"

#: ../../library/bdb.rst:177
msgid ""
"See the documentation for :func:`sys.settrace` for more information on the "
"trace function.  For more information on code and frame objects, refer to :"
"ref:`types`."
msgstr ""
"トレース関数についてのより詳しい情報は、 :func:`sys.settrace` のドキュメント"
"を参照してください。コードとフレームオブジェクトについてのより詳しい情報"
"は、 :ref:`types` を参照してください。"

#: ../../library/bdb.rst:183
msgid ""
"If the debugger should stop on the current line, invoke the :meth:"
"`user_line` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_line`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../../library/bdb.rst:191
msgid ""
"If the debugger should stop on this function call, invoke the :meth:"
"`user_call` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_call`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../../library/bdb.rst:199
msgid ""
"If the debugger should stop on this function return, invoke the :meth:"
"`user_return` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_return`).  Return a reference to the :"
"meth:`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../../library/bdb.rst:207
msgid ""
"If the debugger should stop at this exception, invokes the :meth:"
"`user_exception` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_exception`).  Return a reference to the :"
"meth:`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../../library/bdb.rst:213
msgid ""
"Normally derived classes don't override the following methods, but they may "
"if they want to redefine the definition of stopping and breakpoints."
msgstr ""
"通常、継承クラスは以下のメソッド群をオーバーライドしません。しかし、停止やブ"
"レークポイント機能を再定義したい場合には、オーバーライドすることもあります。"

#: ../../library/bdb.rst:218
msgid "Return ``True`` if *module_name* matches any skip pattern."
msgstr ""

#: ../../library/bdb.rst:222
msgid "Return ``True`` if *frame* is below the starting frame in the stack."
msgstr ""

#: ../../library/bdb.rst:226
msgid "Return ``True`` if there is an effective breakpoint for this line."
msgstr ""

#: ../../library/bdb.rst:228
msgid ""
"Check whether a line or function breakpoint exists and is in effect.  Delete "
"temporary breakpoints based on information from :func:`effective`."
msgstr ""

#: ../../library/bdb.rst:233
msgid "Return ``True`` if any breakpoint exists for *frame*'s filename."
msgstr ""

#: ../../library/bdb.rst:235
msgid ""
"Derived classes should override these methods to gain control over debugger "
"operation."
msgstr ""
"継承クラスはデバッガー操作をするために以下のメソッド群をオーバーライドするべ"
"きです。"

#: ../../library/bdb.rst:240
msgid ""
"Called from :meth:`dispatch_call` if a break might stop inside the called "
"function."
msgstr ""

#: ../../library/bdb.rst:243
msgid ""
"*argument_list* is not used anymore and will always be ``None``. The "
"argument is kept for backwards compatibility."
msgstr ""

#: ../../library/bdb.rst:248
msgid ""
"Called from :meth:`dispatch_line` when either :meth:`stop_here` or :meth:"
"`break_here` returns ``True``."
msgstr ""
":meth:`stop_here` か :meth:`break_here` が ``True`` を返したときに、 :meth:"
"`dispatch_line` から呼び出されます。"

#: ../../library/bdb.rst:253
msgid ""
"Called from :meth:`dispatch_return` when :meth:`stop_here` returns ``True``."
msgstr ""
":meth:`stop_here` が ``True`` を返したときに、 :meth:`dispatch_return` から呼"
"び出されます。"

#: ../../library/bdb.rst:257
msgid ""
"Called from :meth:`dispatch_exception` when :meth:`stop_here` returns "
"``True``."
msgstr ""
":meth:`stop_here` が ``True`` を返したときに、 :meth:`dispatch_exception` か"
"ら呼び出されます。"

#: ../../library/bdb.rst:262
msgid "Handle how a breakpoint must be removed when it is a temporary one."
msgstr ""
"ブレークポイントがテンポラリブレークポイントだったときに、それをどう削除する"
"かを決定します。"

#: ../../library/bdb.rst:264
msgid "This method must be implemented by derived classes."
msgstr "継承クラスはこのメソッドを実装しなければなりません。"

#: ../../library/bdb.rst:267
msgid ""
"Derived classes and clients can call the following methods to affect the "
"stepping state."
msgstr ""
"継承クラスとクライアントは、ステップ状態に影響を及ぼすために以下のメソッドを"
"呼び出すことができます。"

#: ../../library/bdb.rst:272
msgid "Stop after one line of code."
msgstr "コードの次の行でストップします。"

#: ../../library/bdb.rst:276
msgid "Stop on the next line in or below the given frame."
msgstr ""
"与えられたフレームかそれより下(のフレーム)にある、次の行でストップします。"

#: ../../library/bdb.rst:280
msgid "Stop when returning from the given frame."
msgstr "指定されたフレームから抜けるときにストップします。"

#: ../../library/bdb.rst:284
msgid ""
"Stop when the line with the *lineno* greater than the current one is reached "
"or when returning from current frame."
msgstr ""
"現在の行番号よりも大きい *lineno* に到達したとき、あるいは、現在のフレームか"
"ら戻るときにストップします。"

#: ../../library/bdb.rst:289
msgid ""
"Start debugging from *frame*.  If *frame* is not specified, debugging starts "
"from caller's frame."
msgstr ""
"*frame* からデバッグを開始します。*frame* が指定されなかった場合、デバッグは"
"呼び出し元のフレームから開始します。"

#: ../../library/bdb.rst:292
msgid ""
":func:`set_trace` will enter the debugger immediately, rather than on the "
"next line of code to be executed."
msgstr ""

#: ../../library/bdb.rst:298
msgid ""
"Stop only at breakpoints or when finished.  If there are no breakpoints, set "
"the system trace function to ``None``."
msgstr ""
"ブレークポイントに到達するか終了したときにストップします。もしブレークポイン"
"トが1つも無い場合、システムのトレース関数を ``None`` に設定します。"

#: ../../library/bdb.rst:305
msgid ""
"Set the :attr:`!quitting` attribute to ``True``.  This raises :exc:`BdbQuit` "
"in the next call to one of the :meth:`!dispatch_\\*` methods."
msgstr ""

#: ../../library/bdb.rst:309
msgid ""
"Derived classes and clients can call the following methods to manipulate "
"breakpoints.  These methods return a string containing an error message if "
"something went wrong, or ``None`` if all is well."
msgstr ""
"継承クラスとクライアントは以下のメソッドをブレークポイント操作に利用できま"
"す。これらのメソッドは、何か悪いことがあればエラーメッセージを含む文字列を返"
"し、すべてが順調であれば ``None`` を返します。"

#: ../../library/bdb.rst:315
msgid ""
"Set a new breakpoint.  If the *lineno* line doesn't exist for the *filename* "
"passed as argument, return an error message.  The *filename* should be in "
"canonical form, as described in the :meth:`canonic` method."
msgstr ""
"新しいブレークポイントを設定します。引数の *lineno* 行が *filename* に存在し"
"ない場合、エラーメッセージを返します。 *filename* は、 :meth:`canonic` メソッ"
"ドで説明されているような、標準形である必要があります。"

#: ../../library/bdb.rst:321
msgid ""
"Delete the breakpoints in *filename* and *lineno*.  If none were set, return "
"an error message."
msgstr ""
"*filename* の *lineno* 行にあるブレークポイントを削除します。もしブレークポイ"
"ントが無かった場合、エラーメッセージを返します。"

#: ../../library/bdb.rst:326
msgid ""
"Delete the breakpoint which has the index *arg* in the :attr:`Breakpoint."
"bpbynumber`.  If *arg* is not numeric or out of range, return an error "
"message."
msgstr ""
":attr:`Breakpoint.bpbynumber` の中で *arg* のインデックスを持つブレークポイン"
"トを削除します。 *arg* が数値でないか範囲外の場合、エラーメッセージを返しま"
"す。"

#: ../../library/bdb.rst:332
msgid ""
"Delete all breakpoints in *filename*.  If none were set, return an error "
"message."
msgstr ""
"*filename* にあるすべてのブレークポイントを削除します。もしブレークポイントが"
"無かった場合、エラーメッセージを返します。"

#: ../../library/bdb.rst:337
msgid ""
"Delete all existing breakpoints.  If none were set, return an error message."
msgstr ""
"存在するすべてのブレークポイントを削除します。もしブレークポイントが無かった"
"場合、エラーメッセージを返します。"

#: ../../library/bdb.rst:342
msgid ""
"Return a breakpoint specified by the given number.  If *arg* is a string, it "
"will be converted to a number.  If *arg* is a non-numeric string, if the "
"given breakpoint never existed or has been deleted, a :exc:`ValueError` is "
"raised."
msgstr ""
"与えられた数値によって指定されるブレークポイントを返します。 *arg* が文字列な"
"ら数値に変換されます。 *arg* が非数値の文字列である場合、指定されたブレークポ"
"イントが存在しないか削除された場合、 :exc:`ValueError` が上げられます。"

#: ../../library/bdb.rst:351
msgid "Return ``True`` if there is a breakpoint for *lineno* in *filename*."
msgstr ""

#: ../../library/bdb.rst:355
msgid ""
"Return all breakpoints for *lineno* in *filename*, or an empty list if none "
"are set."
msgstr ""
"*filename* の *lineno* にあるすべてのブレークポイントを返します。ブレークポイ"
"ントが存在しない場合は空のリストを返します。"

#: ../../library/bdb.rst:360
msgid "Return all breakpoints in *filename*, or an empty list if none are set."
msgstr ""
"*filename* の中のすべてのブレークポイントを返します。ブレークポイントが存在し"
"ない場合は空のリストを返します。"

#: ../../library/bdb.rst:364
msgid "Return all breakpoints that are set."
msgstr "セットされているすべてのブレークポイントを返します。"

#: ../../library/bdb.rst:367
msgid ""
"Derived classes and clients can call the following methods to get a data "
"structure representing a stack trace."
msgstr ""
"継承クラスとクライアントは以下のメソッドを呼んでスタックトレースを表現する"
"データ構造を取得することができます。"

#: ../../library/bdb.rst:372
msgid "Return a list of (frame, lineno) tuples in a stack trace, and a size."
msgstr ""

#: ../../library/bdb.rst:374
msgid ""
"The most recently called frame is last in the list. The size is the number "
"of frames below the frame where the debugger was invoked."
msgstr ""

#: ../../library/bdb.rst:379
msgid ""
"Return a string with information about a stack entry, which is a ``(frame, "
"lineno)`` tuple.  The return string contains:"
msgstr ""

#: ../../library/bdb.rst:382
msgid "The canonical filename which contains the frame."
msgstr ""

#: ../../library/bdb.rst:383
msgid "The function name or ``\"<lambda>\"``."
msgstr "関数名もしくは ``\"<lambda>\"``。"

#: ../../library/bdb.rst:384
msgid "The input arguments."
msgstr "入力された引数。"

#: ../../library/bdb.rst:385
msgid "The return value."
msgstr "戻り値。"

#: ../../library/bdb.rst:386
msgid "The line of code (if it exists)."
msgstr "(あれば)その行のコード。"

#: ../../library/bdb.rst:389
msgid ""
"The following two methods can be called by clients to use a debugger to "
"debug a :term:`statement`, given as a string."
msgstr ""
"以下の2つのメソッドは、文字列として渡された :term:`文 <statement>` をデバッグ"
"するもので、クライアントから利用されます。"

#: ../../library/bdb.rst:394
msgid ""
"Debug a statement executed via the :func:`exec` function.  *globals* "
"defaults to :attr:`!__main__.__dict__`, *locals* defaults to *globals*."
msgstr ""

#: ../../library/bdb.rst:399
msgid ""
"Debug an expression executed via the :func:`eval` function.  *globals* and "
"*locals* have the same meaning as in :meth:`run`."
msgstr ""
":func:`eval` 関数を利用して式を実行しデバッグします。 *globals* と *locals* "
"は :meth:`run` と同じ意味です。"

#: ../../library/bdb.rst:404
msgid "For backwards compatibility.  Calls the :meth:`run` method."
msgstr "後方互換性のためのメソッドです。 :meth:`run` を使ってください。"

#: ../../library/bdb.rst:408
msgid "Debug a single function call, and return its result."
msgstr "1つの関数呼び出しをデバッグし、その結果を返します。"

#: ../../library/bdb.rst:411
msgid "Finally, the module defines the following functions:"
msgstr "最後に、このモジュールは以下の関数を提供しています:"

#: ../../library/bdb.rst:415
msgid ""
"Return ``True`` if we should break here, depending on the way the :class:"
"`Breakpoint` *b* was set."
msgstr ""

#: ../../library/bdb.rst:418
msgid ""
"If it was set via line number, it checks if :attr:`b.line <bdb.Breakpoint."
"line>` is the same as the one in *frame*. If the breakpoint was set via :"
"attr:`function name <bdb.Breakpoint.funcname>`, we have to check we are in "
"the right *frame* (the right function) and if we are on its first executable "
"line."
msgstr ""

#: ../../library/bdb.rst:427
msgid ""
"Return ``(active breakpoint, delete temporary flag)`` or ``(None, None)`` as "
"the breakpoint to act upon."
msgstr ""

#: ../../library/bdb.rst:430
msgid ""
"The *active breakpoint* is the first entry in :attr:`bplist <bdb.Breakpoint."
"bplist>` for the (:attr:`file <bdb.Breakpoint.file>`, :attr:`line <bdb."
"Breakpoint.line>`) (which must exist) that is :attr:`enabled <bdb.Breakpoint."
"enabled>`, for which :func:`checkfuncname` is true, and that has neither a "
"false :attr:`condition <bdb.Breakpoint.cond>` nor positive :attr:`ignore "
"<bdb.Breakpoint.ignore>` count.  The *flag*, meaning that a temporary "
"breakpoint should be deleted, is ``False`` only when the :attr:`cond <bdb."
"Breakpoint.cond>` cannot be evaluated (in which case, :attr:`ignore <bdb."
"Breakpoint.ignore>` count is ignored)."
msgstr ""

#: ../../library/bdb.rst:441
msgid "If no such entry exists, then ``(None, None)`` is returned."
msgstr ""

#: ../../library/bdb.rst:446
msgid "Start debugging with a :class:`Bdb` instance from caller's frame."
msgstr ""
":class:`Bdb` クラスのインスタンスを使って、呼び出し元のフレームからデバッグを"
"開始します。"

#: ../../library/bdb.rst:303
msgid "quitting (bdb.Bdb attribute)"
msgstr ""
