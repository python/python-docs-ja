# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:02+0000\n"
"PO-Revision-Date: 2019-09-01 03:22+0000\n"
"Last-Translator: tomo, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/bdb.rst:2
msgid ":mod:`bdb` --- Debugger framework"
msgstr ":mod:`bdb` --- デバッガーフレームワーク"

#: ../../library/bdb.rst:7
msgid "**Source code:** :source:`Lib/bdb.py`"
msgstr "**ソースコード:** :source:`Lib/bdb.py`"

#: ../../library/bdb.rst:11
msgid ""
"The :mod:`bdb` module handles basic debugger functions, like setting "
"breakpoints or managing execution via the debugger."
msgstr ""
":mod:`bdb` モジュールは、ブレークポイントを設定したり、デバッガー経由で実行を"
"管理するような、基本的なデバッガー機能を提供します。"

#: ../../library/bdb.rst:14
msgid "The following exception is defined:"
msgstr "以下の例外が定義されています:"

#: ../../library/bdb.rst:18
msgid "Exception raised by the :class:`Bdb` class for quitting the debugger."
msgstr ":class:`Bdb` クラスが、デバッガーを終了させるために投げる例外。"

#: ../../library/bdb.rst:21
msgid "The :mod:`bdb` module also defines two classes:"
msgstr ":mod:`bdb` モジュールは2つのクラスを定義しています:"

#: ../../library/bdb.rst:25
msgid ""
"This class implements temporary breakpoints, ignore counts, disabling and "
"(re-)enabling, and conditionals."
msgstr ""
"このクラスはテンポラリブレークポイント、無視するカウント、無効化と再有効化、"
"条件付きブレークポイントを実装しています。"

#: ../../library/bdb.rst:28
msgid ""
"Breakpoints are indexed by number through a list called :attr:`bpbynumber` "
"and by ``(file, line)`` pairs through :attr:`bplist`.  The former points to "
"a single instance of class :class:`Breakpoint`.  The latter points to a list "
"of such instances since there may be more than one breakpoint per line."
msgstr ""
"ブレークポイントは :attr:`bpbynumber` という名前のリストで番号によりインデッ"
"クスされ、 :attr:`bplist` により ``(file, line)`` の形でインデックスされま"
"す。 :attr:`bpbynumber` は :class:`Breakpoint` クラスのインスタンスを指してい"
"ます。一方 :attr:`bplist` は、同じ行に複数のブレークポイントが設定される場合"
"があるので、インスタンスのリストを指しています。"

#: ../../library/bdb.rst:33
msgid ""
"When creating a breakpoint, its associated filename should be in canonical "
"form.  If a *funcname* is defined, a breakpoint hit will be counted when the "
"first line of that function is executed.  A conditional breakpoint always "
"counts a hit."
msgstr ""
"ブレークポイントを作るとき、設定されるファイル名は正規化されていなければなり"
"ません。*funcname* が設定されたとき、ブレークポイントはその関数の最初の行が実"
"行されたときにヒットカウントにカウントされます。条件付ブレークポイントは毎回"
"カウントされます。"

#: ../../library/bdb.rst:38
msgid ":class:`Breakpoint` instances have the following methods:"
msgstr ":class:`Breakpoint` インスタンスは以下のメソッドを持ちます:"

#: ../../library/bdb.rst:42
msgid ""
"Delete the breakpoint from the list associated to a file/line.  If it is the "
"last breakpoint in that position, it also deletes the entry for the file/"
"line."
msgstr ""
"このブレークポイントをファイル/行に関連付けられたリストから削除します。このブ"
"レークポイントがその行に設定された最後のブレークポイントだった場合、そのファ"
"イル/行に対するエントリ自体を削除します。"

#: ../../library/bdb.rst:49
msgid "Mark the breakpoint as enabled."
msgstr "このブレークポイントを有効にします。"

#: ../../library/bdb.rst:54
msgid "Mark the breakpoint as disabled."
msgstr "このブレークポイントを無効にします。"

#: ../../library/bdb.rst:59
msgid ""
"Return a string with all the information about the breakpoint, nicely "
"formatted:"
msgstr "ブレークポイントに関する情報を持つ文字列をフォーマットして返します:"

#: ../../library/bdb.rst:62
msgid "The breakpoint number."
msgstr "ブレークポイント番号。"

#: ../../library/bdb.rst:63
msgid "If it is temporary or not."
msgstr "テンポラリブレークポイントかどうか。"

#: ../../library/bdb.rst:64
msgid "Its file,line position."
msgstr "ファイル/行の位置。"

#: ../../library/bdb.rst:65
msgid "The condition that causes a break."
msgstr "ブレークする条件。"

#: ../../library/bdb.rst:66
msgid "If it must be ignored the next N times."
msgstr "次のN回無視されるか。"

#: ../../library/bdb.rst:67
msgid "The breakpoint hit count."
msgstr "ヒットカウント。"

#: ../../library/bdb.rst:73
msgid ""
"Print the output of :meth:`bpformat` to the file *out*, or if it is "
"``None``, to standard output."
msgstr ""
"ファイル *out* に、またはそれが ``None`` の場合は標準出力に、 :meth:"
"`bpformat` の出力を表示する。"

#: ../../library/bdb.rst:79
msgid "The :class:`Bdb` class acts as a generic Python debugger base class."
msgstr ""
":class:`Bdb` クラスは一般的なPythonデバッガーの基本クラスとして振舞います。"

#: ../../library/bdb.rst:81
msgid ""
"This class takes care of the details of the trace facility; a derived class "
"should implement user interaction.  The standard debugger class (:class:`pdb."
"Pdb`) is an example."
msgstr ""
"このクラスはトレース機能の詳細を扱います。ユーザーとのインタラクションは、派"
"生クラスが実装するべきです。標準ライブラリのデバッガクラス (:class:`pdb."
"Pdb`) がその利用例です。"

#: ../../library/bdb.rst:85
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. Whether a frame is considered to "
"originate in a certain module is determined by the ``__name__`` in the frame "
"globals."
msgstr ""
"*skip* 引数は、もし与えられたならグロブ形式のモジュール名パターンの iterable "
"でなければなりません。デバッガはこれらのパターンのどれかにマッチするモジュー"
"ルで発生したフレームにステップインしなくなります。フレームが特定のモジュール"
"で発生したかどうかは、フレームのグローバル変数の ``__name__`` によって決定さ"
"れます。"

#: ../../library/bdb.rst:91
msgid "The *skip* argument."
msgstr "*skip* 引数が追加されました。"

#: ../../library/bdb.rst:94
msgid ""
"The following methods of :class:`Bdb` normally don't need to be overridden."
msgstr ""
"以下の :class:`Bdb` のメソッドは、通常オーバーライドする必要はありません。"

#: ../../library/bdb.rst:98
msgid ""
"Auxiliary method for getting a filename in a canonical form, that is, as a "
"case-normalized (on case-insensitive filesystems) absolute path, stripped of "
"surrounding angle brackets."
msgstr ""
"標準化されたファイル名を取得するための補助関数。標準化されたファイル名とは、"
"(大文字小文字を区別しないファイルシステムにおいて)大文字小文字を正規化し、絶"
"対パスにしたものです。ファイル名が \"<\" と \">\" で囲まれていた場合はそれを"
"取り除いたものです。"

#: ../../library/bdb.rst:104
msgid ""
"Set the :attr:`botframe`, :attr:`stopframe`, :attr:`returnframe` and :attr:"
"`quitting` attributes with values ready to start debugging."
msgstr ""
":attr:`botframe`, :attr:`stopframe`, :attr:`returnframe`, :attr:`quitting` 属"
"性を、デバッグを始められる状態に設定します。"

#: ../../library/bdb.rst:109
msgid ""
"This function is installed as the trace function of debugged frames.  Its "
"return value is the new trace function (in most cases, that is, itself)."
msgstr ""
"この関数は、デバッグされているフレームのトレース関数としてインストールされま"
"す。戻り値は新しいトレース関数(殆どの場合はこの関数自身)です。"

#: ../../library/bdb.rst:112
msgid ""
"The default implementation decides how to dispatch a frame, depending on the "
"type of event (passed as a string) that is about to be executed. *event* can "
"be one of the following:"
msgstr ""
"デフォルトの実装は、実行しようとしている *event* (文字列として渡されます) の"
"種類に基づいてフレームのディスパッチ方法を決定します。*event* は次のうちのど"
"れかです:"

#: ../../library/bdb.rst:116
msgid "``\"line\"``: A new line of code is going to be executed."
msgstr "``\"line\"``: 新しい行を実行しようとしています。"

#: ../../library/bdb.rst:117
msgid ""
"``\"call\"``: A function is about to be called, or another code block "
"entered."
msgstr "``\"call\"``: 関数が呼び出されているか、別のコードブロックに入ります。"

#: ../../library/bdb.rst:119
msgid "``\"return\"``: A function or other code block is about to return."
msgstr "``\"return\"``: 関数か別のコードブロックからreturnしようとしています。"

#: ../../library/bdb.rst:120
msgid "``\"exception\"``: An exception has occurred."
msgstr "``\"exception\"``: 例外が発生しました。"

#: ../../library/bdb.rst:121
msgid "``\"c_call\"``: A C function is about to be called."
msgstr "``\"c_call\"``: C関数を呼び出そうとしています。"

#: ../../library/bdb.rst:122
msgid "``\"c_return\"``: A C function has returned."
msgstr "``\"c_return\"``: C関数からreturnしました。"

#: ../../library/bdb.rst:123
msgid "``\"c_exception\"``: A C function has raised an exception."
msgstr "``\"c_exception\"``: C関数が例外を発生させました。"

#: ../../library/bdb.rst:125
msgid ""
"For the Python events, specialized functions (see below) are called.  For "
"the C events, no action is taken."
msgstr ""
"Pythonのイベントに対しては、以下の専用の関数群が呼ばれます。Cのイベントに対し"
"ては何もしません。"

#: ../../library/bdb.rst:128
msgid "The *arg* parameter depends on the previous event."
msgstr "*arg* 引数は以前のイベントに依存します。"

#: ../../library/bdb.rst:130
msgid ""
"See the documentation for :func:`sys.settrace` for more information on the "
"trace function.  For more information on code and frame objects, refer to :"
"ref:`types`."
msgstr ""
"トレース関数についてのより詳しい情報は、 :func:`sys.settrace` のドキュメント"
"を参照してください。コードとフレームオブジェクトについてのより詳しい情報"
"は、 :ref:`types` を参照してください。"

#: ../../library/bdb.rst:136
msgid ""
"If the debugger should stop on the current line, invoke the :meth:"
"`user_line` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can be "
"set from :meth:`user_line`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""
"デバッガーが現在の行で止まるべきであれば、 :meth:`user_line` メソッド (サブク"
"ラスでオーバーライドされる)を呼び出します。 :attr:`Bdb.quitting` フラグ(:"
"meth:`user_line` から設定できます)が設定されていた場合、 :exc:`BdbQuit` 例外"
"を発生させます。このスコープのこれからのトレースのために、 :meth:"
"`trace_dispatch` メソッドの参照を返します。"

#: ../../library/bdb.rst:144
msgid ""
"If the debugger should stop on this function call, invoke the :meth:"
"`user_call` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can be "
"set from :meth:`user_call`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""
"デバッガーがこの関数呼び出しで止まるべきであれば、 :meth:`user_call` メソッ"
"ド (サブクラスでオーバーライドされる)を呼び出します。 :attr:`Bdb.quitting` フ"
"ラグ(:meth:`user_call` から設定できます)が設定されていた場合、 :exc:"
"`BdbQuit` 例外を発生させます。このスコープのこれからのトレースのために、 :"
"meth:`trace_dispatch` メソッドの参照を返します。"

#: ../../library/bdb.rst:152
msgid ""
"If the debugger should stop on this function return, invoke the :meth:"
"`user_return` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can "
"be set from :meth:`user_return`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""
"デバッガーがこの関数からのリターンで止まるべきであれば、 :meth:`user_return` "
"メソッド (サブクラスでオーバーライドされる)を呼び出します。 :attr:`Bdb."
"quitting` フラグ(:meth:`user_return` から設定できます)が設定されていた場"
"合、 :exc:`BdbQuit` 例外を発生させます。このスコープのこれからのトレースのた"
"めに、 :meth:`trace_dispatch` メソッドの参照を返します。"

#: ../../library/bdb.rst:160
msgid ""
"If the debugger should stop at this exception, invokes the :meth:"
"`user_exception` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can "
"be set from :meth:`user_exception`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""
"デバッガーがこの例外発生で止まるべきであれば、 :meth:`user_exception` メソッ"
"ド (サブクラスでオーバーライドされる)を呼び出します。 :attr:`Bdb.quitting` フ"
"ラグ(:meth:`user_exception` から設定できます)が設定されていた場合、 :exc:"
"`BdbQuit` 例外を発生させます。このスコープのこれからのトレースのために、 :"
"meth:`trace_dispatch` メソッドの参照を返します。"

#: ../../library/bdb.rst:166
msgid ""
"Normally derived classes don't override the following methods, but they may "
"if they want to redefine the definition of stopping and breakpoints."
msgstr ""
"通常、継承クラスは以下のメソッド群をオーバーライドしません。しかし、停止やブ"
"レークポイント機能を再定義したい場合には、オーバーライドすることもあります。"

#: ../../library/bdb.rst:171
msgid ""
"This method checks if the *frame* is somewhere below :attr:`botframe` in the "
"call stack.  :attr:`botframe` is the frame in which debugging started."
msgstr ""
"このメソッドは *frame* がコールスタック中で :attr:`botframe` よりも下にあるか"
"チェックします。 :attr:`botframe` はデバッグを開始したフレームです。"

#: ../../library/bdb.rst:176
msgid ""
"This method checks if there is a breakpoint in the filename and line "
"belonging to *frame* or, at least, in the current function.  If the "
"breakpoint is a temporary one, this method deletes it."
msgstr ""
"このメソッドは、*frame* に属するファイル名と行に、あるいは、少なくとも現在の"
"関数にブレークポイントがあるかどうかをチェックします。ブレークポイントがテン"
"ポラリブレークポイントだった場合、このメソッドはそのブレークポイントを削除し"
"ます。"

#: ../../library/bdb.rst:182
msgid ""
"This method checks if there is a breakpoint in the filename of the current "
"frame."
msgstr ""
"このメソッドは、現在のフレームのファイル名の中にブレークポイントが存在するか"
"どうかをチェックします。"

#: ../../library/bdb.rst:185
msgid ""
"Derived classes should override these methods to gain control over debugger "
"operation."
msgstr ""
"継承クラスはデバッガー操作をするために以下のメソッド群をオーバーライドするべ"
"きです。"

#: ../../library/bdb.rst:190
msgid ""
"This method is called from :meth:`dispatch_call` when there is the "
"possibility that a break might be necessary anywhere inside the called "
"function."
msgstr ""
"このメソッドは、呼ばれた関数の中でブレークする必要がある可能性がある場合"
"に、 :meth:`dispatch_call` から呼び出されます。"

#: ../../library/bdb.rst:196
msgid ""
"This method is called from :meth:`dispatch_line` when either :meth:"
"`stop_here` or :meth:`break_here` yields ``True``."
msgstr ""
"このメソッドは、 :meth:`stop_here` か :meth:`break_here` が ``True`` を返した"
"ときに、 :meth:`dispatch_line` から呼び出されます。"

#: ../../library/bdb.rst:201
msgid ""
"This method is called from :meth:`dispatch_return` when :meth:`stop_here` "
"yields ``True``."
msgstr ""
"このメソッドは、 :meth:`stop_here` が ``True`` を返したときに、 :meth:"
"`dispatch_return` から呼び出されます。"

#: ../../library/bdb.rst:206
msgid ""
"This method is called from :meth:`dispatch_exception` when :meth:`stop_here` "
"yields ``True``."
msgstr ""
"このメソッドは、 :meth:`stop_here` が ``True`` を返したときに、 :meth:"
"`dispatch_exception` から呼び出されます。"

#: ../../library/bdb.rst:211
msgid "Handle how a breakpoint must be removed when it is a temporary one."
msgstr ""
"ブレークポイントがテンポラリブレークポイントだったときに、それをどう削除する"
"かを決定します。"

#: ../../library/bdb.rst:213
msgid "This method must be implemented by derived classes."
msgstr "継承クラスはこのメソッドを実装しなければなりません。"

#: ../../library/bdb.rst:216
msgid ""
"Derived classes and clients can call the following methods to affect the "
"stepping state."
msgstr ""
"継承クラスとクライアントは、ステップ状態に影響を及ぼすために以下のメソッドを"
"呼び出すことができます。"

#: ../../library/bdb.rst:221
msgid "Stop after one line of code."
msgstr "コードの次の行でストップします。"

#: ../../library/bdb.rst:225
msgid "Stop on the next line in or below the given frame."
msgstr ""
"与えられたフレームかそれより下(のフレーム)にある、次の行でストップします。"

#: ../../library/bdb.rst:229
msgid "Stop when returning from the given frame."
msgstr "指定されたフレームから抜けるときにストップします。"

#: ../../library/bdb.rst:233
msgid ""
"Stop when the line with the line no greater than the current one is reached "
"or when returning from current frame."
msgstr ""
"現在の行番号よりも大きい行番号に到達したとき、あるいは、現在のフレームから戻"
"るときにストップします。"

#: ../../library/bdb.rst:238
msgid ""
"Start debugging from *frame*.  If *frame* is not specified, debugging starts "
"from caller's frame."
msgstr ""
"*frame* からデバッグを開始します。*frame* が指定されなかった場合、デバッグは"
"呼び出し元のフレームから開始します。"

#: ../../library/bdb.rst:243
msgid ""
"Stop only at breakpoints or when finished.  If there are no breakpoints, set "
"the system trace function to ``None``."
msgstr ""
"ブレークポイントに到達するか終了したときにストップします。もしブレークポイン"
"トが1つも無い場合、システムのトレース関数を ``None`` に設定します。"

#: ../../library/bdb.rst:248
msgid ""
"Set the :attr:`quitting` attribute to ``True``.  This raises :exc:`BdbQuit` "
"in the next call to one of the :meth:`dispatch_\\*` methods."
msgstr ""
":attr:`quitting` 属性を ``True`` に設定します。これにより、次回の :meth:"
"`dispatch_\\*` メソッドのどれかの呼び出しで、 :exc:`BdbQuit` 例外を発生させま"
"す。"

#: ../../library/bdb.rst:252
msgid ""
"Derived classes and clients can call the following methods to manipulate "
"breakpoints.  These methods return a string containing an error message if "
"something went wrong, or ``None`` if all is well."
msgstr ""
"継承クラスとクライアントは以下のメソッドをブレークポイント操作に利用できま"
"す。これらのメソッドは、何か悪いことがあればエラーメッセージを含む文字列を返"
"し、すべてが順調であれば ``None`` を返します。"

#: ../../library/bdb.rst:258
msgid ""
"Set a new breakpoint.  If the *lineno* line doesn't exist for the *filename* "
"passed as argument, return an error message.  The *filename* should be in "
"canonical form, as described in the :meth:`canonic` method."
msgstr ""
"新しいブレークポイントを設定します。引数の *lineno* 行が *filename* に存在し"
"ない場合、エラーメッセージを返します。 *filename* は、 :meth:`canonic` メソッ"
"ドで説明されているような、標準形である必要があります。"

#: ../../library/bdb.rst:264
msgid ""
"Delete the breakpoints in *filename* and *lineno*.  If none were set, an "
"error message is returned."
msgstr ""
"*filename* の *lineno* 行にあるブレークポイントを削除します。もしブレークポイ"
"ントが無かった場合、エラーメッセージを返します。"

#: ../../library/bdb.rst:269
msgid ""
"Delete the breakpoint which has the index *arg* in the :attr:`Breakpoint."
"bpbynumber`.  If *arg* is not numeric or out of range, return an error "
"message."
msgstr ""
":attr:`Breakpoint.bpbynumber` の中で *arg* のインデックスを持つブレークポイン"
"トを削除します。 *arg* が数値でないか範囲外の場合、エラーメッセージを返しま"
"す。"

#: ../../library/bdb.rst:275
msgid ""
"Delete all breakpoints in *filename*.  If none were set, an error message is "
"returned."
msgstr ""
"*filename* に含まれるすべてのブレークポイントを削除します。もしブレークポイン"
"トが無い場合、エラーメッセージを返します。"

#: ../../library/bdb.rst:280
msgid "Delete all existing breakpoints."
msgstr "すべてのブレークポイントを削除します。"

#: ../../library/bdb.rst:284
msgid ""
"Return a breakpoint specified by the given number.  If *arg* is a string, it "
"will be converted to a number.  If *arg* is a non-numeric string, if the "
"given breakpoint never existed or has been deleted, a :exc:`ValueError` is "
"raised."
msgstr ""
"与えられた数値によって指定されるブレークポイントを返します。 *arg* が文字列な"
"ら数値に変換されます。 *arg* が非数値の文字列である場合、指定されたブレークポ"
"イントが存在しないか削除された場合、 :exc:`ValueError` が上げられます。"

#: ../../library/bdb.rst:293
msgid "Check if there is a breakpoint for *lineno* of *filename*."
msgstr ""
"*filename* の *lineno* にブレークポイントが存在するかどうかをチェックします。"

#: ../../library/bdb.rst:297
msgid ""
"Return all breakpoints for *lineno* in *filename*, or an empty list if none "
"are set."
msgstr ""
"*filename* の *lineno* にあるすべてのブレークポイントを返します。ブレークポイ"
"ントが存在しない場合は空のリストを返します。"

#: ../../library/bdb.rst:302
msgid "Return all breakpoints in *filename*, or an empty list if none are set."
msgstr ""
"*filename* の中のすべてのブレークポイントを返します。ブレークポイントが存在し"
"ない場合は空のリストを返します。"

#: ../../library/bdb.rst:306
msgid "Return all breakpoints that are set."
msgstr "セットされているすべてのブレークポイントを返します。"

#: ../../library/bdb.rst:309
msgid ""
"Derived classes and clients can call the following methods to get a data "
"structure representing a stack trace."
msgstr ""
"継承クラスとクライアントは以下のメソッドを呼んでスタックトレースを表現する"
"データ構造を取得することができます。"

#: ../../library/bdb.rst:314
msgid ""
"Get a list of records for a frame and all higher (calling) and lower frames, "
"and the size of the higher part."
msgstr ""
"与えられたフレームおよび上位(呼び出し側)と下位のすべてのフレームに対するレ"
"コードのリストと、上位フレームのサイズを得ます。"

#: ../../library/bdb.rst:319
msgid ""
"Return a string with information about a stack entry, identified by a "
"``(frame, lineno)`` tuple:"
msgstr ""
"``(frame, lineno)`` で指定されたスタックエントリに関する次のような情報を持つ"
"文字列を返します:"

#: ../../library/bdb.rst:322
msgid "The canonical form of the filename which contains the frame."
msgstr "そのフレームを含むファイル名の標準形。"

#: ../../library/bdb.rst:323
msgid "The function name, or ``\"<lambda>\"``."
msgstr "関数名、もしくは ``\"<lambda>\"``。"

#: ../../library/bdb.rst:324
msgid "The input arguments."
msgstr "入力された引数。"

#: ../../library/bdb.rst:325
msgid "The return value."
msgstr "戻り値。"

#: ../../library/bdb.rst:326
msgid "The line of code (if it exists)."
msgstr "(あれば)その行のコード。"

#: ../../library/bdb.rst:329
msgid ""
"The following two methods can be called by clients to use a debugger to "
"debug a :term:`statement`, given as a string."
msgstr ""
"以下の2つのメソッドは、文字列として渡された :term:`文 <statement>` をデバッグ"
"するもので、クライアントから利用されます。"

#: ../../library/bdb.rst:334
msgid ""
"Debug a statement executed via the :func:`exec` function.  *globals* "
"defaults to :attr:`__main__.__dict__`, *locals* defaults to *globals*."
msgstr ""
":func:`exec` 関数を利用して文を実行しデバッグします。 *globals* はデフォルト"
"では :attr:`__main__.__dict__` で、 *locals* はデフォルトでは *globals* で"
"す。"

#: ../../library/bdb.rst:339
msgid ""
"Debug an expression executed via the :func:`eval` function.  *globals* and "
"*locals* have the same meaning as in :meth:`run`."
msgstr ""
":func:`eval` 関数を利用して式を実行しデバッグします。 *globals* と *locals* "
"は :meth:`run` と同じ意味です。"

#: ../../library/bdb.rst:344
msgid "For backwards compatibility.  Calls the :meth:`run` method."
msgstr "後方互換性のためのメソッドです。 :meth:`run` を使ってください。"

#: ../../library/bdb.rst:348
msgid "Debug a single function call, and return its result."
msgstr "1つの関数呼び出しをデバッグし、その結果を返します。"

#: ../../library/bdb.rst:351
msgid "Finally, the module defines the following functions:"
msgstr "最後に、このモジュールは以下の関数を提供しています:"

#: ../../library/bdb.rst:355
msgid ""
"Check whether we should break here, depending on the way the breakpoint *b* "
"was set."
msgstr ""
"この場所でブレークする必要があるかどうかを、ブレークポイント *b* が設定された"
"方法に依存する方法でチェックします。"

#: ../../library/bdb.rst:358
msgid ""
"If it was set via line number, it checks if ``b.line`` is the same as the "
"one in the frame also passed as argument.  If the breakpoint was set via "
"function name, we have to check we are in the right frame (the right "
"function) and if we are in its first executable line."
msgstr ""
"ブレークポイントが行番号で設定されていた場合、この関数は ``b.line`` が、同じ"
"く引数として与えられた *frame* の中の行に一致するかどうかをチェックします。ブ"
"レークポイントが関数名で設定されていた場合、この関数は *frame* が指定された関"
"数のものであるかどうかと、その関数の最初の行であるかどうかをチェックします。"

#: ../../library/bdb.rst:365
msgid ""
"Determine if there is an effective (active) breakpoint at this line of code. "
"Return a tuple of the breakpoint and a boolean that indicates if it is ok to "
"delete a temporary breakpoint.  Return ``(None, None)`` if there is no "
"matching breakpoint."
msgstr ""
"指定されたソースコード中の行に(有効な)ブレークポイントがあるかどうかを判断し"
"ます。ブレークポイントと、テンポラリブレークポイントを削除して良いかどうかを"
"示すフラグからなるタプルを返します。マッチするブレークポイントが存在しない場"
"合は ``(None, None)`` を返します。"

#: ../../library/bdb.rst:372
msgid "Start debugging with a :class:`Bdb` instance from caller's frame."
msgstr ""
":class:`Bdb` クラスのインスタンスを使って、呼び出し元のフレームからデバッグを"
"開始します。"
