# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/sgmllib.rst:2
msgid ":mod:`sgmllib` --- Simple SGML parser"
msgstr ":mod:`sgmllib` --- 単純な SGML パーザ"

#: ../../library/sgmllib.rst:8
msgid "The :mod:`sgmllib` module has been removed in Python 3."
msgstr ":mod:`sgmllib` モジュールは Python 3 で削除されました。"

#: ../../library/sgmllib.rst:13
msgid ""
"This module defines a class :class:`SGMLParser` which serves as the basis "
"for parsing text files formatted in SGML (Standard Generalized Mark-up "
"Language). In fact, it does not provide a full SGML parser --- it only "
"parses SGML insofar as it is used by HTML, and the module only exists as a "
"base for the :mod:`htmllib` module.  Another HTML parser which supports "
"XHTML and offers a somewhat different interface is available in the :mod:"
"`HTMLParser` module."
msgstr ""
"このモジュールでは SGML (Standard Generalized Mark-up Language: 汎用マーク"
"アップ言語標準) で書式化されたテキストファイルを解析するための基礎として働"
"く :class:`SGMLParser` クラスを定義しています。実際には、このクラスは完全な "
"SGML パーザを提供しているわけではありません --- このクラスは HTML で用いられ"
"ているような SGML だけを解析し、モジュール自体も :mod:`htmllib` モジュールの"
"基礎にするためだけに存在しています。XHTML をサポートし、少し異なったインタ"
"フェースを提供しているもう一つの HTML パーザは、 :mod:`HTMLParser` モジュール"
"で使うことができます。"

#: ../../library/sgmllib.rst:23
msgid ""
"The :class:`SGMLParser` class is instantiated without arguments. The parser "
"is hardcoded to recognize the following constructs:"
msgstr ""
":class:`SGMLParser` クラスは引数無しでインスタンス化されます。このパーザは以"
"下の構成を認識するようにハードコードされています:"

#: ../../library/sgmllib.rst:26
msgid ""
"Opening and closing tags of the form ``<tag attr=\"value\" ...>`` and ``</"
"tag>``, respectively."
msgstr ""
"``<tag attr=\"value\" ...>`` と ``</tag>`` で表されるタグの開始部と終了部。"

#: ../../library/sgmllib.rst:29
msgid "Numeric character references of the form ``&#name;``."
msgstr "``&#name;`` 形式をとる文字の数値参照。"

#: ../../library/sgmllib.rst:31
msgid "Entity references of the form ``&name;``."
msgstr "``&name;`` 形式をとるエンティティ参照。"

#: ../../library/sgmllib.rst:33
msgid ""
"SGML comments of the form ``<!--text-->``.  Note that spaces, tabs, and "
"newlines are allowed between the trailing ``>`` and the immediately "
"preceding ``--``."
msgstr ""
"``<!--text-->`` 形式をとる SGML コメント。末尾の ``>`` とその直前にある ``--"
"`` の間にはスペース、タブ、改行を入れることができます。"

#: ../../library/sgmllib.rst:37
msgid "A single exception is defined as well:"
msgstr "一つの例外が以下のように定義されます:"

#: ../../library/sgmllib.rst:42
msgid ""
"Exception raised by the :class:`SGMLParser` class when it encounters an "
"error while parsing."
msgstr ""
":class:`SGMLParser` クラスで構文解析中にエラーに出逢うとこの例外が発生しま"
"す。"

#: ../../library/sgmllib.rst:47
msgid ":class:`SGMLParser` instances have the following methods:"
msgstr ":class:`SGMLParser` インスタンスは以下のメソッドを持っています:"

#: ../../library/sgmllib.rst:52
msgid ""
"Reset the instance.  Loses all unprocessed data.  This is called implicitly "
"at instantiation time."
msgstr ""
"インスタンスをリセットします。未処理のデータはすべて失われます。インスタンス"
"化の際に暗黙的に呼び出されます。"

#: ../../library/sgmllib.rst:58
msgid ""
"Stop processing tags.  Treat all following input as literal input (CDATA). "
"(This is only provided so the HTML tag ``<PLAINTEXT>`` can be implemented.)"
msgstr ""
"タグの処理を停止します。以降の入力をリテラル入力 (CDATA) として扱います。(こ"
"の機能は HTML タグ ``<PAINTEXT>`` を実装できるようにするためだけに提供されて"
"います)"

#: ../../library/sgmllib.rst:64
msgid "Enter literal mode (CDATA mode)."
msgstr "リテラルモード (CDATA モード) に移行します。"

#: ../../library/sgmllib.rst:69
msgid ""
"Feed some text to the parser.  It is processed insofar as it consists of "
"complete elements; incomplete data is buffered until more data is fed or :"
"meth:`close` is called."
msgstr ""
"テキストをパーザに入力します。入力は完全なエレメントから成り立つ場合に限り処"
"理されます; 不完全なデータは追加のデータが入力されるか、 :meth:`close` が呼び"
"出されるまでバッファに蓄積されます。"

#: ../../library/sgmllib.rst:76
msgid ""
"Force processing of all buffered data as if it were followed by an end-of-"
"file mark.  This method may be redefined by a derived class to define "
"additional processing at the end of the input, but the redefined version "
"should always call :meth:`close`."
msgstr ""
"バッファに蓄積されている全てのデータについて、直後に EOF が来た時のようにして"
"強制的に処理します。このメソッドは派生クラスで再定義して、入力の終了時に追加"
"の処理を行うよう定義することができますが、このメソッドの再定義されたバージョ"
"ンでは常に :meth:`close` を呼び出さなければなりません。"

#: ../../library/sgmllib.rst:84
msgid ""
"Return the text of the most recently opened start tag.  This should not "
"normally be needed for structured processing, but may be useful in dealing "
"with HTML \"as deployed\" or for re-generating input with minimal changes "
"(whitespace between attributes can be preserved, etc.)."
msgstr ""
"最も最近開かれた開始タグのテキスト部分を返します。このテキストは必ずしも元"
"データを構造化する上で必須ではありませんが、 \"広く知られている (as "
"deployed)\" HTML を扱ったり、入力を最小限の変更で再生成 (属性間の空白をそのま"
"まにするなど) したりする場合に便利なことがあります。"

#: ../../library/sgmllib.rst:92
msgid ""
"This method is called to handle start tags for which either a :meth:"
"`start_tag` or :meth:`do_tag` method has been defined.  The *tag* argument "
"is the name of the tag converted to lower case, and the *method* argument is "
"the bound method which should be used to support semantic interpretation of "
"the start tag. The *attributes* argument is a list of ``(name, value)`` "
"pairs containing the attributes found inside the tag's ``<>`` brackets."
msgstr ""
"このメソッドは :meth:`start_tag` か :meth:`do_tag` のどちらかのメソッドが定義"
"されている開始タグを処理するために呼び出されます。 *tag* 引数はタグの名前で、"
"小文字に変換されています。 *method* 引数は開始タグの意味解釈をサポートするた"
"めに用いられるバインドされたメソッドです。 *attributes* 引数は ``(name, "
"value)`` のペアからなるリストで、タグの ``<>`` 括弧内にある属性が収められてい"
"ます。"

#: ../../library/sgmllib.rst:99
msgid ""
"The *name* has been translated to lower case. Double quotes and backslashes "
"in the *value* have been interpreted, as well as known character references "
"and known entity references terminated by a semicolon (normally, entity "
"references can be terminated by any non-alphanumerical character, but this "
"would break the very common case of ``<A HREF=\"url?spam=1&eggs=2\">`` when "
"``eggs`` is a valid entity name)."
msgstr ""
"*name* は小文字に変換されます。 *value* 内の二重引用符とバックスラッシュも変"
"換され、と同時に知られている文字参照および知られているエンティティ参照でセミ"
"コロンで終端されているものも変換されます(通常、エンティティ参照は任意の非英数"
"文字で終端されてよいのですが、これを許すと非常に一般的な ``<A HREF=\"url?"
"spam=1&eggs=2\">`` 　において ``eggs`` が正当なエンティティ参照であるような"
"ケースを破綻させます)。"

#: ../../library/sgmllib.rst:106
msgid ""
"For instance, for the tag ``<A HREF=\"http://www.cwi.nl/\">``, this method "
"would be called as ``unknown_starttag('a', [('href', 'http://www.cwi."
"nl/')])``.  The base implementation simply calls *method* with *attributes* "
"as the only argument."
msgstr ""
"例えば、タグ ``<A HREF=\"http://www.cwi.nl/\">`` を処理する場合、このメソッド"
"は ``unknown_starttag('a', [('href', 'http://www.cwi.nl/')])`` として呼び出さ"
"れます。基底クラスの実装では、単に *method* を単一の引数 *attributes* と共に"
"呼び出します。"

#: ../../library/sgmllib.rst:111
msgid "Handling of entity and character references within attribute values."
msgstr "属性値中のエンティティおよび文字参照の扱い."

#: ../../library/sgmllib.rst:117
msgid ""
"This method is called to handle endtags for which an :meth:`end_tag` method "
"has been defined.  The *tag* argument is the name of the tag converted to "
"lower case, and the *method* argument is the bound method which should be "
"used to support semantic interpretation of the end tag.  If no :meth:"
"`end_tag` method is defined for the closing element, this handler is not "
"called.  The base implementation simply calls *method*."
msgstr ""
"このメソッドは :meth:`end_tag` メソッドの定義されている終了タグを処理するため"
"に呼び出されます。 *tag* 引数はタグの名前で、小文字に変換されており、 "
"*method* 引数は終了タグの意味解釈をサポートするために使われるバインドされたメ"
"ソッドです。 :meth:`end_tag` メソッドが終了エレメントとして定義されていない場"
"合、このハンドラは呼び出されません。基底クラスの実装では単に *method* を呼び"
"出します。"

#: ../../library/sgmllib.rst:127
msgid ""
"This method is called to process arbitrary data.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""
"このメソッドは何らかのデータを処理するために呼び出されます。派生クラスで上書"
"きするためのメソッドです; 基底クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:133
msgid ""
"This method is called to process a character reference of the form ``&#ref;"
"``. The base implementation uses :meth:`convert_charref` to convert the "
"reference to a string.  If that method returns a string, it is passed to :"
"meth:`handle_data`, otherwise ``unknown_charref(ref)`` is called to handle "
"the error."
msgstr ""
"このメソッドは ``&#ref;`` 形式の文字参照 (character reference) を処理するため"
"に呼び出されます。基底クラスの実装は、 :meth:`convert_charref` を使って参照を"
"文字列に変換します。もしそのメソッドが文字列を返せば :meth:`handle_data` を呼"
"び出します。そうでなければ、エラーを処理するために ``unknown_charref(ref)`` "
"が呼び出されます。"

#: ../../library/sgmllib.rst:138
msgid "Use :meth:`convert_charref` instead of hard-coding the conversion."
msgstr ""
"ハードコードされた変換ではなく :meth:`convert_charref` を使うようになりまし"
"た。"

#: ../../library/sgmllib.rst:144
msgid ""
"Convert a character reference to a string, or ``None``.  *ref* is the "
"reference passed in as a string.  In the base implementation, *ref* must be "
"a decimal number in the range 0--255.  It converts the code point found "
"using the :meth:`convert_codepoint` method. If *ref* is invalid or out of "
"range, this method returns ``None``.  This method is called by the default :"
"meth:`handle_charref` implementation and by the attribute value parser."
msgstr ""
"文字参照を文字列に変換するか、 ``None`` を返します。 *ref* は文字列として渡さ"
"れる参照です。基底クラスでは *ref* は 0--255 の範囲の十進数でなければなりませ"
"ん。そしてコードポイントをメソッド :meth:`convert_codepoint` を使って変換しま"
"す。もし *ref* が不正もしくは範囲外ならば、 ``None`` を返します。このメソッド"
"はデフォルト実装の :meth:`handle_charref` と属性値パーザから呼び出されます。"

#: ../../library/sgmllib.rst:156
msgid ""
"Convert a code point to a :class:`str` value.  Encodings can be handled here "
"if appropriate, though the rest of :mod:`sgmllib` is oblivious on this "
"matter."
msgstr ""
"コードポイントを :class:`str` の値に変換します。もしそれが適切ならばエンコー"
"ディングをここで扱うこともできますが、 :mod:`sgmllib` の残りの部分はこの問題"
"に関知しません。"

#: ../../library/sgmllib.rst:164
msgid ""
"This method is called to process a general entity reference of the form "
"``&ref;`` where *ref* is a general entity reference.  It converts *ref* by "
"passing it to :meth:`convert_entityref`.  If a translation is returned, it "
"calls the method :meth:`handle_data` with the translation; otherwise, it "
"calls the method ``unknown_entityref(ref)``. The default :attr:`entitydefs` "
"defines translations for ``&amp;``, ``&apos;``, ``&gt;``, ``&lt;``, and "
"``&quot;``."
msgstr ""
"このメソッドは *ref* を一般エンティティ参照として、 ``&ref;`` 形式のエンティ"
"ティ参照を処理するために呼び出されます。\n"
"このメソッドは、 *ref* を :meth:`convert_entityref` に渡して変換します。\n"
"変換結果が返ってきた場合、変換された文字を引数にして :meth:`handle_data` を呼"
"び出します; そうでない場合、 ``unknown_entityref(ref)`` を呼び出します。\n"
"標準では :attr:`entitydefs` は ``&amp;`` 、 ``&apos;`` 、 ``&gt;`` 、 ``&lt;"
"`` 、および ``&quot;`` の変換を定義しています。"

#: ../../library/sgmllib.rst:171
msgid "Use :meth:`convert_entityref` instead of hard-coding the conversion."
msgstr ""
"ハードコードされた変換ではなく :meth:`convert_entityref` を使うようになりまし"
"た。"

#: ../../library/sgmllib.rst:177
msgid ""
"Convert a named entity reference to a :class:`str` value, or ``None``.  The "
"resulting value will not be parsed.  *ref* will be only the name of the "
"entity. The default implementation looks for *ref* in the instance (or "
"class) variable :attr:`entitydefs` which should be a mapping from entity "
"names to corresponding translations.  If no translation is available for "
"*ref*, this method returns ``None``.  This method is called by the default :"
"meth:`handle_entityref` implementation and by the attribute value parser."
msgstr ""
"名前付きエンティティ参照を :class:`str` の値に変換するか、または ``None`` を"
"返します。変換結果は再パーズしません。 *ref* はエンティティの名前部分だけで"
"す。デフォルトの実装ではインスタンス(またはクラス)変数の :attr:`entitydefs` "
"というエンティティ名から対応する文字列へのマッピングから *ref* を探します。も"
"し *ref* に対応する文字列が見つからなければメソッドは ``None`` を返します。こ"
"のメソッドは :meth:`handle_entityref` のデフォルト実装からおよび属性値パーザ"
"から呼び出されます。"

#: ../../library/sgmllib.rst:190
msgid ""
"This method is called when a comment is encountered.  The *comment* argument "
"is a string containing the text between the ``<!--`` and ``-->`` delimiters, "
"but not the delimiters themselves.  For example, the comment ``<!--text-->`` "
"will cause this method to be called with the argument ``'text'``.  The "
"default method does nothing."
msgstr ""
"このメソッドはコメントに遭遇した場合に呼び出されます。 *comment* 引数は文字列"
"で、 ``<!--`` と``-->`` デリミタ間の、デリミタ自体を除いたテキストが収められ"
"ています。例えば、コメント ``<!--text-->`` があると、このメソッドは引数 "
"``'text'`` で呼び出されます。基底クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:199
msgid ""
"Method called when an SGML declaration is read by the parser.  In practice, "
"the ``DOCTYPE`` declaration is the only thing observed in HTML, but the "
"parser does not discriminate among different (or broken) declarations.  "
"Internal subsets in a ``DOCTYPE`` declaration are not supported.  The *data* "
"parameter will be the entire contents of the declaration inside the ``<!``..."
"\\ ``>`` markup.  The default implementation does nothing."
msgstr ""
"パーザが SGML 宣言を読み出した際に呼び出されるメソッドです。実際には、 "
"``DOCTYPE`` は HTML だけに見られる宣言ですが、パーザは宣言間の相違 (や誤った"
"宣言) を判別しません。 ``DOCTYPE`` の内部サブセット宣言はサポートされていませ"
"ん。 *data* パラメタは ``<!``...\\ ``>`` 記述内の宣言内容全体になります。基底"
"クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:209
msgid ""
"This method is called when an end tag is found which does not correspond to "
"any open element."
msgstr ""
"このメソッドは対応する開始エレメントのない終了タグが発見された時に呼び出され"
"ます。"

#: ../../library/sgmllib.rst:215
msgid ""
"This method is called to process an unknown start tag.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""
"未知の開始タグを処理するために呼び出されるメソッドです。派生クラスで上書きす"
"るためのメソッドです; 基底クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:221
msgid ""
"This method is called to process an unknown end tag.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""
"未知の終了タグを処理するために呼び出されるメソッドです。派生クラスで上書きす"
"るためのメソッドです; 基底クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:227
msgid ""
"This method is called to process unresolvable numeric character references. "
"Refer to :meth:`handle_charref` to determine what is handled by default.  It "
"is intended to be overridden by a derived class; the base class "
"implementation does nothing."
msgstr ""
"このメソッドは解決不能な文字参照数値を処理するために呼び出されます。標準で何"
"が処理可能かは :meth:`handle_charref` を参照してください。派生クラスで上書き"
"するためのメソッドです; 基底クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:235
msgid ""
"This method is called to process an unknown entity reference.  It is "
"intended to be overridden by a derived class; the base class implementation "
"does nothing."
msgstr ""
"未知のエンティティ参照を処理するために呼び出されるメソッドです。派生クラスで"
"上書きするためのメソッドです; 基底クラスの実装では何も行いません。"

#: ../../library/sgmllib.rst:238
msgid ""
"Apart from overriding or extending the methods listed above, derived classes "
"may also define methods of the following form to define processing of "
"specific tags. Tag names in the input stream are case independent; the *tag* "
"occurring in method names must be in lower case:"
msgstr ""
"上に挙げたメソッドを上書きしたり拡張したりするのとは別に、派生クラスでは以下"
"の形式のメソッドを定義して、特定のタグを処理することもできます。入力ストリー"
"ム中のタグ名は大小文字の区別に依存しません; メソッド名中の *tag* は小文字でな"
"ければなりません:"

#: ../../library/sgmllib.rst:247
msgid ""
"This method is called to process an opening tag *tag*.  It has preference "
"over :meth:`do_tag`.  The *attributes* argument has the same meaning as "
"described for :meth:`handle_starttag` above."
msgstr ""
"このメソッドは開始タグ *tag* を処理するために呼び出されます。 :meth:`do_tag` "
"よりも高い優先順位があります。 *attributes* 引数は上の :meth:"
"`handle_starttag` で記述されているのと同じ意味です。"

#: ../../library/sgmllib.rst:255
msgid ""
"This method is called to process an opening tag *tag*  for which no :meth:"
"`start_tag` method is defined.   The *attributes* argument has the same "
"meaning as described for :meth:`handle_starttag` above."
msgstr ""
"このメソッドは :meth:`start_tag` メソッドが定義されていない開始タグ *tag* を"
"処理するために呼び出されます。 *attributes* 引数は上の :meth:"
"`handle_starttag` で記述されているのと同じ意味です。"

#: ../../library/sgmllib.rst:263
msgid "This method is called to process a closing tag *tag*."
msgstr "このメソッドは終了タグ *tag* を処理するために呼び出されます。"

#: ../../library/sgmllib.rst:265
msgid ""
"Note that the parser maintains a stack of open elements for which no end tag "
"has been found yet.  Only tags processed by :meth:`start_tag` are pushed on "
"this stack.  Definition of an :meth:`end_tag` method is optional for these "
"tags.  For tags processed by :meth:`do_tag` or by :meth:`unknown_tag`, no :"
"meth:`end_tag` method must be defined; if defined, it will not be used.  If "
"both :meth:`start_tag` and :meth:`do_tag` methods exist for a tag, the :meth:"
"`start_tag` method takes precedence."
msgstr ""
"パーザは開始されたエレメントのうち、終了タグがまだ見つかっていないもののス"
"タックを維持しているので注意してください。 :meth:`start_tag` で処理されたタグ"
"だけがスタックにプッシュされます。それらのタグに対する :meth:`end_tag` メソッ"
"ドの定義はオプションです。 :meth:`do_tag` や :meth:`unknown_tag` で処理される"
"タグについては、 :meth:`end_tag` を定義してはいけません; 定義されていても使わ"
"れることはありません。あるタグに対して :meth:`start_tag` および :meth:"
"`do_tag` メソッドの両方が存在する場合、 :meth:`start_tag` が優先されます。"
