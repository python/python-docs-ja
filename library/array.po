# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Takanori Suzuki <takanori@takanory.net>, 2021
# mollinaca, 2021
# Arihiro TAKASE, 2023
# Inada Naoki <songofacandy@gmail.com>, 2023
# 石井明久, 2024
# tomo, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-04 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:54+0000\n"
"Last-Translator: tomo, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/array.rst:2
msgid ":mod:`!array` --- Efficient arrays of numeric values"
msgstr ":mod:`!array` --- 効率的な数値配列"

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating-point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""

#: ../../library/array.rst:19
msgid "Type code"
msgstr "型コード"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "C の型"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Python の型"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "最小サイズ (バイト単位)"

#: ../../library/array.rst:19
msgid "Notes"
msgstr "注釈"

#: ../../library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33 ../../library/array.rst:35
#: ../../library/array.rst:37 ../../library/array.rst:39
#: ../../library/array.rst:41 ../../library/array.rst:43
msgid "int"
msgstr "int"

#: ../../library/array.rst:21 ../../library/array.rst:23
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: ../../library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/array.rst:25
msgid "wchar_t"
msgstr "wchar_t"

#: ../../library/array.rst:25 ../../library/array.rst:27
msgid "Unicode character"
msgstr "Unicode文字(unicode型)"

#: ../../library/array.rst:25 ../../library/array.rst:29
#: ../../library/array.rst:31 ../../library/array.rst:33
#: ../../library/array.rst:35
msgid "2"
msgstr "2"

#: ../../library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/array.rst:27
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/array.rst:27
msgid "Py_UCS4"
msgstr ""

#: ../../library/array.rst:27 ../../library/array.rst:37
#: ../../library/array.rst:39 ../../library/array.rst:45
msgid "4"
msgstr "4"

#: ../../library/array.rst:29
msgid "``'h'``"
msgstr "``'h'``"

#: ../../library/array.rst:29
msgid "signed short"
msgstr "signed short"

#: ../../library/array.rst:31
msgid "``'H'``"
msgstr "``'H'``"

#: ../../library/array.rst:31
msgid "unsigned short"
msgstr "unsigned short"

#: ../../library/array.rst:33
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/array.rst:33
msgid "signed int"
msgstr "signed int"

#: ../../library/array.rst:35
msgid "``'I'``"
msgstr "``'I'``"

#: ../../library/array.rst:35
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:37
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:37
msgid "signed long"
msgstr "signed long"

#: ../../library/array.rst:39
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:39
msgid "unsigned long"
msgstr "unsigned long"

#: ../../library/array.rst:41
msgid "``'q'``"
msgstr "``'q'``"

#: ../../library/array.rst:41
msgid "signed long long"
msgstr "signed long long"

#: ../../library/array.rst:41 ../../library/array.rst:43
#: ../../library/array.rst:47
msgid "8"
msgstr "8"

#: ../../library/array.rst:43
msgid "``'Q'``"
msgstr "``'Q'``"

#: ../../library/array.rst:43
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../../library/array.rst:45
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/array.rst:45 ../../library/array.rst:47
msgid "float"
msgstr "浮動小数点数"

#: ../../library/array.rst:47
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/array.rst:47
msgid "double"
msgstr "double"

#: ../../library/array.rst:50
msgid "Notes:"
msgstr "注釈:"

#: ../../library/array.rst:53
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr ""

#: ../../library/array.rst:55
msgid ""
"``array('u')`` now uses :c:type:`wchar_t` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect its behavior because "
"``Py_UNICODE`` is alias of :c:type:`wchar_t` since Python 3.3."
msgstr ""

#: ../../library/array.rst:60
msgid "Please migrate to ``'w'`` typecode."
msgstr ""

#: ../../library/array.rst:64
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`array.itemsize` attribute."
msgstr ""
"値の実際の表現はマシンアーキテクチャ (厳密に言うとCの実装) によって決まりま"
"す。値の実際のサイズは :attr:`array.itemsize` 属性から得られます。"

#: ../../library/array.rst:68
msgid "The module defines the following item:"
msgstr "このモジュールは以下の項目を定義しています:"

#: ../../library/array.rst:73
msgid "A string with all available type codes."
msgstr "すべての利用可能なタイプコードを含む文字列"

#: ../../library/array.rst:76
msgid "The module defines the following type:"
msgstr "このモジュールでは次の型を定義しています:"

#: ../../library/array.rst:81
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a :class:`bytes` or :class:"
"`bytearray` object, a Unicode string, or iterable over elements of the "
"appropriate type."
msgstr ""

#: ../../library/array.rst:86
msgid ""
"If given a :class:`bytes` or :class:`bytearray` object, the initializer is "
"passed to the new array's :meth:`frombytes` method; if given a Unicode "
"string, the initializer is passed to the :meth:`fromunicode` method; "
"otherwise, the initializer's iterator is passed to the :meth:`extend` method "
"to add initial items to the array."
msgstr ""

#: ../../library/array.rst:93
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""
"アレイオブジェクトでは、インデクス指定、スライス、連結および反復といった、 通"
"常のシーケンスの演算をサポートしています。スライス代入を使うときは、 代入値は"
"同じ型コードのアレイオブジェクトでなければなりません。 それ以外のオブジェクト"
"を指定すると :exc:`TypeError` を送出します。 アレイオブジェクトはバッファイン"
"ターフェースを実装しており、 :term:`bytes-like objects <bytes-like object>` "
"をサポートしている場所ならどこでも利用できます。"

#: ../../library/array.rst:99
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""
"引数 ``typecode``, ``initializer`` 付きで :ref:`監査イベント <auditing>` "
"``array.__new__`` を送出します。"

#: ../../library/array.rst:104
msgid "The typecode character used to create the array."
msgstr "アレイを作るときに使う型コード文字です。"

#: ../../library/array.rst:109
msgid "The length in bytes of one array item in the internal representation."
msgstr "アレイの要素 1 つの内部表現に使われるバイト長です。"

#: ../../library/array.rst:114
msgid "Append a new item with value *x* to the end of the array."
msgstr "値 *x* の新たな要素をアレイの末尾に追加します。"

#: ../../library/array.rst:119
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`!ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""
"アレイの内容を記憶するために使っているバッファの、現在のメモリアドレスと要素"
"数の入ったタプル ``(address, length)`` を返します。バイト単位で表したメモリ"
"バッファの大きさは ``array.buffer_info()[1] * array.itemsize`` で計算できま"
"す。例えば :c:func:`!ioctl` 操作のような、メモリアドレスを必要とする低レベル"
"な (そして、本質的に危険な) I/Oインターフェースを使って作業する場合に、ときど"
"き便利です。アレイ自体が存在し、長さを変えるような演算を適用しない限り、有効"
"な値を返します。"

#: ../../library/array.rst:129
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"C やC++ で書いたコードからアレイオブジェクトを使う場合 (:meth:`buffer_info` "
"の情報を使う意味のある唯一の方法です) は、アレイオブジェクトでサポートしてい"
"るバッファインターフェースを使う方がより理にかなっています。このメソッドは後"
"方互換性のために保守されており、新しいコードでの使用は避けるべきです。バッ"
"ファインターフェースの説明は :ref:`bufferobjects` にあります。"

#: ../../library/array.rst:138
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"アレイのすべての要素に対して「バイトスワップ」 (リトルエンディアンとビッグエ"
"ンディアンの変換) を行います。このメソッドは大きさが 1、2、4 および 8 バイト"
"の値のみをサポートしています。他の種類の値に使うと :exc:`RuntimeError` を送出"
"します。異なるバイトオーダを使うマシンで書かれたファイルからデータを読み込む"
"ときに役に立ちます。"

#: ../../library/array.rst:146
msgid "Return the number of occurrences of *x* in the array."
msgstr "シーケンス中の *x* の出現回数を返します。"

#: ../../library/array.rst:151
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"*iterable* から要素を取り出し、アレイの末尾に要素を追加します。 *iterable* が"
"別のアレイ型である場合、二つのアレイは *全く* 同じ型コードでなければなりませ"
"ん。それ以外の場合には :exc:`TypeError` を送出します。 *iterable* がアレイで"
"ない場合、アレイに値を追加できるような正しい型の要素からなるイテレーション可"
"能オブジェクトでなければなりません。"

#: ../../library/array.rst:159
msgid ""
"Appends items from the :term:`bytes-like object`, interpreting its content "
"as an array of machine values (as if it had been read from a file using the :"
"meth:`fromfile` method)."
msgstr ""

#: ../../library/array.rst:163
msgid ":meth:`!fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ""
"明確化のため :meth:`!fromstring` の名前が :meth:`frombytes` に変更されまし"
"た。"

#: ../../library/array.rst:169
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
":term:`ファイルオブジェクト <file object>` *f* から (マシンのデータ形式そのま"
"まで) *n* 個の要素を読み出し、アレイの末尾に要素を追加します。 *n* 個未満の要"
"素しか読めなかった場合は :exc:`EOFError` を送出しますが、それまでに読み出せた"
"値はアレイに追加されます。"

#: ../../library/array.rst:177
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"リストから要素を追加します。型に関するエラーが発生した場合にアレイが変更され"
"ないことを除き、 ``for x in list: a.append(x)`` と同じです。"

#: ../../library/array.rst:183
msgid ""
"Extends this array with data from the given Unicode string. The array must "
"have type code ``'u'`` or ``'w'``; otherwise a :exc:`ValueError` is raised. "
"Use ``array.frombytes(unicodestring.encode(enc))`` to append Unicode data to "
"an array of some other type."
msgstr ""

#: ../../library/array.rst:191
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise :exc:"
"`ValueError` if *x* is not found."
msgstr ""

#: ../../library/array.rst:196
msgid "Added optional *start* and *stop* parameters."
msgstr ""

#: ../../library/array.rst:202
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"アレイ中の位置 *i* の前に値 *x* をもつ新しい要素を挿入します。 *i* の値が負の"
"場合、アレイの末尾からの相対位置として扱います。"

#: ../../library/array.rst:208
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"アレイからインデクスが *i* の要素を取り除いて返します。オプションの引数はデ"
"フォルトで ``-1`` になっていて、最後の要素を取り除いて返すようになっていま"
"す。"

#: ../../library/array.rst:215
msgid "Remove the first occurrence of *x* from the array."
msgstr "アレイ中の *x* のうち、最初に現れたものを取り除きます。"

#: ../../library/array.rst:220
msgid "Remove all elements from the array."
msgstr ""

#: ../../library/array.rst:227
msgid "Reverse the order of the items in the array."
msgstr "アレイの要素の順番を逆にします。"

#: ../../library/array.rst:232
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"array をマシンの値の array に変換して、 bytes の形で返します (:meth:`tofile` "
"メソッドを使ってファイルに書かれるバイト列と同じです)。"

#: ../../library/array.rst:236
msgid ":meth:`!tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ""

#: ../../library/array.rst:242
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr ""
"すべての要素を (マシンの値の形式で) :term:`file object` *f* に書き込みます。"

#: ../../library/array.rst:247
msgid "Convert the array to an ordinary list with the same items."
msgstr "アレイを同じ要素を持つ普通のリストに変換します。"

#: ../../library/array.rst:252
msgid ""
"Convert the array to a Unicode string.  The array must have a type ``'u'`` "
"or ``'w'``; otherwise a :exc:`ValueError` is raised. Use ``array.tobytes()."
"decode(enc)`` to obtain a Unicode string from an array of some other type."
msgstr ""

#: ../../library/array.rst:257
msgid ""
"The string representation of array objects has the form ``array(typecode, "
"initializer)``. The *initializer* is omitted if the array is empty, "
"otherwise it is a Unicode string if the *typecode* is ``'u'`` or ``'w'``, "
"otherwise it is a list of numbers. The string representation is guaranteed "
"to be able to be converted back to an array with the same type and value "
"using :func:`eval`, so long as the :class:`~array.array` class has been "
"imported using ``from array import array``. Variables ``inf`` and ``nan`` "
"must also be defined if it contains corresponding floating-point values. "
"Examples::"
msgstr ""

#: ../../library/array.rst:269
msgid ""
"array('l')\n"
"array('w', 'hello \\u2641')\n"
"array('l', [1, 2, 3, 4, 5])\n"
"array('d', [1.0, 2.0, 3.14, -inf, nan])"
msgstr ""

#: ../../library/array.rst:277
msgid "Module :mod:`struct`"
msgstr ":mod:`struct` モジュール"

#: ../../library/array.rst:278
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "異なる種類のバイナリデータのパックおよびアンパック。"

#: ../../library/array.rst:280
msgid "`NumPy <https://numpy.org/>`_"
msgstr "`NumPy <https://numpy.org/>`_"

#: ../../library/array.rst:281
msgid "The NumPy package defines another array type."
msgstr "NumPy パッケージは、別の配列型を定義しています。"

#: ../../library/array.rst:7
msgid "arrays"
msgstr "arrays"
