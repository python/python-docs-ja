# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2019
# Takanori Suzuki <takanori@takanory.net>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:02+0000\n"
"PO-Revision-Date: 2019-09-01 03:21+0000\n"
"Last-Translator: Takanori Suzuki <takanori@takanory.net>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.dom.rst:2
msgid ":mod:`xml.dom` --- The Document Object Model API"
msgstr ":mod:`xml.dom` --- 文書オブジェクトモデル (DOM) API"

#: ../../library/xml.dom.rst:10
msgid "**Source code:** :source:`Lib/xml/dom/__init__.py`"
msgstr "**ソースコード:** :source:`Lib/xml/dom/__init__.py`"

#: ../../library/xml.dom.rst:14
msgid ""
"The Document Object Model, or \"DOM,\" is a cross-language API from the "
"World Wide Web Consortium (W3C) for accessing and modifying XML documents.  "
"A DOM implementation presents an XML document as a tree structure, or allows "
"client code to build such a structure from scratch.  It then gives access to "
"the structure through a set of objects which provided well-known interfaces."
msgstr ""
"文書オブジェクトモデル (Document Object Model)、すなわち \"DOM\" は、ワールド"
"ワイドウェブコンソーシアム (World Wide Web Consortium, W3C) による、XML ド"
"キュメントにアクセスしたり変更を加えたりするための、プログラミング言語間共通"
"の API です。DOM 実装によって、XML ドキュメントはツリー構造として表現されま"
"す。また、クライアントコード側でツリー構造をゼロから構築できるようになりま"
"す。さらに、前述の構造に対して、よく知られたインタフェースをもつ一連のオブ"
"ジェクトを通したアクセス手段も提供します。"

#: ../../library/xml.dom.rst:20
msgid ""
"The DOM is extremely useful for random-access applications.  SAX only allows "
"you a view of one bit of the document at a time.  If you are looking at one "
"SAX element, you have no access to another.  If you are looking at a text "
"node, you have no access to a containing element. When you write a SAX "
"application, you need to keep track of your program's position in the "
"document somewhere in your own code.  SAX does not do it for you.  Also, if "
"you need to look ahead in the XML document, you are just out of luck."
msgstr ""
"DOM はランダムアクセスを行うアプリケーションで非常に有用です。SAX では、一度"
"に閲覧することができるのはドキュメントのほんの一部分です。ある SAX 要素に注目"
"している際には、別の要素をアクセスすることはできません。またテキストノードに"
"注目しているときには、その中に入っている要素をアクセスすることができません。"
"SAX によるアプリケーションを書くときには、プログラムがドキュメント内のどこを"
"処理しているのかを追跡するよう、コードのどこかに記述する必要があります。SAX "
"自体がその作業を行ってくれることはありません。さらに、XML ドキュメントに対す"
"る先読み (look ahead) が必要だとすると不運なことになります。"

#: ../../library/xml.dom.rst:28
msgid ""
"Some applications are simply impossible in an event driven model with no "
"access to a tree.  Of course you could build some sort of tree yourself in "
"SAX events, but the DOM allows you to avoid writing that code.  The DOM is a "
"standard tree representation for XML data."
msgstr ""
"アプリケーションによっては、ツリーにアクセスできなければイベント駆動モデルを"
"実現できません。もちろん、何らかのツリーを SAX イベントに応じて自分で構築する"
"こともできるでしょうが、DOM ではそのようなコードを書かなくてもよくなります。"
"DOM は XML データに対する標準的なツリー表現なのです。"

#: ../../library/xml.dom.rst:33
msgid ""
"The Document Object Model is being defined by the W3C in stages, or "
"\"levels\" in their terminology.  The Python mapping of the API is "
"substantially based on the DOM Level 2 recommendation."
msgstr ""
"文書オブジェクトモデルは、W3C によっていくつかの段階、W3C の用語で言えば \"レ"
"ベル (level)\" で定義されています。Python においては、DOM API への対応付けは"
"実質的には DOM レベル 2 勧告に基づいています。"

#: ../../library/xml.dom.rst:45
msgid ""
"DOM applications typically start by parsing some XML into a DOM.  How this "
"is accomplished is not covered at all by DOM Level 1, and Level 2 provides "
"only limited improvements: There is a :class:`DOMImplementation` object "
"class which provides access to :class:`Document` creation methods, but no "
"way to access an XML reader/parser/Document builder in an implementation-"
"independent way. There is also no well-defined way to access these methods "
"without an existing :class:`Document` object.  In Python, each DOM "
"implementation will provide a function :func:`getDOMImplementation`. DOM "
"Level 3 adds a Load/Store specification, which defines an interface to the "
"reader, but this is not yet available in the Python standard library."
msgstr ""
"DOM アプリケーションは、普通は XML を DOM に解析するところから始まります。ど"
"のようにして解析を行うかについては DOM レベル 1 では全くカバーしておらず、レ"
"ベル 2 では限定的な改良だけが行われました: レベル 2 では :class:`Document` を"
"生成するメソッドを提供する :class:`DOMImplementation` オブジェクトクラスがあ"
"りますが、実装に依存しない方法で XML リーダ(reader)/パーザ(parser)/文書ビル"
"ダ (Document builder) にアクセスする方法はありません。また、既存の :class:"
"`Document` オブジェクトなしにこれらのメソッドにアクセスするような、よく定義さ"
"れた方法もありません。 Python では、各々の DOM 実装で :func:"
"`getDOMImplementation` が定義されているはずです。 DOM レベル 3 ではロード"
"(Load)/ストア(Store) 仕様が追加され、リーダのインタフェースにを定義しています"
"が、Python 標準ライブラリではまだ利用することができません。"

#: ../../library/xml.dom.rst:56
msgid ""
"Once you have a DOM document object, you can access the parts of your XML "
"document through its properties and methods.  These properties are defined "
"in the DOM specification; this portion of the reference manual describes the "
"interpretation of the specification in Python."
msgstr ""
"DOM 文書オブジェクトを生成したら、そのプロパティとメソッドを使って XML 文書の"
"一部にアクセスできます。これらのプロパティは DOM 仕様で定義されています; 本リ"
"ファレンスマニュアルでは、Python において DOM 仕様がどのように解釈されている"
"かを記述しています。"

#: ../../library/xml.dom.rst:61
msgid ""
"The specification provided by the W3C defines the DOM API for Java, "
"ECMAScript, and OMG IDL.  The Python mapping defined here is based in large "
"part on the IDL version of the specification, but strict compliance is not "
"required (though implementations are free to support the strict mapping from "
"IDL).  See section :ref:`dom-conformance` for a detailed discussion of "
"mapping requirements."
msgstr ""
"W3C から提供されている仕様は、 DOM API を Java、ECMAScript、および OMG IDL で"
"定義しています。ここで定義されている Python での対応づけは、大部分がこの仕様"
"の IDL 版に基づいていますが、厳密な準拠は必要とされていません (実装で IDL の"
"厳密な対応付けをサポートするのは自由ですが)。API への対応付けに関する詳細な議"
"論は :ref:`dom-conformance` を参照してください。"

#: ../../library/xml.dom.rst:71
msgid ""
"`Document Object Model (DOM) Level 2 Specification <https://www.w3.org/"
"TR/2000/REC-DOM-Level-2-Core-20001113/>`_"
msgstr ""
"`Document Object Model (DOM) Level 2 Specification <https://www.w3.org/"
"TR/2000/REC-DOM-Level-2-Core-20001113/>`_"

#: ../../library/xml.dom.rst:71
msgid "The W3C recommendation upon which the Python DOM API is based."
msgstr "Python DOM API が準拠している W3C 勧告。"

#: ../../library/xml.dom.rst:74
msgid ""
"`Document Object Model (DOM) Level 1 Specification <https://www.w3.org/TR/"
"REC-DOM-Level-1/>`_"
msgstr ""
"`Document Object Model (DOM) Level 1 Specification <https://www.w3.org/TR/"
"REC-DOM-Level-1/>`_"

#: ../../library/xml.dom.rst:74
msgid "The W3C recommendation for the DOM supported by :mod:`xml.dom.minidom`."
msgstr ":mod:`xml.dom.minidom` でサポートされている W3C の DOM に関する勧告。"

#: ../../library/xml.dom.rst:76
msgid ""
"`Python Language Mapping Specification <http://www.omg.org/cgi-bin/doc?"
"formal/02-11-05.pdf>`_"
msgstr ""
"`Python Language Mapping Specification <http://www.omg.org/cgi-bin/doc?"
"formal/02-11-05.pdf>`_"

#: ../../library/xml.dom.rst:77
msgid "This specifies the mapping from OMG IDL to Python."
msgstr ""
"このドキュメントでは OMG IDL から Python への対応付けを記述しています。"

#: ../../library/xml.dom.rst:81
msgid "Module Contents"
msgstr "モジュールコンテンツ"

#: ../../library/xml.dom.rst:83
msgid "The :mod:`xml.dom` contains the following functions:"
msgstr ":mod:`xml.dom` には以下の関数があります:"

#: ../../library/xml.dom.rst:88
msgid ""
"Register the *factory* function with the name *name*.  The factory function "
"should return an object which implements the :class:`DOMImplementation` "
"interface.  The factory function can return the same object every time, or a "
"new one for each call, as appropriate for the specific implementation (e.g. "
"if that implementation supports some customization)."
msgstr ""
"ファクトリ関数 (factory function) *factory* を名前 *name* で登録します。ファ"
"クトリ関数は :class:`DOMImplementation` インタフェースを実装するオブジェクト"
"を返さなければなりません。特定の実装 (例えば実装が何らかのカスタマイズをサ"
"ポートしている場合) に適切となるように、ファクトリ関数は毎回同じオブジェクト"
"を返したり、呼び出しごとに新しいオブジェクトを返したりすることが出来ます。"

#: ../../library/xml.dom.rst:97
msgid ""
"Return a suitable DOM implementation. The *name* is either well-known, the "
"module name of a DOM implementation, or ``None``. If it is not ``None``, "
"imports the corresponding module and returns a :class:`DOMImplementation` "
"object if the import succeeds.  If no name is given, and if the environment "
"variable :envvar:`PYTHON_DOM` is set, this variable is used to find the "
"implementation."
msgstr ""
"適切な DOM 実装を返します。*name* は、よく知られた DOM 実装のモジュール名"
"か、 ``None`` になります。 ``None`` でない場合、対応するモジュールを import "
"して、import が成功した場合 :class:`DOMImplementation` オブジェクトを返しま"
"す。 *name* が与えられておらず、環境変数 :envvar:`PYTHON_DOM` が設定されてい"
"た場合、 DOM 実装を見つけるのに環境変数が使われます。"

#: ../../library/xml.dom.rst:103
msgid ""
"If name is not given, this examines the available implementations to find "
"one with the required feature set.  If no implementation can be found, raise "
"an :exc:`ImportError`.  The features list must be a sequence of ``(feature, "
"version)`` pairs which are passed to the :meth:`hasFeature` method on "
"available :class:`DOMImplementation` objects."
msgstr ""
"*name* が与えられない場合、利用可能な実装を調べて、指定された機能 (feature) "
"セットを持つものを探します。実装が見つからなければ :exc:`ImportError` を送出"
"します。 *features* のリストは ``(feature, version)`` のペアからなるシーケン"
"スで、利用可能な :class:`DOMImplementation` オブジェクトの :meth:"
"`hasFeature` メソッドに渡されます。"

#: ../../library/xml.dom.rst:109
msgid "Some convenience constants are also provided:"
msgstr "いくつかの便利な定数も提供されています:"

#: ../../library/xml.dom.rst:114
msgid ""
"The value used to indicate that no namespace is associated with a node in "
"the DOM.  This is typically found as the :attr:`namespaceURI` of a node, or "
"used as the *namespaceURI* parameter to a namespaces-specific method."
msgstr ""
"DOM 内のノードに名前空間が何も関連づけられていないことを示すために使われる値"
"です。この値は通常、ノードの :attr:`namespaceURI` の値として見つかったり、名"
"前空間特有のメソッドに対する *namespaceURI* パラメタとして使われます。"

#: ../../library/xml.dom.rst:121
msgid ""
"The namespace URI associated with the reserved prefix ``xml``, as defined by "
"`Namespaces in XML <https://www.w3.org/TR/REC-xml-names/>`_ (section 4)."
msgstr ""
"`Namespaces in XML <https://www.w3.org/TR/REC-xml-names/>`_ (4 節) で定義され"
"ている、予約済みプレフィクス (reserved prefix) ``xml`` に関連付けられた名前空"
"間 URI です。"

#: ../../library/xml.dom.rst:127
msgid ""
"The namespace URI for namespace declarations, as defined by `Document Object "
"Model (DOM) Level 2 Core Specification <https://www.w3.org/TR/DOM-Level-2-"
"Core/core.html>`_ (section 1.1.8)."
msgstr ""
"`Document Object Model (DOM) Level 2 Core Specification <https://www.w3.org/"
"TR/DOM-Level-2-Core/core.html>`_ (1.1.8 節) で定義されている、名前空間宣言へ"
"の名前空間 URI です。"

#: ../../library/xml.dom.rst:134
msgid ""
"The URI of the XHTML namespace as defined by `XHTML 1.0: The Extensible "
"HyperText Markup Language <https://www.w3.org/TR/xhtml1/>`_ (section 3.1.1)."
msgstr ""
"`XHTML 1.0: The Extensible HyperText Markup Language <https://www.w3.org/TR/"
"xhtml1/>`_ (3.1.1 節) で定義されている、XHTML 名前空間 URI です。"

#: ../../library/xml.dom.rst:138
msgid ""
"In addition, :mod:`xml.dom` contains a base :class:`Node` class and the DOM "
"exception classes.  The :class:`Node` class provided by this module does not "
"implement any of the methods or attributes defined by the DOM specification; "
"concrete DOM implementations must provide those.  The :class:`Node` class "
"provided as part of this module does provide the constants used for the :"
"attr:`nodeType` attribute on concrete :class:`Node` objects; they are "
"located within the class rather than at the module level to conform with the "
"DOM specifications."
msgstr ""
"加えて、 :mod:`xml.dom` には基底となる :class:`Node` クラスと DOM 例外クラス"
"が収められています。このモジュールで提供されている :class:`Node` クラスは "
"DOM 仕様で定義されているメソッドや属性は何ら実装していません; これらは具体的"
"な DOM 実装において提供しなければなりません。このモジュールの一部として提供さ"
"れている :class:`Node` クラスでは、具体的な :class:`Node` オブジェクトの :"
"attr:`nodeType` 属性として使う定数を提供しています; これらの定数は、DOM 仕様"
"に適合するため、クラスではなくモジュールのレベルに配置されています。"

#: ../../library/xml.dom.rst:153
msgid "Objects in the DOM"
msgstr "DOM 内のオブジェクト"

#: ../../library/xml.dom.rst:155
msgid ""
"The definitive documentation for the DOM is the DOM specification from the "
"W3C."
msgstr ""
"DOM について最も明確に限定しているドキュメントは W3C による DOM 仕様です。"

#: ../../library/xml.dom.rst:157
msgid ""
"Note that DOM attributes may also be manipulated as nodes instead of as "
"simple strings.  It is fairly rare that you must do this, however, so this "
"usage is not yet documented."
msgstr ""
"DOM 属性は単純な文字列としてだけではなく、ノードとして操作されるかもしれない"
"ので注意してください。とはいえ、そうしなければならない場合はかなり稀なので、"
"今のところ記述されていません。"

#: ../../library/xml.dom.rst:162
msgid "Interface"
msgstr "インタフェース"

#: ../../library/xml.dom.rst:162
msgid "Section"
msgstr "節"

#: ../../library/xml.dom.rst:162
msgid "Purpose"
msgstr "目的"

#: ../../library/xml.dom.rst:164
msgid ":class:`DOMImplementation`"
msgstr ":class:`DOMImplementation`"

#: ../../library/xml.dom.rst:164
msgid ":ref:`dom-implementation-objects`"
msgstr ":ref:`dom-implementation-objects`"

#: ../../library/xml.dom.rst:164
msgid "Interface to the underlying implementation."
msgstr "根底にある実装へのインタフェース。"

#: ../../library/xml.dom.rst:167
msgid ":class:`Node`"
msgstr ":class:`Node`"

#: ../../library/xml.dom.rst:167
msgid ":ref:`dom-node-objects`"
msgstr ":ref:`dom-node-objects`"

#: ../../library/xml.dom.rst:167
msgid "Base interface for most objects in a document."
msgstr "ドキュメント内の大部分のオブジェクトに対する基底インタフェース。"

#: ../../library/xml.dom.rst:170
msgid ":class:`NodeList`"
msgstr ":class:`NodeList`"

#: ../../library/xml.dom.rst:170
msgid ":ref:`dom-nodelist-objects`"
msgstr ":ref:`dom-nodelist-objects`"

#: ../../library/xml.dom.rst:170
msgid "Interface for a sequence of nodes."
msgstr "ノード列に対するインタフェース。"

#: ../../library/xml.dom.rst:173
msgid ":class:`DocumentType`"
msgstr ":class:`DocumentType`"

#: ../../library/xml.dom.rst:173
msgid ":ref:`dom-documenttype-objects`"
msgstr ":ref:`dom-documenttype-objects`"

#: ../../library/xml.dom.rst:173
msgid "Information about the declarations needed to process a document."
msgstr "ドキュメントの処理に必要な宣言についての情報。"

#: ../../library/xml.dom.rst:177
msgid ":class:`Document`"
msgstr ":class:`Document`"

#: ../../library/xml.dom.rst:177
msgid ":ref:`dom-document-objects`"
msgstr ":ref:`dom-document-objects`"

#: ../../library/xml.dom.rst:177
msgid "Object which represents an entire document."
msgstr "ドキュメント全体を表現するオブジェクト。"

#: ../../library/xml.dom.rst:180
msgid ":class:`Element`"
msgstr ":class:`Element`"

#: ../../library/xml.dom.rst:180
msgid ":ref:`dom-element-objects`"
msgstr ":ref:`dom-element-objects`"

#: ../../library/xml.dom.rst:180
msgid "Element nodes in the document hierarchy."
msgstr "ドキュメント階層内の要素ノード。"

#: ../../library/xml.dom.rst:183
msgid ":class:`Attr`"
msgstr ":class:`Attr`"

#: ../../library/xml.dom.rst:183
msgid ":ref:`dom-attr-objects`"
msgstr ":ref:`dom-attr-objects`"

#: ../../library/xml.dom.rst:183
msgid "Attribute value nodes on element nodes."
msgstr "要素ノード上の属性値ノード。"

#: ../../library/xml.dom.rst:186
msgid ":class:`Comment`"
msgstr ":class:`Comment`"

#: ../../library/xml.dom.rst:186
msgid ":ref:`dom-comment-objects`"
msgstr ":ref:`dom-comment-objects`"

#: ../../library/xml.dom.rst:186
msgid "Representation of comments in the source document."
msgstr "ソースドキュメント内のコメント表現。"

#: ../../library/xml.dom.rst:189
msgid ":class:`Text`"
msgstr ":class:`Text`"

#: ../../library/xml.dom.rst:189
msgid ":ref:`dom-text-objects`"
msgstr ":ref:`dom-text-objects`"

#: ../../library/xml.dom.rst:189
msgid "Nodes containing textual content from the document."
msgstr "ドキュメント内のテキスト記述を含むノード。"

#: ../../library/xml.dom.rst:192
msgid ":class:`ProcessingInstruction`"
msgstr ":class:`ProcessingInstruction`"

#: ../../library/xml.dom.rst:192
msgid ":ref:`dom-pi-objects`"
msgstr ":ref:`dom-pi-objects`"

#: ../../library/xml.dom.rst:192
msgid "Processing instruction representation."
msgstr "処理命令 (processing instruction) 表現。"

#: ../../library/xml.dom.rst:196
msgid ""
"An additional section describes the exceptions defined for working with the "
"DOM in Python."
msgstr ""
"さらに追加の節として、Python で DOM を利用するために定義されている例外につい"
"て記述しています。"

#: ../../library/xml.dom.rst:203
msgid "DOMImplementation Objects"
msgstr "DOMImplementation オブジェクト"

#: ../../library/xml.dom.rst:205
msgid ""
"The :class:`DOMImplementation` interface provides a way for applications to "
"determine the availability of particular features in the DOM they are using. "
"DOM Level 2 added the ability to create new :class:`Document` and :class:"
"`DocumentType` objects using the :class:`DOMImplementation` as well."
msgstr ""
":class:`DOMImplementation` インタフェースは、利用している DOM 実装において特"
"定の機能が利用可能かどうかを決定するための方法をアプリケーションに提供しま"
"す。DOM レベル 2 では、 :class:`DOMImplementation` を使って新たな :class:"
"`Document` オブジェクトや :class:`DocumentType` オブジェクトを生成する機能も"
"追加しています。"

#: ../../library/xml.dom.rst:213
msgid ""
"Return ``True`` if the feature identified by the pair of strings *feature* "
"and *version* is implemented."
msgstr ""
"機能名 *feature* とバージョン番号 *version* で識別される機能（feature）が実装"
"されていれば ``True`` を返します。"

#: ../../library/xml.dom.rst:219
msgid ""
"Return a new :class:`Document` object (the root of the DOM), with a child :"
"class:`Element` object having the given *namespaceUri* and *qualifiedName*. "
"The *doctype* must be a :class:`DocumentType` object created by :meth:"
"`createDocumentType`, or ``None``. In the Python DOM API, the first two "
"arguments can also be ``None`` in order to indicate that no :class:`Element` "
"child is to be created."
msgstr ""
"新たな(DOMのスーパークラスである) :class:`Document` クラスのオブジェクトを返"
"します。このクラスは *namespaceUri* と *qualifiedName* が設定された子クラス :"
"class:`Element` のオブジェクトを所有しています。 *doctype* は :meth:"
"`createDocumentType` によって生成された :class:`DocumentType` クラスのオブ"
"ジェクト、または ``None`` である必要があります。 Python DOM APIでは、子クラス"
"である :class:`Element` を作成しないことを示すために、はじめの２つの引数を "
"``None`` に設定することができます。"

#: ../../library/xml.dom.rst:229
msgid ""
"Return a new :class:`DocumentType` object that encapsulates the given "
"*qualifiedName*, *publicId*, and *systemId* strings, representing the "
"information contained in an XML document type declaration."
msgstr ""
"新たな :class:`DocumentType` クラスのオブジェクトを返します。このオブジェクト"
"は *qualifiedName* 、 *publicId* 、そして *systemId* 文字列をふくんでおり、"
"XML文書の形式情報を表現しています。"

#: ../../library/xml.dom.rst:237
msgid "Node Objects"
msgstr "Node オブジェクト"

#: ../../library/xml.dom.rst:239
msgid ""
"All of the components of an XML document are subclasses of :class:`Node`."
msgstr "XML 文書の全ての構成要素は :class:`Node` のサブクラスです。"

#: ../../library/xml.dom.rst:244
msgid ""
"An integer representing the node type.  Symbolic constants for the types are "
"on the :class:`Node` object: :const:`ELEMENT_NODE`, :const:"
"`ATTRIBUTE_NODE`, :const:`TEXT_NODE`, :const:`CDATA_SECTION_NODE`, :const:"
"`ENTITY_NODE`, :const:`PROCESSING_INSTRUCTION_NODE`, :const:`COMMENT_NODE`, :"
"const:`DOCUMENT_NODE`, :const:`DOCUMENT_TYPE_NODE`, :const:`NOTATION_NODE`. "
"This is a read-only attribute."
msgstr ""
"ノード (node) の型を表現する整数値です。型に対応する以下のシンボル定数: :"
"const:`ELEMENT_NODE` 、 :const:`ATTRIBUTE_NODE` 、 :const:`TEXT_NODE` 、 :"
"const:`CDATA_SECTION_NODE` 、 :const:`ENTITY_NODE` 、 :const:"
"`PROCESSING_INSTRUCTION_NODE` 、 :const:`COMMENT_NODE` 、 :const:"
"`DOCUMENT_NODE` 、 :const:`DOCUMENT_TYPE_NODE` 、 :const:`NOTATION_NODE` 、"
"が :class:`Node` オブジェクトで定義されています。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:254
msgid ""
"The parent of the current node, or ``None`` for the document node. The value "
"is always a :class:`Node` object or ``None``.  For :class:`Element` nodes, "
"this will be the parent element, except for the root element, in which case "
"it will be the :class:`Document` object. For :class:`Attr` nodes, this is "
"always ``None``. This is a read-only attribute."
msgstr ""
"現在のノードの親ノードか、文書ノードの場合には ``None`` になります。この値は"
"常に :class:`Node` オブジェクトか ``None`` になります。 :class:`Element` ノー"
"ドの場合、この値はルート要素 (root element) の場合を除き親要素 (parent "
"element) となり、ルート要素の場合には :class:`Document` オブジェクトとなりま"
"す。 :class:`Attr` ノードの場合、この値は常に ``None`` となります。読み出し専"
"用の属性です。"

#: ../../library/xml.dom.rst:263
msgid ""
"A :class:`NamedNodeMap` of attribute objects.  Only elements have actual "
"values for this; others provide ``None`` for this attribute. This is a read-"
"only attribute."
msgstr ""
"属性オブジェクトの :class:`NamedNodeMap` です。要素だけがこの属性に実際の値を"
"持ちます; その他のオブジェクトでは、この属性を ``None`` にします。読み出し専"
"用の属性です。"

#: ../../library/xml.dom.rst:270
msgid ""
"The node that immediately precedes this one with the same parent.  For "
"instance the element with an end-tag that comes just before the *self* "
"element's start-tag.  Of course, XML documents are made up of more than just "
"elements so the previous sibling could be text, a comment, or something "
"else. If this node is the first child of the parent, this attribute will be "
"``None``. This is a read-only attribute."
msgstr ""
"このノードと同じ親ノードを持ち、直前にくるノードです。例えば、*self* 要素の開"
"始タグの直前にくる終了タグを持つ要素です。もちろん、XML 文書は要素だけで構成"
"されているだけではないので、直前にくる兄弟関係にある要素 (sibling) はテキスト"
"やコメント、その他になる可能性があります。このノードが親ノードにおける先頭の"
"子ノードである場合、属性値は ``None`` になります。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:280
msgid ""
"The node that immediately follows this one with the same parent.  See also :"
"attr:`previousSibling`.  If this is the last child of the parent, this "
"attribute will be ``None``. This is a read-only attribute."
msgstr ""
"このノードと同じ親ノードを持ち、直後にくるノードです。例えば、 :attr:"
"`previousSibling` も参照してください。このノードが親ノードにおける末尾の子"
"ノードである場合、属性値は ``None`` になります。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:287
msgid ""
"A list of nodes contained within this node. This is a read-only attribute."
msgstr ""
"このノード内に収められているノードからなるリストです。読み出し専用の属性で"
"す。"

#: ../../library/xml.dom.rst:292
msgid ""
"The first child of the node, if there are any, or ``None``. This is a read-"
"only attribute."
msgstr ""
"このノードに子ノードがある場合、その先頭のノードです。そうでない場合 "
"``None`` になります。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:298
msgid ""
"The last child of the node, if there are any, or ``None``. This is a read-"
"only attribute."
msgstr ""
"このノードに子ノードがある場合、その末尾のノードです。そうでない場合 "
"``None`` になります。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:304
msgid ""
"The part of the :attr:`tagName` following the colon if there is one, else "
"the entire :attr:`tagName`.  The value is a string."
msgstr ""
":attr:`tagName` にコロンがあれば、コロン以降の部分に、なければ :attr:"
"`tagName` 全体になります。値は文字列です。"

#: ../../library/xml.dom.rst:310
msgid ""
"The part of the :attr:`tagName` preceding the colon if there is one, else "
"the empty string.  The value is a string, or ``None``."
msgstr ""
":attr:`tagName` のコロンがあれば、コロン以前の部分に、なければ空文字列になり"
"ます。値は文字列か、 ``None`` になります。"

#: ../../library/xml.dom.rst:316
msgid ""
"The namespace associated with the element name.  This will be a string or "
"``None``.  This is a read-only attribute."
msgstr ""
"要素名に関連付けられた名前空間です。文字列か ``None`` になります。読み出し専"
"用の属性です。"

#: ../../library/xml.dom.rst:322
msgid ""
"This has a different meaning for each node type; see the DOM specification "
"for details.  You can always get the information you would get here from "
"another property such as the :attr:`tagName` property for elements or the :"
"attr:`name` property for attributes. For all node types, the value of this "
"attribute will be either a string or ``None``.  This is a read-only "
"attribute."
msgstr ""
"この属性はノード型ごとに異なる意味を持ちます。その詳細は DOM 仕様を参照してく"
"ださい。この属性で得られることになる情報は、全てのノード型では :attr:"
"`tagName` 、属性では :attr:`name` プロパティといったように、常に他のプロパ"
"ティで得ることができます。全てのノード型で、この属性の値は文字列か ``None`` "
"になります。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:331
msgid ""
"This has a different meaning for each node type; see the DOM specification "
"for details.  The situation is similar to that with :attr:`nodeName`.  The "
"value is a string or ``None``."
msgstr ""
"この属性はノード型ごとに異なる意味を持ちます。その詳細は DOM 仕様を参照してく"
"ださい。その状況は :attr:`nodeName` と似ています。この属性の値は文字列または "
"``None`` になります。"

#: ../../library/xml.dom.rst:338
msgid "Return ``True`` if the node has any attributes."
msgstr "ノードが何らかの属性を持っている場合に ``True`` を返します。"

#: ../../library/xml.dom.rst:343
msgid "Return ``True`` if the node has any child nodes."
msgstr "ノードが何らかの子ノードを持っている場合に ``True`` を返します。"

#: ../../library/xml.dom.rst:348
msgid ""
"Return ``True`` if *other* refers to the same node as this node. This is "
"especially useful for DOM implementations which use any sort of proxy "
"architecture (because more than one object can refer to the same node)."
msgstr ""
"*other* がこのノードと同じノードを参照している場合に ``True`` を返します。こ"
"のメソッドは、何らかのプロキシ (proxy) 機構を利用するような DOM 実装で特に便"
"利です (一つ以上のオブジェクトが同じノードを参照するかもしれないからです)。"

#: ../../library/xml.dom.rst:354
msgid ""
"This is based on a proposed DOM Level 3 API which is still in the \"working "
"draft\" stage, but this particular interface appears uncontroversial.  "
"Changes from the W3C will not necessarily affect this method in the Python "
"DOM interface (though any new W3C API for this would also be supported)."
msgstr ""
"このメソッドは DOM レベル 3 API の提案に基づいたもので、まだ \"ワーキングドラ"
"フト(working draft)\" の段階です。しかし、このインタフェースには異論は出ない"
"と考えられます。W3C による変更があっても、必ずしも Python DOM インタフェース"
"におけるこのメソッドに影響するとは限りません (ただしこのメソッドに対する何ら"
"かの新しい W3C API もサポートされるかもしれません)。"

#: ../../library/xml.dom.rst:362
msgid ""
"Add a new child node to this node at the end of the list of children, "
"returning *newChild*. If the node was already in the tree, it is removed "
"first."
msgstr ""
"現在のノードの子ノードリストの末尾に新たな子ノードを追加し、*newChild* を返し"
"ます。もしノードが既にツリーにあれば、最初に削除されます。"

#: ../../library/xml.dom.rst:369
msgid ""
"Insert a new child node before an existing child.  It must be the case that "
"*refChild* is a child of this node; if not, :exc:`ValueError` is raised. "
"*newChild* is returned. If *refChild* is ``None``, it inserts *newChild* at "
"the end of the children's list."
msgstr ""
"新たな子ノードを既存の子ノードの前に挿入します。 *refChild* は現在のノードの"
"子ノードである場合に限られます; そうでない場合、 :exc:`ValueError` が送出され"
"ます。 *newChild* が返されます。もし *refChild* が ``None`` なら、 "
"*newChild* を子ノードリストの最後に挿入します。"

#: ../../library/xml.dom.rst:377
msgid ""
"Remove a child node.  *oldChild* must be a child of this node; if not, :exc:"
"`ValueError` is raised.  *oldChild* is returned on success.  If *oldChild* "
"will not be used further, its :meth:`unlink` method should be called."
msgstr ""
"子ノードを削除します。 *oldChild* はこのノードの子ノードでなければなりませ"
"ん。そうでない場合、 :exc:`ValueError` が送出されます。成功した場合 "
"*oldChild* が返されます。 *oldChild* をそれ以降使わない場合、 :meth:`unlink` "
"メソッドを呼び出さなければなりません。"

#: ../../library/xml.dom.rst:384
msgid ""
"Replace an existing node with a new node. It must be the case that  "
"*oldChild* is a child of this node; if not, :exc:`ValueError` is raised."
msgstr ""
"既存のノードと新たなノードを置き換えます。この操作は *oldChild* が現在のノー"
"ドの子ノードである場合に限られます; そうでない場合、 :exc:`ValueError` が送出"
"されます。"

#: ../../library/xml.dom.rst:390
msgid ""
"Join adjacent text nodes so that all stretches of text are stored as single :"
"class:`Text` instances.  This simplifies processing text from a DOM tree for "
"many applications."
msgstr ""
"一続きのテキスト全体を一個の :class:`Text` インスタンスとして保存するために隣"
"接するテキストノードを結合します。これにより、多くのアプリケーションで DOM ツ"
"リーからのテキスト処理が簡単になります。"

#: ../../library/xml.dom.rst:397
msgid ""
"Clone this node.  Setting *deep* means to clone all child nodes as well.  "
"This returns the clone."
msgstr ""
"このノードを複製 (clone) します。*deep* を設定すると、子ノードも同様に複製す"
"ることを意味します。複製されたノードを返します。"

#: ../../library/xml.dom.rst:404
msgid "NodeList Objects"
msgstr "NodeList オブジェクト"

#: ../../library/xml.dom.rst:406
msgid ""
"A :class:`NodeList` represents a sequence of nodes.  These objects are used "
"in two ways in the DOM Core recommendation:  an :class:`Element` object "
"provides one as its list of child nodes, and the :meth:"
"`getElementsByTagName` and :meth:`getElementsByTagNameNS` methods of :class:"
"`Node` return objects with this interface to represent query results."
msgstr ""
":class:`NodeList` はノードのシーケンスを表現します。\n"
"これらのオブジェクトは DOM コア勧告 (DOM Core recommendation) において、二通"
"りに使われています: :class:`Element` オブジェクトでは、子ノードのリストを提供"
"するのに :class:`NodeList` を利用します。\n"
"また、このインタフェースにおける :class:`Node` の :meth:"
"`getElementsByTagName` および :meth:`getElementsByTagNameNS` メソッドは、クエ"
"リに対する結果を表現するのに :class:`NodeList` を利用します。"

#: ../../library/xml.dom.rst:412
msgid ""
"The DOM Level 2 recommendation defines one method and one attribute for "
"these objects:"
msgstr ""
"DOM レベル 2 勧告では、これらのオブジェクトに対し、以下のようにメソッドを一"
"つ、属性を一つ定義しています。"

#: ../../library/xml.dom.rst:418
msgid ""
"Return the *i*'th item from the sequence, if there is one, or ``None``.  The "
"index *i* is not allowed to be less than zero or greater than or equal to "
"the length of the sequence."
msgstr ""
"存在する場合シークエンスの *i* 番目の要素を、そうでない場合 ``None`` を返しま"
"す。*i* は 0 未満やシークエンスの長さ以上であってはなりません。"

#: ../../library/xml.dom.rst:425
msgid "The number of nodes in the sequence."
msgstr "シーケンス中のノードの数です。"

#: ../../library/xml.dom.rst:427
msgid ""
"In addition, the Python DOM interface requires that some additional support "
"is provided to allow :class:`NodeList` objects to be used as Python "
"sequences.  All :class:`NodeList` implementations must include support for :"
"meth:`~object.__len__` and :meth:`~object.__getitem__`; this allows "
"iteration over the :class:`NodeList` in :keyword:`for` statements and proper "
"support for the :func:`len` built-in function."
msgstr ""
"この他に、Python の DOM インタフェースでは、 :class:`NodeList` オブジェクト"
"を Python のシーケンスとして使えるようにするサポートが追加されていることが必"
"要です。 :class:`NodeList`  の実装では、全て :meth:`~object.__len__` と :"
"meth:`~object.__getitem__` をサポートしなければなりません; このサポートによ"
"り、 :keyword:`for`  文内で :class:`NodeList` にわたる繰り返しと、組み込み関"
"数 :func:`len` の適切なサポートができるようになります。"

#: ../../library/xml.dom.rst:435
msgid ""
"If a DOM implementation supports modification of the document, the :class:"
"`NodeList` implementation must also support the :meth:`~object.__setitem__` "
"and :meth:`~object.__delitem__` methods."
msgstr ""
"DOM 実装が文書の変更をサポートしている場合、 :class:`NodeList`  の実装でも :"
"meth:`~object.__setitem__` および :meth:`~object.__delitem__` メソッドをサ"
"ポートしなければなりません。"

#: ../../library/xml.dom.rst:443
msgid "DocumentType Objects"
msgstr "DocumentType オブジェクト"

#: ../../library/xml.dom.rst:445
msgid ""
"Information about the notations and entities declared by a document "
"(including the external subset if the parser uses it and can provide the "
"information) is available from a :class:`DocumentType` object.  The :class:"
"`DocumentType` for a document is available from the :class:`Document` "
"object's :attr:`doctype` attribute; if there is no ``DOCTYPE`` declaration "
"for the document, the document's :attr:`doctype` attribute will be set to "
"``None`` instead of an instance of this interface."
msgstr ""
"文書で宣言されている記法 (notation) やエンティティ (entity) に関する (外部サ"
"ブセット(external subset) がパーザから利用でき、情報を提供できる場合にはそれ"
"も含めた) 情報は、 :class:`DocumentType` オブジェクトから手に入れることができ"
"ます。文書の :class:`DocumentType` は、 :class:`Document` オブジェクトの :"
"attr:`doctype` 属性で入手することができます; 文書の ``DOCTYPE`` 宣言がない場"
"合、文書の :attr:`doctype` 属性は、このインタフェースを持つインスタンスの代わ"
"りに ``None`` に設定されます。"

#: ../../library/xml.dom.rst:453
msgid ""
":class:`DocumentType` is a specialization of :class:`Node`, and adds the "
"following attributes:"
msgstr ""
":class:`DocumentType` は :class:`Node` を特殊化したもので、以下の属性を加えて"
"います:"

#: ../../library/xml.dom.rst:459
msgid ""
"The public identifier for the external subset of the document type "
"definition. This will be a string or ``None``."
msgstr ""
"文書型定義 (document type definition) の外部サブセットに対する公開識別子 "
"(public identifier) です。文字列または ``None`` になります。"

#: ../../library/xml.dom.rst:465
msgid ""
"The system identifier for the external subset of the document type "
"definition. This will be a URI as a string, or ``None``."
msgstr ""
"文書型定義 (document type definition) の外部サブセットに対するシステム識別子 "
"(system identifier) です。文字列の URI または ``None`` になります。"

#: ../../library/xml.dom.rst:471
msgid ""
"A string giving the complete internal subset from the document. This does "
"not include the brackets which enclose the subset.  If the document has no "
"internal subset, this should be ``None``."
msgstr ""
"ドキュメントの完全な内部サブセットを与える文字列です。サブセットを囲むブラ"
"ケットは含みません。ドキュメントが内部サブセットを持たない場合、この値は "
"``None`` です。"

#: ../../library/xml.dom.rst:478
msgid ""
"The name of the root element as given in the ``DOCTYPE`` declaration, if "
"present."
msgstr ""
"``DOCTYPE`` 宣言でルート要素の名前が与えられている場合、その値になります。"

#: ../../library/xml.dom.rst:484
msgid ""
"This is a :class:`NamedNodeMap` giving the definitions of external entities. "
"For entity names defined more than once, only the first definition is "
"provided (others are ignored as required by the XML recommendation).  This "
"may be ``None`` if the information is not provided by the parser, or if no "
"entities are defined."
msgstr ""
"外部エンティティの定義を与える :class:`NamedNodeMap` です。複数回定義されてい"
"るエンティティに対しては、最初の定義だけが提供されます (その他は XML 勧告での"
"要求仕様によって無視されます)。パーザによって情報が提供されないか、エンティ"
"ティが定義されていない場合には、この値は ``None`` になることがあります。"

#: ../../library/xml.dom.rst:493
msgid ""
"This is a :class:`NamedNodeMap` giving the definitions of notations. For "
"notation names defined more than once, only the first definition is provided "
"(others are ignored as required by the XML recommendation).  This may be "
"``None`` if the information is not provided by the parser, or if no "
"notations are defined."
msgstr ""
"記法の定義を与える :class:`NamedNodeMap` です。複数回定義されている記法名に対"
"しては、最初の定義だけが提供されます (その他は XML 勧告での要求仕様によって無"
"視されます)。パーザによって情報が提供されないか、エンティティが定義されていな"
"い場合には、この値は ``None`` になることがあります。"

#: ../../library/xml.dom.rst:503
msgid "Document Objects"
msgstr "Document オブジェクト"

#: ../../library/xml.dom.rst:505
msgid ""
"A :class:`Document` represents an entire XML document, including its "
"constituent elements, attributes, processing instructions, comments etc.  "
"Remember that it inherits properties from :class:`Node`."
msgstr ""
":class:`Document` は XML ドキュメント全体を表現し、その構成要素である要素、属"
"性、処理命令、コメント等を持ちます。 :class:`Document` は :class:`Node` から"
"プロパティを継承していることを思い出してください。"

#: ../../library/xml.dom.rst:512
msgid "The one and only root element of the document."
msgstr "ドキュメントの唯一無二のルート要素です。"

#: ../../library/xml.dom.rst:517
msgid ""
"Create and return a new element node.  The element is not inserted into the "
"document when it is created.  You need to explicitly insert it with one of "
"the other methods such as :meth:`insertBefore` or :meth:`appendChild`."
msgstr ""
"新たな要素ノードを生成して返します。要素は、生成された時点ではドキュメント内"
"に挿入されません。 :meth:`insertBefore` や :meth:`appendChild` のような他のメ"
"ソッドの一つを使って明示的に挿入を行う必要があります。"

#: ../../library/xml.dom.rst:524
msgid ""
"Create and return a new element with a namespace.  The *tagName* may have a "
"prefix.  The element is not inserted into the document when it is created.  "
"You need to explicitly insert it with one of the other methods such as :meth:"
"`insertBefore` or :meth:`appendChild`."
msgstr ""
"名前空間を伴う新たな要素ノードを生成して返します。 *tagName* には接頭辞 "
"(prefix) があってもかまいません。要素は、生成された時点では文書内に挿入されま"
"せん。 :meth:`insertBefore` や :meth:`appendChild` のような他のメソッドの一つ"
"を使って明示的に挿入を行う必要があります。"

#: ../../library/xml.dom.rst:532
msgid ""
"Create and return a text node containing the data passed as a parameter.  As "
"with the other creation methods, this one does not insert the node into the "
"tree."
msgstr ""
"引数として渡されたデータの入ったテキストノードを生成して返します。他の生成 "
"(create) メソッドと同じく、このメソッドは生成されたノードをツリーに挿入しませ"
"ん。"

#: ../../library/xml.dom.rst:539
msgid ""
"Create and return a comment node containing the data passed as a parameter.  "
"As with the other creation methods, this one does not insert the node into "
"the tree."
msgstr ""
"引数として渡されたデータの入ったコメントノードを生成して返します。他の生成 "
"(create) メソッドと同じく、このメソッドは生成されたノードをツリーに挿入しませ"
"ん。"

#: ../../library/xml.dom.rst:546
msgid ""
"Create and return a processing instruction node containing the *target* and "
"*data* passed as parameters.  As with the other creation methods, this one "
"does not insert the node into the tree."
msgstr ""
"引数として渡された *target* および *data* の入った処理命令ノードを生成して返"
"します。他の生成 (create) メソッドと同じく、このメソッドは生成されたノードを"
"ツリーに挿入しません。"

#: ../../library/xml.dom.rst:553
msgid ""
"Create and return an attribute node.  This method does not associate the "
"attribute node with any particular element.  You must use :meth:"
"`setAttributeNode` on the appropriate :class:`Element` object to use the "
"newly created attribute instance."
msgstr ""
"属性ノードを生成して返します。このメソッドは属性ノードを特定の要素に関連づけ"
"ることはしません。新たに生成された属性インスタンスを使うには、適切な :class:"
"`Element` オブジェクトの :meth:`setAttributeNode` を使わなければなりません。"

#: ../../library/xml.dom.rst:561
msgid ""
"Create and return an attribute node with a namespace.  The *tagName* may "
"have a prefix.  This method does not associate the attribute node with any "
"particular element.  You must use :meth:`setAttributeNode` on the "
"appropriate :class:`Element` object to use the newly created attribute "
"instance."
msgstr ""
"名前空間を伴う新たな属性ノードを生成して返します。 *tagName* には接頭辞 "
"(prefix) があってもかまいません。このメソッドは属性ノードを特定の要素に関連づ"
"けることはしません。新たに生成された属性インスタンスを使うには、適切な :"
"class:`Element` オブジェクトの :meth:`setAttributeNode` を使わなければなりま"
"せん。"

#: ../../library/xml.dom.rst:569
msgid ""
"Search for all descendants (direct children, children's children, etc.) with "
"a particular element type name."
msgstr ""
"全ての下位要素 (直接の子要素、子要素の子要素等) から特定の要素型名を持つもの"
"を検索します。"

#: ../../library/xml.dom.rst:575
msgid ""
"Search for all descendants (direct children, children's children, etc.) with "
"a particular namespace URI and localname.  The localname is the part of the "
"namespace after the prefix."
msgstr ""
"全ての下位要素 (直接の子要素、子要素の子要素等) から特定の名前空間 URI とロー"
"カル名 (local name) を持つものを検索します。ローカル名は名前空間における接頭"
"辞以降の部分です。"

#: ../../library/xml.dom.rst:583
msgid "Element Objects"
msgstr "Element オブジェクト"

#: ../../library/xml.dom.rst:585
msgid ""
":class:`Element` is a subclass of :class:`Node`, so inherits all the "
"attributes of that class."
msgstr ""
":class:`Element` は :class:`Node` のサブクラスです。このため :class:`Node` ク"
"ラスの全ての属性を継承します。"

#: ../../library/xml.dom.rst:591
msgid ""
"The element type name.  In a namespace-using document it may have colons in "
"it. The value is a string."
msgstr ""
"要素型名です。名前空間使用の文書では、要素型名中にコロンがあるかもしれませ"
"ん。値は文字列です。"

#: ../../library/xml.dom.rst:597 ../../library/xml.dom.rst:602
msgid "Same as equivalent method in the :class:`Document` class."
msgstr ":class:`Document` クラス内における同名のメソッドと同じです。"

#: ../../library/xml.dom.rst:607
msgid "Return ``True`` if the element has an attribute named by *name*."
msgstr ""
"指定要素に *name* で渡した名前の属性が存在していれば ``True`` を返します。"

#: ../../library/xml.dom.rst:612
msgid ""
"Return ``True`` if the element has an attribute named by *namespaceURI* and "
"*localName*."
msgstr ""
"指定要素に *namespaceURI* と *localName* で指定した名前の属性が存在していれ"
"ば ``True`` を返します。"

#: ../../library/xml.dom.rst:618
msgid ""
"Return the value of the attribute named by *name* as a string. If no such "
"attribute exists, an empty string is returned, as if the attribute had no "
"value."
msgstr ""
"*name* で指定した属性の値を文字列として返します。もし、属性が存在しない、もし"
"くは属性に値が設定されていない場合、空の文字列が返されます。"

#: ../../library/xml.dom.rst:624
msgid "Return the :class:`Attr` node for the attribute named by *attrname*."
msgstr "*attrname* で指定された属性の :class:`Attr` ノードを返します。"

#: ../../library/xml.dom.rst:629
msgid ""
"Return the value of the attribute named by *namespaceURI* and *localName* as "
"a string. If no such attribute exists, an empty string is returned, as if "
"the attribute had no value."
msgstr ""
"*namespaceURI* と *localName* によって指定した属性の値を文字列として返しま"
"す。もし、属性が存在しない、もしくは属性に値が設定されていない場合、空の文字"
"列が返されます。"

#: ../../library/xml.dom.rst:636
msgid ""
"Return an attribute value as a node, given a *namespaceURI* and *localName*."
msgstr ""
"指定した *namespaceURI* および *localName* を持つ属性値をノードとして返しま"
"す。"

#: ../../library/xml.dom.rst:641
msgid ""
"Remove an attribute by name.  If there is no matching attribute, a :exc:"
"`NotFoundErr` is raised."
msgstr ""
"名前で指定された属性を削除します。該当する属性がない場合、:exc:`NotFoundErr` "
"が送出されます。"

#: ../../library/xml.dom.rst:647
msgid ""
"Remove and return *oldAttr* from the attribute list, if present. If "
"*oldAttr* is not present, :exc:`NotFoundErr` is raised."
msgstr ""
"*oldAttr* が属性リストにある場合、削除して返します。 *oldAttr* が存在しない場"
"合、 :exc:`NotFoundErr` が送出されます。"

#: ../../library/xml.dom.rst:653
msgid ""
"Remove an attribute by name.  Note that it uses a localName, not a qname.  "
"No exception is raised if there is no matching attribute."
msgstr ""
"名前で指定された属性を削除します。このメソッドは *qname* ではなく "
"*localName* を使うので注意してください。該当する属性がなくても例外は送出され"
"ません。"

#: ../../library/xml.dom.rst:659
msgid "Set an attribute value from a string."
msgstr "文字列を使って属性値を設定します。"

#: ../../library/xml.dom.rst:664
msgid ""
"Add a new attribute node to the element, replacing an existing attribute if "
"necessary if the :attr:`name` attribute matches.  If a replacement occurs, "
"the old attribute node will be returned.  If *newAttr* is already in use, :"
"exc:`InuseAttributeErr` will be raised."
msgstr ""
"新たな属性ノードを要素に追加します。 :attr:`name` 属性が既存の属性に一致した"
"場合、必要に応じて属性を置換します。置換が行われると古い属性ノードが返されま"
"す。 *newAttr* がすでに使われていれば、 :exc:`InuseAttributeErr` が送出されま"
"す。"

#: ../../library/xml.dom.rst:672
msgid ""
"Add a new attribute node to the element, replacing an existing attribute if "
"necessary if the :attr:`namespaceURI` and :attr:`localName` attributes "
"match. If a replacement occurs, the old attribute node will be returned.  If "
"*newAttr* is already in use, :exc:`InuseAttributeErr` will be raised."
msgstr ""
"新たな属性ノードを要素に追加します。 :attr:`namespaceURI` および :attr:"
"`localName` 属性が既存の属性に一致した場合、必要に応じて属性を置き換えます。"
"置換が生じると、古い属性ノードが返されます。 *newAttr* がすでに使われていれ"
"ば、 :exc:`InuseAttributeErr` が送出されます。"

#: ../../library/xml.dom.rst:680
msgid ""
"Set an attribute value from a string, given a *namespaceURI* and a *qname*. "
"Note that a qname is the whole attribute name.  This is different than above."
msgstr ""
"指定された *namespaceURI* および *qname* で与えられた属性の値を文字列で設定し"
"ます。qname は属性の完全な名前であり、この点が上記のメソッドと違うので注意し"
"てください。"

#: ../../library/xml.dom.rst:687
msgid "Attr Objects"
msgstr "Attr オブジェクト"

#: ../../library/xml.dom.rst:689
msgid ""
":class:`Attr` inherits from :class:`Node`, so inherits all its attributes."
msgstr ""
":class:`Attr` は :class:`Node` を継承しており、全ての属性を継承しています。"

#: ../../library/xml.dom.rst:694
msgid ""
"The attribute name. In a namespace-using document it may include a colon."
msgstr ""
"要素型名です。名前空間使用の文書では、要素型名中にコロンが含まれるかもしれま"
"せん。"

#: ../../library/xml.dom.rst:700
msgid ""
"The part of the name following the colon if there is one, else the entire "
"name. This is a read-only attribute."
msgstr "名前にコロンがあればコロン以降の部分に、なければ名前全体になります。"

#: ../../library/xml.dom.rst:707
msgid ""
"The part of the name preceding the colon if there is one, else the empty "
"string."
msgstr "名前にコロンがあればコロン以前の部分に、なければ空文字列になります。"

#: ../../library/xml.dom.rst:713
msgid ""
"The text value of the attribute.  This is a synonym for the :attr:"
"`nodeValue` attribute."
msgstr "その要素の text value. これは :attr:`nodeValue` 属性の別名です。"

#: ../../library/xml.dom.rst:720
msgid "NamedNodeMap Objects"
msgstr "NamedNodeMap Objects"

#: ../../library/xml.dom.rst:722
msgid ":class:`NamedNodeMap` does *not* inherit from :class:`Node`."
msgstr ":class:`NamedNodeMap` は :class:`Node` を継承して *いません* 。"

#: ../../library/xml.dom.rst:727
msgid "The length of the attribute list."
msgstr "属性リストの長さです。"

#: ../../library/xml.dom.rst:732
msgid ""
"Return an attribute with a particular index.  The order you get the "
"attributes in is arbitrary but will be consistent for the life of a DOM.  "
"Each item is an attribute node.  Get its value with the :attr:`value` "
"attribute."
msgstr ""
"特定のインデクスを持つ属性を返します。属性の並び方は任意ですが、 DOM 文書が生"
"成されている間は一定になります。各要素は属性ノードです。属性値はノードの :"
"attr:`value` 属性で取得してください。"

#: ../../library/xml.dom.rst:736
msgid ""
"There are also experimental methods that give this class more mapping "
"behavior. You can use them or you can use the standardized :meth:"
"`getAttribute\\*` family of methods on the :class:`Element` objects."
msgstr ""
"このクラスをよりマップ型的な動作ができるようにする実験的なメソッドもありま"
"す。そうしたメソッドを使うこともできますし、 :class:`Element` オブジェクトに"
"対して、標準化された :meth:`getAttribute\\*` ファミリのメソッドを使うこともで"
"きます。"

#: ../../library/xml.dom.rst:744
msgid "Comment Objects"
msgstr "Comment オブジェクト"

#: ../../library/xml.dom.rst:746
msgid ""
":class:`Comment` represents a comment in the XML document.  It is a subclass "
"of :class:`Node`, but cannot have child nodes."
msgstr ""
":class:`Comment` は XML 文書中のコメントを表現します。 :class:`Comment` は :"
"class:`Node` のサブクラスですが、子ノードを持つことはありません。"

#: ../../library/xml.dom.rst:752
msgid ""
"The content of the comment as a string.  The attribute contains all "
"characters between the leading ``<!-``\\ ``-`` and trailing ``-``\\ ``->``, "
"but does not include them."
msgstr ""
"文字列によるコメントの内容です。この属性には、コメントの先頭にある ``<!-`` "
"\\ ``-`` と末尾にある ``-`` \\ ``->`` 間の全ての文字が入っていますが、``<!-"
"`` \\ ``-`` と ``-`` \\ ``->`` 自体は含みません。"

#: ../../library/xml.dom.rst:760
msgid "Text and CDATASection Objects"
msgstr "Text オブジェクトおよび CDATASection オブジェクト"

#: ../../library/xml.dom.rst:762
msgid ""
"The :class:`Text` interface represents text in the XML document.  If the "
"parser and DOM implementation support the DOM's XML extension, portions of "
"the text enclosed in CDATA marked sections are stored in :class:"
"`CDATASection` objects. These two interfaces are identical, but provide "
"different values for the :attr:`nodeType` attribute."
msgstr ""
":class:`Text` インタフェースは XML 文書内のテキストを表現します。パーザおよ"
"び DOM 実装が DOM の XML 拡張をサポートしている場合、 CDATA でマークされた区"
"域 (section) に入れられている部分テキストは :class:`CDATASection` オブジェク"
"トに記憶されます。これら二つのインタフェースは同一のものですが、 :attr:"
"`nodeType` 属性が異なります。"

#: ../../library/xml.dom.rst:768
msgid ""
"These interfaces extend the :class:`Node` interface.  They cannot have child "
"nodes."
msgstr ""
"これらのインタフェースは :class:`Node` インタフェースを拡張したものです。しか"
"し子ノードを持つことはできません。"

#: ../../library/xml.dom.rst:774
msgid "The content of the text node as a string."
msgstr "文字列によるテキストノードの内容です。"

#: ../../library/xml.dom.rst:778
msgid ""
"The use of a :class:`CDATASection` node does not indicate that the node "
"represents a complete CDATA marked section, only that the content of the "
"node was part of a CDATA section.  A single CDATA section may be represented "
"by more than one node in the document tree.  There is no way to determine "
"whether two adjacent :class:`CDATASection` nodes represent different CDATA "
"marked sections."
msgstr ""
":class:`CDATASection` ノードの利用は、ノードが完全な CDATA マーク区域を表現す"
"るという意味ではなく、ノードの内容が CDATA 区域の一部であるということを意味す"
"るだけです。単一の CDATA セクションは文書ツリー内で複数のノードとして表現され"
"ることがあります。二つの隣接する :class:`CDATASection` ノードが、異なる "
"CDATA マーク区域かどうかを決定する方法はありません。"

#: ../../library/xml.dom.rst:788
msgid "ProcessingInstruction Objects"
msgstr "ProcessingInstruction オブジェクト"

#: ../../library/xml.dom.rst:790
msgid ""
"Represents a processing instruction in the XML document; this inherits from "
"the :class:`Node` interface and cannot have child nodes."
msgstr ""
"XML 文書内の処理命令を表現します; :class:`Node` インタフェースを継承していま"
"すが、子ノードを持つことはできません。"

#: ../../library/xml.dom.rst:796
msgid ""
"The content of the processing instruction up to the first whitespace "
"character. This is a read-only attribute."
msgstr "最初の空白文字までの処理命令の内容です。読み出し専用の属性です。"

#: ../../library/xml.dom.rst:802
msgid ""
"The content of the processing instruction following the first whitespace "
"character."
msgstr "最初の空白文字以降の処理命令の内容です。"

#: ../../library/xml.dom.rst:809
msgid "Exceptions"
msgstr "例外"

#: ../../library/xml.dom.rst:811
msgid ""
"The DOM Level 2 recommendation defines a single exception, :exc:"
"`DOMException`, and a number of constants that allow applications to "
"determine what sort of error occurred. :exc:`DOMException` instances carry "
"a :attr:`code` attribute that provides the appropriate value for the "
"specific exception."
msgstr ""
"DOM レベル 2 勧告では、単一の例外 :exc:`DOMException` と、どの種のエラーが発"
"生したかをアプリケーションが決定できるようにする多くの定数を定義していま"
"す。 :exc:`DOMException` インスタンスは、特定の例外に関する適切な値を提供す"
"る :attr:`code` 属性を伴っています。"

#: ../../library/xml.dom.rst:816
msgid ""
"The Python DOM interface provides the constants, but also expands the set of "
"exceptions so that a specific exception exists for each of the exception "
"codes defined by the DOM.  The implementations must raise the appropriate "
"specific exception, each of which carries the appropriate value for the :"
"attr:`code` attribute."
msgstr ""
"Python DOM インタフェースでは、上記の定数を提供していますが、同時に一連の例外"
"を拡張して、DOM で定義されている各例外コードに対して特定の例外が存在するよう"
"にしています。 DOM の実装では、適切な特定の例外を送出しなければならず、各例外"
"は :attr:`code` 属性に対応する適切な値を伴わなければなりません。"

#: ../../library/xml.dom.rst:825
msgid ""
"Base exception class used for all specific DOM exceptions.  This exception "
"class cannot be directly instantiated."
msgstr ""
"全ての特定の DOM 例外で使われている基底例外クラスです。この例外クラスを直接イ"
"ンスタンス化することはできません。"

#: ../../library/xml.dom.rst:831
msgid ""
"Raised when a specified range of text does not fit into a string. This is "
"not known to be used in the Python DOM implementations, but may be received "
"from DOM implementations not written in Python."
msgstr ""
"指定された範囲のテキストが文字列に収まらない場合に送出されます。この例外は "
"Python の DOM 実装で使われるかどうかは判っていませんが、Python で書かれていな"
"い DOM 実装から送出される場合があります。"

#: ../../library/xml.dom.rst:838
msgid ""
"Raised when an attempt is made to insert a node where the node type is not "
"allowed."
msgstr "挿入できない型のノードを挿入しようと試みたときに送出されます。"

#: ../../library/xml.dom.rst:844
msgid ""
"Raised when an index or size parameter to a method is negative or exceeds "
"the allowed values."
msgstr ""
"メソッドに与えたインデクスやサイズパラメタが負の値や許容範囲の値を超えた際に"
"送出されます。"

#: ../../library/xml.dom.rst:850
msgid ""
"Raised when an attempt is made to insert an :class:`Attr` node that is "
"already present elsewhere in the document."
msgstr ""
"文書中にすでに存在する :class:`Attr` ノードを挿入しようと試みた際に送出されま"
"す。"

#: ../../library/xml.dom.rst:856
msgid ""
"Raised if a parameter or an operation is not supported on the underlying "
"object."
msgstr ""
"パラメタまたは操作が根底にあるオブジェクトでサポートされていない場合に送出さ"
"れます。"

#: ../../library/xml.dom.rst:861
msgid ""
"This exception is raised when a string parameter contains a character that "
"is not permitted in the context it's being used in by the XML 1.0 "
"recommendation. For example, attempting to create an :class:`Element` node "
"with a space in the element type name will cause this error to be raised."
msgstr ""
"この例外は、文字列パラメタが、現在使われているコンテキストで XML 1.0 勧告に"
"よって許可されていない場合に送出されます。例えば、要素型に空白の入った :"
"class:`Element` ノードを生成しようとすると、このエラーが送出されます。"

#: ../../library/xml.dom.rst:869
msgid "Raised when an attempt is made to modify the type of a node."
msgstr "ノードの型を変更しようと試みた際に送出されます。"

#: ../../library/xml.dom.rst:874
msgid ""
"Raised when an attempt is made to use an object that is not defined or is no "
"longer usable."
msgstr ""
"定義されていないオブジェクトや、もはや利用できなくなったオブジェクトを使おう"
"と試みた際に送出されます。"

#: ../../library/xml.dom.rst:880
msgid ""
"If an attempt is made to change any object in a way that is not permitted "
"with regard to the `Namespaces in XML <https://www.w3.org/TR/REC-xml-names/"
">`_ recommendation, this exception is raised."
msgstr ""
"`Namespaces in XML <https://www.w3.org/TR/REC-xml-names/>`_ に照らして許可さ"
"れていない方法でオブジェクトを変更しようと試みた場合、この例外が送出されま"
"す。"

#: ../../library/xml.dom.rst:887
msgid ""
"Exception when a node does not exist in the referenced context.  For "
"example, :meth:`NamedNodeMap.removeNamedItem` will raise this if the node "
"passed in does not exist in the map."
msgstr ""
"参照しているコンテキスト中に目的のノードが存在しない場合に送出される例外で"
"す。例えば、 :meth:`NamedNodeMap.removeNamedItem` は渡されたノードがノード"
"マップ中に存在しない場合にこの例外を送出します。"

#: ../../library/xml.dom.rst:894
msgid ""
"Raised when the implementation does not support the requested type of object "
"or operation."
msgstr ""
"要求された方のオブジェクトや操作が実装でサポートされていない場合に送出されま"
"す。"

#: ../../library/xml.dom.rst:900
msgid ""
"This is raised if data is specified for a node which does not support data."
msgstr "データ属性をサポートしないノードにデータを指定した際に送出されます。"

#: ../../library/xml.dom.rst:907
msgid ""
"Raised on attempts to modify an object where modifications are not allowed "
"(such as for read-only nodes)."
msgstr ""
"オブジェクトに対して (読み出し専用ノードに対する修正のように) 許可されていな"
"い修正を行おうと試みた際に送出されます。"

#: ../../library/xml.dom.rst:913
msgid "Raised when an invalid or illegal string is specified."
msgstr "無効または不正な文字列が指定された際に送出されます。"

#: ../../library/xml.dom.rst:920
msgid ""
"Raised when a node is inserted in a different document than it currently "
"belongs to, and the implementation does not support migrating the node from "
"one document to the other."
msgstr ""
"ノードが現在属している文書と異なる文書に挿入され、かつある文書から別の文書へ"
"のノードの移行が実装でサポートされていない場合に送出されます。"

#: ../../library/xml.dom.rst:924
msgid ""
"The exception codes defined in the DOM recommendation map to the exceptions "
"described above according to this table:"
msgstr ""
"DOM 勧告で定義されている例外コードは、以下のテーブルに従って上記の例外と対応"
"付けられます:"

#: ../../library/xml.dom.rst:928
msgid "Constant"
msgstr "定数"

#: ../../library/xml.dom.rst:928
msgid "Exception"
msgstr "例外"

#: ../../library/xml.dom.rst:930
msgid ":const:`DOMSTRING_SIZE_ERR`"
msgstr ":const:`DOMSTRING_SIZE_ERR`"

#: ../../library/xml.dom.rst:930
msgid ":exc:`DomstringSizeErr`"
msgstr ":exc:`DomstringSizeErr`"

#: ../../library/xml.dom.rst:932
msgid ":const:`HIERARCHY_REQUEST_ERR`"
msgstr ":const:`HIERARCHY_REQUEST_ERR`"

#: ../../library/xml.dom.rst:932
msgid ":exc:`HierarchyRequestErr`"
msgstr ":exc:`HierarchyRequestErr`"

#: ../../library/xml.dom.rst:934
msgid ":const:`INDEX_SIZE_ERR`"
msgstr ":const:`INDEX_SIZE_ERR`"

#: ../../library/xml.dom.rst:934
msgid ":exc:`IndexSizeErr`"
msgstr ":exc:`IndexSizeErr`"

#: ../../library/xml.dom.rst:936
msgid ":const:`INUSE_ATTRIBUTE_ERR`"
msgstr ":const:`INUSE_ATTRIBUTE_ERR`"

#: ../../library/xml.dom.rst:936
msgid ":exc:`InuseAttributeErr`"
msgstr ":exc:`InuseAttributeErr`"

#: ../../library/xml.dom.rst:938
msgid ":const:`INVALID_ACCESS_ERR`"
msgstr ":const:`INVALID_ACCESS_ERR`"

#: ../../library/xml.dom.rst:938
msgid ":exc:`InvalidAccessErr`"
msgstr ":exc:`InvalidAccessErr`"

#: ../../library/xml.dom.rst:940
msgid ":const:`INVALID_CHARACTER_ERR`"
msgstr ":const:`INVALID_CHARACTER_ERR`"

#: ../../library/xml.dom.rst:940
msgid ":exc:`InvalidCharacterErr`"
msgstr ":exc:`InvalidCharacterErr`"

#: ../../library/xml.dom.rst:942
msgid ":const:`INVALID_MODIFICATION_ERR`"
msgstr ":const:`INVALID_MODIFICATION_ERR`"

#: ../../library/xml.dom.rst:942
msgid ":exc:`InvalidModificationErr`"
msgstr ":exc:`InvalidModificationErr`"

#: ../../library/xml.dom.rst:944
msgid ":const:`INVALID_STATE_ERR`"
msgstr ":const:`INVALID_STATE_ERR`"

#: ../../library/xml.dom.rst:944
msgid ":exc:`InvalidStateErr`"
msgstr ":exc:`InvalidStateErr`"

#: ../../library/xml.dom.rst:946
msgid ":const:`NAMESPACE_ERR`"
msgstr ":const:`NAMESPACE_ERR`"

#: ../../library/xml.dom.rst:946
msgid ":exc:`NamespaceErr`"
msgstr ":exc:`NamespaceErr`"

#: ../../library/xml.dom.rst:948
msgid ":const:`NOT_FOUND_ERR`"
msgstr ":const:`NOT_FOUND_ERR`"

#: ../../library/xml.dom.rst:948
msgid ":exc:`NotFoundErr`"
msgstr ":exc:`NotFoundErr`"

#: ../../library/xml.dom.rst:950
msgid ":const:`NOT_SUPPORTED_ERR`"
msgstr ":const:`NOT_SUPPORTED_ERR`"

#: ../../library/xml.dom.rst:950
msgid ":exc:`NotSupportedErr`"
msgstr ":exc:`NotSupportedErr`"

#: ../../library/xml.dom.rst:952
msgid ":const:`NO_DATA_ALLOWED_ERR`"
msgstr ":const:`NO_DATA_ALLOWED_ERR`"

#: ../../library/xml.dom.rst:952
msgid ":exc:`NoDataAllowedErr`"
msgstr ":exc:`NoDataAllowedErr`"

#: ../../library/xml.dom.rst:954
msgid ":const:`NO_MODIFICATION_ALLOWED_ERR`"
msgstr ":const:`NO_MODIFICATION_ALLOWED_ERR`"

#: ../../library/xml.dom.rst:954
msgid ":exc:`NoModificationAllowedErr`"
msgstr ":exc:`NoModificationAllowedErr`"

#: ../../library/xml.dom.rst:956
msgid ":const:`SYNTAX_ERR`"
msgstr ":const:`SYNTAX_ERR`"

#: ../../library/xml.dom.rst:956
msgid ":exc:`SyntaxErr`"
msgstr ":exc:`SyntaxErr`"

#: ../../library/xml.dom.rst:958
msgid ":const:`WRONG_DOCUMENT_ERR`"
msgstr ":const:`WRONG_DOCUMENT_ERR`"

#: ../../library/xml.dom.rst:958
msgid ":exc:`WrongDocumentErr`"
msgstr ":exc:`WrongDocumentErr`"

#: ../../library/xml.dom.rst:965
msgid "Conformance"
msgstr "適合性"

#: ../../library/xml.dom.rst:967
msgid ""
"This section describes the conformance requirements and relationships "
"between the Python DOM API, the W3C DOM recommendations, and the OMG IDL "
"mapping for Python."
msgstr ""
"この節では適合性に関する要求と、Python DOM API、W3C DOM 勧告、および OMG IDL "
"の Python API への対応付けとの間の関係について述べます。"

#: ../../library/xml.dom.rst:975
msgid "Type Mapping"
msgstr "型の対応付け"

#: ../../library/xml.dom.rst:977
msgid ""
"The IDL types used in the DOM specification are mapped to Python types "
"according to the following table."
msgstr ""
"DOM 仕様で使われている IDL 型は、以下のテーブルに従って Python の型に対応付け"
"られています。"

#: ../../library/xml.dom.rst:981
msgid "IDL Type"
msgstr "IDL 型"

#: ../../library/xml.dom.rst:981
msgid "Python Type"
msgstr "Python の型"

#: ../../library/xml.dom.rst:983
msgid "``boolean``"
msgstr "``boolean``"

#: ../../library/xml.dom.rst:983
msgid "``bool`` or ``int``"
msgstr "``bool`` または ``int``"

#: ../../library/xml.dom.rst:985 ../../library/xml.dom.rst:987
#: ../../library/xml.dom.rst:989
msgid "``int``"
msgstr "``int``"

#: ../../library/xml.dom.rst:987
msgid "``long int``"
msgstr "``long int``"

#: ../../library/xml.dom.rst:989
msgid "``unsigned int``"
msgstr "``unsigned int``"

#: ../../library/xml.dom.rst:991
msgid "``DOMString``"
msgstr "``DOMString``"

#: ../../library/xml.dom.rst:991
msgid "``str`` or ``bytes``"
msgstr "``str`` または ``bytes``"

#: ../../library/xml.dom.rst:993
msgid "``null``"
msgstr "``null``"

#: ../../library/xml.dom.rst:993
msgid "``None``"
msgstr "``None``"

#: ../../library/xml.dom.rst:999
msgid "Accessor Methods"
msgstr "アクセサメソッド"

#: ../../library/xml.dom.rst:1001
msgid ""
"The mapping from OMG IDL to Python defines accessor functions for IDL "
"``attribute`` declarations in much the way the Java mapping does. Mapping "
"the IDL declarations ::"
msgstr ""
"OMG IDL から Python への対応付けは、IDL ``attribute`` 宣言へのアクセサ関数の"
"定義を、Java による対応付けが行うのとほとんど同じように行います。IDL 宣言の対"
"応付け ::"

#: ../../library/xml.dom.rst:1008
msgid ""
"yields three accessor functions:  a \"get\" method for :attr:`someValue` (:"
"meth:`_get_someValue`), and \"get\" and \"set\" methods for :attr:"
"`anotherValue` (:meth:`_get_anotherValue` and :meth:`_set_anotherValue`).  "
"The mapping, in particular, does not require that the IDL attributes are "
"accessible as normal Python attributes:  ``object.someValue`` is *not* "
"required to work, and may raise an :exc:`AttributeError`."
msgstr ""
"は、三つのアクセサ関数: :attr:`someValue` に対する \"get\" メソッド (:meth:"
"`_get_someValue`)、そして :attr:`anotherValue` に対する \"get\" および "
"\"set\" メソッド (:meth:`_get_anotherValue` および :meth:"
"`_set_anotherValue`) を生成します。とりわけ、対応付けでは、IDL 属性が通常の "
"Python 属性としてアクセス可能であることは必須ではありません: ``object."
"someValue`` が動作することは必須 *ではなく* 、 :exc:`AttributeError` を送出し"
"てもかまいません。"

#: ../../library/xml.dom.rst:1015
msgid ""
"The Python DOM API, however, *does* require that normal attribute access "
"work. This means that the typical surrogates generated by Python IDL "
"compilers are not likely to work, and wrapper objects may be needed on the "
"client if the DOM objects are accessed via CORBA. While this does require "
"some additional consideration for CORBA DOM clients, the implementers with "
"experience using DOM over CORBA from Python do not consider this a problem.  "
"Attributes that are declared ``readonly`` may not restrict write access in "
"all DOM implementations."
msgstr ""
"しかしながら、Python DOM API では、通常の属性アクセスが動作することが必須で"
"す。これは、Python IDL コンパイラによって生成された典型的な代用物はまず動作す"
"ることはなく、DOM オブジェクトが CORBA を介してアクセスされる場合には、クライ"
"アント上でラッパオブジェクトが必要であることを意味します。CORBA DOM クライア"
"ントでは他にもいくつか考慮すべきことがある一方で、Python から CORBA を介して "
"DOM を使った経験を持つ実装者はこのことを問題視していません。``readonly`` であ"
"ると宣言された属性は、全ての DOM 実装で書き込みアクセスを制限しているとは限り"
"ません。"

#: ../../library/xml.dom.rst:1024
msgid ""
"In the Python DOM API, accessor functions are not required.  If provided, "
"they should take the form defined by the Python IDL mapping, but these "
"methods are considered unnecessary since the attributes are accessible "
"directly from Python. \"Set\" accessors should never be provided for "
"``readonly`` attributes."
msgstr ""
"Python DOM API では、アクセサ関数は必須ではありません。アクセサ関数が提供され"
"た場合、Python IDL 対応付けによって定義された形式をとらなければなりませんが、"
"属性は Python から直接アクセスすることができるので、それらのメソッドは必須で"
"はないと考えられます。``readonly`` であると宣言された属性に対しては、 "
"\"set\" アクセサを提供してはなりません。"

#: ../../library/xml.dom.rst:1029
msgid ""
"The IDL definitions do not fully embody the requirements of the W3C DOM API, "
"such as the notion of certain objects, such as the return value of :meth:"
"`getElementsByTagName`, being \"live\".  The Python DOM API does not require "
"implementations to enforce such requirements."
msgstr ""
"このIDLでの定義はW3C DOM APIの全ての要件を実装しているわけではありません。例"
"えば、一部のオブジェクトの概念や :meth:`getElementsByTagName` が \"live\" で"
"あることなどです。 Python DOM API はこれらの要件を実装することを強制しませ"
"ん。"
