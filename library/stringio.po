# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/stringio.rst:3
msgid ":mod:`StringIO` --- Read and write strings as files"
msgstr ":mod:`StringIO` --- ファイルのように文字列を読み書きする"

#: ../../library/stringio.rst:9
msgid ""
"This module implements a file-like class, :class:`~StringIO.StringIO`, that "
"reads and writes a string buffer (also known as *memory files*).  See the "
"description of file objects for operations (section :ref:`bltin-file-"
"objects`). (For standard strings, see :class:`str` and :class:`unicode`.)"
msgstr ""
"このモジュールは、(*メモリファイル* としても知られている) 文字列のバッファに"
"対して読み書きを行うファイルのようなクラス、 :class:`~StringIO.StringIO` を実"
"装しています。\n"
"操作方法についてはファイルオブジェクトの説明を参照してください (:ref:`bltin-"
"file-objects` )。\n"
"(通常の文字列については :class:`str` と :class:`unicode` を参照してください)"

#: ../../library/stringio.rst:17
msgid ""
"When a :class:`~StringIO.StringIO` object is created, it can be initialized "
"to an existing string by passing the string to the constructor. If no string "
"is given, the :class:`~StringIO.StringIO` will start empty. In both cases, "
"the initial file position starts at zero."
msgstr ""
":class:`~StringIO.StringIO` オブジェクトを作る際に、コンストラクタに文字列を"
"渡してオブジェクトを初期化できます。\n"
"文字列を渡さない場合、最初は :class:`~StringIO.StringIO` は空です。\n"
"どちらの場合でも最初のファイル位置は 0 から始まります。"

#: ../../library/stringio.rst:22
msgid ""
"The :class:`~StringIO.StringIO` object can accept either Unicode or 8-bit "
"strings, but mixing the two may take some care.  If both are used, 8-bit "
"strings that cannot be interpreted as 7-bit ASCII (that use the 8th bit) "
"will cause a :exc:`UnicodeError` to be raised when :meth:`getvalue` is "
"called."
msgstr ""
":class:`~StringIO.StringIO` オブジェクトは Unicode も 8 ビットの文字列も受け"
"付けますが、この 2 つを混ぜることには少し注意が必要です。\n"
"この 2 つが一緒に使われると、 (8  ビット目を使っていて) 7-bit ASCII として解"
"釈できない 8-bit の文字列は、 :meth:`getvalue` が呼ばれたときに :exc:"
"`UnicodeError` を引き起こします。"

#: ../../library/stringio.rst:27
msgid ""
"The following methods of :class:`~StringIO.StringIO` objects require special "
"mention:"
msgstr ""
"次にあげる :class:`~StringIO.StringIO` オブジェクトのメソッドには特別な説明が"
"必要です:"

#: ../../library/stringio.rst:32
msgid ""
"Retrieve the entire contents of the \"file\" at any time before the :class:"
"`~StringIO.StringIO` object's :meth:`close` method is called.  See the note "
"above for information about mixing Unicode and 8-bit strings; such mixing "
"can cause this method to raise :exc:`UnicodeError`."
msgstr ""
":class:`~StringIO.StringIO` オブジェクトの :meth:`close` メソッドが呼ばれる前"
"ならいつでも、 \"file\" の中身全体を返します。\n"
"Unicode と 8 ビット文字列を混ぜることの説明は、上の注意を参照してください;\n"
"この 2 つの文字コードを混ぜると、このメソッドは :exc:`UnicodeError` を引き起"
"こす可能性があります。"

#: ../../library/stringio.rst:40
msgid ""
"Free the memory buffer.  Attempting to do further operations with a closed :"
"class:`~StringIO.StringIO` object will raise a :exc:`ValueError`."
msgstr ""
"メモリバッファを解放します。\n"
"close された後の :class:`~StringIO.StringIO` オブジェクトを操作しようとする"
"と :exc:`ValueError` が送出されます。"

#: ../../library/stringio.rst:43 ../../library/stringio.rst:112
msgid "Example usage::"
msgstr "使い方の例::"

#: ../../library/stringio.rst:61
msgid ":mod:`cStringIO` --- Faster version of :mod:`StringIO`"
msgstr ":mod:`cStringIO` --- 高速化された :mod:`StringIO`"

#: ../../library/stringio.rst:69
msgid ""
"The module :mod:`cStringIO` provides an interface similar to that of the :"
"mod:`StringIO` module.  Heavy use of :class:`StringIO.StringIO` objects can "
"be made more efficient by using the function :func:`StringIO` from this "
"module instead."
msgstr ""
":mod:`cStringIO` モジュールは :mod:`StringIO` モジュールと同様のインター"
"フェースを提供しています。 :class:`StringIO.StringIO` オブジェクトを酷使する"
"場合、このモジュールにある :func:`StringIO` 関数をかわりに使うと効果的です。"

#: ../../library/stringio.rst:77
msgid "Return a StringIO-like stream for reading or writing."
msgstr "読み書きのための StringIO 類似ストリームを返します。"

#: ../../library/stringio.rst:79
msgid ""
"Since this is a factory function which returns objects of built-in types, "
"there's no way to build your own version using subclassing.  It's not "
"possible to set attributes on it.  Use the original :mod:`StringIO` module "
"in those cases."
msgstr ""
"組み込み型オブジェクトを返す factory 関数なので、サブクラス化して独自の関数を"
"組むことはできません。属性の追加もできません。これらをするにはオリジナルの :"
"mod:`StringIO` モジュールを使ってください。"

#: ../../library/stringio.rst:84
msgid ""
"Unlike the :mod:`StringIO` module, this module is not able to accept Unicode "
"strings that cannot be encoded as plain ASCII strings."
msgstr ""
":mod:`StringIO` モジュールとは異なり、このモジュールで提供されているものは、"
"プレイン ASCII 文字列にエンコードできない Unicode を受け付けることができませ"
"ん。"

#: ../../library/stringio.rst:87
msgid ""
"Another difference from the :mod:`StringIO` module is that calling :func:"
"`StringIO` with a string parameter creates a read-only object. Unlike an "
"object created without a string parameter, it does not have write methods. "
"These objects are not generally visible.  They turn up in tracebacks as :"
"class:`StringI` and :class:`StringO`."
msgstr ""
"もう一つ違いがあります。引数に文字列を指定して :func:`StringIO` 呼び出すと読"
"み出し専用のオブジェクトが生成されますが、これの場合 :class:`cStringIO."
"StringIO()` では write()メソッドを持たないオブジェクトを生成します。これらの"
"オブジェクトは普段は見えません。トレースバックに :class:`StringI` と :class:"
"`StringO` として表示されます。"

#: ../../library/stringio.rst:95
msgid "The following data objects are provided as well:"
msgstr "次にあげるデータオブジェクトも提供されています:"

#: ../../library/stringio.rst:100
msgid ""
"The type object of the objects created by calling :func:`StringIO` with a "
"string parameter."
msgstr ""
"文字列をパラメーターに渡して :func:`StringIO` を呼ぶことで作られるオブジェク"
"トのオブジェクト型。"

#: ../../library/stringio.rst:106
msgid ""
"The type object of the objects returned by calling :func:`StringIO` with no "
"parameters."
msgstr ""
"パラメーターを渡さずに :func:`StringIO` を呼ぶことで返されるオブジェクトのオ"
"ブジェクト型。"

#: ../../library/stringio.rst:109
msgid ""
"There is a C API to the module as well; refer to the module source for  more "
"information."
msgstr ""
"このモジュールには C API もあります。詳しくはこのモジュールのソースを参照して"
"ください。"
