# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/shutil.rst:2
msgid ":mod:`shutil` --- High-level file operations"
msgstr ":mod:`shutil` --- 高水準のファイル操作"

#: ../../library/shutil.rst:13
msgid "**Source code:** :source:`Lib/shutil.py`"
msgstr "**ソースコード:** :source:`Lib/shutil.py`"

#: ../../library/shutil.rst:17
msgid ""
"The :mod:`shutil` module offers a number of high-level operations on files "
"and collections of files.  In particular, functions are provided  which "
"support file copying and removal. For operations on individual files, see "
"also the :mod:`os` module."
msgstr ""
":mod:`shutil` モジュールはファイルやファイルの集まりに対する高水準の操作方法"
"を多数提供します。特にファイルのコピーや削除のための関数が用意されています。"
"個別のファイルに対する操作については、 :mod:`os` モジュールも参照してくださ"
"い。"

#: ../../library/shutil.rst:24
msgid ""
"Even the higher-level file copying functions (:func:`shutil.copy`, :func:"
"`shutil.copy2`) can't copy all file metadata."
msgstr ""
"高レベルなファイルコピー関数 (:func:`shutil.copy`, :func:`shutil.copy2`) で"
"も、全てのファイルのメタデータをコピーできるわけではありません。"

#: ../../library/shutil.rst:27
msgid ""
"On POSIX platforms, this means that file owner and group are lost as well as "
"ACLs.  On Mac OS, the resource fork and other metadata are not used. This "
"means that resources will be lost and file type and creator codes will not "
"be correct. On Windows, file owners, ACLs and alternate data streams are not "
"copied."
msgstr ""
"POSIXプラットフォームでは、これはACLやファイルのオーナー、グループが失われる"
"ことを意味しています。 Mac OSでは、リソースフォーク(resource fork)やその他の"
"メタデータが利用されません。これは、リソースが失われ、ファイルタイプや生成者"
"コード(creator code)が正しくなくなることを意味しています。 Windowsでは、ファ"
"イルオーナー、ACL、代替データストリームがコピーされません。"

#: ../../library/shutil.rst:37
msgid "Directory and files operations"
msgstr "ディレクトリとファイルの操作"

#: ../../library/shutil.rst:41
msgid ""
"Copy the contents of the file-like object *fsrc* to the file-like object "
"*fdst*. The integer *length*, if given, is the buffer size. In particular, a "
"negative *length* value means to copy the data without looping over the "
"source data in chunks; by default the data is read in chunks to avoid "
"uncontrolled memory consumption. Note that if the current file position of "
"the *fsrc* object is not 0, only the contents from the current file position "
"to the end of the file will be copied."
msgstr ""
"ファイル形式のオブジェクト *fsrc* の内容を *fdst* へコピーします。整数値 "
"*length* は与えられた場合バッファサイズを表します。特に *length* が負の場合、"
"チャンク内のソースデータを繰り返し操作することなくデータをコピーします。デ"
"フォルトでは、制御不能なメモリ消費を避けるためにデータはチャンク内に読み込ま"
"れます。 *fsrc* オブジェクトの現在のファイル位置が0でない場合、現在の位置から"
"ファイル終端までの内容のみがコピーされることに注意してください。"

#: ../../library/shutil.rst:52
msgid ""
"Copy the contents (no metadata) of the file named *src* to a file named "
"*dst*.  *dst* must be the complete target file name; look at :func:`shutil."
"copy` for a copy that accepts a target directory path.  If *src* and *dst* "
"are the same files, :exc:`Error` is raised. The destination location must be "
"writable; otherwise,  an :exc:`IOError` exception will be raised. If *dst* "
"already exists, it will be replaced.   Special files such as character or "
"block devices and pipes cannot be copied with this function.  *src* and "
"*dst* are path names given as strings."
msgstr ""
"*src* で指定されたファイルの内容を *dst* で指定されたファイルへとコピーしま"
"す。(メタデータはコピーされません) *dst* は完全なターゲットファイル名である必"
"要があります。コピー先にディレクトリ名を使用したい場合は、 :func:`shutil."
"copy` を参照してください。もし、 *src* と *dst* が同じファイルであれば、 :"
"exc:`Error` 例外が発生します。コピー先は書き込み可能である必要があります。そ"
"うでなければ :exc:`IOError` を発生します。もし *dst* が存在したら、置き換えら"
"れます。キャラクタやブロックデバイス、パイプ等の特別なファイルはこの関数では"
"コピーできません。 *src* と *dst* にはパス名を文字列で与えられます。"

#: ../../library/shutil.rst:64
msgid ""
"Copy the permission bits from *src* to *dst*.  The file contents, owner, and "
"group are unaffected.  *src* and *dst* are path names given as strings."
msgstr ""
"*src* から *dst* へパーミッションをコピーします。ファイル内容や所有者、グルー"
"プは影響を受けません。 *src* と *dst* には文字列としてパス名を与えられます。"

#: ../../library/shutil.rst:70
msgid ""
"Copy the permission bits, last access time, last modification time, and "
"flags from *src* to *dst*.  The file contents, owner, and group are "
"unaffected.  *src* and *dst* are path names given as strings."
msgstr ""
"*src* から *dst* へ、パーミッション、最終アクセス時間、最終更新時間、フラグを"
"コピーします。ファイル内容や所有者、グループは影響を受けません。 *src* と "
"*dst* には文字列としてパス名を与えられます。"

#: ../../library/shutil.rst:77
msgid ""
"Copy the file *src* to the file or directory *dst*.  If *dst* is a "
"directory, a file with the same basename as *src*  is created (or "
"overwritten) in the directory specified.  Permission bits are copied.  *src* "
"and *dst* are path names given as strings."
msgstr ""
"ファイル *src* をファイルまたはディレクトリ *dist* へコピーします。もし、 "
"*dst* がディレクトリであればファイル名は *src* と同じものが指定されたディレク"
"トリ内に作成（または上書き）されます。パーミッションはコピーされます。 *src* "
"と *dst* には文字列としてパス名を与えられます。"

#: ../../library/shutil.rst:85
msgid ""
"Identical to :func:`~shutil.copy` except that :func:`copy2` also attempts to "
"preserve file metadata."
msgstr ""
":func:`copy2` はファイルのメタデータを保持しようとすることを除けば :func:"
"`~shutil.copy` と等価です。"

#: ../../library/shutil.rst:88
msgid ""
":func:`copy2` uses :func:`copystat` to copy the file metadata. Please see :"
"func:`copystat` for more information."
msgstr ""

#: ../../library/shutil.rst:94
msgid ""
"This factory function creates a function that can be used as a callable for :"
"func:`copytree`\\'s *ignore* argument, ignoring files and directories that "
"match one of the glob-style *patterns* provided.  See the example below."
msgstr ""
"このファクトリ関数は、 :func:`copytree` 関数の *ignore* 引数に渡すための呼び"
"出し可能オブジェクトを作成します。 glob形式の *patterns* にマッチするファイル"
"やディレクトリが無視されます。下の例を参照してください。"

#: ../../library/shutil.rst:103
msgid ""
"Recursively copy an entire directory tree rooted at *src*.  The destination "
"directory, named by *dst*, must not already exist; it will be created as "
"well as missing parent directories.  Permissions and times of directories "
"are copied with :func:`copystat`, individual files are copied using :func:"
"`shutil.copy2`."
msgstr ""
"*src* を起点としたディレクトリツリーをコピーします。 *dst* で指定されたター"
"ゲットディレクトリは、既存のもので無い必要があります。存在しない親ディレクト"
"リも含めて作成されます。パーミッションと時刻は :func:`copystat` 関数でコピー"
"されます。個々のファイルは :func:`shutil.copy2` によってコピーされます。"

#: ../../library/shutil.rst:109
msgid ""
"If *symlinks* is true, symbolic links in the source tree are represented as "
"symbolic links in the new tree, but the metadata of the original links is "
"NOT copied; if false or omitted, the contents and metadata of the linked "
"files are copied to the new tree."
msgstr ""
"*symlinks* が真であれば、元のディレクトリ内のシンボリックリンクはコピー先の"
"ディレクトリ内へシンボリックリンクとしてコピーされます。偽が与えられたり省略"
"された場合は元のディレクトリ内のリンクの対象となっているファイルがコピー先の"
"ディレクトリ内へコピーされます。"

#: ../../library/shutil.rst:114
msgid ""
"If *ignore* is given, it must be a callable that will receive as its "
"arguments the directory being visited by :func:`copytree`, and a list of its "
"contents, as returned by :func:`os.listdir`.  Since :func:`copytree` is "
"called recursively, the *ignore* callable will be called once for each "
"directory that is copied.  The callable must return a sequence of directory "
"and file names relative to the current directory (i.e. a subset of the items "
"in its second argument); these names will then be ignored in the copy "
"process.  :func:`ignore_patterns` can be used to create such a callable that "
"ignores names based on glob-style patterns."
msgstr ""
"*ignore* は :func:`copytree` が走査しているディレクトリと :func:`os.listdir` "
"が返すその内容のリストを引数として受け取ることのできる呼び出し可能オブジェク"
"トでなければなりません。 :func:`copytree` は再帰的に呼び出されるので、 "
"*ignore* はコピーされる各ディレクトリ毎に呼び出されます。 *ignore* の戻り値は"
"カレントディレクトリに相対的なディレクトリ名およびファイル名のシーケンス（す"
"なわち第二引数の項目のサブセット）でなければなりません。それらの名前はコピー"
"中に無視されます。 :func:`ignore_patterns` を用いて glob 形式のパターンによっ"
"て無視する呼び出し可能オブジェクトを作成することが出来ます。"

#: ../../library/shutil.rst:124
msgid ""
"If exception(s) occur, an :exc:`Error` is raised with a list of reasons."
msgstr "例外が発生した場合、理由のリストとともに :exc:`Error` を送出します。"

#: ../../library/shutil.rst:126
msgid ""
"The source code for this should be considered an example rather than the "
"ultimate tool."
msgstr ""
"この関数は、究極の道具としてではなく、ソースコードが利用例になっていると捉え"
"るべきでしょう。"

#: ../../library/shutil.rst:129
msgid ""
":exc:`Error` is raised if any exceptions occur during copying, rather than "
"printing a message."
msgstr ""
"コピー中にエラーが発生した場合、メッセージを出力するのではなく :exc:`Error` "
"を起こす。"

#: ../../library/shutil.rst:133
msgid ""
"Create intermediate directories needed to create *dst*, rather than raising "
"an error. Copy permissions and times of directories using :func:`copystat`."
msgstr ""
"*dst* を作成する際に中間のディレクトリ作成が必要な場合、エラーを起こすのでは"
"なく作成する。ディレクトリのパーミッションと時刻を :func:`copystat` を利用し"
"てコピーする。"

#: ../../library/shutil.rst:137
msgid ""
"Added the *ignore* argument to be able to influence what is being copied."
msgstr "何がコピーされるかを制御するための *ignore* 引数"

#: ../../library/shutil.rst:145
msgid ""
"Delete an entire directory tree; *path* must point to a directory (but not a "
"symbolic link to a directory).  If *ignore_errors* is true, errors resulting "
"from failed removals will be ignored; if false or omitted, such errors are "
"handled by calling a handler specified by *onerror* or, if that is omitted, "
"they raise an exception."
msgstr ""
"ディレクトリツリー全体を削除します。 *path* はディレクトリを指しているなけれ"
"ばなりません（ただしディレクトリに対するシンボリックリンクではいけません）。"
"もし *ignore_errors* が真であれば削除に失敗したことによるエラーは無視されま"
"す。偽や省略された場合はこれらのエラーは *onerror* で与えられたハンドラを呼び"
"出して処理され、 *onerror* が省略された場合は例外を送出します。"

#: ../../library/shutil.rst:151
msgid ""
"If *onerror* is provided, it must be a callable that accepts three "
"parameters: *function*, *path*, and *excinfo*. The first parameter, "
"*function*, is the function which raised the exception; it will be :func:`os."
"path.islink`, :func:`os.listdir`, :func:`os.remove` or :func:`os.rmdir`.  "
"The second parameter, *path*, will be the path name passed to *function*.  "
"The third parameter, *excinfo*, will be the exception information return by :"
"func:`sys.exc_info`.  Exceptions raised by *onerror* will not be caught."
msgstr ""
"*onerror* が与えられた場合、それは3つのパラメータ *function*, *path* および "
"*excinfo* を受け入れて呼び出し可能のものでなくてはなりません。最初のパラメー"
"タ *function* は例外を引き起こした関数で :func:`os.listdir`, :func:`os."
"remove`, :func:`os.rmdir` のいずれかでしょう。 2番目のパラメータ *path* は "
"*function* へ渡されたパス名です。 3番目のパラメータ *excinfo* は :func:`sys."
"exc_info` で返されるような例外情報になるでしょう。 *onerror* が引き起こす例外"
"はキャッチできません。"

#: ../../library/shutil.rst:160
msgid ""
"Explicitly check for *path* being a symbolic link and raise :exc:`OSError` "
"in that case."
msgstr ""
"*path* を明示的にチェックして、シンボリックリンクだった場合は :exc:`OSError` "
"を返すようになりました。"

#: ../../library/shutil.rst:167
msgid ""
"Recursively move a file or directory (*src*) to another location (*dst*)."
msgstr ""
"再帰的にファイルやディレクトリ (*src*) を別の場所 (*dst*) へ移動します。"

#: ../../library/shutil.rst:169
msgid ""
"If the destination is an existing directory, then *src* is moved inside that "
"directory. If the destination already exists but is not a directory, it may "
"be overwritten depending on :func:`os.rename` semantics."
msgstr ""
"移動先が存在するディレクトリの場合、 *src* はそのディレクトリの中へ移動しま"
"す。移動先が存在していてそれがディレクトリでない場合、 :func:`os.rename` の動"
"作によっては上書きされることがあります。"

#: ../../library/shutil.rst:173
msgid ""
"If the destination is on the current filesystem, then :func:`os.rename` is "
"used.  Otherwise, *src* is copied (using :func:`shutil.copy2`) to *dst* and "
"then removed."
msgstr ""
"もし移動先が現在のファイルシステム上であれば :func:`os.rename` を使います。そ"
"うでない場合は *src* を(:func:`shutil.copy2` で) *dst* にコピーし、その後コ"
"ピー元は削除されます。"

#: ../../library/shutil.rst:182
msgid ""
"This exception collects exceptions that are raised during a multi-file "
"operation. For :func:`copytree`, the exception argument is a list of 3-"
"tuples (*srcname*, *dstname*, *exception*)."
msgstr ""
"この例外は複数ファイルの操作を行っているときに生じる例外をまとめたもので"
"す。 :func:`copytree` に対しては例外の引数は3つのタプル(*srcname*, "
"*dstname*, *exception*)からなるリストです。"

#: ../../library/shutil.rst:192
msgid "copytree example"
msgstr "copytree の例"

#: ../../library/shutil.rst:194
msgid ""
"This example is the implementation of the :func:`copytree` function, "
"described above, with the docstring omitted.  It demonstrates many of the "
"other functions provided by this module. ::"
msgstr ""
"以下は前述の :func:`copytree` 関数のドキュメント文字列を省略した実装例です。"
"本モジュールで提供される他の関数の使い方を示しています。 ::"

#: ../../library/shutil.rst:237
msgid "Another example that uses the :func:`ignore_patterns` helper::"
msgstr ":func:`ignore_patterns` ヘルパ関数を利用する、もう1つの例です。 ::"

#: ../../library/shutil.rst:243
msgid ""
"This will copy everything except ``.pyc`` files and files or directories "
"whose name starts with ``tmp``."
msgstr ""
"この例では、 ``.pyc`` ファイルと、 ``tmp`` で始まる全てのファイルやディレクト"
"リを除いて、全てをコピーします。"

#: ../../library/shutil.rst:246
msgid "Another example that uses the *ignore* argument to add a logging call::"
msgstr "*ignore* 引数にロギングさせる別の例です。 ::"

#: ../../library/shutil.rst:261
msgid "Archiving operations"
msgstr "アーカイブ化操作"

#: ../../library/shutil.rst:263
msgid ""
"High-level utilities to create and read compressed and archived files are "
"also provided.  They rely on the :mod:`zipfile` and :mod:`tarfile` modules."
msgstr ""
"圧縮とアーカイブ化されているファイルの読み書きの高水準なユーティリティも提供"
"されています。これらは :mod:`zipfile` 、 :mod:`tarfile` モジュールに依拠して"
"います。"

#: ../../library/shutil.rst:268
msgid "Create an archive file (eg. zip or tar) and returns its name."
msgstr "アーカイブファイル (zip や tar など) を作成し、その名前を返します。"

#: ../../library/shutil.rst:270
msgid ""
"*base_name* is the name of the file to create, including the path, minus any "
"format-specific extension. *format* is the archive format: one of "
"\"zip\" (if the :mod:`zlib` module or external ``zip`` executable is "
"available), \"tar\", \"gztar\" (if the :mod:`zlib` module is available), or "
"\"bztar\" (if the :mod:`bz2` module is available)."
msgstr ""
"*base_name* は作成するファイルの名前で、パスを含み、フォーマットごとの拡張子"
"を抜いたものです。\n"
"*format* はアーカイブフォーマットで \"zip\" (:mod:`zlib` モジュールもしくは外"
"部の ``zip`` 実行可能ファイルが利用可能な場合), \"tar\", \"gztar\" (:mod:"
"`zlib` モジュールが利用可能な場合), \"bztar\" (:mod:`bz2` モジュールが利用可"
"能な場合) のいずれかです。"

#: ../../library/shutil.rst:276
msgid ""
"*root_dir* is a directory that will be the root directory of the archive; "
"ie. we typically chdir into *root_dir* before creating the archive."
msgstr ""
"*root_dir* は、アーカイブのルートディレクトリとなるディレクトリです。すなわ"
"ち、一般的には、アーカイブを作成する前に *root_dir* をカレントディレクトリに"
"します。"

#: ../../library/shutil.rst:280
msgid ""
"*base_dir* is the directory where we start archiving from; ie. *base_dir* "
"will be the common prefix of all files and directories in the archive."
msgstr ""
"*base_dir* は、アーカイブを開始するディレクトリです。すなわち、 *base_dir* "
"は、アーカイブのすべてのファイルとディレクトリに共通する接頭辞になります。"

#: ../../library/shutil.rst:284
msgid "*root_dir* and *base_dir* both default to the current directory."
msgstr ""
"*root_dir* と *base_dir* のどちらも、デフォルトはカレントディレクトリです。"

#: ../../library/shutil.rst:286
msgid ""
"*owner* and *group* are used when creating a tar archive. By default, uses "
"the current owner and group."
msgstr ""
"*owner* と *group* は、tar アーカイブを作成するときに使われます。デフォルトで"
"は、カレントのオーナとグループを使います。"

#: ../../library/shutil.rst:289
msgid ""
"*logger* must be an object compatible with :pep:`282`, usually an instance "
"of :class:`logging.Logger`."
msgstr ""
"*logger* は :pep:`282` に互換なオブジェクトでなければなりません。これは普通"
"は :class:`logging.Logger` のインスタンスです。"

#: ../../library/shutil.rst:297
msgid ""
"Return a list of supported formats for archiving. Each element of the "
"returned sequence is a tuple ``(name, description)``."
msgstr ""
"アーカイブ化をサポートしているフォーマットのリストを返します。返されるシーケ"
"ンスのそれぞれの要素は、タプル ``(name, description)`` です。"

#: ../../library/shutil.rst:300
msgid "By default :mod:`shutil` provides these formats:"
msgstr "デフォルトでは、 :mod:`shutil` はこれらのフォーマットを提供しています:"

#: ../../library/shutil.rst:302
msgid ""
"*zip*: ZIP file (if the :mod:`zlib` module or external ``zip`` executable is "
"available)."
msgstr ""
"*zip*: ZIP ファイル (:mod:`zlib` モジュールもしくは外部の ``zip`` 実行可能"
"ファイルが利用可能な場合)。"

#: ../../library/shutil.rst:304
msgid "*tar*: uncompressed tar file."
msgstr "*tar*: 圧縮されていない tar ファイル。"

#: ../../library/shutil.rst:305
msgid "*gztar*: gzip'ed tar-file (if the :mod:`zlib` module is available)."
msgstr ""
"*gztar*: gzip で圧縮された tar ファイル (:mod:`zlib` モジュールが利用可能な場"
"合)。"

#: ../../library/shutil.rst:306
msgid "*bztar*: bzip2'ed tar-file (if the :mod:`bz2` module is available)."
msgstr ""
"*bztar*: bzip2 で圧縮された tar ファイル (:mod:`bz2` モジュールが利用可能な場"
"合)。"

#: ../../library/shutil.rst:308
msgid ""
"You can register new formats or provide your own archiver for any existing "
"formats, by using :func:`register_archive_format`."
msgstr ""
":func:`register_archive_format` を使って、新しいフォーマットを登録したり、既"
"存のフォーマットに独自のアーカイバを提供したりできます。"

#: ../../library/shutil.rst:316
msgid ""
"Register an archiver for the format *name*. *function* is a callable that "
"will be used to invoke the archiver."
msgstr ""
"フォーマット *name* のアーカイバを登録します。 *function* は、アーカイバを呼"
"び出すのに使われる呼び出し可能オブジェクトです。"

#: ../../library/shutil.rst:319
msgid ""
"If given, *extra_args* is a sequence of ``(name, value)`` that will be used "
"as extra keywords arguments when the archiver callable is used."
msgstr ""
"*extra_args* は、与えられるなら ``(name, value)`` のシーケンスで、アーカイバ"
"呼び出し可能オブジェクトが使われるときの追加キーワード引数に使われます。"

#: ../../library/shutil.rst:322
msgid ""
"*description* is used by :func:`get_archive_formats` which returns the list "
"of archivers. Defaults to an empty list."
msgstr ""
"*description* は、アーカイバのリストを返す :func:`get_archive_formats` で使わ"
"れます。デフォルトでは、空のリストです。"

#: ../../library/shutil.rst:330
msgid "Remove the archive format *name* from the list of supported formats."
msgstr ""
"アーカイブフォーマット *name* を、サポートされているフォーマットのリストから"
"取り除きます。"

#: ../../library/shutil.rst:338
msgid "Archiving example"
msgstr "アーカイブ化の例"

#: ../../library/shutil.rst:340
msgid ""
"In this example, we create a gzip'ed tar-file archive containing all files "
"found in the :file:`.ssh` directory of the user::"
msgstr ""
"この例では、ユーザの :file:`.ssh` ディレクトリにあるすべてのファイルを含む、 "
"gzip された tar ファイルアーカイブを作成します::"

#: ../../library/shutil.rst:350
msgid "The resulting archive contains:"
msgstr "結果のアーカイブは、以下のものを含みます:"
