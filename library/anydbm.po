# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/anydbm.rst:2
msgid ":mod:`anydbm` --- Generic access to DBM-style databases"
msgstr ":mod:`anydbm` --- DBM 形式のデータベースへの汎用アクセスインタフェース"

#: ../../library/anydbm.rst:9
msgid ""
"The :mod:`anydbm` module has been renamed to :mod:`dbm` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""
":mod:`anydbm` モジュールはPython 3 では :mod:`dbm` に名前が変更されました。 :"
"term:`2to3` ツールが自動的に import を変換します。"

#: ../../library/anydbm.rst:20
msgid ""
":mod:`anydbm` is a generic interface to variants of the DBM database --- :"
"mod:`dbhash` (requires :mod:`bsddb`), :mod:`gdbm`, or :mod:`dbm`.  If none "
"of these modules is installed, the slow-but-simple implementation in module :"
"mod:`dumbdbm` will be used."
msgstr ""
":mod:`anydbm` は種々の DBM データベース ---  :mod:`dbhash` (要 :mod:"
"`bsddb`)、 :mod:`gdbm` 、および :mod:`dbm` --- への汎用インタフェースです。こ"
"れらのモジュールがどれもインストールされていない場合、 :mod:`dumbdbm` モ"
"ジュールの低速で単純な DBM 実装が使われます。"

#: ../../library/anydbm.rst:28
msgid "Open the database file *filename* and return a corresponding object."
msgstr ""
"データベースファイル *filename* を開いて対応するオブジェクトを返します。"

#: ../../library/anydbm.rst:30
msgid ""
"If the database file already exists, the :mod:`whichdb` module is used to "
"determine its type and the appropriate module is used; if it does not exist, "
"the first module listed above that can be imported is used."
msgstr ""
"データベースファイルが既に存在する場合、その種類を決定するために  :mod:"
"`whichdb` モジュールが使用され、適切なモジュールが使用されます; データベース"
"ファイルが存在しない場合、上記のリストの中でインポート可能な最初のモジュール"
"が使用されます。"

#: ../../library/anydbm.rst:34
msgid "The optional *flag* argument must be one of these values:"
msgstr "オプションの *flag* は以下の値のいずれかです:"

#: ../../library/anydbm.rst:37
msgid "Value"
msgstr "``値``"

#: ../../library/anydbm.rst:37
msgid "Meaning"
msgstr "意味"

#: ../../library/anydbm.rst:39
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/anydbm.rst:39
msgid "Open existing database for reading only (default)"
msgstr "既存のデータベースを読み込み専用で開く (デフォルト)"

#: ../../library/anydbm.rst:42
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/anydbm.rst:42
msgid "Open existing database for reading and writing"
msgstr "既存のデータベースを読み書き用に開く"

#: ../../library/anydbm.rst:45
msgid "``'c'``"
msgstr "``'c'``"

#: ../../library/anydbm.rst:45
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr "データベースを読み書き用に開く。ただし存在しない場合には新たに作成する"

#: ../../library/anydbm.rst:48
msgid "``'n'``"
msgstr "``'n'``"

#: ../../library/anydbm.rst:48
msgid "Always create a new, empty database, open for reading and writing"
msgstr "常に新たに読み書き用の新規のデータベースを作成する"

#: ../../library/anydbm.rst:52
msgid "If not specified, the default value is ``'r'``."
msgstr "この引数が指定されない場合、標準の値は ``'r'`` になります。"

#: ../../library/anydbm.rst:54
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0666`` (and will be "
"modified by the prevailing umask)."
msgstr ""
"オプションの *mode* 引数は、新たにデータベースを作成しなければならない場合に"
"使われる Unix のファイルモードです。標準の値は 8 進数の ``0666`` です (この値"
"は現在有効な umask で修飾されます)。"

#: ../../library/anydbm.rst:61
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`anydbm.error` as "
"the first item --- the latter is used when :exc:`anydbm.error` is raised."
msgstr ""
"サポートされているモジュールそれぞれによって送出される可能性のある例外を含む"
"タプル。これにはユニークな例外があり、最初の要素として同じく :exc:`anydbm."
"error` という名前の例外が含まれます --- :exc:`anydbm.error` が送出される場"
"合、後者 (訳注:タプルの ``anydbm.error`` ではなく例外 :exc:`anydbm.error`) が"
"使用されます。"

#: ../../library/anydbm.rst:65
msgid ""
"The object returned by :func:`.open` supports most of the same functionality "
"as dictionaries; keys and their corresponding values can be stored, "
"retrieved, and deleted, and the :meth:`has_key` and :meth:`keys` methods are "
"available.  Keys and values must always be strings."
msgstr ""
":func:`.open` によって返されたオブジェクトは辞書とほとんど同じ機能をサポート"
"します; キーとそれに対応付けられた値を記憶し、取り出し、削除することがで"
"き、 :meth:`has_key` メソッドと :meth:`keys` メソッドが使えます。キーと値は常"
"に文字列でなければなりません。"

#: ../../library/anydbm.rst:70
msgid ""
"The following example records some hostnames and a corresponding title,  and "
"then prints out the contents of the database::"
msgstr ""
"以下の例ではホスト名と対応するタイトルがいくつか登録し、データベースの内容を"
"表示します::"

#: ../../library/anydbm.rst:95
msgid ""
"In addition to the dictionary-like methods, ``anydbm`` objects provide the "
"following method:"
msgstr ""
"辞書型形式のメソッドに加えて、``anydbm`` オブジェクトには以下のメソッドがあり"
"ます:"

#: ../../library/anydbm.rst:100
msgid "Close the ``anydbm`` database."
msgstr "``anydbm`` データベースをクローズします。"

#: ../../library/anydbm.rst:106
msgid "Module :mod:`dbhash`"
msgstr ":mod:`dbhash` モジュール"

#: ../../library/anydbm.rst:106
msgid "BSD ``db`` database interface."
msgstr "BSD ``db`` データベースインタフェース。"

#: ../../library/anydbm.rst:109
msgid "Module :mod:`dbm`"
msgstr ":mod:`dbm` モジュール"

#: ../../library/anydbm.rst:109
msgid "Standard Unix database interface."
msgstr "標準の Unix データベースインタフェース。"

#: ../../library/anydbm.rst:112
msgid "Module :mod:`dumbdbm`"
msgstr ":mod:`dumbdbm` モジュール"

#: ../../library/anydbm.rst:112
msgid "Portable implementation of the ``dbm`` interface."
msgstr "``dbm`` インタフェースの移植性のある実装。"

#: ../../library/anydbm.rst:115
msgid "Module :mod:`gdbm`"
msgstr ":mod:`gdbm` モジュール"

#: ../../library/anydbm.rst:115
msgid "GNU database interface, based on the ``dbm`` interface."
msgstr "``dbm`` インタフェースに基づいた GNU データベースインタフェース。"

#: ../../library/anydbm.rst:118
msgid "Module :mod:`shelve`"
msgstr ":mod:`shelve` モジュール"

#: ../../library/anydbm.rst:118
msgid ""
"General object persistence built on top of  the Python ``dbm`` interface."
msgstr ""
"Python ``dbm`` インタフェース上に構築された汎用オブジェクト永続化機構。"

#: ../../library/anydbm.rst:120
msgid "Module :mod:`whichdb`"
msgstr ":mod:`whichdb` モジュール"

#: ../../library/anydbm.rst:121
msgid "Utility module used to determine the type of an existing database."
msgstr ""
"既存のデータベースがどの形式のデータベースか判定するユーティリティモジュー"
"ル。"
