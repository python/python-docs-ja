# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/sched.rst:2
msgid ":mod:`sched` --- Event scheduler"
msgstr ":mod:`sched` --- イベントスケジューラ"

#: ../../library/sched.rst:10
msgid "**Source code:** :source:`Lib/sched.py`"
msgstr "**ソースコード:** :source:`Lib/sched.py`"

#: ../../library/sched.rst:14
msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ""
":mod:`sched` モジュールは一般的な目的のためのイベントスケジューラを実装するク"
"ラスを定義します:"

#: ../../library/sched.rst:19
msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be "
"callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity "
"to run in multi-threaded applications."
msgstr ""
":class:`scheduler` クラスはイベントをスケジュールするための一般的なインタ"
"フェースを定義します。それは \"外の世界\" を実際に扱うための2つの関数を必要と"
"します --- *timefunc* は引数なしで呼ばれて 1 つの数値を返す callable オブジェ"
"クトでなければなりません (戻り値は任意の単位で「時間」を表します)。 "
"*delayfunc* は 1 つの引数を持つ callable オブジェクトでなければならず、その時"
"間だけ遅延する必要があります (引数は *timefunc* の出力と互換)。 *delayfunc* "
"は、各々のイベントが実行された後に引数 ``0`` で呼ばれることがあります。これ"
"は、マルチスレッドアプリケーションの中で他のスレッドが実行する機会を与えるた"
"めです。"

#: ../../library/sched.rst:28 ../../library/sched.rst:53
msgid "Example::"
msgstr "例::"

#: ../../library/sched.rst:47
msgid ""
"In multi-threaded environments, the :class:`scheduler` class has limitations "
"with respect to thread-safety, inability to insert a new task before the one "
"currently pending in a running scheduler, and holding up the main thread "
"until the event queue is empty.  Instead, the preferred approach is to use "
"the :class:`threading.Timer` class instead."
msgstr ""
"マルチスレッド環境において、 :class:`scheduler` クラスにはスレッドセーフのた"
"めの制限があります。イベントキューが空になるまでは、実行中のスケジューラで現"
"在中断中でメインスレッドを足止めしているタスクの前に、新しいタスクを挿入する"
"ことはできません。代わりに、より推奨される方法として、 :class:`threading."
"Timer` クラスを利用してください。"

#: ../../library/sched.rst:77
msgid "Scheduler Objects"
msgstr "スケジューラオブジェクト"

#: ../../library/sched.rst:79
msgid ":class:`scheduler` instances have the following methods and attributes:"
msgstr ":class:`scheduler` インスタンスは以下のメソッドと属性を持っています:"

#: ../../library/sched.rst:84
msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*. A lower number represents a higher priority."
msgstr ""
"新しいイベントをスケジュールします。\n"
"引数 *time* は、コンストラクタへ渡された *timefunc* の戻り値と互換な数値型で"
"なければいけません。\n"
"同じ *time* によってスケジュールされたイベントは、それらの *priority* によっ"
"て実行されます。\n"
"数値の小さい方が高い優先度となります。"

#: ../../library/sched.rst:89
msgid ""
"Executing the event means executing ``action(*argument)``.  *argument* must "
"be a sequence holding the parameters for *action*."
msgstr ""
"イベントを実行することは、 ``action(*argument)`` を実行することを意味しま"
"す。 *argument* は *action* のためのパラメータを保持するシーケンスでなければ"
"いけません。"

#: ../../library/sched.rst:92
msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr ""
"戻り値は、イベントのキャンセル後に使われるかもしれないイベントです (:meth:"
"`cancel` を見よ)。"

#: ../../library/sched.rst:98
msgid ""
"Schedule an event for *delay* more time units. Other than the relative time, "
"the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr ""
"時間単位以上の *delay* でイベントをスケジュールします。相対的時間以外の、引"
"数、効果、戻り値は、 :meth:`enterabs` に対するものと同じです。"

#: ../../library/sched.rst:105
msgid ""
"Remove the event from the queue. If *event* is not an event currently in the "
"queue, this method will raise a :exc:`ValueError`."
msgstr ""
"キューからイベントを消去します。もし *event* がキューにある現在のイベントでな"
"いならば、このメソッドは :exc:`ValueError` を送出します。"

#: ../../library/sched.rst:111
msgid "Return true if the event queue is empty."
msgstr "もしイベントキューが空ならば、Trueを返します。"

#: ../../library/sched.rst:116
msgid ""
"Run all scheduled events. This function will wait  (using the :func:"
"`delayfunc` function passed to the constructor) for the next event, then "
"execute it and so on until there are no more scheduled events."
msgstr ""
"すべてのスケジュールされたイベントを実行します。この関数は次のイベントを (コ"
"ンストラクタへ渡された関数 :func:`delayfunc` を使うことで) 待ち、そしてそれを"
"実行し、スケジュールされたイベントがなくなるまで同じことを繰り返します。"

#: ../../library/sched.rst:120
msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""
"*action* あるいは *delayfunc* は例外を投げることができます。いずれの場合も、"
"スケジューラは一貫した状態を維持し、例外を伝播するでしょう。例外が *action* "
"によって投げられる場合、イベントは :meth:`run` への呼出しを未来に行なわないで"
"しょう。"

#: ../../library/sched.rst:125
msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr ""
"イベントのシーケンスが、次イベントの前に、利用可能時間より実行時間が長いと、"
"スケジューラは単に遅れることになるでしょう。イベントが落ちることはありませ"
"ん; 呼出しコードはもはや適切でないキャンセルイベントに対して責任があります。"

#: ../../library/sched.rst:132
msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument."
msgstr ""
"読み取り専用の属性で、これから起こるイベントが実行される順序で格納されたリス"
"トを返します。各イベントは、次の属性 time, priority, action, argument を持っ"
"た :term:`named tuple` の形式になります。"
