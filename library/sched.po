# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
# Osamu NAKAMURA, 2021
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:12+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/sched.rst:2
msgid ":mod:`!sched` --- Event scheduler"
msgstr ":mod:`!sched` --- イベントスケジューラー"

#: ../../library/sched.rst:9
msgid "**Source code:** :source:`Lib/sched.py`"
msgstr "**ソースコード:** :source:`Lib/sched.py`"

#: ../../library/sched.rst:15
msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ""
":mod:`sched` モジュールは一般的な目的のためのイベントスケジューラを実装するク"
"ラスを定義します:"

#: ../../library/sched.rst:20
msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be "
"callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity "
"to run in multi-threaded applications."
msgstr ""
":class:`scheduler` クラスはイベントをスケジュールするための一般的なインター"
"フェースを定義します。それは \"外の世界\" を実際に扱うための2つの関数を必要と"
"します --- *timefunc* は引数なしで呼ばれて 1 つの数値を返す callable オブジェ"
"クトでなければなりません (戻り値は任意の単位で「時間」を表します)。 "
"*delayfunc* は 1 つの引数を持つ callable オブジェクトでなければならず、その時"
"間だけ遅延する必要があります (引数は *timefunc* の出力と互換)。 *delayfunc* "
"は、各々のイベントが実行された後に引数 ``0`` で呼ばれることがあります。これ"
"は、マルチスレッドアプリケーションの中で他のスレッドが実行する機会を与えるた"
"めです。"

#: ../../library/sched.rst:29
msgid "*timefunc* and *delayfunc* parameters are optional."
msgstr "*timefunc* と *delayfunc* がオプション引数になりました。"

#: ../../library/sched.rst:32
msgid ""
":class:`scheduler` class can be safely used in multi-threaded environments."
msgstr ""
":class:`scheduler` クラスをマルチスレッド環境で安全に使用出来るようになりまし"
"た。"

#: ../../library/sched.rst:36
msgid "Example::"
msgstr "以下はプログラム例です::"

#: ../../library/sched.rst:38
msgid ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # despite having higher priority, 'keyword' runs after 'positional' "
"as enter() is relative\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first "
"enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second "
"enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"
msgstr ""

#: ../../library/sched.rst:67
msgid "Scheduler Objects"
msgstr "スケジューラオブジェクト"

#: ../../library/sched.rst:69
msgid ":class:`scheduler` instances have the following methods and attributes:"
msgstr ":class:`scheduler` インスタンスは以下のメソッドと属性を持っています:"

#: ../../library/sched.rst:74
msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*. A lower number represents a higher priority."
msgstr ""
"新しいイベントをスケジュールします。\n"
"引数 *time* は、コンストラクタへ渡された *timefunc* の戻り値と互換な数値型で"
"なければいけません。\n"
"同じ *time* によってスケジュールされたイベントは、それらの *priority* によっ"
"て実行されます。\n"
"数値の小さい方が高い優先度となります。"

#: ../../library/sched.rst:79
msgid ""
"Executing the event means executing ``action(*argument, **kwargs)``. "
"*argument* is a sequence holding the positional arguments for *action*. "
"*kwargs* is a dictionary holding the keyword arguments for *action*."
msgstr ""
"イベントを実行することは、 ``action(*argument, **kwargs)`` を実行することを意"
"味します。 *argument* は *action* のための位置引数を保持するシーケンスでなけ"
"ればいけません。 *kwargs* は *action* のためのキーワード引数を保持する辞書で"
"なければいけません。"

#: ../../library/sched.rst:83
msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr ""
"戻り値は、後にイベントをキャンセルする時に使われる可能性のあるイベントです (:"
"meth:`cancel` を参照)。"

#: ../../library/sched.rst:86 ../../library/sched.rst:99
msgid "*argument* parameter is optional."
msgstr "*argument* 引数が任意になりました。"

#: ../../library/sched.rst:89 ../../library/sched.rst:102
msgid "*kwargs* parameter was added."
msgstr "*kwargs* 引数が追加されました。"

#: ../../library/sched.rst:95
msgid ""
"Schedule an event for *delay* more time units. Other than the relative time, "
"the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr ""
"時間単位以上の *delay* でイベントをスケジュールします。相対的時間以外の、引"
"数、効果、戻り値は、 :meth:`enterabs` に対するものと同じです。"

#: ../../library/sched.rst:107
msgid ""
"Remove the event from the queue. If *event* is not an event currently in the "
"queue, this method will raise a :exc:`ValueError`."
msgstr ""
"キューからイベントを消去します。もし *event* がキューにある現在のイベントでな"
"いならば、このメソッドは :exc:`ValueError` を送出します。"

#: ../../library/sched.rst:113
msgid "Return ``True`` if the event queue is empty."
msgstr "もしイベントキューが空ならば、 ``True`` を返します。"

#: ../../library/sched.rst:118
msgid ""
"Run all scheduled events. This method will wait  (using the *delayfunc* "
"function passed to the constructor) for the next event, then execute it and "
"so on until there are no more scheduled events."
msgstr ""
"すべてのスケジュールされたイベントを実行します。このメソッドは次のイベントを"
"待ち、それを実行し、スケジュールされたイベントがなくなるまで同じことを繰り返"
"します。(イベントの待機は、 コンストラクタへ渡された関数 *delayfunc* を使うこ"
"とで行います。)"

#: ../../library/sched.rst:122
msgid ""
"If *blocking* is false executes the scheduled events due to expire soonest "
"(if any) and then return the deadline of the next scheduled call in the "
"scheduler (if any)."
msgstr ""
"*blocking* が False の場合、最も早く期限が来るスケジュールされたイベントを "
"(存在する場合) 実行し、スケジューラ内で次にスケジュールされた呼び出しの期限"
"を (存在する場合) 返します。 "

#: ../../library/sched.rst:126
msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""
"*action* あるいは *delayfunc* は例外を投げることができます。いずれの場合も、"
"スケジューラは一貫した状態を維持し、例外を伝播するでしょう。例外が *action* "
"によって投げられる場合、イベントは :meth:`run` への呼出しを未来に行なわないで"
"しょう。"

#: ../../library/sched.rst:131
msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr ""
"イベントのシーケンスが、次イベントの前に、利用可能時間より実行時間が長いと、"
"スケジューラは単に遅れることになるでしょう。イベントが落ちることはありませ"
"ん; 呼出しコードはもはや適切でないキャンセルイベントに対して責任があります。"

#: ../../library/sched.rst:136
msgid "*blocking* parameter was added."
msgstr "*blocking* 引数が追加されました。"

#: ../../library/sched.rst:141
msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument, kwargs."
msgstr ""
"読み出し専用の属性で、これから起こるイベントが実行される順序で格納されたリス"
"トを返します。各イベントは、次の属性 time, priority, action, argument, "
"kwargs を持った :term:`named tuple` の形式になります。"

#: ../../library/sched.rst:11
msgid "event scheduling"
msgstr "イベントスケジューリング"
