# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:57+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/mimewriter.rst:2
msgid ":mod:`MimeWriter` --- Generic MIME file writer"
msgstr ":mod:`MimeWriter` --- 汎用 MIME ファイルライター"

#: ../../library/mimewriter.rst:11
msgid ""
"The :mod:`email` package should be used in preference to the :mod:"
"`MimeWriter` module.  This module is present only to maintain backward "
"compatibility."
msgstr ""
":mod:`email` パッケージを、 :mod:`MimeWriter` モジュールよりも優先して使用す"
"べきです。このモジュールは、下位互換性維持のためだけに存在します。"

#: ../../library/mimewriter.rst:15
msgid ""
"This module defines the class :class:`~MimeWriter.MimeWriter`.  The :class:"
"`~MimeWriter.MimeWriter` class implements a basic formatter for creating "
"MIME multi-part files.  It doesn't seek around the output file nor does it "
"use large amounts of buffer space. You must write the parts out in the order "
"that they should occur in the final file. :class:`~MimeWriter.MimeWriter` "
"does buffer the headers you add, allowing you to rearrange their order."
msgstr ""
"このモジュールは、クラス :class:`~MimeWriter.MimeWriter` を定義します。\n"
"この :class:`~MimeWriter.MimeWriter` クラスは、MIME マルチパートファイルを作"
"成するための基本的なフォーマッタを実装します。\n"
"これは出力ファイル内をあちこち移動することも、大量のバッファスペースを使うこ"
"ともありません。\n"
"最終的にファイルに並ぶべき順番に、パートを書かなければなりません。 :class:"
"`~MimeWriter.MimeWriter` は、あなたが追加するヘッダをバッファして、それらの順"
"番を並び替えることができるようにします。"

#: ../../library/mimewriter.rst:25
msgid ""
"Return a new instance of the :class:`~MimeWriter.MimeWriter` class.  The "
"only argument passed, *fp*, is a file object to be used for writing. Note "
"that a :class:`~StringIO.StringIO` object could also be used."
msgstr ""
":class:`~MimeWriter.MimeWriter` クラスの新しいインスタンスを返します。\n"
"渡される唯一の引数 *fp* は、出力先ファイルオブジェクトです。\n"
":class:`~StringIO.StringIO` オブジェクトも使えることに注意して下さい。"

#: ../../library/mimewriter.rst:33
msgid "MimeWriter Objects"
msgstr "MimeWriter オブジェクト"

#: ../../library/mimewriter.rst:35
msgid ":class:`~MimeWriter.MimeWriter` instances have the following methods:"
msgstr ""
":class:`~MimeWriter.MimeWriter` インスタンスには以下のメソッドがあります:"

#: ../../library/mimewriter.rst:40
msgid ""
"Add a header line to the MIME message. The *key* is the name of the header, "
"where the *value* obviously provides the value of the header. The optional "
"argument *prefix* determines where the header  is inserted; ``0`` means "
"append at the end, ``1`` is insert at the start. The default is to append."
msgstr ""
"MIMEメッセージに新しいヘッダ行を追加します。 *key* は、そのヘッダの名前であ"
"り、そして *value* で、そのヘッダの値を明示的に与えます。省略可能な引数 "
"*prefix* は、ヘッダが挿入される場所を決定します; ``0`` は最後に追加することを"
"意味し、 ``1`` は先頭への挿入です。デフォルトは最後に追加することです。"

#: ../../library/mimewriter.rst:48
msgid ""
"Causes all headers accumulated so far to be written out (and forgotten). "
"This is useful if you don't need a body part at all, e.g. for a subpart of "
"type :mimetype:`message/rfc822` that's (mis)used to store some header-like "
"information."
msgstr ""
"今まで集められたヘッダすべてが書かれ (そして忘れられ) るようにします。これ"
"は、もし全く本体が必要でない場合に役に立ちます。例えば、ヘッダのような情報を"
"保管するために (誤って) 使用された、型 :mimetype:`message/rfc822` のサブパー"
"ト用など。"

#: ../../library/mimewriter.rst:56
msgid ""
"Returns a file-like object which can be used to write to the body of the "
"message.  The content-type is set to the provided *ctype*, and the optional "
"parameter *plist* provides additional parameters for the content-type "
"declaration. *prefix* functions as in :meth:`addheader` except that the "
"default is to insert at the start."
msgstr ""
"メッセージの本体に書くのに使用できるファイルのようなオブジェクトを返します。 "
"content-type は与えられた *ctype* に設定され、省略可能なパラメータ *plist* "
"は、 content-type 宣言のための追加のパラメータを与えます。 *prefix* は、その"
"デフォルトが先頭への挿入であること以外は :meth:`addheader` でのように働きま"
"す。"

#: ../../library/mimewriter.rst:65
msgid ""
"Returns a file-like object which can be used to write to the body of the "
"message.  Additionally, this method initializes the multi-part code, where "
"*subtype* provides the multipart subtype, *boundary* may provide a user-"
"defined boundary specification, and *plist* provides optional parameters for "
"the subtype. *prefix* functions as in :meth:`startbody`.  Subparts should be "
"created using :meth:`nextpart`."
msgstr ""
"メッセージ本体を書くのに使うことができるファイルのようなオブジェクトを返しま"
"す。更に、このメソッドはマルチパートのコードを初期化します。ここで、 "
"*subtype* が、そのマルチパートのサブタイプを、 *boundary* がユーザ定義の境界"
"指定を、そして *plist* が、そのサブタイプ用の省略可能なパラメータを定義しま"
"す。 *prefix* は、 :meth:`startbody` でのように働きます。サブパートは、 :"
"meth:`nextpart` を使って作成するべきです。"

#: ../../library/mimewriter.rst:75
msgid ""
"Returns a new instance of :class:`~MimeWriter.MimeWriter` which represents "
"an individual part in a multipart message.  This may be used to write the  "
"part as well as used for creating recursively complex multipart messages. "
"The message must first be initialized with :meth:`startmultipartbody` before "
"using :meth:`nextpart`."
msgstr ""
"マルチパートメッセージの個々のパートを表す、 :class:`~MimeWriter.MimeWriter` "
"の新しいインスタンスを返します。\n"
"これは、そのパートを書くのにも、また複雑なマルチパートを再帰的に作成するのに"
"も使えます。\n"
"メッセージは、 :meth:`nextpart` を使う前に最初に :meth:`startmultipartbody` "
"で初期化しなければなりません。"

#: ../../library/mimewriter.rst:83
msgid ""
"This is used to designate the last part of a multipart message, and should "
"*always* be used when writing multipart messages."
msgstr ""
"これは、マルチパートメッセージの最後のパートを指定するのに使うことができ、マ"
"ルチパートメッセージを書くときは *いつでも* 使うべきです。"
