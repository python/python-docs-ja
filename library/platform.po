# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:48+0900\n"
"PO-Revision-Date: 2018-06-29 17:33+0000\n"
"Last-Translator: tomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/platform.rst:2
msgid ":mod:`platform` ---  Access to underlying platform's identifying data"
msgstr ":mod:`platform` ---  実行中プラットフォームの固有情報を参照する"

#: ../../library/platform.rst:10
msgid "**Source code:** :source:`Lib/platform.py`"
msgstr "**ソースコード:** :source:`Lib/platform.py`"

#: ../../library/platform.rst:16
msgid ""
"Specific platforms listed alphabetically, with Linux included in the Unix "
"section."
msgstr ""
"プラットフォーム毎にアルファベット順に並べています。Linuxについては Unixセク"
"ションを参照してください。"

#: ../../library/platform.rst:21
msgid "Cross Platform"
msgstr "クロスプラットフォーム"

#: ../../library/platform.rst:26
msgid ""
"Queries the given executable (defaults to the Python interpreter binary) for "
"various architecture information."
msgstr ""
"*executable* で指定した実行可能ファイル（省略時はPythonインタープリタのバイナ"
"リ）の各種アーキテクチャ情報を調べます。"

#: ../../library/platform.rst:29
msgid ""
"Returns a tuple ``(bits, linkage)`` which contain information about the bit "
"architecture and the linkage format used for the executable. Both values are "
"returned as strings."
msgstr ""
"戻り値はタプル ``(bits, linkage)`` で、アーキテクチャのビット数と実行可能ファ"
"イルのリンク形式を示します。どちらの値も文字列で返ります。"

#: ../../library/platform.rst:33
msgid ""
"Values that cannot be determined are returned as given by the parameter "
"presets. If bits is given as ``''``, the ``sizeof(pointer)`` (or "
"``sizeof(long)`` on Python version < 1.5.2) is used as indicator for the "
"supported pointer size."
msgstr ""
"値を決定できない場合はパラメータプリセットから与えられる値を返します。bits "
"に ``''`` を与えた場合、サポートされているポインタサイズを知るために "
"``sizeof(pointer)`` (Python バージョン < 1.5.2 では ``sizeof(long)``) が使用"
"されます。"

#: ../../library/platform.rst:38
msgid ""
"The function relies on the system's :file:`file` command to do the actual "
"work. This is available on most if not all Unix  platforms and some non-Unix "
"platforms and then only if the executable points to the Python interpreter.  "
"Reasonable defaults are used when the above needs are not met."
msgstr ""
"この関数は、システムの :file:`file` コマンドを使用します。 :file:`file` はほ"
"とんどのUnixプラットフォームと一部の非Unixプラットフォームで利用可能です"
"が、 :file:`file` コマンドが利用できず、かつ *executable* が Pythonインタープ"
"リタでない場合には適切なデフォルト値が返ります。"

#: ../../library/platform.rst:45
msgid ""
"On Mac OS X (and perhaps other platforms), executable files may be universal "
"files containing multiple architectures."
msgstr ""
"Mac OS X (とひょっとすると他のプラットフォーム) では、実行可能ファイルは複数"
"のアーキテクチャを含んだユニバーサル形式かもしれません。"

#: ../../library/platform.rst:48
msgid ""
"To get at the \"64-bitness\" of the current interpreter, it is more reliable "
"to query the :attr:`sys.maxsize` attribute::"
msgstr ""
"現在のインタプリタが \"64-bit\" であるかどうかを調べるには、 :attr:`sys."
"maxsize` の方が信頼できます::"

#: ../../library/platform.rst:56
msgid ""
"Returns the machine type, e.g. ``'i386'``. An empty string is returned if "
"the value cannot be determined."
msgstr "``'i386'`` のような、機種を返します。不明な場合は空文字列を返します。"

#: ../../library/platform.rst:62
msgid ""
"Returns the computer's network name (may not be fully qualified!). An empty "
"string is returned if the value cannot be determined."
msgstr ""
"コンピュータのネットワーク名を返します。ネットワーク名は完全修飾名とは限りま"
"せん。不明な場合は空文字列を返します。"

#: ../../library/platform.rst:68
msgid ""
"Returns a single string identifying the underlying platform with as much "
"useful information as possible."
msgstr ""
"実行中プラットフォームを識別する文字列を返します。この文字列には、有益な情報"
"をできるだけ多く付加しています。"

#: ../../library/platform.rst:71
msgid ""
"The output is intended to be *human readable* rather than machine parseable. "
"It may look different on different platforms and this is intended."
msgstr ""
"戻り値は機械で処理しやすい形式ではなく、*人間にとって読みやすい* 形式となって"
"います。異なったプラットフォームでは異なった戻り値となるようになっています。"

#: ../../library/platform.rst:74
msgid ""
"If *aliased* is true, the function will use aliases for various platforms "
"that report system names which differ from their common names, for example "
"SunOS will be reported as Solaris.  The :func:`system_alias` function is "
"used to implement this."
msgstr ""
"*aliased* が真なら、システムの名称として一般的な名称ではなく、別名を使用して"
"結果を返します。たとえば、SunOS は Solaris となります。この機能は :func:"
"`system_alias` で実装されています。"

#: ../../library/platform.rst:79
msgid ""
"Setting *terse* to true causes the function to return only the absolute "
"minimum information needed to identify the platform."
msgstr ""
"*terse* が真なら、プラットフォームを特定するために最低限必要な情報だけを返し"
"ます。"

#: ../../library/platform.rst:85
msgid "Returns the (real) processor name, e.g. ``'amdk6'``."
msgstr "``'amdk6'`` のような、（現実の）プロセッサ名を返します。"

#: ../../library/platform.rst:87
msgid ""
"An empty string is returned if the value cannot be determined. Note that "
"many platforms do not provide this information or simply return the same "
"value as for :func:`machine`.  NetBSD does this."
msgstr ""
"不明な場合は空文字列を返します。NetBSDのようにこの情報を提供しない、または :"
"func:`machine` と同じ値しか返さないプラットフォームも多く存在しますので、注意"
"してください。"

#: ../../library/platform.rst:94
msgid ""
"Returns a tuple ``(buildno, builddate)`` stating the Python build number and "
"date as strings."
msgstr ""
"Pythonのビルド番号と日付を、``(buildno, builddate)`` のタプルで返します。"

#: ../../library/platform.rst:100
msgid "Returns a string identifying the compiler used for compiling Python."
msgstr "Pythonをコンパイルする際に使用したコンパイラを示す文字列を返します。"

#: ../../library/platform.rst:105
msgid "Returns a string identifying the Python implementation SCM branch."
msgstr ""
"Python実装のバージョン管理システム上のブランチを特定する文字列を返します。"

#: ../../library/platform.rst:110
msgid ""
"Returns a string identifying the Python implementation. Possible return "
"values are: 'CPython', 'IronPython', 'Jython', 'PyPy'."
msgstr ""
"Python実装を指定する文字列を返します。戻り値は: 'CPython', 'IronPython', "
"'Jython', 'PyPy' のいずれかです。"

#: ../../library/platform.rst:116
msgid "Returns a string identifying the Python implementation SCM revision."
msgstr ""
"Python実装のバージョン管理システム上のリビジョンを特定する文字列を返します。"

#: ../../library/platform.rst:121
msgid "Returns the Python version as string ``'major.minor.patchlevel'``."
msgstr ""
"Python のバージョンを、``'major.minor.patchlevel'`` 形式の文字列で返します。"

#: ../../library/platform.rst:123
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to 0)."
msgstr ""
"``sys.version`` と異なり、patchlevel（デフォルトでは0)も必ず含まれています。"

#: ../../library/platform.rst:129
msgid ""
"Returns the Python version as tuple ``(major, minor, patchlevel)`` of "
"strings."
msgstr ""
"Pythonのバージョンを、文字列のタプル ``(major, minor, patchlevel)`` で返しま"
"す。"

#: ../../library/platform.rst:131
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to ``'0'``)."
msgstr ""
"``sys.version`` と異なり、patchlevel（デフォルトでは ``'0'``)も必ず含まれてい"
"ます。"

#: ../../library/platform.rst:137
msgid ""
"Returns the system's release, e.g. ``'2.2.0'`` or ``'NT'`` An empty string "
"is returned if the value cannot be determined."
msgstr ""
"``'2.2.0'`` や ``'NT'`` のような、システムのリリース情報を返します。不明な場"
"合は空文字列を返します。"

#: ../../library/platform.rst:143
msgid ""
"Returns the system/OS name, e.g. ``'Linux'``, ``'Windows'``, or ``'Java'``. "
"An empty string is returned if the value cannot be determined."
msgstr ""
"``'Linux'``, ``'Windows'``, ``'Java'`` のような、システム/OS 名を返します。不"
"明な場合は空文字列を返します。"

#: ../../library/platform.rst:149
msgid ""
"Returns ``(system, release, version)`` aliased to common marketing names "
"used for some systems.  It also does some reordering of the information in "
"some cases where it would otherwise cause confusion."
msgstr ""
"マーケティング目的で使われる一般的な別名に変換して ``(system, release, "
"version)`` を返します。混乱を避けるために、情報を並べなおす場合があります。"

#: ../../library/platform.rst:156
msgid ""
"Returns the system's release version, e.g. ``'#3 on degas'``. An empty "
"string is returned if the value cannot be determined."
msgstr ""
"``'#3 on degas'`` のような、システムのリリース情報を返します。不明な場合は空"
"文字列を返します。"

#: ../../library/platform.rst:162
msgid ""
"Fairly portable uname interface. Returns a :func:`~collections.namedtuple` "
"containing six attributes: :attr:`system`, :attr:`node`, :attr:`release`, :"
"attr:`version`, :attr:`machine`, and :attr:`processor`."
msgstr ""
"極めて可搬性の高い uname インタフェースです。 :attr:`system`, :attr:`node`, :"
"attr:`release`, :attr:`version`, :attr:`machine`, :attr:`processor` の6つの属"
"性を持った :func:`~collections.namedtuple` を返します。"

#: ../../library/platform.rst:166
msgid ""
"Note that this adds a sixth attribute (:attr:`processor`) not present in "
"the :func:`os.uname` result.  Also, the attribute names are different for "
"the first two attributes; :func:`os.uname` names them :attr:`sysname` and :"
"attr:`nodename`."
msgstr ""
"この関数が :func:`os.uname` の結果には含まれない 6番目の属性 (:attr:"
"`processor`) を追加することに注意してください。さらに、最初の2つの属性につい"
"ては属性名が異なります; :func:`os.uname` はそれらを :attr:`sysname` と :attr:"
"`nodename` と命名します。"

#: ../../library/platform.rst:171
msgid "Entries which cannot be determined are set to ``''``."
msgstr "不明な項目は ``''`` となります。"

#: ../../library/platform.rst:173
msgid "Result changed from a tuple to a namedtuple."
msgstr "結果が tuple から namedtuple に変更されました。"

#: ../../library/platform.rst:178
msgid "Java Platform"
msgstr "Java プラットフォーム"

#: ../../library/platform.rst:183
msgid "Version interface for Jython."
msgstr "Jython用のバージョンインターフェースです。"

#: ../../library/platform.rst:185
msgid ""
"Returns a tuple ``(release, vendor, vminfo, osinfo)`` with *vminfo* being a "
"tuple ``(vm_name, vm_release, vm_vendor)`` and *osinfo* being a tuple "
"``(os_name, os_version, os_arch)``. Values which cannot be determined are "
"set to the defaults given as parameters (which all default to ``''``)."
msgstr ""
"タプル ``(release, vendor, vminfo, osinfo)`` を返します。*vminfo* はタプル "
"``(vm_name, vm_release, vm_vendor)``、*osinfo* はタプル ``(os_name, "
"os_version, os_arch)`` です。不明な項目は引数で指定した値(デフォルトは "
"``''``) となります。"

#: ../../library/platform.rst:192
msgid "Windows Platform"
msgstr "Windows プラットフォーム"

#: ../../library/platform.rst:197
msgid ""
"Get additional version information from the Windows Registry and return a "
"tuple ``(release, version, csd, ptype)`` referring to OS release, version "
"number, CSD level (service pack) and OS type (multi/single processor)."
msgstr ""
"Windows レジストリから追加のバージョン情報を取得して、タプル ``(release, "
"version, csd, ptype)`` を返します。それぞれ、OS リリース、バージョン番号、"
"CSD レベル (サービスパック)、OS タイプ (マルチ/シングルプロセッサー) を指して"
"います。"

#: ../../library/platform.rst:201
msgid ""
"As a hint: *ptype* is ``'Uniprocessor Free'`` on single processor NT "
"machines and ``'Multiprocessor Free'`` on multi processor machines. The "
"*'Free'* refers to the OS version being free of debugging code. It could "
"also state *'Checked'* which means the OS version uses debugging code, i.e. "
"code that checks arguments, ranges, etc."
msgstr ""
"参考: *ptype* はシングルプロセッサのNT上では ``'Uniprocessor Free'``、マルチ"
"プロセッサでは ``'Multiprocessor Free'`` となります。*'Free'* がついている場"
"合はデバッグ用のコードが含まれていないことを示し、*'Checked'* がついていれば"
"引数や範囲のチェックなどのデバッグ用コードが含まれていることを示します。"

#: ../../library/platform.rst:209
msgid ""
"This function works best with Mark Hammond's :mod:`win32all` package "
"installed, but also on Python 2.3 and later (support for this was added in "
"Python 2.6). It obviously only runs on Win32 compatible platforms."
msgstr ""
"この関数は、Mark Hammondの :mod:`win32all` がインストールされた環境で良く動作"
"しますが、Python 2.3 以上なら一応動作します。(Python 2.6からサポートされまし"
"た) もちろん、この関数が使えるのはWin32互換プラットフォームのみです。"

#: ../../library/platform.rst:216
msgid "Win95/98 specific"
msgstr "Win95/98 固有"

#: ../../library/platform.rst:220
msgid ""
"Portable :func:`popen` interface.  Find a working popen implementation "
"preferring :func:`win32pipe.popen`.  On Windows NT, :func:`win32pipe.popen` "
"should work; on Windows 9x it hangs due to bugs in the MS C library."
msgstr ""
"可搬性の高い :func:`popen` インターフェースで、可能なら :func:`win32pipe."
"popen` を使用します。 :func:`win32pipe.popen` はWindows NTでは利用可能です"
"が、Windows 9xではハングしてしまいます。"

#: ../../library/platform.rst:224
msgid ""
"This function is obsolete.  Use the :mod:`subprocess` module.  Check "
"especially the :ref:`subprocess-replacements` section."
msgstr ""
"この関数は廃止予定です。 :mod:`subprocess` モジュールを使用してください。特"
"に :ref:`subprocess-replacements` セクションをチェックしてください。"

#: ../../library/platform.rst:230
msgid "Mac OS Platform"
msgstr "Mac OS プラットフォーム"

#: ../../library/platform.rst:235
msgid ""
"Get Mac OS version information and return it as tuple ``(release, "
"versioninfo, machine)`` with *versioninfo* being a tuple ``(version, "
"dev_stage, non_release_version)``."
msgstr ""
"Mac OSのバージョン情報を、タプル ``(release, versioninfo, machine)`` で返しま"
"す。*versioninfo* は、タプル ``(version, dev_stage, non_release_version)`` で"
"す。"

#: ../../library/platform.rst:239
msgid ""
"Entries which cannot be determined are set to ``''``.  All tuple entries are "
"strings."
msgstr "不明な項目は ``''`` となります。タプルの要素は全て文字列です。"

#: ../../library/platform.rst:244
msgid "Unix Platforms"
msgstr "Unix プラットフォーム"

#: ../../library/platform.rst:249
msgid "This is another name for :func:`linux_distribution`."
msgstr "これは :func:`linux_distribution` の別名です。"

#: ../../library/platform.rst:252 ../../library/platform.rst:271
msgid ""
"See alternative like the `distro <https://pypi.org/project/distro>`_ package."
msgstr ""
"`distro <https://pypi.org/project/distro>`_ パッケージなどの他の選択肢を調べ"
"てください。"

#: ../../library/platform.rst:256
msgid "Tries to determine the name of the Linux OS distribution name."
msgstr "OSディストリビューション名の取得を試みます。"

#: ../../library/platform.rst:258
msgid ""
"``supported_dists`` may be given to define the set of Linux distributions to "
"look for. It defaults to a list of currently supported Linux distributions "
"identified by their release file name."
msgstr ""
"``supported_dists`` は、検索するLinuxディストリビューションを定義するために利"
"用します。デフォルトでは、リリースファイル名で定義されている、現在サポートさ"
"れているLinuxディストリビューションのリストです。"

#: ../../library/platform.rst:262
msgid ""
"If ``full_distribution_name`` is true (default), the full distribution read "
"from the OS is returned. Otherwise the short name taken from "
"``supported_dists`` is used."
msgstr ""
"``full_distribution_name`` が ``True`` (デフォルト)の場合、OSから読み込まれた"
"完全なディストリビューション名が返されます。それ以外の場合、"
"``supported_dists`` で利用された短い名前が返されます。"

#: ../../library/platform.rst:266
msgid ""
"Returns a tuple ``(distname,version,id)`` which defaults to the args given "
"as parameters.  ``id`` is the item in parentheses after the version number.  "
"It is usually the version codename."
msgstr ""
"戻り値はタプル ``(distname, version, id)`` で、不明な項目は引数で指定した値と"
"なります。``id`` はバージョン番号に続く括弧内の要素です。これは通常バージョン"
"コードネームです。"

#: ../../library/platform.rst:275
msgid ""
"Tries to determine the libc version against which the file executable "
"(defaults to the Python interpreter) is linked.  Returns a tuple of strings "
"``(lib, version)`` which default to the given parameters in case the lookup "
"fails."
msgstr ""
"executableで指定したファイル（省略時はPythonインタープリタ）がリンクしている"
"libcバージョンの取得を試みます。戻り値は文字列のタプル ``(lib, version)`` "
"で、不明な項目は引数で指定した値となります。"

#: ../../library/platform.rst:279
msgid ""
"Note that this function has intimate knowledge of how different libc "
"versions add symbols to the executable is probably only usable for "
"executables compiled using :program:`gcc`."
msgstr ""
"この関数は、実行形式に追加されるシンボルの細かな違いによって、libcのバージョ"
"ンを特定します。この違いは :program:`gcc` でコンパイルされた実行可能ファイル"
"でのみ有効だと思われます。"

#: ../../library/platform.rst:283
msgid "The file is read and scanned in chunks of *chunksize* bytes."
msgstr ""
"*chunksize* にはファイルから情報を取得するために読み込むバイト数を指定しま"
"す。"
