# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/linecache.rst:3
msgid ":mod:`linecache` --- Random access to text lines"
msgstr ":mod:`linecache` --- テキストラインにランダムアクセスする"

#: ../../library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**ソースコード:** :source:`Lib/linecache.py`"

#: ../../library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from any file, while "
"attempting to optimize internally, using a cache, the common case where many "
"lines are read from a single file.  This is used by the :mod:`traceback` "
"module to retrieve source lines for inclusion in  the formatted traceback."
msgstr ""
":mod:`linecache` モジュールは、キャッシュ (一つのファイルから何行も読んでおく"
"のが一般的です) を使って、内部で最適化を図りつつ、任意のファイルの任意の行を"
"取得するのを可能にします。 :mod:`traceback` モジュールは、整形されたトレース"
"バックにソースコードを含めるためにこのモジュールを利用しています。"

#: ../../library/linecache.rst:18
msgid "The :mod:`linecache` module defines the following functions:"
msgstr ":mod:`linecache` モジュールでは次の関数が定義されています:"

#: ../../library/linecache.rst:23
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"*filename* という名前のファイルから *lineno* 行目を取得します。この関数は決し"
"て例外を発生させません --- エラーの際には ``''`` を返します (行末の改行文字"
"は、見つかった行に含まれます)。"

#: ../../library/linecache.rst:29
msgid ""
"If a file named *filename* is not found, the function will look for it in "
"the module search path, ``sys.path``, after first checking for a :pep:`302` "
"``__loader__`` in *module_globals*, in case the module was imported from a "
"zipfile or other non-filesystem import source."
msgstr ""
"*filename* という名前のファイルが見つからなかった場合、モジュールの、つま"
"り、 ``sys.path`` でそのファイルを探します。 zipfileやその他のファイルシステ"
"ムでないimport元に対応するためまず *module_globals* の :pep:`302` "
"``__loader__`` をチェックし、そのあと ``sys.path`` を探索します。"

#: ../../library/linecache.rst:34
msgid "The *module_globals* parameter was added."
msgstr "パラメータ *module_globals* の追加."

#: ../../library/linecache.rst:40
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"キャッシュをクリアします。それまでに :func:`getline` を使って読み込んだファイ"
"ルの行が必要でなくなったら、この関数を使ってください。"

#: ../../library/linecache.rst:46
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""
"キャッシュが有効かチェックします。キャッシュしたファイルにディスク上で変更が"
"あったかもしれなくて、更新が必要なときにこの関数を使ってください。もし "
"*filename* がなければ、全てのキャッシュエントリをチェックします。"

#: ../../library/linecache.rst:50
msgid "Example::"
msgstr "例::"
