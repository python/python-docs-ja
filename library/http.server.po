# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Takanori Suzuki <takanori@takanory.net>, 2021
# Nozomu Kaneko <nozom.kaneko@gmail.com>, 2023
# tomo, 2023
# Masato HASHIMOTO <cabezon.hashimoto@gmail.com>, 2023
# Arihiro TAKASE, 2023
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-11 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:07+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.server.rst:2
msgid ":mod:`!http.server` --- HTTP servers"
msgstr ":mod:`!http.server` --- HTTP サーバー"

#: ../../library/http.server.rst:7
msgid "**Source code:** :source:`Lib/http/server.py`"
msgstr "**ソースコード:** :source:`Lib/http/server.py`"

#: ../../library/http.server.rst:17
msgid "This module defines classes for implementing HTTP servers."
msgstr "このモジュールは HTTP サーバを実装するためのクラスを提供しています。"

#: ../../library/http.server.rst:22
msgid ""
":mod:`http.server` is not recommended for production. It only implements :"
"ref:`basic security checks <http.server-security>`."
msgstr ""
":mod:`http.server` は、本番環境では推奨されません。これは、 :ref:`基本的なセ"
"キュリティチェック <http.server-security>` のみを実装します。"

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""
"このモジュールは WebAssembly では動作しないか、利用不可です。詳しくは、:ref:"
"`wasm-availability` を見てください。"

#: ../../library/http.server.rst:27
msgid ""
"One class, :class:`HTTPServer`, is a :class:`socketserver.TCPServer` "
"subclass. It creates and listens at the HTTP socket, dispatching the "
"requests to a handler.  Code to create and run the server looks like this::"
msgstr ""
"クラス :class:`HTTPServer` は :class:`socketserver.TCPServer` のサブクラスで"
"す。\n"
":class:`HTTPServer` は HTTP ソケットを生成してリクエスト待ち (listen) を行"
"い、リクエストをハンドラに渡します。\n"
"サーバを作成して動作させるためのコードは以下のようになります::"

#: ../../library/http.server.rst:31
msgid ""
"def run(server_class=HTTPServer, handler_class=BaseHTTPRequestHandler):\n"
"    server_address = ('', 8000)\n"
"    httpd = server_class(server_address, handler_class)\n"
"    httpd.serve_forever()"
msgstr ""

#: ../../library/http.server.rst:39
msgid ""
"This class builds on the :class:`~socketserver.TCPServer` class by storing "
"the server address as instance variables named :attr:`server_name` and :attr:"
"`server_port`. The server is accessible by the handler, typically through "
"the handler's :attr:`server` instance variable."
msgstr ""
"このクラスは :class:`~socketserver.TCPServer` クラスの上に構築されており、"
"サーバのアドレスをインスタンス変数 :attr:`server_name` および :attr:"
"`server_port` に記憶します。\n"
"サーバはハンドラからアクセス可能で、通常ハンドラの :attr:`server` インスタン"
"ス変数からアクセスします。"

#: ../../library/http.server.rst:46
msgid ""
"This class is identical to HTTPServer but uses threads to handle requests by "
"using the :class:`~socketserver.ThreadingMixIn`. This is useful to handle "
"web browsers pre-opening sockets, on which :class:`HTTPServer` would wait "
"indefinitely."
msgstr ""

#: ../../library/http.server.rst:54
msgid ""
"The :class:`HTTPServer` and :class:`ThreadingHTTPServer` must be given a "
"*RequestHandlerClass* on instantiation, of which this module provides three "
"different variants:"
msgstr ""
":class:`HTTPServer` と :class:`ThreadingHTTPServer` は *RequestHandlerClass* "
"の初期化のときに与えられなければならず、このモジュールはこのクラスの3つの変種"
"を提供しています:"

#: ../../library/http.server.rst:60
msgid ""
"This class is used to handle the HTTP requests that arrive at the server.  "
"By itself, it cannot respond to any actual HTTP requests; it must be "
"subclassed to handle each request method (e.g. GET or POST). :class:"
"`BaseHTTPRequestHandler` provides a number of class and instance variables, "
"and methods for use by subclasses."
msgstr ""
"このクラスはサーバに到着したリクエストを処理します。\n"
"このメソッド自体では、実際のリクエストに応答することはできません; (GET や "
"POST のような) 各リクエストメソッドを処理するためにはサブクラス化しなければな"
"りません。\n"
":class:`BaseHTTPRequestHandler` では、サブクラスで使うためのクラスやインスタ"
"ンス変数、メソッド群を数多く提供しています。"

#: ../../library/http.server.rst:66
msgid ""
"The handler will parse the request and the headers, then call a method "
"specific to the request type. The method name is constructed from the "
"request. For example, for the request method ``SPAM``, the :meth:`!do_SPAM` "
"method will be called with no arguments. All of the relevant information is "
"stored in instance variables of the handler.  Subclasses should not need to "
"override or extend the :meth:`!__init__` method."
msgstr ""

#: ../../library/http.server.rst:73
msgid ":class:`BaseHTTPRequestHandler` has the following instance variables:"
msgstr ""
":class:`BaseHTTPRequestHandler` は以下のインスタンス変数を持っています:"

#: ../../library/http.server.rst:77
msgid ""
"Contains a tuple of the form ``(host, port)`` referring to the client's "
"address."
msgstr ""
"HTTP クライアントのアドレスを参照している、``(host, port)`` の形式をとるタプ"
"ルが入っています。"

#: ../../library/http.server.rst:82
msgid "Contains the server instance."
msgstr "server インスタンスが入っています。"

#: ../../library/http.server.rst:86
msgid ""
"Boolean that should be set before :meth:`handle_one_request` returns, "
"indicating if another request may be expected, or if the connection should "
"be shut down."
msgstr ""
":meth:`handle_one_request` が返る前に設定すべき真偽値で、別のリクエストが期待"
"されているかどうか、もしくはコネクションを切断すべきかどうかを指し示していま"
"す。"

#: ../../library/http.server.rst:92
msgid ""
"Contains the string representation of the HTTP request line. The terminating "
"CRLF is stripped. This attribute should be set by :meth:"
"`handle_one_request`. If no valid request line was processed, it should be "
"set to the empty string."
msgstr ""
"HTTP リクエスト行の文字列表現を保持しています。\n"
"末尾の CRLF は除去されています。\n"
"この属性は :meth:`handle_one_request` によって設定されるべきです。\n"
"妥当なリクエスト行が1行も処理されなかった場合は、空文字列に設定されるべきで"
"す。"

#: ../../library/http.server.rst:99
msgid "Contains the command (request type). For example, ``'GET'``."
msgstr "HTTP 命令 (リクエスト形式) が入っています。例えば ``'GET'`` です。"

#: ../../library/http.server.rst:103
msgid ""
"Contains the request path. If query component of the URL is present, then "
"``path`` includes the query. Using the terminology of :rfc:`3986`, ``path`` "
"here includes ``hier-part`` and the ``query``."
msgstr ""

#: ../../library/http.server.rst:109
msgid ""
"Contains the version string from the request. For example, ``'HTTP/1.0'``."
msgstr ""
"リクエストのバージョン文字列が入っています。例えば ``'HTTP/1.0'`` です。"

#: ../../library/http.server.rst:113
msgid ""
"Holds an instance of the class specified by the :attr:`MessageClass` class "
"variable. This instance parses and manages the headers in the HTTP request. "
"The :func:`~http.client.parse_headers` function from :mod:`http.client` is "
"used to parse the headers and it requires that the HTTP request provide a "
"valid :rfc:`2822` style header."
msgstr ""
":attr:`MessageClass` クラス変数で指定されたクラスのインスタンスを保持していま"
"す。\n"
"このインスタンスは HTTP リクエストのヘッダを解釈し、管理しています。\n"
":mod:`http.client` の :func:`~http.client.parse_headers` 関数がヘッダを解釈す"
"るために使われ、 HTTP リクエストが妥当な :rfc:`2822` スタイルのヘッダを提供す"
"ることを要求します。"

#: ../../library/http.server.rst:121
msgid ""
"An :class:`io.BufferedIOBase` input stream, ready to read from the start of "
"the optional input data."
msgstr ""

#: ../../library/http.server.rst:126
msgid ""
"Contains the output stream for writing a response back to the client. Proper "
"adherence to the HTTP protocol must be used when writing to this stream in "
"order to achieve successful interoperation with HTTP clients."
msgstr ""

#: ../../library/http.server.rst:131
msgid "This is an :class:`io.BufferedIOBase` stream."
msgstr ""

#: ../../library/http.server.rst:134
msgid ":class:`BaseHTTPRequestHandler` has the following attributes:"
msgstr ":class:`BaseHTTPRequestHandler` は以下の属性を持っています:"

#: ../../library/http.server.rst:138
msgid ""
"Specifies the server software version.  You may want to override this. The "
"format is multiple whitespace-separated strings, where each string is of the "
"form name[/version]. For example, ``'BaseHTTP/0.2'``."
msgstr ""
"サーバのソフトウェアバージョンを指定します。この値は上書きする必要が生じるか"
"もしれません。書式は複数の文字列を空白で分割したもので、各文字列はソフトウェ"
"ア名[/バージョン] の形式をとります。例えば、``'BaseHTTP/0.2'`` です。"

#: ../../library/http.server.rst:144
msgid ""
"Contains the Python system version, in a form usable by the :attr:"
"`version_string` method and the :attr:`server_version` class variable. For "
"example, ``'Python/1.4'``."
msgstr ""
"Python 処理系のバージョンが, :attr:`version_string` メソッドや :attr:"
"`server_version` クラス変数で利用可能な形式で入っています。例えば "
"``'Python/1.4'`` です。"

#: ../../library/http.server.rst:150
msgid ""
"Specifies a format string that should be used by :meth:`send_error` method "
"for building an error response to the client. The string is filled by "
"default with variables from :attr:`responses` based on the status code that "
"passed to :meth:`send_error`."
msgstr ""

#: ../../library/http.server.rst:157
msgid ""
"Specifies the Content-Type HTTP header of error responses sent to the "
"client.  The default value is ``'text/html'``."
msgstr ""
"エラーレスポンスをクライアントに送信する時に使う Content-Type HTTP ヘッダを指"
"定します。デフォルトでは ``'text/html'`` です。"

#: ../../library/http.server.rst:162
msgid ""
"Specifies the HTTP version to which the server is conformant. It is sent in "
"responses to let the client know the server's communication capabilities for "
"future requests. If set to ``'HTTP/1.1'``, the server will permit HTTP "
"persistent connections; however, your server *must* then include an accurate "
"``Content-Length`` header (using :meth:`send_header`) in all of its "
"responses to clients. For backwards compatibility, the setting defaults to "
"``'HTTP/1.0'``."
msgstr ""

#: ../../library/http.server.rst:172
msgid ""
"Specifies an :class:`email.message.Message`\\ -like class to parse HTTP "
"headers.  Typically, this is not overridden, and it defaults to :class:`http."
"client.HTTPMessage`."
msgstr ""
"HTTP ヘッダを解釈するための :class:`email.message.Message` 類似のクラスを指定"
"します。\n"
"通常この値が上書きされることはなく、デフォルトの :class:`http.client."
"HTTPMessage` になっています。"

#: ../../library/http.server.rst:178
msgid ""
"This attribute contains a mapping of error code integers to two-element "
"tuples containing a short and long message. For example, ``{code: "
"(shortmessage, longmessage)}``. The *shortmessage* is usually used as the "
"*message* key in an error response, and *longmessage* as the *explain* key.  "
"It is used by :meth:`send_response_only` and :meth:`send_error` methods."
msgstr ""

#: ../../library/http.server.rst:184
msgid "A :class:`BaseHTTPRequestHandler` instance has the following methods:"
msgstr ""
":class:`BaseHTTPRequestHandler` インスタンスは以下のメソッドを持っています:"

#: ../../library/http.server.rst:188
msgid ""
"Calls :meth:`handle_one_request` once (or, if persistent connections are "
"enabled, multiple times) to handle incoming HTTP requests. You should never "
"need to override it; instead, implement appropriate :meth:`!do_\\*` methods."
msgstr ""

#: ../../library/http.server.rst:195
msgid ""
"This method will parse and dispatch the request to the appropriate :meth:`!"
"do_\\*` method.  You should never need to override it."
msgstr ""

#: ../../library/http.server.rst:200
msgid ""
"When an HTTP/1.1 conformant server receives an ``Expect: 100-continue`` "
"request header it responds back with a ``100 Continue`` followed by ``200 "
"OK`` headers. This method can be overridden to raise an error if the server "
"does not want the client to continue.  For e.g. server can choose to send "
"``417 Expectation Failed`` as a response header and ``return False``."
msgstr ""
"HTTP/1.1 準拠のサーバが ``Expect: 100-continue`` リクエストヘッダを受け取った"
"とき、 ``100 Continue`` を返し、その後に ``200 OK`` がきます。\n"
"このメソッドは、サーバがクライアントに継続を要求しない場合、エラーを送出する"
"ようにオーバーライドできます。\n"
"例えば、サーバはレスポンスヘッダとして ``417 Expectation Failed`` を送る選択"
"をし、 ``return False`` とできます。"

#: ../../library/http.server.rst:211
msgid ""
"Sends and logs a complete error reply to the client. The numeric *code* "
"specifies the HTTP error code, with *message* as an optional, short, human "
"readable description of the error.  The *explain* argument can be used to "
"provide more detailed information about the error; it will be formatted "
"using the :attr:`error_message_format` attribute and emitted, after a "
"complete set of headers, as the response body.  The :attr:`responses` "
"attribute holds the default values for *message* and *explain* that will be "
"used if no value is provided; for unknown codes the default value for both "
"is the string ``???``. The body will be empty if the method is HEAD or the "
"response code is one of the following: :samp:`1{xx}`, ``204 No Content``, "
"``205 Reset Content``, ``304 Not Modified``."
msgstr ""

#: ../../library/http.server.rst:223
msgid ""
"The error response includes a Content-Length header. Added the *explain* "
"argument."
msgstr ""

#: ../../library/http.server.rst:229
msgid ""
"Adds a response header to the headers buffer and logs the accepted request. "
"The HTTP response line is written to the internal buffer, followed by "
"*Server* and *Date* headers. The values for these two headers are picked up "
"from the :meth:`version_string` and :meth:`date_time_string` methods, "
"respectively. If the server does not intend to send any other headers using "
"the :meth:`send_header` method, then :meth:`send_response` should be "
"followed by an :meth:`end_headers` call."
msgstr ""

#: ../../library/http.server.rst:238
msgid ""
"Headers are stored to an internal buffer and :meth:`end_headers` needs to be "
"called explicitly."
msgstr ""

#: ../../library/http.server.rst:244
msgid ""
"Adds the HTTP header to an internal buffer which will be written to the "
"output stream when either :meth:`end_headers` or :meth:`flush_headers` is "
"invoked. *keyword* should specify the header keyword, with *value* "
"specifying its value. Note that, after the send_header calls are done, :meth:"
"`end_headers` MUST BE called in order to complete the operation."
msgstr ""

#: ../../library/http.server.rst:250
msgid "Headers are stored in an internal buffer."
msgstr "ヘッダは内部バッファに保存されます。"

#: ../../library/http.server.rst:255
msgid ""
"Sends the response header only, used for the purposes when ``100 Continue`` "
"response is sent by the server to the client. The headers not buffered and "
"sent directly the output stream.If the *message* is not specified, the HTTP "
"message corresponding the response *code*  is sent."
msgstr ""

#: ../../library/http.server.rst:264
msgid ""
"Adds a blank line (indicating the end of the HTTP headers in the response) "
"to the headers buffer and calls :meth:`flush_headers`."
msgstr ""

#: ../../library/http.server.rst:268
msgid "The buffered headers are written to the output stream."
msgstr "バッファされたヘッダは出力ストリームに書き出されます。"

#: ../../library/http.server.rst:273
msgid ""
"Finally send the headers to the output stream and flush the internal headers "
"buffer."
msgstr ""
"最終的にヘッダを出力ストリームに送り、内部ヘッダバッファをフラッシュします。"

#: ../../library/http.server.rst:280
msgid ""
"Logs an accepted (successful) request. *code* should specify the numeric "
"HTTP code associated with the response. If a size of the response is "
"available, then it should be passed as the *size* parameter."
msgstr ""
"受理された (成功した) リクエストをログに記録します。*code* にはこの応答に関連"
"付けられた HTTP コード番号を指定します。応答メッセージの大きさを知ることがで"
"きる場合、*size* パラメタに渡すとよいでしょう。"

#: ../../library/http.server.rst:286
msgid ""
"Logs an error when a request cannot be fulfilled. By default, it passes the "
"message to :meth:`log_message`, so it takes the same arguments (*format* and "
"additional values)."
msgstr ""
"リクエストを遂行できなかった際に、エラーをログに記録します。標準では、メッ"
"セージを :meth:`log_message` に渡します。従って同じ引数 (*format* と追加の"
"値) を取ります。"

#: ../../library/http.server.rst:293
msgid ""
"Logs an arbitrary message to ``sys.stderr``. This is typically overridden to "
"create custom error logging mechanisms. The *format* argument is a standard "
"printf-style format string, where the additional arguments to :meth:"
"`log_message` are applied as inputs to the formatting. The client ip address "
"and current date and time are prefixed to every message logged."
msgstr ""
"任意のメッセージを ``sys.stderr`` にログ記録します。このメソッドは通常、カス"
"タムのエラーログ記録機構を作成するために上書きされます。 *format* 引数は標準"
"の printf 形式の書式文字列で、 :meth:`log_message` に渡された追加の引数は書式"
"化の入力として適用されます。ログ記録される全てのメッセージには、クライアント"
"の IP アドレスおよび現在の日付、時刻が先頭に付けられます。"

#: ../../library/http.server.rst:301
msgid ""
"Returns the server software's version string. This is a combination of the :"
"attr:`server_version` and :attr:`sys_version` attributes."
msgstr ""
"サーバーのソフトウェアのバージョンを示す文字列を返します。\n"
"その文字列は、:attr:`server_version` と :attr:`sys_version` の属性が含まれま"
"す。"

#: ../../library/http.server.rst:306
msgid ""
"Returns the date and time given by *timestamp* (which must be ``None`` or in "
"the format returned by :func:`time.time`), formatted for a message header. "
"If *timestamp* is omitted, it uses the current date and time."
msgstr ""
"メッセージヘッダ向けに書式化された、 *timestamp* (``None`` または :func:"
"`time.time` のフォーマットである必要があります)で与えられた日時を返します。も"
"し *timestamp* が省略された場合には、現在の日時が使われます。"

#: ../../library/http.server.rst:310
msgid "The result looks like ``'Sun, 06 Nov 1994 08:49:37 GMT'``."
msgstr "出力は ``'Sun, 06 Nov 1994 08:49:37 GMT'`` のようになります。"

#: ../../library/http.server.rst:314
msgid "Returns the current date and time, formatted for logging."
msgstr "ログ記録向けに書式化された、現在の日付および時刻を返します。"

#: ../../library/http.server.rst:318
msgid "Returns the client address."
msgstr "クライアントのアドレスを返します。"

#: ../../library/http.server.rst:320
msgid ""
"Previously, a name lookup was performed. To avoid name resolution delays, it "
"now always returns the IP address."
msgstr ""

#: ../../library/http.server.rst:327
msgid ""
"This class serves files from the directory *directory* and below, or the "
"current directory if *directory* is not provided, directly mapping the "
"directory structure to HTTP requests."
msgstr ""

#: ../../library/http.server.rst:331
msgid "Added the *directory* parameter."
msgstr ""

#: ../../library/http.server.rst:334
msgid "The *directory* parameter accepts a :term:`path-like object`."
msgstr ""

#: ../../library/http.server.rst:337
msgid ""
"A lot of the work, such as parsing the request, is done by the base class :"
"class:`BaseHTTPRequestHandler`.  This class implements the :func:`do_GET` "
"and :func:`do_HEAD` functions."
msgstr ""
"リクエストの解釈のような、多くの作業は基底クラス :class:"
"`BaseHTTPRequestHandler` で行われます。このクラスは関数 :func:`do_GET` およ"
"び :func:`do_HEAD` を実装しています。"

#: ../../library/http.server.rst:341
msgid ""
"The following are defined as class-level attributes of :class:"
"`SimpleHTTPRequestHandler`:"
msgstr ""
":class:`SimpleHTTPRequestHandler` では以下のメンバ変数を定義しています:"

#: ../../library/http.server.rst:346
msgid ""
"This will be ``\"SimpleHTTP/\" + __version__``, where ``__version__`` is "
"defined at the module level."
msgstr ""
"この値は ``\"SimpleHTTP/\" + __version__`` になります。``__version__`` はこの"
"モジュールで定義されている値です。"

#: ../../library/http.server.rst:351
msgid ""
"A dictionary mapping suffixes into MIME types, contains custom overrides for "
"the default system mappings. The mapping is used case-insensitively, and so "
"should contain only lower-cased keys."
msgstr ""

#: ../../library/http.server.rst:355
msgid ""
"This dictionary is no longer filled with the default system mappings, but "
"only contains overrides."
msgstr ""

#: ../../library/http.server.rst:359
msgid ""
"The :class:`SimpleHTTPRequestHandler` class defines the following methods:"
msgstr ":class:`SimpleHTTPRequestHandler` では以下のメソッドを定義しています:"

#: ../../library/http.server.rst:363
msgid ""
"This method serves the ``'HEAD'`` request type: it sends the headers it "
"would send for the equivalent ``GET`` request. See the :meth:`do_GET` method "
"for a more complete explanation of the possible headers."
msgstr ""
"このメソッドは ``'HEAD'`` 型のリクエスト処理を実行します: すなわち、 ``GET`` "
"リクエストの時に送信されるものと同じヘッダを送信します。送信される可能性のあ"
"るヘッダについての完全な説明は :meth:`do_GET` メソッドを参照してください。"

#: ../../library/http.server.rst:369
msgid ""
"The request is mapped to a local file by interpreting the request as a path "
"relative to the current working directory."
msgstr ""
"リクエストを現在の作業ディレクトリからの相対的なパスとして解釈することで、リ"
"クエストをローカルシステム上のファイルと対応付けます。"

#: ../../library/http.server.rst:372
msgid ""
"If the request was mapped to a directory, the directory is checked for a "
"file named ``index.html`` or ``index.htm`` (in that order). If found, the "
"file's contents are returned; otherwise a directory listing is generated by "
"calling the :meth:`list_directory` method. This method uses :func:`os."
"listdir` to scan the directory, and returns a ``404`` error response if the :"
"func:`~os.listdir` fails."
msgstr ""
"リクエストがディレクトリに対応付けられた場合、 ``index.html`` または ``index."
"htm`` を (この順序で) チェックします。もしファイルを発見できればその内容を、"
"そうでなければディレクトリ一覧を :meth:`list_directory` メソッドで生成して、"
"返します。このメソッドは :func:`os.listdir` をディレクトリのスキャンに用いて"
"おり、 :func:`~os.listdir` が失敗した場合には ``404`` 応答が返されます。"

#: ../../library/http.server.rst:379
msgid ""
"If the request was mapped to a file, it is opened. Any :exc:`OSError` "
"exception in opening the requested file is mapped to a ``404``, ``'File not "
"found'`` error. If there was an ``'If-Modified-Since'`` header in the "
"request, and the file was not modified after this time, a ``304``, ``'Not "
"Modified'`` response is sent. Otherwise, the content type is guessed by "
"calling the :meth:`guess_type` method, which in turn uses the "
"*extensions_map* variable, and the file contents are returned."
msgstr ""

#: ../../library/http.server.rst:387
msgid ""
"A ``'Content-type:'`` header with the guessed content type is output, "
"followed by a ``'Content-Length:'`` header with the file's size and a "
"``'Last-Modified:'`` header with the file's modification time."
msgstr ""
"出力は ``'Content-type:'`` と推測されたコンテントタイプで、その後にファイルサ"
"イズを示す ``'Content-Length;'`` ヘッダと、ファイルの更新日時を示す ``'Last-"
"Modified:'`` ヘッダが続きます。"

#: ../../library/http.server.rst:391
msgid ""
"Then follows a blank line signifying the end of the headers, and then the "
"contents of the file are output. If the file's MIME type starts with ``text/"
"`` the file is opened in text mode; otherwise binary mode is used."
msgstr ""
"そしてヘッダの終了を示す空白行が続き、さらにその後にファイルの内容が続きま"
"す。このファイルはコンテントタイプが ``text/`` で始まっている場合はテキスト"
"モードで、そうでなければバイナリモードで開かれます。"

#: ../../library/http.server.rst:395
msgid ""
"For example usage, see the implementation of the ``test`` function in :"
"source:`Lib/http/server.py`."
msgstr ""

#: ../../library/http.server.rst:398
msgid "Support of the ``'If-Modified-Since'`` header."
msgstr ""

#: ../../library/http.server.rst:401
msgid ""
"The :class:`SimpleHTTPRequestHandler` class can be used in the following "
"manner in order to create a very basic webserver serving files relative to "
"the current directory::"
msgstr ""

#: ../../library/http.server.rst:405
msgid ""
"import http.server\n"
"import socketserver\n"
"\n"
"PORT = 8000\n"
"\n"
"Handler = http.server.SimpleHTTPRequestHandler\n"
"\n"
"with socketserver.TCPServer((\"\", PORT), Handler) as httpd:\n"
"    print(\"serving at port\", PORT)\n"
"    httpd.serve_forever()"
msgstr ""

#: ../../library/http.server.rst:417
msgid ""
":class:`SimpleHTTPRequestHandler` can also be subclassed to enhance "
"behavior, such as using different index file names by overriding the class "
"attribute :attr:`index_pages`."
msgstr ""

#: ../../library/http.server.rst:423
msgid ""
":mod:`http.server` can also be invoked directly using the :option:`-m` "
"switch of the interpreter.  Similar to the previous example, this serves "
"files relative to the current directory::"
msgstr ""
":mod:`http.server` はインタプリタの :option:`-m` スイッチを使って直接実行する"
"こともできます。上の例と同じように、これはカレントディレクトリ以下のファイル"
"へのアクセスを提供します::"

#: ../../library/http.server.rst:427
msgid "python -m http.server"
msgstr ""

#: ../../library/http.server.rst:429
msgid ""
"The server listens to port 8000 by default. The default can be overridden by "
"passing the desired port number as an argument::"
msgstr ""

#: ../../library/http.server.rst:432
msgid "python -m http.server 9000"
msgstr ""

#: ../../library/http.server.rst:434
msgid ""
"By default, the server binds itself to all interfaces.  The option ``-b/--"
"bind`` specifies a specific address to which it should bind. Both IPv4 and "
"IPv6 addresses are supported. For example, the following command causes the "
"server to bind to localhost only::"
msgstr ""

#: ../../library/http.server.rst:439
msgid "python -m http.server --bind 127.0.0.1"
msgstr ""

#: ../../library/http.server.rst:441
msgid "Added the ``--bind`` option."
msgstr ""

#: ../../library/http.server.rst:444
msgid "Support IPv6 in the ``--bind`` option."
msgstr ""

#: ../../library/http.server.rst:447
msgid ""
"By default, the server uses the current directory. The option ``-d/--"
"directory`` specifies a directory to which it should serve the files. For "
"example, the following command uses a specific directory::"
msgstr ""

#: ../../library/http.server.rst:451
msgid "python -m http.server --directory /tmp/"
msgstr ""

#: ../../library/http.server.rst:453
msgid "Added the ``--directory`` option."
msgstr ""

#: ../../library/http.server.rst:456
msgid ""
"By default, the server is conformant to HTTP/1.0. The option ``-p/--"
"protocol`` specifies the HTTP version to which the server is conformant. For "
"example, the following command runs an HTTP/1.1 conformant server::"
msgstr ""

#: ../../library/http.server.rst:460
msgid "python -m http.server --protocol HTTP/1.1"
msgstr ""

#: ../../library/http.server.rst:462
msgid "Added the ``--protocol`` option."
msgstr ""

#: ../../library/http.server.rst:467
msgid ""
"This class is used to serve either files or output of CGI scripts from the "
"current directory and below. Note that mapping HTTP hierarchic structure to "
"local directory structure is exactly as in :class:`SimpleHTTPRequestHandler`."
msgstr ""
"このクラスは、現在のディレクトリかその下のディレクトリにおいて、ファイルか "
"CGI スクリプト出力を提供するために使われます。 HTTP 階層構造からローカルな"
"ディレクトリ構造への対応付けは :class:`SimpleHTTPRequestHandler` と全く同じな"
"ので注意してください。"

#: ../../library/http.server.rst:473
msgid ""
"CGI scripts run by the :class:`CGIHTTPRequestHandler` class cannot execute "
"redirects (HTTP code 302), because code 200 (script output follows) is sent "
"prior to execution of the CGI script.  This pre-empts the status code."
msgstr ""
":class:`CGIHTTPRequestHandler` クラスで実行される CGI スクリプトは HTTP コー"
"ド 200 (スクリプトの出力が後に続く) を実行に先立って出力される (これがステー"
"タスコードになります) ため、リダイレクト(コード302) を行なうことができませ"
"ん。"

#: ../../library/http.server.rst:478
msgid ""
"The class will however, run the CGI script, instead of serving it as a file, "
"if it guesses it to be a CGI script.  Only directory-based CGI are used --- "
"the other common server configuration is to treat special extensions as "
"denoting CGI scripts."
msgstr ""
"このクラスでは、ファイルが CGI スクリプトであると推測された場合、これをファイ"
"ルとして提供する代わりにスクリプトを実行します。 --- 他の一般的なサーバ設定は"
"特殊な拡張子を使って CGI スクリプトであることを示すのに対し、ディレクトリベー"
"スの CGI だけが使われます。"

#: ../../library/http.server.rst:483
msgid ""
"The :func:`do_GET` and :func:`do_HEAD` functions are modified to run CGI "
"scripts and serve the output, instead of serving files, if the request leads "
"to somewhere below the ``cgi_directories`` path."
msgstr ""
":func:`do_GET` および :func:`do_HEAD` 関数は、HTTP 要求が "
"``cgi_directories`` パス以下のどこかを指している場合、ファイルを提供するので"
"はなく、CGI スクリプトを実行してその出力を提供するように変更されています。"

#: ../../library/http.server.rst:487
msgid "The :class:`CGIHTTPRequestHandler` defines the following data member:"
msgstr ":class:`CGIHTTPRequestHandler` では以下のデータメンバを定義しています:"

#: ../../library/http.server.rst:491
msgid ""
"This defaults to ``['/cgi-bin', '/htbin']`` and describes directories to "
"treat as containing CGI scripts."
msgstr ""
"この値は標準で ``['/cgi-bin', '/htbin']`` であり、CGI スクリプトを含んでいる"
"ことを示すディレクトリを記述します。"

#: ../../library/http.server.rst:494
msgid "The :class:`CGIHTTPRequestHandler` defines the following method:"
msgstr ":class:`CGIHTTPRequestHandler` は以下のメソッドを定義しています:"

#: ../../library/http.server.rst:498
msgid ""
"This method serves the ``'POST'`` request type, only allowed for CGI "
"scripts.  Error 501, \"Can only POST to CGI scripts\", is output when trying "
"to POST to a non-CGI url."
msgstr ""
"このメソッドは、CGI スクリプトでのみ許されている ``'POST'`` 型の HTTP 要求に"
"対するサービスを行います。CGI でない url に対して POST を試みた場合、出力は "
"Error 501, \"Can only POST to CGI scripts\" になります。"

#: ../../library/http.server.rst:502
msgid ""
"Note that CGI scripts will be run with UID of user nobody, for security "
"reasons.  Problems with the CGI script will be translated to error 403."
msgstr ""
"セキュリティ上の理由から、CGI スクリプトはユーザ nobody の UID で動作するので"
"注意してください。 CGI スクリプトが原因で発生した問題は、Error 403 に変換され"
"ます。"

#: ../../library/http.server.rst:507
msgid ""
":class:`CGIHTTPRequestHandler` is being removed in 3.15.  CGI has not been "
"considered a good way to do things for well over a decade. This code has "
"been unmaintained for a while now and sees very little practical use. "
"Retaining it could lead to further :ref:`security considerations <http."
"server-security>`."
msgstr ""

#: ../../library/http.server.rst:513
msgid ""
":class:`CGIHTTPRequestHandler` can be enabled in the command line by passing "
"the ``--cgi`` option::"
msgstr ""

#: ../../library/http.server.rst:516
msgid "python -m http.server --cgi"
msgstr ""

#: ../../library/http.server.rst:520
msgid ""
":mod:`http.server` command line ``--cgi`` support is being removed because :"
"class:`CGIHTTPRequestHandler` is being removed."
msgstr ""

#: ../../library/http.server.rst:525
msgid ""
":class:`CGIHTTPRequestHandler` and the ``--cgi`` command line option are not "
"intended for use by untrusted clients and may be vulnerable to exploitation. "
"Always use within a secure environment."
msgstr ""

#: ../../library/http.server.rst:532
msgid "Security Considerations"
msgstr "セキュリティで考慮すべき点"

#: ../../library/http.server.rst:536
msgid ""
":class:`SimpleHTTPRequestHandler` will follow symbolic links when handling "
"requests, this makes it possible for files outside of the specified "
"directory to be served."
msgstr ""

#: ../../library/http.server.rst:540
msgid ""
"Earlier versions of Python did not scrub control characters from the log "
"messages emitted to stderr from ``python -m http.server`` or the default :"
"class:`BaseHTTPRequestHandler` ``.log_message`` implementation. This could "
"allow remote clients connecting to your server to send nefarious control "
"codes to your terminal."
msgstr ""

#: ../../library/http.server.rst:546
msgid "Control characters are scrubbed in stderr logs."
msgstr ""

#: ../../library/http.server.rst:9
msgid "WWW"
msgstr "WWW"

#: ../../library/http.server.rst:9
msgid "server"
msgstr "サーバ"

#: ../../library/http.server.rst:9
msgid "HTTP"
msgstr "HTTP"

#: ../../library/http.server.rst:9
msgid "protocol"
msgstr "プロトコル"

#: ../../library/http.server.rst:9
msgid "URL"
msgstr "URL"

#: ../../library/http.server.rst:9
msgid "httpd"
msgstr ""

#: ../../library/http.server.rst:534
msgid "http.server"
msgstr "http.server"

#: ../../library/http.server.rst:534
msgid "security"
msgstr "セキュリティ"
