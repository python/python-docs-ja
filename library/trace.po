# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2020
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:06+0000\n"
"PO-Revision-Date: 2020-05-30 12:12+0000\n"
"Last-Translator: tomo, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/trace.rst:2
msgid ":mod:`trace` --- Trace or track Python statement execution"
msgstr ":mod:`trace` --- Python 文実行のトレースと追跡"

#: ../../library/trace.rst:7
msgid "**Source code:** :source:`Lib/trace.py`"
msgstr "**ソースコード:** :source:`Lib/trace.py`"

#: ../../library/trace.rst:11
msgid ""
"The :mod:`trace` module allows you to trace program execution, generate "
"annotated statement coverage listings, print caller/callee relationships and "
"list functions executed during a program run.  It can be used in another "
"program or from the command line."
msgstr ""
":mod:`trace` モジュールにより、プログラム実行のトレース、 注釈された文のカバ"
"レッジの一覧の作成、呼び出し元/呼び出し先の関係の出力、プログラム実行中に実行"
"された関数の表の作成を行うことができます。\n"
"これは別のプログラム中やコマンドラインから利用することができます。"

#: ../../library/trace.rst:19
msgid "`Coverage.py <https://coverage.readthedocs.io/>`_"
msgstr "`Coverage.py <https://coverage.readthedocs.io/>`_"

#: ../../library/trace.rst:19
msgid ""
"A popular third-party coverage tool that provides HTML output along with "
"advanced features such as branch coverage."
msgstr ""
"サードパーティの人気なカバレッジツールで、 HTML 出力に加えて分岐カバレッジの"
"ような高度な機能も提供しています。"

#: ../../library/trace.rst:25
msgid "Command-Line Usage"
msgstr "コマンドラインからの使用"

#: ../../library/trace.rst:27
msgid ""
"The :mod:`trace` module can be invoked from the command line.  It can be as "
"simple as ::"
msgstr ""
":mod:`trace` モジュールはコマンドラインから起動することができます。これは次の"
"ように簡単です ::"

#: ../../library/trace.rst:32
msgid ""
"The above will execute :file:`somefile.py` and generate annotated listings "
"of all Python modules imported during the execution into the current "
"directory."
msgstr ""
"これで、 :file:`somefile.py` の実行中に import された Python モジュールの注釈"
"付きリストがカレントディレクトリに生成されます。"

#: ../../library/trace.rst:39
msgid "Display usage and exit."
msgstr "使い方を表示して終了します。"

#: ../../library/trace.rst:43
msgid "Display the version of the module and exit."
msgstr "モジュールのバージョンを表示して終了します。"

#: ../../library/trace.rst:45
msgid "Added ``--module`` option that allows to run an executable module."
msgstr ""
"実行可能なモジュールを走らせられる ``--module`` オプションが追加されました。"

#: ../../library/trace.rst:49
msgid "Main options"
msgstr "主要なオプション"

#: ../../library/trace.rst:51
msgid ""
"At least one of the following options must be specified when invoking :mod:"
"`trace`.  The :option:`--listfuncs <-l>` option is mutually exclusive with "
"the :option:`--trace <-t>` and :option:`--count <-c>` options. When :option:"
"`--listfuncs <-l>` is provided, neither :option:`--count <-c>` nor :option:"
"`--trace <-t>` are accepted, and vice versa."
msgstr ""
":mod:`trace` を実行するときには、以下のオプションの少なくとも 1 つを指定しな"
"ければいけません。 :option:`--listfuncs <-l>` オプションは、 :option:`--"
"trace <-t>` オプション、 :option:`--count <-c>` オプションと相互排他的で"
"す。 :option:`--listfuncs <-l>` が与えられたとき、 :option:`--trace <-t>` オ"
"プション、 :option:`--count <-c>` オプションの両方とも受け付けず、他の場合も"
"同様です。"

#: ../../library/trace.rst:61
msgid ""
"Produce a set of annotated listing files upon program completion that shows "
"how many times each statement was executed.  See also :option:`--coverdir <-"
"C>`, :option:`--file <-f>` and :option:`--no-report <-R>` below."
msgstr ""
"プログラム完了時に、それぞれの文が何回実行されたかを示す注釈付きリストのファ"
"イルを生成します。下記の :option:`--coverdir <-C>`, :option:`--file <-f>`, :"
"option:`--no-report <-R>` も参照してください。"

#: ../../library/trace.rst:68
msgid "Display lines as they are executed."
msgstr "実行された通りに行を表示します。"

#: ../../library/trace.rst:72
msgid "Display the functions executed by running the program."
msgstr "プログラム実行の際に実行された関数を表示します。"

#: ../../library/trace.rst:76
msgid ""
"Produce an annotated list from an earlier program run that used the :option:"
"`--count <-c>` and :option:`--file <-f>` option.  This does not execute any "
"code."
msgstr ""
":option:`--count <-c>` と :option:`--file <-f>` 引数を使った過去のプログラム"
"実行結果から、注釈付きリストのファイルを生成します。コードを実行するわけでは"
"ありません。"

#: ../../library/trace.rst:82
msgid "Display the calling relationships exposed by running the program."
msgstr "プログラム実行によって明らかになった呼び出しの関係を表示します。"

#: ../../library/trace.rst:85
msgid "Modifiers"
msgstr "修飾的オプション"

#: ../../library/trace.rst:91
msgid ""
"Name of a file to accumulate counts over several tracing runs.  Should be "
"used with the :option:`--count <-c>` option."
msgstr ""
"複数回にわたるトレース実行についてカウント (count) を累積するファイルに名前を"
"つけます。 :option:`--count <-c>` オプションと一緒に使って下さい。"

#: ../../library/trace.rst:96
msgid ""
"Directory where the report files go.  The coverage report for ``package."
"module`` is written to file :file:`{dir}/{package}/{module}.cover`."
msgstr ""
"レポートファイルを保存するディレクトリを指定します。 ``package.module`` につ"
"いてのカバレッジレポートは :file:`{dir}/{package}/{module}.cover` に書き込ま"
"れます。"

#: ../../library/trace.rst:101
msgid ""
"When generating annotated listings, mark lines which were not executed with "
"``>>>>>>``."
msgstr ""
"注釈付きリストの生成時に、実行されなかった行に ``>>>>>>`` の印を付けます。"

#: ../../library/trace.rst:106
msgid ""
"When using :option:`--count <-c>` or :option:`--report <-r>`, write a brief "
"summary to stdout for each file processed."
msgstr ""
":option:`--count <-c>` または :option:`--report <-r>` の利用時に、処理された"
"ファイルそれぞれの簡潔な概要を標準出力 (stdout) に書き出します。"

#: ../../library/trace.rst:111
msgid ""
"Do not generate annotated listings.  This is useful if you intend to make "
"several runs with :option:`--count <-c>`, and then produce a single set of "
"annotated listings at the end."
msgstr ""
"注釈付きリストを生成しません。これは :option:`--count <-c>` を何度か走らせて"
"から最後に単一の注釈付きリストを生成するような場合に便利です。"

#: ../../library/trace.rst:117
msgid ""
"Prefix each line with the time since the program started.  Only used while "
"tracing."
msgstr ""
"各行の先頭にプログラム開始からの時間を付けます。トレース中にだけ使われます。"

#: ../../library/trace.rst:121
msgid "Filters"
msgstr "フィルターオプション"

#: ../../library/trace.rst:123
msgid "These options may be repeated multiple times."
msgstr "これらのオプションは複数回指定できます。"

#: ../../library/trace.rst:129
msgid ""
"Ignore each of the given module names and its submodules (if it is a "
"package).  The argument can be a list of names separated by a comma."
msgstr ""
"指定されたモジュールと（パッケージだった場合は）そのサブモジュールを無視しま"
"す。引数はカンマ区切りのモジュール名リストです。"

#: ../../library/trace.rst:134
msgid ""
"Ignore all modules and packages in the named directory and subdirectories. "
"The argument can be a list of directories separated by :data:`os.pathsep`."
msgstr ""
"指定されたディレクトリとサブディレクトリ中のモジュールとパッケージを全て無視"
"します。引数は :data:`os.pathsep` で区切られたディレクトリのリストです。"

#: ../../library/trace.rst:140
msgid "Programmatic Interface"
msgstr "プログラミングインターフェース"

#: ../../library/trace.rst:145
msgid ""
"Create an object to trace execution of a single statement or expression.  "
"All parameters are optional.  *count* enables counting of line numbers.  "
"*trace* enables line execution tracing.  *countfuncs* enables listing of the "
"functions called during the run.  *countcallers* enables call relationship "
"tracking.  *ignoremods* is a list of modules or packages to ignore. "
"*ignoredirs* is a list of directories whose modules or packages should be "
"ignored.  *infile* is the name of the file from which to read stored count "
"information.  *outfile* is the name of the file in which to write updated "
"count information.  *timing* enables a timestamp relative to when tracing "
"was started to be displayed."
msgstr ""
"文 (statement) や式 (expression) の実行をトレースするオブジェクトを作成しま"
"す。引数は全てオプションです。*count* は行数を数えます。*trace* は行実行のト"
"レースを行います。*countfuncs* は実行中に呼ばれた関数を列挙します。"
"*countcallers* は呼び出しの関係を追跡します。*ignoremods* は無視するモジュー"
"ルやパッケージのリストです。*ignoredirs* は無視するパッケージやモジュールを含"
"むディレクトリのリストです。*infile* は保存された集計 (count) 情報を読むファ"
"イルの名前です。*outfile* は更新された集計 (count) 情報を書き出すファイルの名"
"前です。*timing* は、タイムスタンプをトレース開始時点からの相対秒数で表示しま"
"す。"

#: ../../library/trace.rst:158
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters.  *cmd* must be a string or code object, suitable "
"for passing into :func:`exec`."
msgstr ""
"コマンドを実行して、現在のトレースパラメータに基づいてその実行から統計情報を"
"集めます。 *cmd* は、 :func:`exec` に渡せるような文字列か code オブジェクトで"
"す。"

#: ../../library/trace.rst:164
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters, in the defined global and local environments.  "
"If not defined, *globals* and *locals* default to empty dictionaries."
msgstr ""
"指定された globals と locals 環境下で、コマンドを実行して、現在のトレースパラ"
"メータに基づいてその実行から統計情報を集めます。*cmd* は、:func:`exec` に渡せ"
"るような文字列か code オブジェクトです。定義しない場合、*globals* と "
"*locals* はデフォルトで空の辞書となります。"

#: ../../library/trace.rst:171
msgid ""
"Call *func* with the given arguments under control of the :class:`Trace` "
"object with the current tracing parameters."
msgstr ""
"与えられた引数の *func* を、 :class:`Trace` オブジェクトのコントロール下で現"
"在のトレースパラメタのもとに呼び出します。"

#: ../../library/trace.rst:176
msgid ""
"Return a :class:`CoverageResults` object that contains the cumulative "
"results of all previous calls to ``run``, ``runctx`` and ``runfunc`` for the "
"given :class:`Trace` instance.  Does not reset the accumulated trace results."
msgstr ""
"与えられた :class:`Trace` インスタンスの ``run``, ``runctx``, ``runfunc`` の"
"以前の呼び出しについて集計した結果を納めた :class:`CoverageResults` オブジェ"
"クトを返します。蓄積されたトレース結果はリセットしません。"

#: ../../library/trace.rst:183
msgid ""
"A container for coverage results, created by :meth:`Trace.results`.  Should "
"not be created directly by the user."
msgstr ""
"カバレッジ結果のコンテナで、 :meth:`Trace.results` で生成されるものです。ユー"
"ザーが直接生成するものではありません。"

#: ../../library/trace.rst:188
msgid "Merge in data from another :class:`CoverageResults` object."
msgstr "別の :class:`CoverageResults` オブジェクトのデータを統合します。"

#: ../../library/trace.rst:192
msgid ""
"Write coverage results.  Set *show_missing* to show lines that had no hits.  "
"Set *summary* to include in the output the coverage summary per module.  "
"*coverdir* specifies the directory into which the coverage result files will "
"be output.  If ``None``, the results for each source file are placed in its "
"directory."
msgstr ""
"カバレッジ結果を書き出します。ヒットしなかった行も出力するには "
"*show_missing* を指定します。モジュールごとの概要を出力に含めるには "
"*summary* を指定します。*coverdir* に指定するのは結果ファイルを出力するディレ"
"クトリです。``None`` の場合は各ソースファイルごとの結果がそれぞれのディレクト"
"リに置かれます。"

#: ../../library/trace.rst:198
msgid "A simple example demonstrating the use of the programmatic interface::"
msgstr "簡単な例でプログラミングインターフェースの使い方を見てみましょう::"
