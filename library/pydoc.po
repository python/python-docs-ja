# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pydoc.rst:2
msgid ":mod:`pydoc` --- Documentation generator and online help system"
msgstr ":mod:`pydoc` --- ドキュメント生成とオンラインヘルプシステム"

#: ../../library/pydoc.rst:17
msgid "**Source code:** :source:`Lib/pydoc.py`"
msgstr "**ソースコード:** :source:`Lib/pydoc.py`"

#: ../../library/pydoc.rst:21
msgid ""
"The :mod:`pydoc` module automatically generates documentation from Python "
"modules.  The documentation can be presented as pages of text on the "
"console, served to a Web browser, or saved to HTML files."
msgstr ""
":mod:`pydoc` モジュールは、Pythonモジュールから自動的にドキュメントを生成しま"
"す。生成されたドキュメントをテキスト形式でコンソールに表示したり、 Web ブラウ"
"ザにサーバとして提供したり、HTMLファイルとして保存したりできます。"

#: ../../library/pydoc.rst:25
msgid ""
"For modules, classes, functions and methods, the displayed documentation is "
"derived from the docstring (i.e. the :attr:`__doc__` attribute) of the "
"object, and recursively of its documentable members.  If there is no "
"docstring, :mod:`pydoc` tries to obtain a description from the block of "
"comment lines just above the definition of the class, function or method in "
"the source file, or at the top of the module (see :func:`inspect."
"getcomments`)."
msgstr ""
"モジュール, クラス, 関数,  メソッドについての表示されるドキュメンテーション"
"は、オブジェクトの docstring (つまり、 :attr:`__doc__` 属性)に基き、また、そ"
"れのドキュメント可能なメンバが再帰的に続きます。  docstring がない場合、 :"
"mod:`pydoc` は、クラス, 関数,  メソッドについてはその定義の直前の、モジュール"
"についてはファイル先頭の、ソースファイルのコメント行のブロックから記述を取得"
"しようと試みます(:func:`inspect.getcomments` を参照してください)。"

#: ../../library/pydoc.rst:32
msgid ""
"The built-in function :func:`help` invokes the online help system in the "
"interactive interpreter, which uses :mod:`pydoc` to generate its "
"documentation as text on the console.  The same text documentation can also "
"be viewed from outside the Python interpreter by running :program:`pydoc` as "
"a script at the operating system's command prompt. For example, running ::"
msgstr ""
"組み込み関数の :func:`help` を使うことで、対話型のインタプリタからオンライン"
"ヘルプを起動することができます。コンソール用のテキスト形式のドキュメントをつ"
"くるのにオンラインヘルプでは :mod:`pydoc` を使っています。 :program:`pydoc` "
"をPythonインタプリタからはなく、オペレーティングシステムのコマンドプロンプト"
"から起動した場合でも、同じテキスト形式のドキュメントを見ることができます。例"
"えば、以下の実行を ::"

#: ../../library/pydoc.rst:40
msgid ""
"at a shell prompt will display documentation on the :mod:`sys` module, in a "
"style similar to the manual pages shown by the Unix :program:`man` command.  "
"The argument to :program:`pydoc` can be the name of a function, module, or "
"package, or a dotted reference to a class, method, or function within a "
"module or module in a package.  If the argument to :program:`pydoc` looks "
"like a path (that is, it contains the path separator for your operating "
"system, such as a slash in Unix), and refers to an existing Python source "
"file, then documentation is produced for that file."
msgstr ""
"shellから行うと :mod:`sys` モジュールのドキュメントを、Unix の :program:"
"`man` コマンドのような形式で表示させることができます。 :program:`pydoc` の引"
"数として与えることができるのは、関数名・モジュール名・パッケージ名、また、モ"
"ジュールやパッケージ内のモジュールに含まれるクラス・メソッド・関数へのドット"
"\".\"形式での参照です。 :program:`pydoc` への引数がパスと解釈されるような場合"
"で(オペレーティングシステムのパス区切り記号を含む場合です。例えばUnixならば "
"\"/\"(スラッシュ)含む場合になります)、さらに、そのパスがPythonのソースファイ"
"ルを指しているなら、そのファイルに対するドキュメントが生成されます。"

#: ../../library/pydoc.rst:51
msgid ""
"In order to find objects and their documentation, :mod:`pydoc` imports the "
"module(s) to be documented.  Therefore, any code on module level will be "
"executed on that occasion.  Use an ``if __name__ == '__main__':`` guard to "
"only execute code when a file is invoked as a script and not just imported."
msgstr ""
"オブジェクトとそのドキュメントを探すために、 :mod:`pydoc` はドキュメント対象"
"のモジュールを import します。そのため、モジュールレベルのコードはそのときに"
"実行されます。 ``if __name__ == '__main__':`` ガードを使って、ファイルがスク"
"リプトとして実行したときのみコードを実行し、importされたときには実行されない"
"ようにして下さい。"

#: ../../library/pydoc.rst:56
msgid ""
"When printing output to the console, :program:`pydoc` attempts to paginate "
"the output for easier reading.  If the :envvar:`PAGER` environment variable "
"is set, :program:`pydoc` will use its value as a pagination program."
msgstr ""
"コンソールへの出力時には、 :program:`pydoc`  は読みやすさのために出力をページ"
"化しようと試みます。環境変数 :envvar:`PAGER` がセットされていれば  :program:"
"`pydoc` はその値で設定されたページ化プログラムを使います。"

#: ../../library/pydoc.rst:60
msgid ""
"Specifying a ``-w`` flag before the argument will cause HTML documentation "
"to be written out to a file in the current directory, instead of displaying "
"text on the console."
msgstr ""
"引数の前に ``-w`` フラグを指定すると、コンソールにテキストを表示させるかわり"
"にカレントディレクトリにHTMLドキュメントを生成します。"

#: ../../library/pydoc.rst:64
msgid ""
"Specifying a ``-k`` flag before the argument will search the synopsis lines "
"of all available modules for the keyword given as the argument, again in a "
"manner similar to the Unix :program:`man` command.  The synopsis line of a "
"module is the first line of its documentation string."
msgstr ""
"引数の前に ``-k`` フラグを指定すると、引数をキーワードとして利用可能な全ての"
"モジュールの概要を検索します。検索のやりかたは、Unixの :program:`man` コマン"
"ドと同様です。モジュールの概要というのは、モジュールのドキュメントの一行目の"
"ことです。"

#: ../../library/pydoc.rst:69
msgid ""
"You can also use :program:`pydoc` to start an HTTP server on the local "
"machine that will serve documentation to visiting Web browsers. :program:"
"`pydoc -p 1234` will start a HTTP server on port 1234, allowing you to "
"browse the documentation at ``http://localhost:1234/`` in your preferred Web "
"browser. :program:`pydoc -g` will start the server and additionally bring up "
"a small :mod:`Tkinter`\\ -based graphical interface to help you search for "
"documentation pages."
msgstr ""
"また、 :program:`pydoc` を使うことでローカルマシンにウェブブラウザから閲覧可"
"能なドキュメントを提供する HTTP サーバーを起動することもできます。 :program:"
"`pydoc -p 1234` とすると、HTTP サーバーをポート 1234 で起動します。これで、お"
"好きなウェブブラウザを使って ``http://localhost:1234/`` からドキュメントを見"
"ることができます。 :program:`pydoc -g` はサーバーを起動したうえで、検索用に小"
"さい :mod:`Tkinter` ベースの GUI を表示します。"

#: ../../library/pydoc.rst:77
msgid ""
"When :program:`pydoc` generates documentation, it uses the current "
"environment and path to locate modules.  Thus, invoking :program:`pydoc "
"spam` documents precisely the version of the module you would get if you "
"started the Python interpreter and typed ``import spam``."
msgstr ""
":program:`pydoc` でドキュメントを生成する場合、その時点での環境とパス情報に基"
"づいてモジュールがどこにあるのか決定されます。そのため、 :program:`pydoc "
"spam` を実行した場合につくられるドキュメントは、 Pythonインタプリタを起動し"
"て ``import spam`` と入力したときに読み込まれるモジュールに対するドキュメント"
"になります。"

#: ../../library/pydoc.rst:82
msgid ""
"Module docs for core modules are assumed to reside in https://docs.python."
"org/library/.  This can be overridden by setting the :envvar:`PYTHONDOCS` "
"environment variable to a different URL or to a local directory containing "
"the Library Reference Manual pages."
msgstr ""
"コアモジュールのドキュメントは https://docs.python.org/library/ にあると仮定"
"されています。これは、ライブラリリファレンスマニュアルを置いている異なる URL "
"かローカルディレクトリを環境変数 :envvar:`PYTHONDOCS` に設定することでオー"
"バーライドすることができます。"
