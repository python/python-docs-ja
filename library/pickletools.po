# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pickletools.rst:2
msgid ":mod:`pickletools` --- Tools for pickle developers"
msgstr ":mod:`pickletools` --- pickle 開発者のためのツール群"

#: ../../library/pickletools.rst:11
msgid "**Source code:** :source:`Lib/pickletools.py`"
msgstr "**ソースコード:** :source:`Lib/pickletools.py`"

#: ../../library/pickletools.rst:15
msgid ""
"This module contains various constants relating to the intimate details of "
"the :mod:`pickle` module, some lengthy comments about the implementation, "
"and a few useful functions for analyzing pickled data.  The contents of this "
"module are useful for Python core developers who are working on the :mod:"
"`pickle` and :mod:`cPickle` implementations; ordinary users of the :mod:"
"`pickle` module probably won't find the :mod:`pickletools` module relevant."
msgstr ""
"このモジュールには、 :mod:`pickle` モジュールの詳細に関わる様々な定数や実装に"
"関する長大なコメント、そして pickle 化されたデータを解析する上で有用な関数を"
"いくつか定義しています。このモジュールの内容は :mod:`pickle`, :mod:`cPickle` "
"の実装に関わっている Python コア開発者にとって有用なものです; 普通の :mod:"
"`pickle` 利用者にとっては、 :mod:`pickletools` モジュールはおそらく関係ないも"
"のでしょう。"

#: ../../library/pickletools.rst:25
msgid ""
"Outputs a symbolic disassembly of the pickle to the file-like object *out*, "
"defaulting to ``sys.stdout``.  *pickle* can be a string or a file-like "
"object. *memo* can be a Python dictionary that will be used as the pickle's "
"memo; it can be used to perform disassemblies across multiple pickles "
"created by the same pickler. Successive levels, indicated by ``MARK`` "
"opcodes in the stream, are indented by *indentlevel* spaces."
msgstr ""
"pickle の抽象的な逆アセンブリを file-like オブジェクト *out* (デフォルトは "
"``sys.stdout``) に出力します。*pickle* は文字列または file-like オブジェクト"
"です。 *memo* は Python の辞書で、 pickle のメモとして使われます; これは、 "
"pickle 処理を行う 1 つのオブジェクトが、複数の pickle にわたって逆アセンブル"
"を行うために使われます。ストリーム上の ``MARK`` 命令コードが示す後続のレベル"
"は、*indentlevel* 個の空白でインデントされます。"

#: ../../library/pickletools.rst:35
msgid ""
"Provides an :term:`iterator` over all of the opcodes in a pickle, returning "
"a sequence of ``(opcode, arg, pos)`` triples.  *opcode* is an instance of "
"an :class:`OpcodeInfo` class; *arg* is the decoded value, as a Python "
"object, of the opcode's argument; *pos* is the position at which this opcode "
"is located. *pickle* can be a string or a file-like object."
msgstr ""
"pickle 内の全ての opcode を取り出すイテレータ(:term:`iterator`)を返します。こ"
"のイテレータは ``(opcode, arg, pos)`` の三つ組みからなる配列を返します。 "
"*opcode* は :class:`OpcodeInfo` クラスのインスタンスのクラスです。 *arg* は "
"*opcode* の引数としてデコードされた Python オブジェクトの値です。 *pos* は "
"*opcode* の場所を表す値です。 *pickle* は文字列でもファイル類似オブジェクトで"
"もかまいません。"

#: ../../library/pickletools.rst:43
msgid ""
"Returns a new equivalent pickle string after eliminating unused ``PUT`` "
"opcodes. The optimized pickle is shorter, takes less transmission time, "
"requires less storage space, and unpickles more efficiently."
msgstr ""
"使われていない ``PUT`` 命令コードを除去した上で、その新しい pickle 文字列を返"
"します。最適化された pickle は、長さがより短く、転送時間がより少なく、必要と"
"するストレージ領域がより狭く、unpickle 化がより効率的になります。"
