# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr "組み込み例外"

#: ../../library/exceptions.rst:10
msgid ""
"In Python, all exceptions must be instances of a class that derives from :"
"class:`BaseException`.  In a :keyword:`try` statement with an :keyword:"
"`except` clause that mentions a particular class, that clause also handles "
"any exception classes derived from that class (but not exception classes "
"from which *it* is derived).  Two exception classes that are not related via "
"subclassing are never equivalent, even if they have the same name."
msgstr ""
"Python において、すべての例外は :class:`BaseException` から派生したクラスのイ"
"ンスタンスでなければなりません。特定のクラスを言及する :keyword:`except` 節を"
"伴う :keyword:`try` 文において、その節はそのクラスから派生した例外クラスも処"
"理しますが、そのクラスの派生 *元* の例外クラスは処理しません。サブクラス化の"
"関係にない 2 つの例外クラスは、それらが同じ名前だった場合でも等しくなりえませ"
"ん。"

#: ../../library/exceptions.rst:19
msgid ""
"The built-in exceptions listed below can be generated by the interpreter or "
"built-in functions.  Except where mentioned, they have an \"associated "
"value\" indicating the detailed cause of the error.  This may be a string or "
"a tuple of several items of information (e.g., an error code and a string "
"explaining the code).  The associated value is usually passed as arguments "
"to the exception class's constructor."
msgstr ""
"以下に挙げる組み込み例外は、インタプリタや組み込み関数によって生成されます。"
"特に注記しないかぎり、これらはエラーの詳しい原因を示す \"関連値 (associated "
"value)\" を持ちます。この値は、複数の情報 (エラーコードや、そのコードを説明す"
"る文字列など) の文字列かタプルです。関連値は通常、例外クラスのコンストラクタ"
"に引数として渡されます。"

#: ../../library/exceptions.rst:26
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"ユーザによるコードも組み込み例外を送出できます。これを使って、例外ハンドラを"
"テストしたり、インタプリタが同じ例外を送出する状況と \"ちょうど同じような\" "
"エラー条件であることを報告したりできます。しかし、ユーザのコードが適切でない"
"エラーを送出するのを妨げる方法はないので注意してください。"

#: ../../library/exceptions.rst:31
msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the :exc:"
"`Exception` class or one of its subclasses, and not from :exc:"
"`BaseException`.  More information on defining exceptions is available in "
"the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"組み込み例外クラスは新たな例外を定義するためにサブクラス化することができま"
"す。新しい例外は、:exc:`Exception` クラスかそのサブクラスの一つから派生するこ"
"とをお勧めします。 :exc:`BaseException` からは派生しないで下さい。例外を定義"
"する上での詳しい情報は、 Python チュートリアルの :ref:`tut-userexceptions` の"
"項目にあります。"

#: ../../library/exceptions.rst:39
msgid "Exception context"
msgstr "例外コンテキスト"

#: ../../library/exceptions.rst:41
msgid ""
"When raising a new exception while another exception is already being "
"handled, the new exception's :attr:`__context__` attribute is automatically "
"set to the handled exception.  An exception may be handled when an :keyword:"
"`except` or :keyword:`finally` clause, or a :keyword:`with` statement, is "
"used."
msgstr ""

#: ../../library/exceptions.rst:47
msgid ""
"This implicit exception context can be supplemented with an explicit cause "
"by using :keyword:`!from` with :keyword:`raise`::"
msgstr ""

#: ../../library/exceptions.rst:53
msgid ""
"The expression following :keyword:`from<raise>` must be an exception or "
"``None``. It will be set as :attr:`__cause__` on the raised exception. "
"Setting :attr:`__cause__` also implicitly sets the :attr:"
"`__suppress_context__` attribute to ``True``, so that using ``raise new_exc "
"from None`` effectively replaces the old exception with the new one for "
"display purposes (e.g. converting :exc:`KeyError` to :exc:`AttributeError`), "
"while leaving the old exception available in :attr:`__context__` for "
"introspection when debugging."
msgstr ""
":keyword:`from <raise>` に続く式は例外か ``None`` でなくてはなりません。\n"
"式は送出される例外の :attr:`__cause__` として設定されます。\n"
":attr:`__cause__` を設定することは、 :attr:`__suppress_context__` 属性を暗黙"
"的に ``True`` に設定することにもなるので、 ``raise new_exc from None`` を使う"
"ことで効率的に古い例外を新しいもので置き換えて表示する (例えば、 :exc:"
"`KeyError` を :exc:`AttributeError` に置き換え)、古い例外はデバッグ時の調査で"
"使えるよう :attr:`__context__` に残すことができます。"

#: ../../library/exceptions.rst:62
msgid ""
"The default traceback display code shows these chained exceptions in "
"addition to the traceback for the exception itself. An explicitly chained "
"exception in :attr:`__cause__` is always shown when present. An implicitly "
"chained exception in :attr:`__context__` is shown only if :attr:`__cause__` "
"is :const:`None` and :attr:`__suppress_context__` is false."
msgstr ""
"デフォルトの traceback 表示コードは、例外自体の traceback に加え、これらの連"
"鎖された例外を表示します。:attr:`__cause__` で明示的に連鎖させた例外は、存在"
"するならば常に表示されます。:attr:`__context__` で暗黙に連鎖させた例外は、:"
"attr:`__cause__` が :const:`None` かつ :attr:`__suppress_context__` が false "
"の場合にのみ表示されます。"

#: ../../library/exceptions.rst:68
msgid ""
"In either case, the exception itself is always shown after any chained "
"exceptions so that the final line of the traceback always shows the last "
"exception that was raised."
msgstr ""
"いずれにせよ、連鎖された例外に続いて、その例外自体は常に表示されます。そのた"
"め、traceback の最終行には、常に送出された最後の例外が表示されます。"

#: ../../library/exceptions.rst:74
msgid "Inheriting from built-in exceptions"
msgstr ""

#: ../../library/exceptions.rst:76
msgid ""
"User code can create subclasses that inherit from an exception type. It's "
"recommended to only subclass one exception type at a time to avoid any "
"possible conflicts between how the bases handle the ``args`` attribute, as "
"well as due to possible memory layout incompatibilities."
msgstr ""

#: ../../library/exceptions.rst:83
msgid ""
"Most built-in exceptions are implemented in C for efficiency, see: :source:"
"`Objects/exceptions.c`.  Some have custom memory layouts which makes it "
"impossible to create a subclass that inherits from multiple exception types. "
"The memory layout of a type is an implementation detail and might change "
"between Python versions, leading to new conflicts in the future.  Therefore, "
"it's recommended to avoid subclassing multiple exception types altogether."
msgstr ""

#: ../../library/exceptions.rst:93
msgid "Base classes"
msgstr "基底クラス"

#: ../../library/exceptions.rst:95
msgid ""
"The following exceptions are used mostly as base classes for other "
"exceptions."
msgstr "以下の例外は、主に他の例外の基底クラスとして使われます。"

#: ../../library/exceptions.rst:99
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If :"
"func:`str` is called on an instance of this class, the representation of the "
"argument(s) to the instance are returned, or the empty string when there "
"were no arguments."
msgstr ""
"全ての組み込み例外の基底クラスです。ユーザ定義の例外に直接継承されることは意"
"図されていません (継承には :exc:`Exception` を使ってください)。このクラスのイ"
"ンスタンスに :func:`str` が呼ばれた場合、インスタンスへの引数の表現か、引数が"
"無い場合には空文字列が返されます。"

#: ../../library/exceptions.rst:107
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`OSError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"例外コンストラクタに与えられた引数のタプルです。組み込み例外は普通、エラー"
"メッセージを与える一つの文字列だけを引数として呼ばれますが、中には (:exc:"
"`OSError` など) いくつかの引数を必要とし、このタプルの要素に特別な意味を込め"
"るものもあります。"

#: ../../library/exceptions.rst:114
msgid ""
"This method sets *tb* as the new traceback for the exception and returns the "
"exception object.  It was more commonly used before the exception chaining "
"features of :pep:`3134` became available.  The following example shows how "
"we can convert an instance of ``SomeException`` into an instance of "
"``OtherException`` while preserving the traceback.  Once raised, the current "
"frame is pushed onto the traceback of the ``OtherException``, as would have "
"happened to the traceback of the original ``SomeException`` had we allowed "
"it to propagate to the caller. ::"
msgstr ""

#: ../../library/exceptions.rst:132
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"システム終了以外の全ての組み込み例外はこのクラスから派生しています。全ての"
"ユーザ定義例外もこのクラスから派生させるべきです。"

#: ../../library/exceptions.rst:138
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."
msgstr ""
"算術上の様々なエラーに対して送出される組み込み例外 :exc:`OverflowError`, :"
"exc:`ZeroDivisionError`, :exc:`FloatingPointError` の基底クラスです。"

#: ../../library/exceptions.rst:145
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
":ref:`バッファ <bufferobjects>` に関連する操作が行えなかったときに送出されま"
"す。"

#: ../../library/exceptions.rst:151
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"マッピングまたはシーケンスで使われたキーやインデクスが無効な場合に送出される"
"例外 :exc:`IndexError` および :exc:`KeyError` の基底クラスです。 :func:"
"`codecs.lookup` によって直接送出されることもあります。"

#: ../../library/exceptions.rst:157
msgid "Concrete exceptions"
msgstr "具象例外"

#: ../../library/exceptions.rst:159
msgid "The following exceptions are the exceptions that are usually raised."
msgstr "以下の例外は、通常送出される例外です。"

#: ../../library/exceptions.rst:165
msgid "Raised when an :keyword:`assert` statement fails."
msgstr ":keyword:`assert` 文が失敗した場合に送出されます。"

#: ../../library/exceptions.rst:170
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"属性参照 (:ref:`attribute-references` を参照) や代入が失敗した場合に送出され"
"ます (オブジェクトが属性の参照や属性の代入をまったくサポートしていない場合に"
"は :exc:`TypeError` が送出されます)。"

#: ../../library/exceptions.rst:174
msgid ""
"The :attr:`name` and :attr:`obj` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the "
"attribute that was attempted to be accessed and the object that was accessed "
"for said attribute, respectively."
msgstr ""

#: ../../library/exceptions.rst:179
msgid "Added the :attr:`name` and :attr:`obj` attributes."
msgstr ""

#: ../../library/exceptions.rst:184
msgid ""
"Raised when the :func:`input` function hits an end-of-file condition (EOF) "
"without reading any data. (N.B.: the :meth:`io.IOBase.read` and :meth:`io."
"IOBase.readline` methods return an empty string when they hit EOF.)"
msgstr ""
":func:`input` が何もデータを読まずに end-of-file (EOF) に達した場合に送出され"
"ます。(注意:  :meth:`io.IOBase.read` と :meth:`io.IOBase.readline` メソッド"
"は、EOF に達すると空文字列を返します。)"

#: ../../library/exceptions.rst:191
msgid "Not currently used."
msgstr "現在は使われていません。"

#: ../../library/exceptions.rst:196
msgid ""
"Raised when a :term:`generator` or :term:`coroutine` is closed; see :meth:"
"`generator.close` and :meth:`coroutine.close`.  It directly inherits from :"
"exc:`BaseException` instead of :exc:`Exception` since it is technically not "
"an error."
msgstr ""
":term:`ジェネレータ <generator>` や :term:`コルーチン <coroutine>` が閉じられ"
"たときに送出されます。 :meth:`generator.close` と :meth:`coroutine.close` を"
"参照してください。この例外は厳密に言えばエラーではないので、 :exc:"
"`Exception` ではなく :exc:`BaseException` を直接継承しています。"

#: ../../library/exceptions.rst:204
msgid ""
"Raised when the :keyword:`import` statement has troubles trying to load a "
"module.  Also raised when the \"from list\" in ``from ... import`` has a "
"name that cannot be found."
msgstr ""
":keyword:`import` 文でモジュールをロードしようとして問題が発生すると送出され"
"ます。\n"
"``from ... import`` の中の\"from list\" (訳注：``...`` の部分)の名前が見つか"
"らないときにも送出されます。"

#: ../../library/exceptions.rst:208
msgid ""
"The :attr:`name` and :attr:`path` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the module "
"that was attempted to be imported and the path to any file which triggered "
"the exception, respectively."
msgstr ""
"コンストラクタのキーワード専用引数を使って :attr:`name` および :attr:`path` "
"属性を設定できます。設定された場合、インポートを試みられたモジュールの名前"
"と、例外を引き起こしたファイルへのパスとを、それぞれ表します。"

#: ../../library/exceptions.rst:213
msgid "Added the :attr:`name` and :attr:`path` attributes."
msgstr ":attr:`name` および :attr:`path` 属性が追加されました。"

#: ../../library/exceptions.rst:218
msgid ""
"A subclass of :exc:`ImportError` which is raised by :keyword:`import` when a "
"module could not be located.  It is also raised when ``None`` is found in :"
"data:`sys.modules`."
msgstr ""
":exc:`ImportError` のサブクラスで、:keyword:`import` 文でモジュールが見つから"
"ない場合に送出されます。また、 :data:`sys.modules` に ``None`` が含まれる場合"
"にも送出されます。"

#: ../../library/exceptions.rst:227
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not an "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"シーケンスの添字が範囲外の場合に送出されます。 (スライスのインデクスはシーケ"
"ンスの範囲に収まるように暗黙のうちに調整されます; インデクスが整数でない場"
"合、 :exc:`TypeError` が送出されます。)"

#: ../../library/exceptions.rst:236
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"マッピング (辞書) のキーが、既存のキーの集合内に見つからなかった場合に送出さ"
"れます。"

#: ../../library/exceptions.rst:243
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or :"
"kbd:`Delete`).  During execution, a check for interrupts is made regularly. "
"The exception inherits from :exc:`BaseException` so as to not be "
"accidentally caught by code that catches :exc:`Exception` and thus prevent "
"the interpreter from exiting."
msgstr ""
"ユーザが割り込みキー (通常は :kbd:`Control-C` または :kbd:`Delete`) を押した"
"場合に送出されます。実行中、割り込みは定期的に監視されます。:exc:`Exception` "
"を捕捉するコードに誤って捕捉されてインタプリタの終了が阻害されないように、こ"
"の例外は :exc:`BaseException` を継承しています。"

#: ../../library/exceptions.rst:251
msgid ""
"Catching a :exc:`KeyboardInterrupt` requires special consideration. Because "
"it can be raised at unpredictable points, it may, in some circumstances, "
"leave the running program in an inconsistent state. It is generally best to "
"allow :exc:`KeyboardInterrupt` to end the program as quickly as possible or "
"avoid raising it entirely. (See :ref:`handlers-and-exceptions`.)"
msgstr ""

#: ../../library/exceptions.rst:261
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's :c:func:"
"`malloc` function), the interpreter may not always be able to completely "
"recover from this situation; it nevertheless raises an exception so that a "
"stack traceback can be printed, in case a run-away program was the cause."
msgstr ""
"ある操作中にメモリが不足したが、その状況は (オブジェクトをいくつか消去するこ"
"とで) まだ復旧可能かもしれない場合に送出されます。この例外の関連値は、メモリ"
"不足になった (内部) 操作の種類を示す文字列です。下層のメモリ管理アーキテク"
"チャ (C の :c:func:`malloc` 関数) のために、インタプリタが現状から完璧に復旧"
"できるとはかぎらないので注意してください。それでも、プログラムの暴走が原因の"
"場合に備えて実行スタックのトレースバックを出力できるように、例外が送出されま"
"す。"

#: ../../library/exceptions.rst:272
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"ローカルまたはグローバルの名前が見つからなかった場合に送出されます。これは非"
"修飾の (訳注: ``spam.egg`` ではなく単に ``egg`` のような) 名前のみに適用され"
"ます。関連値は見つからなかった名前を含むエラーメッセージです。"

#: ../../library/exceptions.rst:276
msgid ""
"The :attr:`name` attribute can be set using a keyword-only argument to the "
"constructor. When set it represent the name of the variable that was "
"attempted to be accessed."
msgstr ""

#: ../../library/exceptions.rst:280
msgid "Added the :attr:`name` attribute."
msgstr ""

#: ../../library/exceptions.rst:286
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method, or while the class is being "
"developed to indicate that the real implementation still needs to be added."
msgstr ""
"この例外は :exc:`RuntimeError` から派生しています。ユーザ定義の基底クラスにお"
"いて、抽象メソッドが派生クラスでオーバライドされることを要求する場合にこの例"
"外を送出しなくてはなりません。またはクラスは実装中であり本来の実装を追加する"
"必要があることを示します。"

#: ../../library/exceptions.rst:293
msgid ""
"It should not be used to indicate that an operator or method is not meant to "
"be supported at all -- in that case either leave the operator / method "
"undefined or, if a subclass, set it to :data:`None`."
msgstr ""
"演算子やメソッドがサポートされていないことを示す目的でこの例外を使用するべき"
"ではありません。そのようなケースではオペレータやメソッドを未定義のままとする"
"か、サブクラスの場合は :data:`None` を設定してください。"

#: ../../library/exceptions.rst:299
msgid ""
"``NotImplementedError`` and ``NotImplemented`` are not interchangeable, even "
"though they have similar names and purposes.  See :data:`NotImplemented` for "
"details on when to use it."
msgstr ""
"``NotImplementedError`` と ``NotImplemented`` は、似たような名前と目的を持っ"
"ていますが、相互に変換できません。 利用する際には、 :data:`NotImplemented` を"
"参照してください。"

#: ../../library/exceptions.rst:308
msgid ""
"This exception is raised when a system function returns a system-related "
"error, including I/O failures such as \"file not found\" or \"disk "
"full\" (not for illegal argument types or other incidental errors)."
msgstr ""
"この例外はシステム関数がシステム関連のエラーを返した場合に送出されます。例え"
"ば \"file not found\" や \"disk full\" のような I/O の失敗が発生したときです "
"(引数の型が不正な場合や、他の偶発的なエラーは除きます)。"

#: ../../library/exceptions.rst:312
msgid ""
"The second form of the constructor sets the corresponding attributes, "
"described below.  The attributes default to :const:`None` if not specified.  "
"For backwards compatibility, if three arguments are passed, the :attr:"
"`~BaseException.args` attribute contains only a 2-tuple of the first two "
"constructor arguments."
msgstr ""
"コンストラクタの2番目の形式は下記の対応する属性を設定します。指定されなかった"
"場合属性はデフォルトで :const:`None` です。後方互換性のために、引数が3つ渡さ"
"れた場合、:attr:`~BaseException.args` 属性は最初の2つの要素のみからなるタプル"
"を持ちます。"

#: ../../library/exceptions.rst:318
msgid ""
"The constructor often actually returns a subclass of :exc:`OSError`, as "
"described in `OS exceptions`_ below.  The particular subclass depends on the "
"final :attr:`.errno` value.  This behaviour only occurs when constructing :"
"exc:`OSError` directly or via an alias, and is not inherited when "
"subclassing."
msgstr ""
"コンストラクタは実際には、 `OS exceptions`_ で述べられている :exc:`OSError` "
"のサブクラスを返すことがよくあります。特定のサブクラスは最終的な :attr:`."
"errno` 値によります。この挙動は :exc:`OSError` を直接またはエイリアスで構築"
"し、サブクラス化時に継承されなかった場合にのみ発生します。"

#: ../../library/exceptions.rst:326
msgid "A numeric error code from the C variable :c:data:`errno`."
msgstr "C 変数 :c:data:`errno` に由来する数値エラーコードです。"

#: ../../library/exceptions.rst:330
msgid ""
"Under Windows, this gives you the native Windows error code.  The :attr:`."
"errno` attribute is then an approximate translation, in POSIX terms, of that "
"native error code."
msgstr ""
"Windows において、ネイティブ Windows エラーコードを与えます。そして :attr:"
"`errno` 属性は POSIX でいうネイティブエラーコードへのおよその翻訳です。"

#: ../../library/exceptions.rst:334
msgid ""
"Under Windows, if the *winerror* constructor argument is an integer, the :"
"attr:`.errno` attribute is determined from the Windows error code, and the "
"*errno* argument is ignored.  On other platforms, the *winerror* argument is "
"ignored, and the :attr:`winerror` attribute does not exist."
msgstr ""
"Windows では、*winerror* コンストラクタ引数が整数の場合 :attr:`.errno` 属性"
"は Windows エラーコードから決定され、*errno* 引数は無視されます。他のプラット"
"フォームでは *winerror* 引数は無視され、 :attr:`winerror` 属性は存在しませ"
"ん。"

#: ../../library/exceptions.rst:342
msgid ""
"The corresponding error message, as provided by the operating system.  It is "
"formatted by the C functions :c:func:`perror` under POSIX, and :c:func:"
"`FormatMessage` under Windows."
msgstr ""
"OS が提供するような、対応するエラーメッセージです。\n"
"POSIX では :c:func:`perror` で、Windows では :c:func:`FormatMessage` で体裁化"
"されます。"

#: ../../library/exceptions.rst:350
msgid ""
"For exceptions that involve a file system path (such as :func:`open` or :"
"func:`os.unlink`), :attr:`filename` is the file name passed to the function. "
"For functions that involve two file system paths (such as :func:`os."
"rename`), :attr:`filename2` corresponds to the second file name passed to "
"the function."
msgstr ""
"ファイルシステムパスが1つ関与する例外 (例えば :func:`open` や :func:`os."
"unlink`) の場合、:attr:`filename` は関数に渡されたファイル名です。\n"
"ファイルシステムパスが2つ関与する関数 (例えば :func:`os.rename`) の場合、:"
"attr:`filename2` は関数に渡された2つ目のファイル名です。"

#: ../../library/exceptions.rst:357
msgid ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` and :exc:`mmap.error` have been merged into :exc:"
"`OSError`, and the constructor may return a subclass."
msgstr ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error`, :exc:`mmap.error` が :exc:`OSError` に統合されま"
"した。コンストラクタはサブクラスを返すかもしれません。"

#: ../../library/exceptions.rst:363
msgid ""
"The :attr:`filename` attribute is now the original file name passed to the "
"function, instead of the name encoded to or decoded from the :term:"
"`filesystem encoding and error handler`. Also, the *filename2* constructor "
"argument and attribute was added."
msgstr ""

#: ../../library/exceptions.rst:372
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for integers (which would rather raise :exc:"
"`MemoryError` than give up).  However, for historical reasons, OverflowError "
"is sometimes raised for integers that are outside a required range.   "
"Because of the lack of standardization of floating point exception handling "
"in C, most floating point operations are not checked."
msgstr ""
"算術演算の結果が表現できない大きな値になった場合に送出されます。これは整数で"
"は起こりません (むしろ :exc:`MemoryError` が送出されることになるでしょう)。し"
"かし、歴史的な理由のため、要求された範囲の外の整数に対して OverflowError が送"
"出されることがあります。C の浮動小数点演算の例外処理は標準化されていないの"
"で、ほとんどの浮動小数点演算もチェックされません。"

#: ../../library/exceptions.rst:382
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when the "
"interpreter detects that the maximum recursion depth (see :func:`sys."
"getrecursionlimit`) is exceeded."
msgstr ""
"この例外は :exc:`RuntimeError` を継承しています。インタープリタが最大再帰深"
"度 (:func:`sys.getrecursionlimit` を参照) の超過を検出すると送出されます。"

#: ../../library/exceptions.rst:386
msgid "Previously, a plain :exc:`RuntimeError` was raised."
msgstr "以前は :exc:`RuntimeError` をそのまま送出していました。"

#: ../../library/exceptions.rst:392
msgid ""
"This exception is raised when a weak reference proxy, created by the :func:"
"`weakref.proxy` function, is used to access an attribute of the referent "
"after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
":func:`weakref.proxy` によって生成された弱参照 (weak reference) プロキシを"
"使って、ガーベジコレクションによって回収された後の参照対象オブジェクトの属性"
"にアクセスした場合に送出されます。弱参照については :mod:`weakref` モジュール"
"を参照してください。"

#: ../../library/exceptions.rst:400
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went "
"wrong."
msgstr ""
"他のカテゴリに分類できないエラーが検出された場合に送出されます。関連値は、何"
"が問題だったのかをより詳細に示す文字列です。"

#: ../../library/exceptions.rst:407
msgid ""
"Raised by built-in function :func:`next` and an :term:`iterator`\\'s :meth:"
"`~iterator.__next__` method to signal that there are no further items "
"produced by the iterator."
msgstr ""
"組込み関数 :func:`next` と :term:`iterator` の :meth:`~iterator.__next__` メ"
"ソッドによって、そのイテレータが生成するアイテムがこれ以上ないことを伝えるた"
"めに送出されます。"

#: ../../library/exceptions.rst:411
msgid ""
"The exception object has a single attribute :attr:`value`, which is given as "
"an argument when constructing the exception, and defaults to :const:`None`."
msgstr ""
"この例外オブジェクトには一つの属性 :attr:`value` があり、例外を構成する際に引"
"数として与えられ、デフォルトは :const:`None` です。"

#: ../../library/exceptions.rst:415
msgid ""
"When a :term:`generator` or :term:`coroutine` function returns, a new :exc:"
"`StopIteration` instance is raised, and the value returned by the function "
"is used as the :attr:`value` parameter to the constructor of the exception."
msgstr ""
":term:`generator` や :term:`coroutine` 関数が返るとき、新しい :exc:"
"`StopIteration` インスタンスが送出されます。\n"
"関数の返り値は例外のコンストラクタの :attr:`value` 引数として使われます。"

#: ../../library/exceptions.rst:420
msgid ""
"If a generator code directly or indirectly raises :exc:`StopIteration`, it "
"is converted into a :exc:`RuntimeError` (retaining the :exc:`StopIteration` "
"as the new exception's cause)."
msgstr ""
"ジェネレータのコードが直接的あるいは間接的に :exc:`StopIteration` を送出する"
"場合は、 :exc:`RuntimeError` に変換されます (:exc:`StopIteration` は変換後の"
"例外の原因として保持されます)。"

#: ../../library/exceptions.rst:424
msgid ""
"Added ``value`` attribute and the ability for generator functions to use it "
"to return a value."
msgstr ""
"``value`` 属性とジェネレータ関数が値を返すためにそれを使う機能が追加されまし"
"た。"

#: ../../library/exceptions.rst:428
msgid ""
"Introduced the RuntimeError transformation via ``from __future__ import "
"generator_stop``, see :pep:`479`."
msgstr ""
"``from __future__ import generator_stop`` による RuntimeError への変換が導入"
"されました。 :pep:`479` を参照してください。"

#: ../../library/exceptions.rst:432
msgid ""
"Enable :pep:`479` for all code by default: a :exc:`StopIteration` error "
"raised in a generator is transformed into a :exc:`RuntimeError`."
msgstr ""
":pep:`479` が全てのコードでデフォルトで有効化されました: ジェネレータから送出"
"された :exc:`StopIteration` は :exc:`RuntimeError` に変換されます。"

#: ../../library/exceptions.rst:438
msgid ""
"Must be raised by :meth:`__anext__` method of an :term:`asynchronous "
"iterator` object to stop the iteration."
msgstr ""
"イテレーションを停止するために、 :term:`asynchronous iterator` オブジェクト"
"の :meth:`__anext__` メソッドによって返される必要があります。"

#: ../../library/exceptions.rst:445
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an :"
"keyword:`import` statement, in a call to the built-in functions :func:"
"`compile`, :func:`exec`, or :func:`eval`, or when reading the initial script "
"or standard input (also interactively)."
msgstr ""
"パーザが構文エラーに遭遇した場合に送出されます。この例外は :keyword:`import` "
"文、組み込み関数 :func:`compile`、:func:`exec` や :func:`eval` 、初期化スクリ"
"プトの読み込みや標準入力で (対話的な実行時にも) 起こる可能性があります。"

#: ../../library/exceptions.rst:451
msgid ""
"The :func:`str` of the exception instance returns only the error message. "
"Details is a tuple whose members are also available as separate attributes."
msgstr ""

#: ../../library/exceptions.rst:456
msgid "The name of the file the syntax error occurred in."
msgstr ""

#: ../../library/exceptions.rst:460
msgid ""
"Which line number in the file the error occurred in. This is 1-indexed: the "
"first line in the file has a ``lineno`` of 1."
msgstr ""

#: ../../library/exceptions.rst:465
msgid ""
"The column in the line where the error occurred. This is 1-indexed: the "
"first character in the line has an ``offset`` of 1."
msgstr ""

#: ../../library/exceptions.rst:470
msgid "The source code text involved in the error."
msgstr ""

#: ../../library/exceptions.rst:474
msgid ""
"Which line number in the file the error occurred ends in. This is 1-indexed: "
"the first line in the file has a ``lineno`` of 1."
msgstr ""

#: ../../library/exceptions.rst:479
msgid ""
"The column in the end line where the error occurred finishes. This is 1-"
"indexed: the first character in the line has an ``offset`` of 1."
msgstr ""

#: ../../library/exceptions.rst:482
msgid ""
"For errors in f-string fields, the message is prefixed by \"f-string: \" and "
"the offsets are offsets in a text constructed from the replacement "
"expression.  For example, compiling f'Bad {a b} field' results in this args "
"attribute: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, 5))."
msgstr ""

#: ../../library/exceptions.rst:487
msgid "Added the :attr:`end_lineno` and :attr:`end_offset` attributes."
msgstr ":attr:`end_lineno` および :attr:`end_offset` 属性が追加されました。"

#: ../../library/exceptions.rst:492
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"正しくないインデントに関する構文エラーの基底クラスです。これは :exc:"
"`SyntaxError` のサブクラスです。"

#: ../../library/exceptions.rst:498
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"タブとスペースを一貫しない方法でインデントに使っているときに送出されます。こ"
"れは :exc:`IndentationError` のサブクラスです。"

#: ../../library/exceptions.rst:504
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is "
"a string indicating what went wrong (in low-level terms)."
msgstr ""
"インタプリタが内部エラーを発見したが、状況は全ての望みを棄てさせるほど深刻で"
"はないと思われる場合に送出されます。関連値は (下位層で) どの動作が失敗したか"
"を示す文字列です。"

#: ../../library/exceptions.rst:508
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter (``sys."
"version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""
"使用中の Python インタプリタの作者または保守担当者にこのエラーを報告してくだ"
"さい。このとき、Python インタプリタのバージョン (``sys.version`` 。Python の"
"対話的セッションを開始した際にも出力されます)、正確なエラーメッセージ (例外の"
"関連値) を忘れずに報告してください。可能な場合にはエラーを引き起こしたプログ"
"ラムのソースコードも報告してください。"

#: ../../library/exceptions.rst:517
msgid ""
"This exception is raised by the :func:`sys.exit` function.  It inherits "
"from :exc:`BaseException` instead of :exc:`Exception` so that it is not "
"accidentally caught by code that catches :exc:`Exception`.  This allows the "
"exception to properly propagate up and cause the interpreter to exit.  When "
"it is not handled, the Python interpreter exits; no stack traceback is "
"printed.  The constructor accepts the same optional argument passed to :func:"
"`sys.exit`. If the value is an integer, it specifies the system exit status "
"(passed to C's :c:func:`exit` function); if it is ``None``, the exit status "
"is zero; if it has another type (such as a string), the object's value is "
"printed and the exit status is one."
msgstr ""
"この例外は :func:`sys.exit` 関数から送出されます。:exc:`Exception` をキャッチ"
"するコードに誤ってキャッチされないように、:exc:`Exception` ではなく :exc:"
"`BaseException` を継承しています。これにより例外は上の階層に適切に伝わり、イ"
"ンタープリタを終了させます。この例外が処理されなかった場合はスタックのトレー"
"スバックを表示せずに Python インタープリタは終了します。コンストラクタは :"
"func:`sys.exit` に渡されるオプション引数と同じものを受け取ります。値が整数の"
"場合、システムの終了ステータス (C 言語の :c:func:`exit` 関数に渡すもの)を指定"
"します。値が ``None`` の場合、終了ステータスは 0 です。それ以外の型の場合 (例"
"えば str)、 オブジェクトの値が表示され、終了ステータスは 1 です。"

#: ../../library/exceptions.rst:528
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
":func:`sys.exit` は、クリーンアップのための処理 (:keyword:`try` 文の :"
"keyword:`finally` 節) が実行されるようにするため、またデバッガが制御不能にな"
"るリスクを冒さずにスクリプトを実行できるようにするために例外に変換されます。"
"即座に終了することが真に強く必要であるとき (例えば、:func:`os.fork` を呼んだ"
"後の子プロセス内) には :func:`os._exit` 関数を使うことができます。"

#: ../../library/exceptions.rst:537
msgid ""
"The exit status or error message that is passed to the constructor. "
"(Defaults to ``None``.)"
msgstr ""
"コンストラクタに渡された終了ステータス又はエラーメッセージ。(デフォルトは "
"``None``)"

#: ../../library/exceptions.rst:543
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"組み込み演算または関数が適切でない型のオブジェクトに対して適用された際に送出"
"されます。関連値は型の不整合に関して詳細を述べた文字列です。"

#: ../../library/exceptions.rst:546
msgid ""
"This exception may be raised by user code to indicate that an attempted "
"operation on an object is not supported, and is not meant to be. If an "
"object is meant to support a given operation but has not yet provided an "
"implementation, :exc:`NotImplementedError` is the proper exception to raise."
msgstr ""
"この例外は、そのオブジェクトで実行しようとした操作がサポートされておらず、そ"
"の予定もない場合にユーザーコードから送出されるかもしれません。オブジェクトで"
"その操作をサポートするつもりだが、まだ実装を提供していないのであれば、送出す"
"る適切な例外は :exc:`NotImplementedError` です。"

#: ../../library/exceptions.rst:551
msgid ""
"Passing arguments of the wrong type (e.g. passing a :class:`list` when an :"
"class:`int` is expected) should result in a :exc:`TypeError`, but passing "
"arguments with the wrong value (e.g. a number outside expected boundaries) "
"should result in a :exc:`ValueError`."
msgstr ""
"誤った型の引数が渡された場合は (例えば、:class:`int` が期待されるのに、:"
"class:`list` が渡された) :exc:`TypeError` となるべきです。しかし、誤った値(例"
"えば、期待する範囲外の数)が引数として渡された場合は、 :exc:`ValueError` とな"
"るべきです。"

#: ../../library/exceptions.rst:558
msgid ""
"Raised when a reference is made to a local variable in a function or method, "
"but no value has been bound to that variable.  This is a subclass of :exc:"
"`NameError`."
msgstr ""
"関数やメソッド内のローカルな変数に対して参照を行ったが、その変数には値が代入"
"されていなかった場合に送出されます。 :exc:`NameError` のサブクラスです。"

#: ../../library/exceptions.rst:565
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Unicode に関するエンコードまたはデコードのエラーが発生した際に送出されま"
"す。 :exc:`ValueError` のサブクラスです。"

#: ../../library/exceptions.rst:568
msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` はエンコードまたはデコードのエラーの説明を属性として持っ"
"ています。例えば、 ``err.object[err.start:err.end]`` は、無効な入力のうちコー"
"デックが処理に失敗した箇所を表します。"

#: ../../library/exceptions.rst:574
msgid "The name of the encoding that raised the error."
msgstr "エラーを送出したエンコーディングの名前です。"

#: ../../library/exceptions.rst:578
msgid "A string describing the specific codec error."
msgstr "そのコーデックエラーを説明する文字列です。"

#: ../../library/exceptions.rst:582
msgid "The object the codec was attempting to encode or decode."
msgstr "コーデックがエンコードまたはデコードしようとしたオブジェクトです。"

#: ../../library/exceptions.rst:586
msgid "The first index of invalid data in :attr:`object`."
msgstr ":attr:`object` の最初の無効なデータのインデクスです。"

#: ../../library/exceptions.rst:590
msgid "The index after the last invalid data in :attr:`object`."
msgstr ":attr:`object` の最後の無効なデータの次のインデクスです。"

#: ../../library/exceptions.rst:595
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Unicode 関連のエラーがエンコード中に発生した際に送出されます。 :exc:"
"`UnicodeError` のサブクラスです。"

#: ../../library/exceptions.rst:601
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Unicode 関連のエラーがデコード中に発生した際に送出されます。 :exc:"
"`UnicodeError` のサブクラスです。"

#: ../../library/exceptions.rst:607
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Unicode 関連のエラーが変換中に発生した際に送出されます。 :exc:`UnicodeError` "
"のサブクラスです。"

#: ../../library/exceptions.rst:613
msgid ""
"Raised when an operation or function receives an argument that has the right "
"type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"演算子や関数が、正しい型だが適切でない値を持つ引数を受け取ったときや、 :exc:"
"`IndexError` のようなより詳細な例外では記述できない状況で送出されます。"

#: ../../library/exceptions.rst:620
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the "
"operation."
msgstr ""
"除算や剰余演算の第二引数が 0 であった場合に送出されます。関連値は文字列で、そ"
"の演算における被演算子と演算子の型を示します。"

#: ../../library/exceptions.rst:625
msgid ""
"The following exceptions are kept for compatibility with previous versions; "
"starting from Python 3.3, they are aliases of :exc:`OSError`."
msgstr ""
"以下の例外は、過去のバージョンとの後方互換性のために残されています; Python "
"3.3 より、これらは :exc:`OSError` のエイリアスです。"

#: ../../library/exceptions.rst:634
msgid "Only available on Windows."
msgstr "Windows でのみ利用できます。"

#: ../../library/exceptions.rst:638
msgid "OS exceptions"
msgstr "OS 例外"

#: ../../library/exceptions.rst:640
msgid ""
"The following exceptions are subclasses of :exc:`OSError`, they get raised "
"depending on the system error code."
msgstr ""
"以下の例外は :exc:`OSError` のサブクラスで、システムエラーコードに依存して送"
"出されます。"

#: ../../library/exceptions.rst:645
msgid ""
"Raised when an operation would block on an object (e.g. socket) set for non-"
"blocking operation. Corresponds to :c:data:`errno` :py:data:`~errno."
"EAGAIN`, :py:data:`~errno.EALREADY`, :py:data:`~errno.EWOULDBLOCK` and :py:"
"data:`~errno.EINPROGRESS`."
msgstr ""
"ある操作が、ノンブロッキング操作に設定されたオブジェクト (例えばソケット) を"
"ブロックしそうになった場合に送出されます。:c:data:`errno`  :py:data:`~errno."
"EAGAIN`, :py:data:`~errno.EALREADY`, :py:data:`~errno.EWOULDBLOCK` および :"
"py:data:`~errno.EINPROGRESS` に対応します。"

#: ../../library/exceptions.rst:650
msgid ""
"In addition to those of :exc:`OSError`, :exc:`BlockingIOError` can have one "
"more attribute:"
msgstr ""
":exc:`BlockingIOError` は、 :exc:`OSError` の属性に加えて一つの属性を持ちま"
"す:"

#: ../../library/exceptions.rst:655
msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked.  This attribute is available when using the buffered I/O classes "
"from the :mod:`io` module."
msgstr ""
"ストリームがブロックされるまでに書き込まれた文字数を含む整数です。この属性"
"は :mod:`io` からのバッファ I/O クラスを使っているときに利用できます。"

#: ../../library/exceptions.rst:661
msgid ""
"Raised when an operation on a child process failed. Corresponds to :c:data:"
"`errno` :py:data:`~errno.ECHILD`."
msgstr ""
"子プロセスの操作が失敗した場合に送出されます。:c:data:`errno` :py:data:"
"`~errno.ECHILD` に対応します。"

#: ../../library/exceptions.rst:666
msgid "A base class for connection-related issues."
msgstr "コネクション関係の問題の基底クラス。"

#: ../../library/exceptions.rst:668
msgid ""
"Subclasses are :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :exc:"
"`ConnectionRefusedError` and :exc:`ConnectionResetError`."
msgstr ""
"サブクラスは :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :exc:"
"`ConnectionRefusedError`, :exc:`ConnectionResetError` です。"

#: ../../library/exceptions.rst:673
msgid ""
"A subclass of :exc:`ConnectionError`, raised when trying to write on a pipe "
"while the other end has been closed, or trying to write on a socket which "
"has been shutdown for writing. Corresponds to :c:data:`errno` :py:data:"
"`~errno.EPIPE` and :py:data:`~errno.ESHUTDOWN`."
msgstr ""
":exc:`ConnectionError` のサブクラスで、もう一方の端が閉じられたパイプに書き込"
"こもうとするか、書き込みのためにシャットダウンされたソケットに書き込こもうと"
"した場合に発生します。 :c:data:`errno`  :py:data:`~errno.EPIPE` と :py:data:"
"`~errno.ESHUTDOWN` に対応します。"

#: ../../library/exceptions.rst:680
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"aborted by the peer. Corresponds to :c:data:`errno` :py:data:`~errno."
"ECONNABORTED`."
msgstr ""
":exc:`ConnectionError` のサブクラスで、接続の試行が通信相手によって中断された"
"場合に発生します。 :c:data:`errno` :py:data:`~errno.ECONNABORTED` に対応しま"
"す。"

#: ../../library/exceptions.rst:686
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"refused by the peer. Corresponds to :c:data:`errno` :py:data:`~errno."
"ECONNREFUSED`."
msgstr ""
":exc:`ConnectionError` のサブクラスで、接続の試行が通信相手によって拒否された"
"場合に発生します。 :c:data:`errno` :py:data:`~errno.ECONNREFUSED` に対応しま"
"す。"

#: ../../library/exceptions.rst:692
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection is reset by "
"the peer. Corresponds to :c:data:`errno` :py:data:`~errno.ECONNRESET`."
msgstr ""
":exc:`ConnectionError` のサブクラスで、接続が通信相手によってリセットされた場"
"合に発生します。 :c:data:`errno` :py:data:`~errno.ECONNRESET` に対応します。"

#: ../../library/exceptions.rst:698
msgid ""
"Raised when trying to create a file or directory which already exists. "
"Corresponds to :c:data:`errno` :py:data:`~errno.EEXIST`."
msgstr ""
"すでに存在するファイルやディレクトリを作成しようとした場合に送出されます。:c:"
"data:`errno` :py:data:`~errno.EEXIST` に対応します。"

#: ../../library/exceptions.rst:703
msgid ""
"Raised when a file or directory is requested but doesn't exist. Corresponds "
"to :c:data:`errno` :py:data:`~errno.ENOENT`."
msgstr ""
"要求されたファイルやディレクトリが存在しない場合に送出されます。:c:data:"
"`errno` :py:data:`~errno.ENOENT` に対応します。"

#: ../../library/exceptions.rst:708
msgid ""
"Raised when a system call is interrupted by an incoming signal. Corresponds "
"to :c:data:`errno` :py:data:`~errno.EINTR`."
msgstr ""
"システムコールが入力信号によって中断された場合に送出されます。:c:data:"
"`errno` :py:data:`~errno.EINTR` に対応します。"

#: ../../library/exceptions.rst:711
msgid ""
"Python now retries system calls when a syscall is interrupted by a signal, "
"except if the signal handler raises an exception (see :pep:`475` for the "
"rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"シグナルハンドラが例外を送出せず、システムコールが信号で中断された場合\n"
"Python は :exc:`InterruptedError` を送出する代わりにシステムコールを再試行す"
"るようになりました (論拠については :pep:`475` を参照してください) 。"

#: ../../library/exceptions.rst:718
msgid ""
"Raised when a file operation (such as :func:`os.remove`) is requested on a "
"directory. Corresponds to :c:data:`errno` :py:data:`~errno.EISDIR`."
msgstr ""
"ディレクトリに (:func:`os.remove` などの) ファイル操作が要求された場合に送出"
"されます。:c:data:`errno` :py:data:`~errno.EISDIR` に対応します。"

#: ../../library/exceptions.rst:724
msgid ""
"Raised when a directory operation (such as :func:`os.listdir`) is requested "
"on something which is not a directory.  On most POSIX platforms, it may also "
"be raised if an operation attempts to open or traverse a non-directory file "
"as if it were a directory. Corresponds to :c:data:`errno` :py:data:`~errno."
"ENOTDIR`."
msgstr ""

#: ../../library/exceptions.rst:732
msgid ""
"Raised when trying to run an operation without the adequate access rights - "
"for example filesystem permissions. Corresponds to :c:data:`errno` :py:data:"
"`~errno.EACCES` and :py:data:`~errno.EPERM`."
msgstr ""

#: ../../library/exceptions.rst:738
msgid ""
"Raised when a given process doesn't exist. Corresponds to :c:data:`errno` :"
"py:data:`~errno.ESRCH`."
msgstr ""
"与えられたプロセスが存在しない場合に送出されます。:c:data:`errno` :py:data:"
"`~errno.ESRCH` に対応します。"

#: ../../library/exceptions.rst:743
msgid ""
"Raised when a system function timed out at the system level. Corresponds to :"
"c:data:`errno` :py:data:`~errno.ETIMEDOUT`."
msgstr ""
"システム関数がシステムレベルでタイムアウトした場合に送出されます。:c:data:"
"`errno` :py:data:`~errno.ETIMEDOUT` に対応します。"

#: ../../library/exceptions.rst:746
msgid "All the above :exc:`OSError` subclasses were added."
msgstr "上記のすべての :exc:`OSError` サブクラスが追加されました。"

#: ../../library/exceptions.rst:752
msgid ":pep:`3151` - Reworking the OS and IO exception hierarchy"
msgstr ":pep:`3151` - OS および IO 例外階層の手直し"

#: ../../library/exceptions.rst:758
msgid "Warnings"
msgstr "警告"

#: ../../library/exceptions.rst:760
msgid ""
"The following exceptions are used as warning categories; see the :ref:"
"`warning-categories` documentation for more details."
msgstr ""
"次の例外は警告カテゴリとして使われます。詳細については :ref:`warning-"
"categories` のドキュメントを参照してください。"

#: ../../library/exceptions.rst:765
msgid "Base class for warning categories."
msgstr "警告カテゴリの基底クラスです。"

#: ../../library/exceptions.rst:770
msgid "Base class for warnings generated by user code."
msgstr "ユーザコードによって生成される警告の基底クラスです。"

#: ../../library/exceptions.rst:775
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for other Python developers."
msgstr ""
"他の Python 開発者へ向けて警告を発するときの、廃止予定の機能についての警告の"
"基底クラスです。"

#: ../../library/exceptions.rst:778
msgid ""
"Ignored by the default warning filters, except in the ``__main__`` module (:"
"pep:`565`). Enabling the :ref:`Python Development Mode <devmode>` shows this "
"warning."
msgstr ""

#: ../../library/exceptions.rst:782 ../../library/exceptions.rst:798
msgid "The deprecation policy is described in :pep:`387`."
msgstr ""

#: ../../library/exceptions.rst:787
msgid ""
"Base class for warnings about features which are obsolete and expected to be "
"deprecated in the future, but are not deprecated at the moment."
msgstr ""
"古くなって将来的に廃止される予定だが、今のところは廃止されていない機能につい"
"ての警告の基底クラスです。"

#: ../../library/exceptions.rst:791
msgid ""
"This class is rarely used as emitting a warning about a possible upcoming "
"deprecation is unusual, and :exc:`DeprecationWarning` is preferred for "
"already active deprecations."
msgstr ""
"近々起こる可能性のある機能廃止について警告を発することはまれなので、このクラ"
"スはめったに使われず、既に決まっている廃止については :exc:"
"`DeprecationWarning` が望ましいです。"

#: ../../library/exceptions.rst:795 ../../library/exceptions.rst:821
#: ../../library/exceptions.rst:848
msgid ""
"Ignored by the default warning filters. Enabling the :ref:`Python "
"Development Mode <devmode>` shows this warning."
msgstr ""

#: ../../library/exceptions.rst:803
msgid "Base class for warnings about dubious syntax."
msgstr "曖昧な構文に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:808
msgid "Base class for warnings about dubious runtime behavior."
msgstr "あいまいなランタイム挙動に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:813
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Python で書かれたアプリケーションのエンドユーザーへ向けて警告を発するときの、"
"廃止予定の機能についての警告の基底クラスです。"

#: ../../library/exceptions.rst:819
msgid "Base class for warnings about probable mistakes in module imports."
msgstr "モジュールインポートの誤りと思われるものに対する警告の基底クラスです。"

#: ../../library/exceptions.rst:827
msgid "Base class for warnings related to Unicode."
msgstr "Unicode に関連した警告の基底クラスです。"

#: ../../library/exceptions.rst:832
msgid "Base class for warnings related to encodings."
msgstr "エンコーディングに関連した警告の基底クラスです。"

#: ../../library/exceptions.rst:834
msgid "See :ref:`io-encoding-warning` for details."
msgstr ""

#: ../../library/exceptions.rst:841
msgid ""
"Base class for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ":class:`bytes` や :class:`bytearray` に関連した警告の基底クラスです。"

#: ../../library/exceptions.rst:846
msgid "Base class for warnings related to resource usage."
msgstr "リソースの使用に関連した警告の基底クラスです。"

#: ../../library/exceptions.rst:856
msgid "Exception hierarchy"
msgstr "例外のクラス階層"

#: ../../library/exceptions.rst:858
msgid "The class hierarchy for built-in exceptions is:"
msgstr "組み込み例外のクラス階層は以下のとおりです:"
