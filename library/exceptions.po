# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr "組み込み例外"

#: ../../library/exceptions.rst:10
msgid ""
"Exceptions should be class objects.   The exceptions are defined in the "
"module :mod:`exceptions`.  This module never needs to be imported "
"explicitly: the exceptions are provided in the built-in namespace as well as "
"the :mod:`exceptions` module."
msgstr ""
"例外はクラスオブジェクトです。例外はモジュール :mod:`exceptions` で定義されて"
"います。このモジュールを明示的にインポートする必要はありません。例外は :mod:"
"`exceptions` モジュールと同様に組み込み名前空間で与えられます。"

#: ../../library/exceptions.rst:19
msgid ""
"For class exceptions, in a :keyword:`try` statement with an :keyword:"
"`except` clause that mentions a particular class, that clause also handles "
"any exception classes derived from that class (but not exception classes "
"from which *it* is derived).  Two exception classes that are not related via "
"subclassing are never equivalent, even if they have the same name."
msgstr ""
":keyword:`try` 文の中で、 :keyword:`except` 節を使って特定の例外クラスについ"
"て記述した場合、その節は指定した例外クラスから派生したクラスも扱います (指定"
"した例外クラスの派生元のクラスは含みません)。サブクラス化の関係にない 2 つの"
"例外クラスは、それらが同じ名前だったとしても等しくなることはありません。"

#: ../../library/exceptions.rst:27
msgid ""
"The built-in exceptions listed below can be generated by the interpreter or "
"built-in functions.  Except where mentioned, they have an \"associated "
"value\" indicating the detailed cause of the error.  This may be a string or "
"a tuple containing several items of information (e.g., an error code and a "
"string explaining the code). The associated value is the second argument to "
"the :keyword:`raise` statement.  If the exception class is derived from the "
"standard root class :exc:`BaseException`, the associated value is present as "
"the exception instance's :attr:`args` attribute."
msgstr ""
"以下に列挙した組み込み例外はインタプリタや組み込み関数によって生成されます。"
"特に注記しないかぎり、これらの例外はエラーの詳しい原因を示している、 \"関連"
"値 (associated value)\" を持ちます。この値は文字列または複数の情報 (例えばエ"
"ラーコードや、エラーコードを説明する文字列) を含むタプルです。この関連値は :"
"keyword:`raise` 文の 2 番目の引数です。例外が標準のルートクラスである :exc:"
"`BaseException` の派生クラスであれば、関連値は例外インスタンスの :attr:"
"`args` 属性中に置かれます。"

#: ../../library/exceptions.rst:36
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"ユーザによるコードも組み込み例外を送出できます。これを使って、例外ハンドラを"
"テストしたり、インタプリタが同じ例外を送出する状況と \"ちょうど同じような\" "
"エラー条件であることを報告したりできます。しかし、ユーザのコードが適切でない"
"エラーを送出するのを妨げる方法はないので注意してください。"

#: ../../library/exceptions.rst:41
msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the :exc:"
"`Exception` class or one of its subclasses, and not from :exc:"
"`BaseException`.  More information on defining exceptions is available in "
"the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"組み込み例外クラスは新たな例外を定義するためにサブクラス化することができま"
"す。新しい例外は、:exc:`Exception` クラスかそのサブクラスの一つから派生するこ"
"とをお勧めします。 :exc:`BaseException` からは派生しないで下さい。例外を定義"
"する上での詳しい情報は、 Python チュートリアルの :ref:`tut-userexceptions` の"
"項目にあります。"

#: ../../library/exceptions.rst:47
msgid ""
"The following exceptions are only used as base classes for other exceptions."
msgstr "以下の例外クラスは他の例外クラスの基底クラスとしてのみ使われます。"

#: ../../library/exceptions.rst:51
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If :"
"func:`str` or :func:`unicode` is called on an instance of this class, the "
"representation of the argument(s) to the instance are returned, or the empty "
"string when there were no arguments."
msgstr ""
"全ての組み込み例外のルートクラスです。ユーザ定義例外が直接このクラスを継承す"
"ることは意図していません (そうした場合は :exc:`Exception` を使ってください)。"
"このクラスに対して :func:`str` や :func:`unicode` が呼ばれた場合、引数の文字"
"列表現か、引数が無い時には空文字列が返されます。"

#: ../../library/exceptions.rst:61
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`IOError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"例外コンストラクタに与えられた引数のタプルです。組み込み例外は普通、エラー"
"メッセージを与える一つの文字列だけを引数として呼ばれますが、中には (:exc:"
"`IOError` など) いくつかの引数を必要とし、このタプルの要素に特別な意味を込め"
"るものもあります。"

#: ../../library/exceptions.rst:69
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"システム終了以外の全ての組み込み例外はこのクラスから導出されています。全ての"
"ユーザ定義例外もこのクラスの派生クラスであるべきです。"

#: ../../library/exceptions.rst:72 ../../library/exceptions.rst:167
#: ../../library/exceptions.rst:214 ../../library/exceptions.rst:365
msgid "Changed to inherit from :exc:`BaseException`."
msgstr ":exc:`BaseException` を継承するように変更されました."

#: ../../library/exceptions.rst:78
msgid ""
"The base class for all built-in exceptions except :exc:`StopIteration`, :exc:"
"`GeneratorExit`, :exc:`KeyboardInterrupt` and :exc:`SystemExit`. :exc:"
"`StandardError` itself is derived from :exc:`Exception`."
msgstr ""
":exc:`StopIteration`, :exc:`SystemExit`, :exc:`KeyboardInterrupt`, :exc:"
"`SystemExit` 以外の、全ての組み込み例外の基底クラスです。 :exc:"
"`StandardError` 自体は :exc:`Exception` の派生クラスです。"

#: ../../library/exceptions.rst:85
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."
msgstr ""
"算術上の様々なエラーに対して送出される組み込み例外 :exc:`OverflowError`, :"
"exc:`ZeroDivisionError`, :exc:`FloatingPointError` の基底クラスです。"

#: ../../library/exceptions.rst:92
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
"バッファ (:ref:`buffer <bufferobjects>`) に関連する演算が行えなかったときに送"
"出されます。"

#: ../../library/exceptions.rst:98
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"マッピングまたはシーケンスで使われたキーやインデクスが無効な場合に送出される"
"例外 :exc:`IndexError` および :exc:`KeyError` の基底クラスです。 :func:"
"`codecs.lookup` によって直接送出されることもあります。"

#: ../../library/exceptions.rst:105
msgid ""
"The base class for exceptions that can occur outside the Python system: :exc:"
"`IOError`, :exc:`OSError`.  When exceptions of this type are created with a "
"2-tuple, the first item is available on the instance's :attr:`errno` "
"attribute (it is assumed to be an error number), and the second item is "
"available on the :attr:`strerror` attribute (it is usually the associated "
"error message).  The tuple itself is also available on the :attr:`args` "
"attribute."
msgstr ""
"Python システムの外部で起こる可能性のある例外 :exc:`IOError` および :exc:"
"`OSError` の基底クラスです。この型の例外が 2 つの要素を持つタプルで生成された"
"場合、 1 番目の要素はインスタンスの :attr:`errno` 属性で得ることができます "
"(この値はエラー番号と見なされます)。 2 番目の要素は :attr:`strerror` 属性で"
"す (この値は通常、エラーに関連するメッセージです)。タプル自体は :attr:`args` "
"属性から得ることもできます。"

#: ../../library/exceptions.rst:114
msgid ""
"When an :exc:`EnvironmentError` exception is instantiated with a 3-tuple, "
"the first two items are available as above, while the third item is "
"available on the :attr:`filename` attribute.  However, for backwards "
"compatibility, the :attr:`args` attribute contains only a 2-tuple of the "
"first two constructor arguments."
msgstr ""
":exc:`EnvironmentError` 例外が 3 要素のタプルで生成された場合、最初の 2 つの"
"要素は上記と同様に値を得ることができ、さらに 3 番目の要素は :attr:`filename` "
"属性で得ることができます。しかしながら、以前のバージョンとの互換性のため"
"に、 :attr:`args` 属性にはコンストラクタに渡した最初の 2 つの引数からなる 2 "
"要素のタプルしか含みません。"

#: ../../library/exceptions.rst:120
msgid ""
"The :attr:`filename` attribute is ``None`` when this exception is created "
"with other than 3 arguments.  The :attr:`errno` and :attr:`strerror` "
"attributes are also ``None`` when the instance was created with other than 2 "
"or 3 arguments. In this last case, :attr:`args` contains the verbatim "
"constructor arguments as a tuple."
msgstr ""
"この例外が 3 つ以外の引数で生成された場合、 :attr:`filename` 属性は ``None`` "
"になります。この例外が 2 つまたは 3 つ以外の引数で生成された場合、 :attr:"
"`errno` および :attr:`strerror` 属性も ``None`` になります。後者のケースで"
"は、 :attr:`args` がコンストラクタに与えた引数をそのままタプルの形で含んでい"
"ます。"

#: ../../library/exceptions.rst:126
msgid "The following exceptions are the exceptions that are actually raised."
msgstr "以下の例外は実際に送出される例外です。"

#: ../../library/exceptions.rst:133
msgid "Raised when an :keyword:`assert` statement fails."
msgstr ":keyword:`assert` 文が失敗した場合に送出されます。"

#: ../../library/exceptions.rst:138
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"属性参照 (:ref:`attribute-references` を参照) や代入が失敗した場合に送出され"
"ます (オブジェクトが属性の参照や属性の代入をまったくサポートしていない場合に"
"は :exc:`TypeError` が送出されます)。"

#: ../../library/exceptions.rst:145
msgid ""
"Raised when one of the built-in functions (:func:`input` or :func:"
"`raw_input`) hits an end-of-file condition (EOF) without reading any data. "
"(N.B.: the :meth:`file.read` and :meth:`file.readline` methods return an "
"empty string when they hit EOF.)"
msgstr ""
"組み込み関数 (:func:`input` または :func:`raw_input`) のいずれかで、データを"
"全く読まないうちにファイルの終端 (EOF) に到達した場合に送出されます (注意: :"
"meth:`file.read` および :meth:`file.readline` メソッドの場合、データを読まな"
"いうちに EOF にたどり着くと空の文字列を返します)。"

#: ../../library/exceptions.rst:153
msgid ""
"Raised when a floating point operation fails.  This exception is always "
"defined, but can only be raised when Python is configured with the ``--with-"
"fpectl`` option, or the :const:`WANT_SIGFPE_HANDLER` symbol is defined in "
"the :file:`pyconfig.h` file."
msgstr ""
"浮動小数点演算が失敗した場合に送出されます。この例外は Python のどのバージョ"
"ンでも常に定義されていますが、 Python が ``--with-fpectl`` オプションを有効に"
"してコンパイルされているか、 :file:`pyconfig.h` ファイルにシンボル :const:"
"`WANT_SIGFPE_HANDLER` が定義されている場合にのみ送出されます。"

#: ../../library/exceptions.rst:161
msgid ""
"Raised when a :term:`generator`\\'s :meth:`close` method is called.  It "
"directly inherits from :exc:`BaseException` instead of :exc:`StandardError` "
"since it is technically not an error."
msgstr ""
"ジェネレータ (:term:`generator`) の :meth:`close` メソッドが呼び出されたとき"
"に送出されます。この例外は厳密にはエラーではないので、 :exc:`StandardError` "
"ではなく :exc:`BaseException` を直接継承しています。"

#: ../../library/exceptions.rst:172
msgid ""
"Raised when an I/O operation (such as a :keyword:`print` statement, the "
"built-in :func:`open` function or a method of a file object) fails for an I/"
"O-related reason, e.g., \"file not found\" or \"disk full\"."
msgstr ""
"(:keyword:`print` 文、組み込みの :func:`open` またはファイルオブジェクトに対"
"するメソッドといった) I/O 操作が、例えば \"ファイルが存在しません\" や \"ディ"
"スクの空き領域がありません\" といった I/O に関連した理由で失敗した場合に送出"
"されます。"

#: ../../library/exceptions.rst:176
msgid ""
"This class is derived from :exc:`EnvironmentError`.  See the discussion "
"above for more information on exception instance attributes."
msgstr ""
"このクラスは :exc:`EnvironmentError` の派生クラスです。この例外クラスのインス"
"タンス属性に関する情報は上記の :exc:`EnvironmentError` に関する議論を参照して"
"ください。"

#: ../../library/exceptions.rst:179
msgid "Changed :exc:`socket.error` to use this as a base class."
msgstr ""
":exc:`socket.error` は、この例外を基底クラスとして使うように変更されました。"

#: ../../library/exceptions.rst:185
msgid ""
"Raised when an :keyword:`import` statement fails to find the module "
"definition or when a ``from ... import`` fails to find a name that is to be "
"imported."
msgstr ""
":keyword:`import` 文でモジュール定義を見つけられなかった場合や、 ``from ... "
"import`` 文で指定した名前をインポートすることができなかった場合に送出されま"
"す。"

#: ../../library/exceptions.rst:191
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not a plain "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"シーケンスのインデックス指定がシーケンスの範囲を超えている場合に送出されま"
"す　(スライスのインデックスはシーケンスの範囲に収まるように暗黙のうちに調整さ"
"れます; インデックスが通常の整数でない場合、 :exc:`TypeError` が送出されま"
"す)。"

#: ../../library/exceptions.rst:200
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"マッピング (辞書) のキーが、存在するキーの集合内に見つからなかった場合に送出"
"されます。"

#: ../../library/exceptions.rst:207
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or :"
"kbd:`Delete`).  During execution, a check for interrupts is made regularly. "
"Interrupts typed when a built-in function :func:`input` or :func:`raw_input` "
"is waiting for input also raise this exception. The exception inherits from :"
"exc:`BaseException` so as to not be accidentally caught by code that "
"catches :exc:`Exception` and thus prevent the interpreter from exiting."
msgstr ""
"ユーザが割り込みキー (通常は :kbd:`Control-C` または :kbd:`Delete` キー) を押"
"した場合に送出されます。割り込みが起きたかどうかはインタプリタの実行中に定期"
"的に調べられます。組み込み関数 :func:`input` や :func:`raw_input` がユーザの"
"入力を待っている間に割り込みキーを押してもこの例外が送出されます。この例外"
"は :exc:`Exception` を処理するコードに誤って捕捉されてインタプリタの終了が阻"
"害されないように :exc:`BaseException` を継承しています。"

#: ../../library/exceptions.rst:220
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's :c:func:"
"`malloc` function), the interpreter may not always be able to completely "
"recover from this situation; it nevertheless raises an exception so that a "
"stack traceback can be printed, in case a run-away program was the cause."
msgstr ""
"ある操作中にメモリが不足したが、その状況は (オブジェクトをいくつか消去するこ"
"とで) まだ復旧可能かもしれない場合に送出されます。例外の関連値は、どんな種類"
"の (内部) 操作がメモリ不足になっているかを示す文字列です。背後にあるメモリ管"
"理アーキテクチャ (C の :c:func:`malloc` 関数) のために、インタプリタが状況を"
"完璧に復旧できるとはかぎらないので注意してください; プログラムの暴走が原因の"
"場合にも、やはり実行スタックの追跡結果を出力できるようにするために例外が送出"
"されます。"

#: ../../library/exceptions.rst:231
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"ローカルまたはグローバルの名前が見つからなかった場合に送出されます。これは非"
"限定の名前のみに適用されます。関連値は見つからなかった名前を含むエラーメッ"
"セージです。"

#: ../../library/exceptions.rst:238
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method."
msgstr ""
"この例外は :exc:`RuntimeError` から派生しています。ユーザ定義の基底クラスにお"
"いて、抽象メソッドが派生クラスでオーバライドされることを要求する場合、この例"
"外を送出しなくてはなりません。"

#: ../../library/exceptions.rst:249
msgid ""
"This exception is derived from :exc:`EnvironmentError`.  It is raised when a "
"function returns a system-related error (not for illegal argument types or "
"other incidental errors).  The :attr:`errno` attribute is a numeric error "
"code from :c:data:`errno`, and the :attr:`strerror` attribute is the "
"corresponding string, as would be printed by the C function :c:func:"
"`perror`. See the module :mod:`errno`, which contains names for the error "
"codes defined by the underlying operating system."
msgstr ""
"このクラスは :exc:`EnvironmentError` から派生しています。関数がシステムに関連"
"したエラーを返した場合に送出されます (引数の型が間違っている場合や、他の偶発"
"的なエラーは除きます)。 :attr:`errno` 属性は :c:data:`errno` に基づく数字のエ"
"ラーコードで、 :attr:`strerror` 属性は C の :c:func:`perror` 関数で表示される"
"ような文字列です。オペレーティングシステムに依存したエラーコードの定義と名前"
"については、 :mod:`errno` モジュールを参照して下さい。"

#: ../../library/exceptions.rst:257
msgid ""
"For exceptions that involve a file system path (such as :func:`chdir` or :"
"func:`unlink`), the exception instance will contain a third attribute, :attr:"
"`filename`, which is the file name passed to the function."
msgstr ""
"ファイルシステムのパスに関係する例外 (:func:`chdir` や :func:`unlink` など) "
"では、例外インスタンスは 3 番目の属性 :attr:`filename` を持ちます。これは関数"
"に渡されたファイル名です。"

#: ../../library/exceptions.rst:266
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for long integers (which would rather raise :"
"exc:`MemoryError` than give up) and for most operations with plain integers, "
"which return a long integer instead.  Because of the lack of standardization "
"of floating point exception handling in C, most floating point operations "
"also aren't checked."
msgstr ""
"算術演算の結果が表現できない大きな値になった場合に送出されます。これは long "
"integer の演算と通常の整数に関するほとんどの操作では起こりません (long "
"integer の演算ではむしろ :exc:`MemoryError` が送出されることになるでしょう)。"
"整数に関するほとんどの操作では、代わりに long integer が返されます。 C の浮動"
"小数点演算の例外処理は標準化されていないので、ほとんどの浮動小数点演算も"
"チェックされません。"

#: ../../library/exceptions.rst:276
msgid ""
"This exception is raised when a weak reference proxy, created by the :func:"
"`weakref.proxy` function, is used to access an attribute of the referent "
"after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
":func:`weakref.proxy` によって生成された弱参照 (weak reference) プロキシを"
"使って、ガーベジコレクションによって回収された後の参照対象オブジェクトの属性"
"にアクセスした場合に送出されます。弱参照については :mod:`weakref` モジュール"
"を参照してください。"

#: ../../library/exceptions.rst:281
msgid "Previously known as the :exc:`weakref.ReferenceError` exception."
msgstr "以前は :exc:`weakref.ReferenceError` 例外として知られていました。"

#: ../../library/exceptions.rst:287
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went "
"wrong."
msgstr ""
"他のカテゴリに分類できないエラーが検出された場合に送出されます。関連値は、何"
"が問題だったのかをより詳細に示す文字列です。"

#: ../../library/exceptions.rst:294
msgid ""
"Raised by an :term:`iterator`\\'s :meth:`~iterator.next` method to signal "
"that there are no further values.  This is derived from :exc:`Exception` "
"rather than :exc:`StandardError`, since this is not considered an error in "
"its normal application."
msgstr ""
"イテレータ (:term:`iterator`) の :meth:`~iterator.next` メソッドにより、それ"
"以上要素がないことを知らせるために送出されます。この例外は、通常の利用方法で"
"はエラーとはみなされないため、 :exc:`StandardError` ではなく :exc:"
"`Exception` から派生しています。"

#: ../../library/exceptions.rst:304
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an :"
"keyword:`import` statement, in an :keyword:`exec` statement, in a call to "
"the built-in function :func:`eval` or :func:`input`, or when reading the "
"initial script or standard input (also interactively)."
msgstr ""
"パーザが構文エラーに遭遇した場合に送出されます。この例外は :keyword:`import` "
"文、 :keyword:`exec` 文、組み込み関数 :func:`evel` や :func:`input` 、初期化"
"スクリプトの読み込みや標準入力で (対話的な実行時にも) 起こる可能性がありま"
"す。"

#: ../../library/exceptions.rst:309
msgid ""
"Instances of this class have attributes :attr:`filename`, :attr:`lineno`, :"
"attr:`offset` and :attr:`text` for easier access to the details.  :func:"
"`str` of the exception instance returns only the message."
msgstr ""
"このクラスのインスタンスは、例外の詳細に簡単にアクセスできるようにするため"
"に、属性 :attr:`filename`, :attr:`lineno`, :attr:`offset`, :attr:`text` を持"
"ちます。例外インスタンスに対する :func:`str` はメッセージのみを返します。"

#: ../../library/exceptions.rst:316
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"正しくないインデントに関する構文エラーの基底クラスです。これは :exc:"
"`SyntaxError` のサブクラスです。"

#: ../../library/exceptions.rst:322
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"タブとスペースを一貫しない方法でインデントに使っているときに送出されます。こ"
"れは :exc:`IndentationError` のサブクラスです。"

#: ../../library/exceptions.rst:328
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is "
"a string indicating what went wrong (in low-level terms)."
msgstr ""
"インタプリタが内部エラーを発見したが、その状況は全ての望みを棄てさせるほど深"
"刻ではないように思われる場合に送出されます。関連値は (下位層の言葉で) 何がま"
"ずいのかを示す文字列です。"

#: ../../library/exceptions.rst:332
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter (``sys."
"version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""
"Python の作者か、あなたの Python インタプリタを保守している人にこのエラーを報"
"告してください。このとき、 Python インタプリタのバージョン (``sys.version``; "
"Python の対話的セッションを開始した際にも出力されます)、正確なエラーメッセー"
"ジ (例外の関連値) を忘れずに報告してください。そしてもし可能ならエラーを引き"
"起こしたプログラムのソースコードを報告してください。"

#: ../../library/exceptions.rst:341
msgid ""
"This exception is raised by the :func:`sys.exit` function.  When it is not "
"handled, the Python interpreter exits; no stack traceback is printed.  If "
"the associated value is a plain integer, it specifies the system exit status "
"(passed to C's :c:func:`exit` function); if it is ``None``, the exit status "
"is zero; if it has another type (such as a string), the object's value is "
"printed and the exit status is one."
msgstr ""
"この例外は :func:`sys.exit` 関数によって送出されます。この例外が処理されな"
"かった場合、スタックのトレースバックを全く表示することなく Python インタプリ"
"タは終了します。関連値が通常の整数であれば、システム終了ステータスを表します "
"(:c:func:`exit` 関数に渡されます)。値が ``None`` の場合、終了ステータスは 0 "
"です。 (文字列のような) 他の型の場合、そのオブジェクトの値が表示され、終了ス"
"テータスは 1 になります。"

#: ../../library/exceptions.rst:348
msgid ""
"Instances have an attribute :attr:`!code` which is set to the proposed exit "
"status or error message (defaulting to ``None``). Also, this exception "
"derives directly from :exc:`BaseException` and not :exc:`StandardError`, "
"since it is not technically an error."
msgstr ""
"この例外のインスタンスは属性 :attr:`!code` を持ちます。この値は終了ステータス"
"またはエラーメッセージ (標準では ``None``) に設定されます。また、この例外は厳"
"密にはエラーではないため、 :exc:`StandardError` ではなく :exc:"
"`BaseException` から派生しています。"

#: ../../library/exceptions.rst:353
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
":func:`sys.exit` は、クリーンアップのための処理 (:keyword:`try` 文の :"
"keyword:`finally` 節) が実行されるようにするため、またデバッガが制御不能にな"
"るリスクを冒さずにスクリプトを実行できるようにするために例外に翻訳されます。"
"即座に終了することが真に強く必要であるとき (例えば、 :func:`os.fork` を呼んだ"
"後の子プロセス内) には :func:`os._exit` 関数を使うことができます。"

#: ../../library/exceptions.rst:360
msgid ""
"The exception inherits from :exc:`BaseException` instead of :exc:"
"`StandardError` or :exc:`Exception` so that it is not accidentally caught by "
"code that catches :exc:`Exception`.  This allows the exception to properly "
"propagate up and cause the interpreter to exit."
msgstr ""
"この例外は :exc:`Exception` を捕まえるコードに間違って捕まえられないよう"
"に、 :exc:`StandardError` や :exc:`Exception` からではなく :exc:"
"`BaseException` を継承しています。これにより、この例外は着実に呼出し元の方に"
"伝わっていってインタプリタを終了させます。"

#: ../../library/exceptions.rst:371
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"組み込み演算または関数が適切でない型のオブジェクトに対して適用された際に送出"
"されます。関連値は型の不整合に関して詳細を述べた文字列です。"

#: ../../library/exceptions.rst:377
msgid ""
"Raised when a reference is made to a local variable in a function or method, "
"but no value has been bound to that variable.  This is a subclass of :exc:"
"`NameError`."
msgstr ""
"関数やメソッド内のローカルな変数に対して参照を行ったが、その変数には値が代入"
"されていなかった場合に送出されます。 :exc:`NameError` のサブクラスです。"

#: ../../library/exceptions.rst:386
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Unicode に関するエンコードまたはデコードのエラーが発生した際に送出されま"
"す。 :exc:`ValueError` のサブクラスです。"

#: ../../library/exceptions.rst:389
msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` はエンコードまたはデコードのエラーの説明を属性として持っ"
"ています。例えば、 ``err.object[err.start:err.end]`` は、無効な入力のうちコー"
"デックが処理に失敗した箇所を表します。"

#: ../../library/exceptions.rst:395
msgid "The name of the encoding that raised the error."
msgstr "エラーを送出したエンコーディングの名前です。"

#: ../../library/exceptions.rst:399
msgid "A string describing the specific codec error."
msgstr "そのコーデックエラーを説明する文字列です。"

#: ../../library/exceptions.rst:403
msgid "The object the codec was attempting to encode or decode."
msgstr "コーデックがエンコードまたはデコードしようとしたオブジェクトです。"

#: ../../library/exceptions.rst:407
msgid "The first index of invalid data in :attr:`object`."
msgstr ":attr:`object` の最初の無効なデータのインデクスです。"

#: ../../library/exceptions.rst:411
msgid "The index after the last invalid data in :attr:`object`."
msgstr ":attr:`object` の最後の無効なデータの次のインデクスです。"

#: ../../library/exceptions.rst:418
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Unicode 関連のエラーがエンコード中に発生した際に送出されます。 :exc:"
"`UnicodeError` のサブクラスです。"

#: ../../library/exceptions.rst:426
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Unicode 関連のエラーがデコード中に発生した際に送出されます。 :exc:"
"`UnicodeError` のサブクラスです。"

#: ../../library/exceptions.rst:434
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Unicode 関連のエラーがコード翻訳に発生した際に送出されます。 :exc:"
"`UnicodeError` のサブクラスです。"

#: ../../library/exceptions.rst:442
msgid ""
"Raised when an operation or function receives an argument that has the right "
"type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"演算子や関数が、正しい型だが適切でない値を持つ引数を受け取ったときや、 :exc:"
"`IndexError` のようなより詳細な例外では記述できない状況で送出されます。"

#: ../../library/exceptions.rst:449
msgid "Only available on VMS.  Raised when a VMS-specific error occurs."
msgstr ""
"VMS においてのみ利用可能です。 VMS 特有のエラーが起こったときに送出されます。"

#: ../../library/exceptions.rst:454
msgid ""
"Raised when a Windows-specific error occurs or when the error number does "
"not correspond to an :c:data:`errno` value.  The :attr:`winerror` and :attr:"
"`strerror` values are created from the return values of the :c:func:"
"`GetLastError` and :c:func:`FormatMessage` functions from the Windows "
"Platform API. The :attr:`errno` value maps the :attr:`winerror` value to "
"corresponding ``errno.h`` values. This is a subclass of :exc:`OSError`."
msgstr ""
"Windows 特有のエラーか、エラー番号が :c:data:`errno` 値に対応しない場合に送出"
"されます。 :attr:`winerrno` および :attr:`strerror` の値は Windows プラット"
"フォーム API の関数 :c:func:`GetLastError` と :c:func:`FormatMessage` の戻り"
"値から生成されます。 :attr:`errno` の値は :attr:`winerror` の値を対応する "
"``errno.h`` の値にマップしたものです。 :exc:`OSError` のサブクラスです。"

#: ../../library/exceptions.rst:463
msgid ""
"Previous versions put the :c:func:`GetLastError` codes into :attr:`errno`."
msgstr ""
"以前のバージョンは :c:func:`GetLastError` のコードを :attr:`errno` に入れてい"
"ました。"

#: ../../library/exceptions.rst:469
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the "
"operation."
msgstr ""
"除算やモジュロ演算の第二引数が 0 であった場合に送出されます。関連値は文字列"
"で、その演算における被演算子と演算子の型を示します。"

#: ../../library/exceptions.rst:473
msgid ""
"The following exceptions are used as warning categories; see the :mod:"
"`warnings` module for more information."
msgstr ""
"以下の例外は警告カテゴリとして使われます。詳細については :mod:`warnings` モ"
"ジュールを参照してください。"

#: ../../library/exceptions.rst:479
msgid "Base class for warning categories."
msgstr "警告カテゴリの基底クラスです。"

#: ../../library/exceptions.rst:484
msgid "Base class for warnings generated by user code."
msgstr "ユーザコードによって生成される警告の基底クラスです。"

#: ../../library/exceptions.rst:489
msgid "Base class for warnings about deprecated features."
msgstr "廃止された機能に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:494
msgid ""
"Base class for warnings about features which will be deprecated in the "
"future."
msgstr "将来廃止される予定の機能に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:499
msgid "Base class for warnings about dubious syntax."
msgstr "曖昧な構文に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:504
msgid "Base class for warnings about dubious runtime behavior."
msgstr "あいまいなランタイム挙動に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:509
msgid ""
"Base class for warnings about constructs that will change semantically in "
"the future."
msgstr ""
"将来意味構成が変わることになっている文の構成に対する警告の基底クラスです。"

#: ../../library/exceptions.rst:515
msgid "Base class for warnings about probable mistakes in module imports."
msgstr "モジュールインポートの誤りと思われるものに対する警告の基底クラスです。"

#: ../../library/exceptions.rst:522
msgid "Base class for warnings related to Unicode."
msgstr "Unicode に関連した警告の基底クラスです。"

#: ../../library/exceptions.rst:529
msgid "Base class for warnings related to bytes and bytearray."
msgstr ""

#: ../../library/exceptions.rst:535
msgid "Exception hierarchy"
msgstr "例外のクラス階層"

#: ../../library/exceptions.rst:537
msgid "The class hierarchy for built-in exceptions is:"
msgstr "組み込み例外のクラス階層は以下のとおりです:"
