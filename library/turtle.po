# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2020
# Takanori Suzuki <takanori@takanory.net>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-30 16:20+0000\n"
"PO-Revision-Date: 2020-05-30 12:12+0000\n"
"Last-Translator: Takanori Suzuki <takanori@takanory.net>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/turtle.rst:3
msgid ":mod:`turtle` --- Turtle graphics"
msgstr ":mod:`turtle` --- タートルグラフィックス"

#: ../../library/turtle.rst:10
msgid "**Source code:** :source:`Lib/turtle.py`"
msgstr "**ソースコード:** :source:`Lib/turtle.py`"

#: ../../library/turtle.rst:20
msgid "Introduction"
msgstr "はじめに"

#: ../../library/turtle.rst:22
msgid ""
"Turtle graphics is a popular way for introducing programming to kids.  It "
"was part of the original Logo programming language developed by Wally "
"Feurzeig, Seymour Papert and Cynthia Solomon in 1967."
msgstr ""
"タートルグラフィックスは子供向けのプログラミングに入門でよく用いられます。\n"
"タートルグラフィックスは Wally Feurzeig, Seymour Papert, Cynthia Solomon が "
"1967に開発したオリジナルの Logo プログラミング言語の一部分です。"

#: ../../library/turtle.rst:26
msgid ""
"Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an "
"``import turtle``, give it the command ``turtle.forward(15)``, and it moves "
"(on-screen!) 15 pixels in the direction it is facing, drawing a line as it "
"moves.  Give it the command ``turtle.right(25)``, and it rotates in-place 25 "
"degrees clockwise."
msgstr ""
"x-y 平面の (0, 0) から動き出すロボット亀を想像してみて下さい。 ``turtle."
"forward(15)`` という命令を出すと、その亀が (スクリーン上で!) 15 ピクセル分顔"
"を向けている方向に動き、動きに沿って線を引きます。 ``turtle.left(25)`` という"
"命令を出すと、今度はその場で25度反時計回りに回ります。"

#: ../../library/turtle.rst:33
msgid ""
"Turtle can draw intricate shapes using programs that repeat simple moves."
msgstr ""

#: ../../library/turtle.rst:41
msgid ""
"By combining together these and similar commands, intricate shapes and "
"pictures can easily be drawn."
msgstr ""
"これらの命令と他の同様な命令を組み合わせることで、複雑な形や絵が簡単に描けま"
"す。"

#: ../../library/turtle.rst:44
msgid ""
"The :mod:`turtle` module is an extended reimplementation of the same-named "
"module from the Python standard distribution up to version Python 2.5."
msgstr ""
":mod:`turtle` モジュールは同じ名前を持った Python 2.5 までのモジュールの拡張"
"された再実装です。"

#: ../../library/turtle.rst:47
msgid ""
"It tries to keep the merits of the old turtle module and to be (nearly) 100% "
"compatible with it.  This means in the first place to enable the learning "
"programmer to use all the commands, classes and methods interactively when "
"using the module from within IDLE run with the ``-n`` switch."
msgstr ""
"再実装に際しては古い turtle モジュールのメリットをそのままに、 (ほぼ) 100% 互"
"換性を保つようにしました。すなわち、まず第一に、学習中のプログラマがモジュー"
"ルを ``-n`` スイッチを付けて走らせている IDLE の中から全てのコマンド、クラ"
"ス、メソッドを対話的に使えるようにしました。"

#: ../../library/turtle.rst:52
msgid ""
"The turtle module provides turtle graphics primitives, in both object-"
"oriented and procedure-oriented ways.  Because it uses :mod:`tkinter` for "
"the underlying graphics, it needs a version of Python installed with Tk "
"support."
msgstr ""
"turtle モジュールはオブジェクト指向と手続き指向の両方の方法でタートルグラ"
"フィックス・プリミティブを提供します。グラフィックスの基礎として :mod:"
"`tkinter` を使っているために、Tk をサポートした Python のバージョンが必要で"
"す。"

#: ../../library/turtle.rst:56
msgid "The object-oriented interface uses essentially two+two classes:"
msgstr "オブジェクト指向インターフェイスでは、本質的に 2+2 のクラスを使います:"

#: ../../library/turtle.rst:58
msgid ""
"The :class:`TurtleScreen` class defines graphics windows as a playground for "
"the drawing turtles.  Its constructor needs a :class:`tkinter.Canvas` or a :"
"class:`ScrolledCanvas` as argument.  It should be used when :mod:`turtle` is "
"used as part of some application."
msgstr ""
":class:`TurtleScreen` クラスはタートルが絵を描きながら走り回る画面を定義しま"
"す。そのコンストラクタには :class:`tkinter.Canvas` または :class:"
"`ScrolledCanvas` を渡す必要があります。 :mod:`turtle` をアプリケーションの一"
"部として用いたい場合にはこれを使うべきです。"

#: ../../library/turtle.rst:63
msgid ""
"The function :func:`Screen` returns a singleton object of a :class:"
"`TurtleScreen` subclass. This function should be used when :mod:`turtle` is "
"used as a standalone tool for doing graphics. As a singleton object, "
"inheriting from its class is not possible."
msgstr ""
":func:`Screen` 関数は :class:`TurtleScreen` のサブクラスのシングルトンオブ"
"ジェクトを返します。 :mod:`turtle` をグラフィクスを使う一つの独立したツールと"
"して使う場合には、この関数を呼び出すべきです。シングルトンなので、そのクラス"
"からの継承はできません。"

#: ../../library/turtle.rst:68
msgid ""
"All methods of TurtleScreen/Screen also exist as functions, i.e. as part of "
"the procedure-oriented interface."
msgstr ""
"TurtleScreen/Screen の全てのメソッドは関数としても、すなわち、手続き指向イン"
"ターフェイスの一部としても存在しています。"

#: ../../library/turtle.rst:71
msgid ""
":class:`RawTurtle` (alias: :class:`RawPen`) defines Turtle objects which "
"draw on a :class:`TurtleScreen`.  Its constructor needs a Canvas, "
"ScrolledCanvas or TurtleScreen as argument, so the RawTurtle objects know "
"where to draw."
msgstr ""
":class:`RawTurtle` (別名: :class:`RawPen`) は :class:`TurtleScreen` 上に絵を"
"描く Turtle オブジェクトを定義します。コンストラクタには Canvas, "
"ScrolledCanvas, TurtleScreen のいずれかを引数として渡して RawTurtle オブジェ"
"クトがどこに絵を描くかを教えます。"

#: ../../library/turtle.rst:75
msgid ""
"Derived from RawTurtle is the subclass :class:`Turtle` (alias: :class:"
"`Pen`), which draws on \"the\" :class:`Screen` instance which is "
"automatically created, if not already present."
msgstr ""
"RawTurtle の派生はサブクラス :class:`Turtle` (別名: :class:`Pen`) で、 (既に"
"与えられているのでなければ自動的に作られた) \"唯一の\" :class:`Screen` インス"
"タンスに絵を描きます。"

#: ../../library/turtle.rst:79
msgid ""
"All methods of RawTurtle/Turtle also exist as functions, i.e. part of the "
"procedure-oriented interface."
msgstr ""
"RawTurtle/Turtle の全てのメソッドは関数としても、すなわち、手続き指向インター"
"フェイスの一部としても存在しています。"

#: ../../library/turtle.rst:82
msgid ""
"The procedural interface provides functions which are derived from the "
"methods of the classes :class:`Screen` and :class:`Turtle`.  They have the "
"same names as the corresponding methods.  A screen object is automatically "
"created whenever a function derived from a Screen method is called.  An "
"(unnamed) turtle object is automatically created whenever any of the "
"functions derived from a Turtle method is called."
msgstr ""
"手続き型インターフェイスでは :class:`Screen` および :class:`Turtle` クラスの"
"メソッドを元にした関数を提供しています。その名前は対応するメソッドと一緒で"
"す。 Screen のメソッドを元にした関数が呼び出されるといつでも screen オブジェ"
"クトが自動的に作られます。 Turtle のメソッドを元にした関数が呼び出されるとい"
"つでも(名無しの) turtle オブジェクトが自動的に作られます。"

#: ../../library/turtle.rst:89
msgid ""
"To use multiple turtles on a screen one has to use the object-oriented "
"interface."
msgstr ""
"複数のタートルを一つのスクリーン上で使いたい場合、オブジェクト指向インター"
"フェイスを使わなければなりません。"

#: ../../library/turtle.rst:92
msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""
"以下の文書では関数に対する引数リストが与えられています。メソッドでは、勿論、"
"ここでは省略されている *self* が第一引数になります。"

#: ../../library/turtle.rst:98
msgid "Overview of available Turtle and Screen methods"
msgstr "Turtle および Screen のメソッドの概観"

#: ../../library/turtle.rst:101
msgid "Turtle methods"
msgstr "Turtle のメソッド"

#: ../../library/turtle.rst:132 ../../library/turtle.rst:242
msgid "Turtle motion"
msgstr "Turtle の動き"

#: ../../library/turtle.rst:120
msgid "Move and draw"
msgstr "移動および描画"

#: ../../library/turtle.rst:0
msgid ":func:`forward` | :func:`fd`"
msgstr ":func:`forward` | :func:`fd`"

#: ../../library/turtle.rst:0
msgid ":func:`backward` | :func:`bk` | :func:`back`"
msgstr ":func:`backward` | :func:`bk` | :func:`back`"

#: ../../library/turtle.rst:0
msgid ":func:`right` | :func:`rt`"
msgstr ":func:`right` | :func:`rt`"

#: ../../library/turtle.rst:0
msgid ":func:`left` | :func:`lt`"
msgstr ":func:`left` | :func:`lt`"

#: ../../library/turtle.rst:0
msgid ":func:`goto` | :func:`setpos` | :func:`setposition`"
msgstr ":func:`goto` | :func:`setpos` | :func:`setposition`"

#: ../../library/turtle.rst:0
msgid ":func:`setx`"
msgstr ":func:`setx`"

#: ../../library/turtle.rst:0
msgid ":func:`sety`"
msgstr ":func:`sety`"

#: ../../library/turtle.rst:0
msgid ":func:`setheading` | :func:`seth`"
msgstr ":func:`setheading` | :func:`seth`"

#: ../../library/turtle.rst:0
msgid ":func:`home`"
msgstr ":func:`home`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2459
msgid ":func:`circle`"
msgstr ":func:`circle`"

#: ../../library/turtle.rst:0
msgid ":func:`dot`"
msgstr ":func:`dot`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2437
msgid ":func:`stamp`"
msgstr ":func:`stamp`"

#: ../../library/turtle.rst:0
msgid ":func:`clearstamp`"
msgstr ":func:`clearstamp`"

#: ../../library/turtle.rst:0
msgid ":func:`clearstamps`"
msgstr ":func:`clearstamps`"

#: ../../library/turtle.rst:0
msgid ":func:`undo`"
msgstr ":func:`undo`"

#: ../../library/turtle.rst:0
msgid ":func:`speed`"
msgstr ":func:`speed`"

#: ../../library/turtle.rst:128 ../../library/turtle.rst:644
msgid "Tell Turtle's state"
msgstr "Turtle の状態を知る"

#: ../../library/turtle.rst:0
msgid ":func:`position` | :func:`pos`"
msgstr ":func:`position` | :func:`pos`"

#: ../../library/turtle.rst:0
msgid ":func:`towards`"
msgstr ":func:`towards`"

#: ../../library/turtle.rst:0
msgid ":func:`xcor`"
msgstr ":func:`xcor`"

#: ../../library/turtle.rst:0
msgid ":func:`ycor`"
msgstr ":func:`ycor`"

#: ../../library/turtle.rst:0
msgid ":func:`heading`"
msgstr ":func:`heading`"

#: ../../library/turtle.rst:0
msgid ":func:`distance`"
msgstr ":func:`distance`"

#: ../../library/turtle.rst:132
msgid "Setting and measurement"
msgstr "設定と計測"

#: ../../library/turtle.rst:0
msgid ":func:`degrees`"
msgstr ":func:`degrees`"

#: ../../library/turtle.rst:0
msgid ":func:`radians`"
msgstr ":func:`radians`"

#: ../../library/turtle.rst:155 ../../library/turtle.rst:795
msgid "Pen control"
msgstr "Pen の制御"

#: ../../library/turtle.rst:140 ../../library/turtle.rst:798
msgid "Drawing state"
msgstr "描画状態"

#: ../../library/turtle.rst:0
msgid ":func:`pendown` | :func:`pd` | :func:`down`"
msgstr ":func:`pendown` | :func:`pd` | :func:`down`"

#: ../../library/turtle.rst:0
msgid ":func:`penup` | :func:`pu` | :func:`up`"
msgstr ":func:`penup` | :func:`pu` | :func:`up`"

#: ../../library/turtle.rst:0
msgid ":func:`pensize` | :func:`width`"
msgstr ":func:`pensize` | :func:`width`"

#: ../../library/turtle.rst:0
msgid ":func:`pen`"
msgstr ":func:`pen`"

#: ../../library/turtle.rst:0
msgid ":func:`isdown`"
msgstr ":func:`isdown`"

#: ../../library/turtle.rst:145 ../../library/turtle.rst:890
msgid "Color control"
msgstr "色の制御"

#: ../../library/turtle.rst:0
msgid ":func:`color`"
msgstr ":func:`color`"

#: ../../library/turtle.rst:0
msgid ":func:`pencolor`"
msgstr ":func:`pencolor`"

#: ../../library/turtle.rst:0
msgid ":func:`fillcolor`"
msgstr ":func:`fillcolor`"

#: ../../library/turtle.rst:150 ../../library/turtle.rst:1022
msgid "Filling"
msgstr "塗りつぶし"

#: ../../library/turtle.rst:0
msgid ":func:`filling`"
msgstr ":func:`filling`"

#: ../../library/turtle.rst:0
msgid ":func:`begin_fill`"
msgstr ":func:`begin_fill`"

#: ../../library/turtle.rst:0
msgid ":func:`end_fill`"
msgstr ":func:`end_fill`"

#: ../../library/turtle.rst:155 ../../library/turtle.rst:1069
msgid "More drawing control"
msgstr "さらなる描画の制御"

#: ../../library/turtle.rst:0
msgid ":func:`reset`"
msgstr ":func:`reset`"

#: ../../library/turtle.rst:0
msgid ":func:`clear`"
msgstr ":func:`clear`"

#: ../../library/turtle.rst:0
msgid ":func:`write`"
msgstr ":func:`write`"

#: ../../library/turtle.rst:172 ../../library/turtle.rst:1117
msgid "Turtle state"
msgstr "タートルの状態"

#: ../../library/turtle.rst:161 ../../library/turtle.rst:1120
msgid "Visibility"
msgstr "可視性"

#: ../../library/turtle.rst:0
msgid ":func:`showturtle` | :func:`st`"
msgstr ":func:`showturtle` | :func:`st`"

#: ../../library/turtle.rst:0
msgid ":func:`hideturtle` | :func:`ht`"
msgstr ":func:`hideturtle` | :func:`ht`"

#: ../../library/turtle.rst:0
msgid ":func:`isvisible`"
msgstr ":func:`isvisible`"

#: ../../library/turtle.rst:172 ../../library/turtle.rst:1159
msgid "Appearance"
msgstr "見た目"

#: ../../library/turtle.rst:0
msgid ":func:`shape`"
msgstr ":func:`shape`"

#: ../../library/turtle.rst:0
msgid ":func:`resizemode`"
msgstr ":func:`resizemode`"

#: ../../library/turtle.rst:0
msgid ":func:`shapesize` | :func:`turtlesize`"
msgstr ":func:`shapesize` | :func:`turtlesize`"

#: ../../library/turtle.rst:0
msgid ":func:`shearfactor`"
msgstr ":func:`shearfactor`"

#: ../../library/turtle.rst:0
msgid ":func:`settiltangle`"
msgstr ":func:`settiltangle`"

#: ../../library/turtle.rst:0
msgid ":func:`tiltangle`"
msgstr ":func:`tiltangle`"

#: ../../library/turtle.rst:0
msgid ":func:`tilt`"
msgstr ":func:`tilt`"

#: ../../library/turtle.rst:0
msgid ":func:`shapetransform`"
msgstr ":func:`shapetransform`"

#: ../../library/turtle.rst:0
msgid ":func:`get_shapepoly`"
msgstr ":func:`get_shapepoly`"

#: ../../library/turtle.rst:177 ../../library/turtle.rst:1364
msgid "Using events"
msgstr "イベントを利用する"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2431
msgid ":func:`onclick`"
msgstr ":func:`onclick`"

#: ../../library/turtle.rst:0
msgid ":func:`onrelease`"
msgstr ":func:`onrelease`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2414
msgid ":func:`ondrag`"
msgstr ":func:`ondrag`"

#: ../../library/turtle.rst:188 ../../library/turtle.rst:1438
msgid "Special Turtle methods"
msgstr "特別な Turtle のメソッド"

#: ../../library/turtle.rst:0
msgid ":func:`begin_poly`"
msgstr ":func:`begin_poly`"

#: ../../library/turtle.rst:0
msgid ":func:`end_poly`"
msgstr ":func:`end_poly`"

#: ../../library/turtle.rst:0
msgid ":func:`get_poly`"
msgstr ":func:`get_poly`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2450
msgid ":func:`clone`"
msgstr ":func:`clone`"

#: ../../library/turtle.rst:0
msgid ":func:`getturtle` | :func:`getpen`"
msgstr ":func:`getturtle` | :func:`getpen`"

#: ../../library/turtle.rst:0
msgid ":func:`getscreen`"
msgstr ":func:`getscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`setundobuffer`"
msgstr ":func:`setundobuffer`"

#: ../../library/turtle.rst:0
msgid ":func:`undobufferentries`"
msgstr ":func:`undobufferentries`"

#: ../../library/turtle.rst:191
msgid "Methods of TurtleScreen/Screen"
msgstr "TurtleScreen/Screen のメソッド"

#: ../../library/turtle.rst:199 ../../library/turtle.rst:1592
msgid "Window control"
msgstr "ウィンドウの制御"

#: ../../library/turtle.rst:0
msgid ":func:`bgcolor`"
msgstr ":func:`bgcolor`"

#: ../../library/turtle.rst:0
msgid ":func:`bgpic`"
msgstr ":func:`bgpic`"

#: ../../library/turtle.rst:0
msgid ":func:`clear` | :func:`clearscreen`"
msgstr ":func:`clear` | :func:`clearscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`reset` | :func:`resetscreen`"
msgstr ":func:`reset` | :func:`resetscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`screensize`"
msgstr ":func:`screensize`"

#: ../../library/turtle.rst:0
msgid ":func:`setworldcoordinates`"
msgstr ":func:`setworldcoordinates`"

#: ../../library/turtle.rst:204 ../../library/turtle.rst:1709
msgid "Animation control"
msgstr "アニメーションの制御"

#: ../../library/turtle.rst:0
msgid ":func:`delay`"
msgstr ":func:`delay`"

#: ../../library/turtle.rst:0
msgid ":func:`tracer`"
msgstr ":func:`tracer`"

#: ../../library/turtle.rst:0
msgid ":func:`update`"
msgstr ":func:`update`"

#: ../../library/turtle.rst:212 ../../library/turtle.rst:1762
msgid "Using screen events"
msgstr "スクリーンイベントを利用する"

#: ../../library/turtle.rst:0
msgid ":func:`listen`"
msgstr ":func:`listen`"

#: ../../library/turtle.rst:0
msgid ":func:`onkey` | :func:`onkeyrelease`"
msgstr ":func:`onkey` | :func:`onkeyrelease`"

#: ../../library/turtle.rst:0
msgid ":func:`onkeypress`"
msgstr ":func:`onkeypress`"

#: ../../library/turtle.rst:0
msgid ":func:`onclick` | :func:`onscreenclick`"
msgstr ":func:`onclick` | :func:`onscreenclick`"

#: ../../library/turtle.rst:0
msgid ":func:`ontimer`"
msgstr ":func:`ontimer`"

#: ../../library/turtle.rst:0
msgid ":func:`mainloop` | :func:`done`"
msgstr ":func:`mainloop` | :func:`done`"

#: ../../library/turtle.rst:222 ../../library/turtle.rst:1907
msgid "Settings and special methods"
msgstr "設定と特殊なメソッド"

#: ../../library/turtle.rst:0
msgid ":func:`mode`"
msgstr ":func:`mode`"

#: ../../library/turtle.rst:0
msgid ":func:`colormode`"
msgstr ":func:`colormode`"

#: ../../library/turtle.rst:0
msgid ":func:`getcanvas`"
msgstr ":func:`getcanvas`"

#: ../../library/turtle.rst:0
msgid ":func:`getshapes`"
msgstr ":func:`getshapes`"

#: ../../library/turtle.rst:0
msgid ":func:`register_shape` | :func:`addshape`"
msgstr ":func:`register_shape` | :func:`addshape`"

#: ../../library/turtle.rst:0
msgid ":func:`turtles`"
msgstr ":func:`turtles`"

#: ../../library/turtle.rst:0
msgid ":func:`window_height`"
msgstr ":func:`window_height`"

#: ../../library/turtle.rst:0
msgid ":func:`window_width`"
msgstr ":func:`window_width`"

#: ../../library/turtle.rst:226 ../../library/turtle.rst:1871
msgid "Input methods"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`textinput`"
msgstr ":func:`textinput`"

#: ../../library/turtle.rst:0
msgid ":func:`numinput`"
msgstr ":func:`numinput`"

#: ../../library/turtle.rst:233
msgid "Methods specific to Screen"
msgstr "Screen 独自のメソッド"

#: ../../library/turtle.rst:0
msgid ":func:`bye`"
msgstr ":func:`bye`"

#: ../../library/turtle.rst:0
msgid ":func:`exitonclick`"
msgstr ":func:`exitonclick`"

#: ../../library/turtle.rst:0
msgid ":func:`setup`"
msgstr ":func:`setup`"

#: ../../library/turtle.rst:0
msgid ":func:`title`"
msgstr ":func:`title`"

#: ../../library/turtle.rst:236
msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr "RawTurtle/Turtle のメソッドと対応する関数"

#: ../../library/turtle.rst:238
msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""
"この節のほとんどの例では ``turtle`` という名前の Turtle インスタンスを使いま"
"す。"

#: ../../library/turtle.rst:0
msgid "Parameters"
msgstr "パラメーター"

#: ../../library/turtle.rst:247 ../../library/turtle.rst:292
#: ../../library/turtle.rst:317 ../../library/turtle.rst:377
#: ../../library/turtle.rst:400 ../../library/turtle.rst:423
msgid "a number (integer or float)"
msgstr "数 (整数または浮動小数点数)"

#: ../../library/turtle.rst:249
msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""
"タートルが頭を向けている方へ、タートルを距離 *distance* だけ前進させます。"

#: ../../library/turtle.rst:269 ../../library/turtle.rst:473
#: ../../library/turtle.rst:748 ../../library/turtle.rst:1258
#: ../../library/turtle.rst:1277
msgid "a number"
msgstr "数"

#: ../../library/turtle.rst:271
msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""
"タートルが頭を向けている方と反対方向へ、タートルを距離 *distance* だけ後退さ"
"せます。 タートルの向きは変えません。"

#: ../../library/turtle.rst:294
msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"タートルを *angle* 単位だけ右に回します。 (単位のデフォルトは度ですが、 :"
"func:`degrees` と :func:`radians` 関数を使って設定できます。) 角度の向きは"
"タートルのモードによって意味が変わります。 :func:`mode` を参照してください。"

#: ../../library/turtle.rst:319
msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"タートルを *angle* 単位だけ左に回します。 (単位のデフォルトは度ですが、 :"
"func:`degrees` と :func:`radians` 関数を使って設定できます。) 角度の向きは"
"タートルのモードによって意味が変わります。 :func:`mode` を参照してください。"

#: ../../library/turtle.rst:343
msgid "a number or a pair/vector of numbers"
msgstr "数または数のペア/ベクトル"

#: ../../library/turtle.rst:344
msgid "a number or ``None``"
msgstr "数または ``None``"

#: ../../library/turtle.rst:346
msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""
"*y* が ``None`` の場合、 *x* は座標のペアかまたは :class:`Vec2D` (たとえば :"
"func:`pos` で返されます) でなければなりません。"

#: ../../library/turtle.rst:349
msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""
"タートルを指定された絶対位置に移動します。ペンが下りていれば線を引きます。"
"タートルの向きは変わりません。"

#: ../../library/turtle.rst:379
msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr "タートルの第一座標を *x* にします。第二座標は変わりません。"

#: ../../library/turtle.rst:402
msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr "タートルの第二座標を *y* にします。第一座標は変わりません。"

#: ../../library/turtle.rst:425
msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""
"タートルの向きを *to_angle* に設定します。以下はよく使われる方向を度で表わし"
"たものです:"

#: ../../library/turtle.rst:429
msgid "standard mode"
msgstr "標準モード"

#: ../../library/turtle.rst:429
msgid "logo mode"
msgstr "logo モード"

#: ../../library/turtle.rst:431
msgid "0 - east"
msgstr "0 - 東"

#: ../../library/turtle.rst:431
msgid "0 - north"
msgstr "0 - 北"

#: ../../library/turtle.rst:432
msgid "90 - north"
msgstr "90 - 北"

#: ../../library/turtle.rst:432
msgid "90 - east"
msgstr "90 - 東"

#: ../../library/turtle.rst:433
msgid "180 - west"
msgstr "180 - 西"

#: ../../library/turtle.rst:433
msgid "180 - south"
msgstr "180 - 南"

#: ../../library/turtle.rst:434
msgid "270 - south"
msgstr "270 - 南"

#: ../../library/turtle.rst:434
msgid "270 - west"
msgstr "270 - 西"

#: ../../library/turtle.rst:447
msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""
"タートルを原点 -- 座標 (0, 0) -- に移動し、向きを開始方向に設定します (開始方"
"向はモードに依って違います。 :func:`mode` を参照してください)。"

#: ../../library/turtle.rst:474
msgid "a number (or ``None``)"
msgstr "数 (または ``None``)"

#: ../../library/turtle.rst:475 ../../library/turtle.rst:569
msgid "an integer (or ``None``)"
msgstr "整数 (または ``None``)"

#: ../../library/turtle.rst:477
msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""
"半径 *radius* の円を描きます。中心はタートルの左 *radius* ユニットの点です。 "
"*extent* -- 角度です -- は円のどの部分を描くかを決定します。 *extent* が与え"
"られなければ、デフォルトで完全な円になります。 *extent* が完全な円でない場合"
"は、弧の一つの端点は、現在のペンの位置です。 *radius* が正の場合、弧は反時計"
"回りに描かれます。そうでなければ、時計回りです。最後にタートルの向きが "
"*extent* 分だけ変わります。"

#: ../../library/turtle.rst:485
msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""
"円は内接する正多角形で近似されます。 *steps* でそのために使うステップ数を決定"
"します。この値は与えられなければ自動的に計算されます。また、これを正多角形の"
"描画に利用することもできます。"

#: ../../library/turtle.rst:511
msgid "an integer >= 1 (if given)"
msgstr "1 以上の整数 (与えられる場合には)"

#: ../../library/turtle.rst:512
msgid "a colorstring or a numeric color tuple"
msgstr "色を表わす文字列またはタプル"

#: ../../library/turtle.rst:514
msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""
"直径 *size* の丸い点を *color* で指定された色で描きます。 *size* が与えられな"
"かった場合、pensize+4 と 2*pensize の大きい方が使われます。"

#: ../../library/turtle.rst:532
msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""
"キャンバス上の現在タートルがいる位置にタートルの姿のハンコを押します。そのハ"
"ンコに対して stamp_id が返されますが、これを使うと後で "
"``clearstamp(stamp_id)`` のように呼び出して消すことができます。"

#: ../../library/turtle.rst:547
msgid "an integer, must be return value of previous :func:`stamp` call"
msgstr "整数で、先立つ :func:`stamp` 呼出しで返された値でなければなりません"

#: ../../library/turtle.rst:550
msgid "Delete stamp with given *stampid*."
msgstr "*stampid* に対応するハンコを消します。"

#: ../../library/turtle.rst:571
msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is ``None``, delete "
"all stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last "
"*n* stamps."
msgstr ""
"全ての、または最初の/最後の *n* 個のハンコを消します。 *n* が ``None`` の場"
"合、全てのハンコを消します。 *n* が正の場合には最初の *n* 個、 *n* が負の場合"
"には最後の *n* 個を消します。"

#: ../../library/turtle.rst:594
msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""
"最後の(繰り返すことにより複数の)タートルの動きを取り消します。取り消しできる"
"動きの最大数は undobuffer のサイズによって決まります。"

#: ../../library/turtle.rst:609
msgid "an integer in the range 0..10 or a speedstring (see below)"
msgstr "0 から 10 までの整数またはスピードを表わす文字列(以下の説明を参照)"

#: ../../library/turtle.rst:611
msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""
"タートルのスピードを 0 から 10 までの範囲の整数に設定します。引数が与えられな"
"い場合は現在のスピードを返します。"

#: ../../library/turtle.rst:614
msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""
"与えられた数字が 10 より大きかったり 0.5 より小さかったりした場合は、スピード"
"は 0 になります。スピードを表わす文字列は次のように数字に変換されます:"

#: ../../library/turtle.rst:617
msgid "\"fastest\":  0"
msgstr "\"fastest\":  0"

#: ../../library/turtle.rst:618
msgid "\"fast\":  10"
msgstr "\"fast\":  10"

#: ../../library/turtle.rst:619
msgid "\"normal\":  6"
msgstr "\"normal\":  6"

#: ../../library/turtle.rst:620
msgid "\"slow\":  3"
msgstr "\"slow\":  3"

#: ../../library/turtle.rst:621
msgid "\"slowest\":  1"
msgstr "\"slowest\":  1"

#: ../../library/turtle.rst:623
msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""
"1 から 10 までのスピードを上げていくにつれて線を描いたりタートルが回ったりす"
"るアニメーションがだんだん速くなります。"

#: ../../library/turtle.rst:626
msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""
"注意: *speed* = 0 はアニメーションを無くします。forward/backward ではタートル"
"がジャンプし、left/right では瞬時に方向を変えます。"

#: ../../library/turtle.rst:649
msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr "タートルの現在位置を (:class:`Vec2D` のベクトルとして) 返します。"

#: ../../library/turtle.rst:660 ../../library/turtle.rst:723
msgid "a number or a pair/vector of numbers or a turtle instance"
msgstr "数または数のペア/ベクトルまたはタートルのインスタンス"

#: ../../library/turtle.rst:661 ../../library/turtle.rst:724
msgid "a number if *x* is a number, else ``None``"
msgstr "*x* が数ならば数、そうでなければ ``None``"

#: ../../library/turtle.rst:663
msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\"."
msgstr ""
"タートルの位置から指定された (x,y) への直線の角度を返します。この値はタートル"
"の開始方向にそして開始方向はモード (\"standard\"/\"world\" または \"logo\") "
"に依存します。"

#: ../../library/turtle.rst:677
msgid "Return the turtle's x coordinate."
msgstr "タートルの x 座標を返します。"

#: ../../library/turtle.rst:693
msgid "Return the turtle's y coordinate."
msgstr "タートルの y 座標を返します。"

#: ../../library/turtle.rst:709
msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""
"タートルの現在の向きを返します (返される値はタートルのモードに依存します。 :"
"func:`mode` を参照してください)。"

#: ../../library/turtle.rst:726
msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""
"タートルから与えられた (x,y) あるいはベクトルあるいは渡されたタートルへの距離"
"を、タートルのステップを単位として測った値を返します。"

#: ../../library/turtle.rst:744
msgid "Settings for measurement"
msgstr "設定と計測"

#: ../../library/turtle.rst:750
msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""
"角度を計る単位「度」を、円周を何等分するかという値に指定します。デフォルトは"
"360等分で通常の意味での度です。"

#: ../../library/turtle.rst:773
msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""
"角度を計る単位をラジアンにします。 ``degrees(2*math.pi)`` と同じ意味です。"

#: ../../library/turtle.rst:804
msgid "Pull the pen down -- drawing when moving."
msgstr "ペンを下ろします -- 動くと線が引かれます。"

#: ../../library/turtle.rst:811
msgid "Pull the pen up -- no drawing when moving."
msgstr "ペンを上げます -- 動いても線は引かれません。"

#: ../../library/turtle.rst:817
msgid "a positive number"
msgstr "正の数"

#: ../../library/turtle.rst:819
msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""
"線の太さを *width* にするか、または現在の太さを返します。resizemode が "
"\"auto\" でタートルの形が多角形の場合、その多角形も同じ太さで描画されます。引"
"数が渡されなければ、現在の pensize が返されます。"

#: ../../library/turtle.rst:833
msgid "a dictionary with some or all of the below listed keys"
msgstr "以下にリストされたキーをもった辞書"

#: ../../library/turtle.rst:834
msgid "one or more keyword-arguments with the below listed keys as keywords"
msgstr "以下にリストされたキーをキーワードとするキーワード引数"

#: ../../library/turtle.rst:836
msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""
"ペンの属性を \"pen-dictionary\" に以下のキー/値ペアで設定するかまたは返しま"
"す:"

#: ../../library/turtle.rst:839
msgid "\"shown\": True/False"
msgstr "\"shown\": True/False"

#: ../../library/turtle.rst:840
msgid "\"pendown\": True/False"
msgstr "\"pendown\": True/False"

#: ../../library/turtle.rst:841
msgid "\"pencolor\": color-string or color-tuple"
msgstr "\"pencolor\": 色文字列または色タプル"

#: ../../library/turtle.rst:842
msgid "\"fillcolor\": color-string or color-tuple"
msgstr "\"fillcolor\": 色文字列または色タプル"

#: ../../library/turtle.rst:843
msgid "\"pensize\": positive number"
msgstr "\"pensize\": 正の数"

#: ../../library/turtle.rst:844
msgid "\"speed\": number in range 0..10"
msgstr "\"speed\": 0 から 10 までの整数"

#: ../../library/turtle.rst:845
msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr "\"resizemode\": \"auto\" または \"user\" または \"noresize\""

#: ../../library/turtle.rst:846
msgid "\"stretchfactor\": (positive number, positive number)"
msgstr "\"stretchfactor\": (正の数, 正の数)"

#: ../../library/turtle.rst:847
msgid "\"outline\": positive number"
msgstr "\"outline\": 正の数"

#: ../../library/turtle.rst:848
msgid "\"tilt\": number"
msgstr "\"tilt\": 数"

#: ../../library/turtle.rst:850
msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""
"この辞書を以降の :func:`pen` 呼出しに渡して以前のペンの状態に復旧することがで"
"きます。さらに一つ以上の属性をキーワード引数として渡すこともできます。一つの"
"文で幾つものペンの属性を設定するのに使えます。"

#: ../../library/turtle.rst:876
msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr ""
"もしペンが下りていれば ``True`` を、上がっていれば ``False`` を返します。"

#: ../../library/turtle.rst:894
msgid "Return or set the pencolor."
msgstr "ペンの色(pencolor)を設定するかまたは返します。"

#: ../../library/turtle.rst:896 ../../library/turtle.rst:945
msgid "Four input formats are allowed:"
msgstr "4種類の入力形式が受け入れ可能です:"

#: ../../library/turtle.rst:901
msgid "``pencolor()``"
msgstr "``pencolor()``"

#: ../../library/turtle.rst:899
msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""
"現在のペンの色を色指定文字列またはタプルで返します (例を見て下さい)。次の "
"color/pencolor/fillcolor の呼び出しへの入力に使うこともあるでしょう。"

#: ../../library/turtle.rst:905
msgid "``pencolor(colorstring)``"
msgstr "``pencolor(colorstring)``"

#: ../../library/turtle.rst:904
msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"ペンの色を *colorstring* に設定します。その値は Tk の色指定文字列で、 "
"``\"red\"``, ``\"yellow\"``, ``\"#33cc8c\"`` のような文字列です。"

#: ../../library/turtle.rst:910
msgid "``pencolor((r, g, b))``"
msgstr "``pencolor((r, g, b))``"

#: ../../library/turtle.rst:908
msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"ペンの色を *r*, *g*, *b* のタプルで表された RGB の色に設定します。各 *r*, "
"*g*, *b* は 0 から colormode の間の値でなければなりません。ここで colormode "
"は 1.0 か 255 のどちらかです (:func:`colormode` を参照)。"

#: ../../library/turtle.rst:914
msgid "``pencolor(r, g, b)``"
msgstr "``pencolor(r, g, b)``"

#: ../../library/turtle.rst:913
msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"ペンの色を *r*, *g*, *b* で表された RGB の色に設定します。各 *r*, *g*, *b* "
"は 0 から colormode の間の値でなければなりません。"

#: ../../library/turtle.rst:916
msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""
"タートルの形(turtleshape)が多角形の場合、多角形の外側が新しく設定された色で描"
"かれます。"

#: ../../library/turtle.rst:943
msgid "Return or set the fillcolor."
msgstr "塗りつぶしの色(fillcolor)を設定するかまたは返します。"

#: ../../library/turtle.rst:950
msgid "``fillcolor()``"
msgstr "``fillcolor()``"

#: ../../library/turtle.rst:948
msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""
"現在の塗りつぶしの色を色指定文字列またはタプルで返します (例を見て下さい)。次"
"の color/pencolor/fillcolor の呼び出しへの入力に使うこともあるでしょう。"

#: ../../library/turtle.rst:954
msgid "``fillcolor(colorstring)``"
msgstr "``fillcolor(colorstring)``"

#: ../../library/turtle.rst:953
msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"塗りつぶしの色を *colorstring* に設定します。その値は Tk の色指定文字列で、 "
"``\"red\"``, ``\"yellow\"``, ``\"#33cc8c\"`` のような文字列です。"

#: ../../library/turtle.rst:959
msgid "``fillcolor((r, g, b))``"
msgstr "``fillcolor((r, g, b))``"

#: ../../library/turtle.rst:957
msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"塗りつぶしの色を *r*, *g*, *b* のタプルで表された RGB の色に設定します。各 "
"*r*, *g*, *b* は 0 から colormode の間の値でなければなりません。ここで "
"colormode は 1.0 か 255 のどちらかです (:func:`colormode` を参照)。"

#: ../../library/turtle.rst:963
msgid "``fillcolor(r, g, b)``"
msgstr "``fillcolor(r, g, b)``"

#: ../../library/turtle.rst:962
msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"塗りつぶしの色を *r*, *g*, *b* で表された RGB の色に設定します。各 *r*, *g*, "
"*b* は 0 から colormode の間の値でなければなりません。"

#: ../../library/turtle.rst:965
msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""
"タートルの形(turtleshape)が多角形の場合、多角形の内側が新しく設定された色で描"
"かれます。"

#: ../../library/turtle.rst:986
msgid "Return or set pencolor and fillcolor."
msgstr ""
"ペンの色(pencolor)と塗りつぶしの色(fillcolor)を設定するかまたは返します。"

#: ../../library/turtle.rst:988
msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""
"いくつかの入力形式が受け入れ可能です。形式ごとに 0 から 3 個の引数を以下のよ"
"うに使います:"

#: ../../library/turtle.rst:994
msgid "``color()``"
msgstr "``color()``"

#: ../../library/turtle.rst:992
msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""
"現在のペンの色と塗りつぶしの色を :func:`pencolor` および :func:`fillcolor` で"
"返される色指定文字列またはタプルのペアで返します。"

#: ../../library/turtle.rst:998
msgid "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"
msgstr "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"

#: ../../library/turtle.rst:997
msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""
":func:`pencolor` の入力と同じですが、塗りつぶしの色とペンの色、両方を与えられ"
"た値に設定します。"

#: ../../library/turtle.rst:1002
msgid ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"
msgstr ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"

#: ../../library/turtle.rst:1001
msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""
"``pencolor(colorstring1)`` および ``fillcolor(colorstring2)`` を呼び出すのと"
"等価です。もう一つの入力形式についても同様です。"

#: ../../library/turtle.rst:1004
msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""
"タートルの形(turtleshape)が多角形の場合、多角形の内側も外側も新しく設定された"
"色で描かれます。"

#: ../../library/turtle.rst:1018
msgid "See also: Screen method :func:`colormode`."
msgstr "こちらも参照: スクリーンのメソッド :func:`colormode` 。"

#: ../../library/turtle.rst:1032
msgid "Return fillstate (``True`` if filling, ``False`` else)."
msgstr ""

#: ../../library/turtle.rst:1047
msgid "To be called just before drawing a shape to be filled."
msgstr ""

#: ../../library/turtle.rst:1052
msgid "Fill the shape drawn after the last call to :func:`begin_fill`."
msgstr ""
"最後に呼び出された :func:`begin_fill` の後に描かれた図形を塗りつぶします。"

#: ../../library/turtle.rst:1054
msgid ""
"Whether or not overlap regions for self-intersecting polygons or multiple "
"shapes are filled depends on the operating system graphics, type of overlap, "
"and number of overlaps.  For example, the Turtle star above may be either "
"all yellow or have some white regions."
msgstr ""

#: ../../library/turtle.rst:1074
msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""
"タートルの描いたものをスクリーンから消し、タートルを中心に戻して、全ての変数"
"をデフォルト値に設定し直します。"

#: ../../library/turtle.rst:1096
msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""
"タートルの描いたものをスクリーンから消します。タートルは動かしません。タート"
"ルの状態と位置、それに他のタートルたちの描いたものは影響を受けません。"

#: ../../library/turtle.rst:1102
msgid "object to be written to the TurtleScreen"
msgstr "TurtleScreen に書かれるオブジェクト"

#: ../../library/turtle.rst:1103
msgid "True/False"
msgstr "True/False"

#: ../../library/turtle.rst:1104
msgid "one of the strings \"left\", \"center\" or right\""
msgstr "文字列 \"left\", \"center\", right\" のどれか"

#: ../../library/turtle.rst:1105
msgid "a triple (fontname, fontsize, fonttype)"
msgstr "三つ組み (fontname, fontsize, fonttype)"

#: ../../library/turtle.rst:1107
msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or \"right\") and with "
"the given font.  If *move* is true, the pen is moved to the bottom-right "
"corner of the text.  By default, *move* is ``False``."
msgstr ""
"文字を書きます— *arg* の文字列表現を、現在のタートルの位置に、 *align* "
"(\"left\", \"center\", \"right\" のどれか) に従って、 与えられたフォントで。 "
"もし *move* が真ならば、ペンは書いた文の右下隅に移動します。 デフォルトで"
"は、 *move* は ``False`` です。"

#: ../../library/turtle.rst:1125
msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""
"タートルを見えなくします。 複雑な図を描いている途中、タートルが見えないように"
"するのは良い考えです。 というのもタートルを隠すことで描画が目に見えて速くなる"
"からです。"

#: ../../library/turtle.rst:1138
msgid "Make the turtle visible."
msgstr "タートルが見えるようにします。"

#: ../../library/turtle.rst:1148
msgid "Return ``True`` if the Turtle is shown, ``False`` if it's hidden."
msgstr ""
"タートルが見えている状態ならば ``True`` を、隠されていれば ``False`` を返しま"
"す。"

#: ../../library/turtle.rst:1163
msgid "a string which is a valid shapename"
msgstr "形の名前(shapename)として正しい文字列"

#: ../../library/turtle.rst:1165
msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  "
"To learn about how to deal with shapes see Screen method :func:"
"`register_shape`."
msgstr ""
"タートルの形を与えられた名前(*name*)の形に設定するか、もしくは名前が与えられ"
"なければ現在の形の名前を返します。 *name* という名前の形は TurtleScreen の形"
"の辞書に載っていなければなりません。最初は次の多角形が載っています: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\"。形"
"についての扱いを学ぶには Screen のメソッド :func:`register_shape` を参照して"
"下さい。"

#: ../../library/turtle.rst:1183
msgid "one of the strings \"auto\", \"user\", \"noresize\""
msgstr "文字列 \"auto\", \"user\", \"noresize\" のどれか"

#: ../../library/turtle.rst:1185
msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""
"サイズ変更のモード(resizemode)を \"auto\", \"user\", \"noresize\" のどれかに"
"設定します。もし *rmode* が与えられなければ、現在のサイズ変更モードを返しま"
"す。それぞれのサイズ変更モードは以下の効果を持ちます:"

#: ../../library/turtle.rst:1189
msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr "\"auto\": ペンのサイズに対応してタートルの見た目を調整します。"

#: ../../library/turtle.rst:1190
msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""
"\"user\": 伸長係数(stretchfactor)およびアウトライン幅(outlinewidth)の値に対応"
"してタートルの見た目を調整します。これらの値は :func:`shapesize` で設定しま"
"す。"

#: ../../library/turtle.rst:1193
msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr "\"noresize\": タートルの見た目を調整しません。"

#: ../../library/turtle.rst:1195
msgid ""
"``resizemode(\"user\")`` is called by :func:`shapesize` when used with "
"arguments."
msgstr ""
"``resizemode(\"user\")`` は :func:`shapesize` に引数を渡したときに呼び出され"
"ます。"

#: ../../library/turtle.rst:1210 ../../library/turtle.rst:1211
#: ../../library/turtle.rst:1212
msgid "positive number"
msgstr "正の数"

#: ../../library/turtle.rst:1214
msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shapes's outline."
msgstr ""
"ペンの属性 x/y-伸長係数および/またはアウトラインを返すかまたは設定します。サ"
"イズ変更のモードは \"user\" に設定されます。サイズ変更のモードが \"user\" に"
"設定されたときかつそのときに限り、タートルは伸長係数(stretchfactor)に従って伸"
"長されて表示されます。 *stretch_wid* は進行方向に直交する向きの伸長係数で、 "
"*stretch_len* は進行方向に沿ったの伸長係数、 *outline* はアウトラインの幅を決"
"めるものです。"

#: ../../library/turtle.rst:1237 ../../library/turtle.rst:1890
#: ../../library/turtle.rst:1891 ../../library/turtle.rst:1892
msgid "number (optional)"
msgstr ""

#: ../../library/turtle.rst:1239
msgid ""
"Set or return the current shearfactor. Shear the turtleshape according to "
"the given shearfactor shear, which is the tangent of the shear angle. Do "
"*not* change the turtle's heading (direction of movement). If shear is not "
"given: return the current shearfactor, i. e. the tangent of the shear angle, "
"by which lines parallel to the heading of the turtle are sheared."
msgstr ""

#: ../../library/turtle.rst:1260
msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""
"タートルの形(turtleshape)を現在の傾斜角から角度(*angle*)だけ回転します。この"
"ときタートルの進む方向は *変わりません* 。"

#: ../../library/turtle.rst:1279
msgid ""
"Rotate the turtleshape to point in the direction specified by *angle*, "
"regardless of its current tilt-angle.  *Do not* change the turtle's heading "
"(direction of movement)."
msgstr ""
"タートルの形(turtleshape)を現在の傾斜角に関わらず、指定された角度(*angle*)の"
"向きに回転します。タートルの進む方向は *変わりません* 。"

#: ../../library/turtle.rst:1299 ../../library/turtle.rst:1322
#: ../../library/turtle.rst:1323 ../../library/turtle.rst:1324
#: ../../library/turtle.rst:1325
msgid "a number (optional)"
msgstr ""

#: ../../library/turtle.rst:1301
msgid ""
"Set or return the current tilt-angle. If angle is given, rotate the "
"turtleshape to point in the direction specified by angle, regardless of its "
"current tilt-angle. Do *not* change the turtle's heading (direction of "
"movement). If angle is not given: return the current tilt-angle, i. e. the "
"angle between the orientation of the turtleshape and the heading of the "
"turtle (its direction of movement)."
msgstr ""

#: ../../library/turtle.rst:1327
msgid "Set or return the current transformation matrix of the turtle shape."
msgstr ""

#: ../../library/turtle.rst:1329
msgid ""
"If none of the matrix elements are given, return the transformation matrix "
"as a tuple of 4 elements. Otherwise set the given elements and transform the "
"turtleshape according to the matrix consisting of first row t11, t12 and "
"second row t21, t22. The determinant t11 * t22 - t12 * t21 must not be zero, "
"otherwise an error is raised. Modify stretchfactor, shearfactor and "
"tiltangle according to the given matrix."
msgstr ""

#: ../../library/turtle.rst:1351
msgid ""
"Return the current shape polygon as tuple of coordinate pairs. This can be "
"used to define a new shape or components of a compound shape."
msgstr ""

#: ../../library/turtle.rst:1369 ../../library/turtle.rst:1391
#: ../../library/turtle.rst:1416 ../../library/turtle.rst:1814
msgid ""
"a function with two arguments which will be called with the coordinates of "
"the clicked point on the canvas"
msgstr ""
"2引数の関数でキャンバスのクリックされた点の座標を引数として呼び出されるもので"
"す"

#: ../../library/turtle.rst:1371 ../../library/turtle.rst:1393
#: ../../library/turtle.rst:1418 ../../library/turtle.rst:1816
msgid "number of the mouse-button, defaults to 1 (left mouse button)"
msgstr "マウスボタンの番号、デフォルトは 1 (左マウスボタン)"

#: ../../library/turtle.rst:1372 ../../library/turtle.rst:1394
#: ../../library/turtle.rst:1419 ../../library/turtle.rst:1817
msgid ""
"``True`` or ``False`` -- if ``True``, a new binding will be added, otherwise "
"it will replace a former binding"
msgstr ""
"``True`` または ``False`` -- ``True`` ならば、 新しい束縛が追加されますが、そ"
"うでなければ、 以前の束縛を置き換えます。"

#: ../../library/turtle.rst:1375
msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""
"*fun* をタートルのマウスクリック(mouse-click)イベントに束縛します。 *fun* が "
"``None`` ならば、既存の束縛が取り除かれます。無名タートル、つまり手続き的なや"
"り方の例です:"

#: ../../library/turtle.rst:1397
msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""
"*fun* をタートルのマウスボタンリリース(mouse-button-release)イベントに束縛し"
"ます。 *fun* が ``None`` ならば、既存の束縛が取り除かれます。"

#: ../../library/turtle.rst:1422
msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"*fun* をタートルのマウスムーブ(mouse-move)イベントに束縛します。 *fun* が "
"``None`` ならば、既存の束縛が取り除かれます。"

#: ../../library/turtle.rst:1425
msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""
"注意: 全てのマウスムーブイベントのシーケンスに先立ってマウスクリックイベント"
"が起こります。"

#: ../../library/turtle.rst:1433
msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""
"この後、タートルをクリックしてドラッグするとタートルはスクリーン上を動きそれ"
"によって(ペンが下りていれば)手書きの線ができあがります。"

#: ../../library/turtle.rst:1442
msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr "多角形の頂点の記録を開始します。現在のタートル位置が最初の頂点です。"

#: ../../library/turtle.rst:1448
msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""
"多角形の頂点の記録を停止します。現在のタートル位置が最後の頂点です。この頂点"
"が最初の頂点と結ばれます。"

#: ../../library/turtle.rst:1454
msgid "Return the last recorded polygon."
msgstr "最後に記録された多角形を返します。"

#: ../../library/turtle.rst:1473
msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""
"位置、向きその他のプロパティがそっくり同じタートルのクローンを作って返しま"
"す。"

#: ../../library/turtle.rst:1486
msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""
"Turtle オブジェクトそのものを返します。唯一の意味のある使い方: 無名タートルを"
"返す関数として使う:"

#: ../../library/turtle.rst:1500
msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""
"タートルが描画中の :class:`TurtleScreen` オブジェクトを返します。 "
"TurtleScreen のメソッドをそのオブジェクトに対して呼び出すことができます。"

#: ../../library/turtle.rst:1514
msgid "an integer or ``None``"
msgstr "整数または ``None``"

#: ../../library/turtle.rst:1516
msgid ""
"Set or disable undobuffer.  If *size* is an integer, an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""
"アンドゥバッファを設定または無効化します。 *size* が整数ならばそのサイズの空"
"のアンドゥバッファを用意します。 *size* の値はタートルのアクションを何度 :"
"func:`undo` メソッド/関数で取り消せるかの最大数を与えます。 *size* が "
"``None`` ならば、アンドゥバッファは無効化されます。"

#: ../../library/turtle.rst:1529
msgid "Return number of entries in the undobuffer."
msgstr "アンドゥバッファのエントリー数を返します。"

#: ../../library/turtle.rst:1542
msgid "Compound shapes"
msgstr ""

#: ../../library/turtle.rst:1544
msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""
"合成されたタートルの形、つまり幾つかの色の違う多角形から成るような形を使うに"
"は、以下のように補助クラス :class:`Shape` を直接使わなければなりません:"

#: ../../library/turtle.rst:1548
msgid "Create an empty Shape object of type \"compound\"."
msgstr "タイプ \"compound\" の空の Shape オブジェクトを作ります。"

#: ../../library/turtle.rst:1549
msgid ""
"Add as many components to this object as desired, using the :meth:"
"`addcomponent` method."
msgstr ""
":meth:`addcomponent` メソッドを使って、好きなだけここにコンポーネントを追加し"
"ます。"

#: ../../library/turtle.rst:1552
msgid "For example:"
msgstr "例えば:"

#: ../../library/turtle.rst:1563
msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr ""
"こうして作った Shape を Screen の形のリスト(shapelist) に追加して使います:"

#: ../../library/turtle.rst:1574
msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""
":class:`Shape` クラスは :func:`register_shape` の内部では違った使われ方をしま"
"す。アプリケーションを書く人が Shape クラスを扱わなければならないのは、上で示"
"したように合成された形を使うとき *だけ* です！"

#: ../../library/turtle.rst:1580
msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr "TurtleScreen/Screen のメソッドと対応する関数"

#: ../../library/turtle.rst:1582
msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""
"この節のほとんどの例では ``screen`` という名前の TurtleScreen インスタンスを"
"使います。"

#: ../../library/turtle.rst:1596
msgid ""
"a color string or three numbers in the range 0..colormode or a 3-tuple of "
"such numbers"
msgstr ""
"色文字列または 0 から colormode の範囲の数3つ、 またはそれを三つ組みにしたも"
"の"

#: ../../library/turtle.rst:1600
msgid "Set or return background color of the TurtleScreen."
msgstr "TurtleScreen の背景色を設定するかまたは返します。"

#: ../../library/turtle.rst:1615
msgid "a string, name of a gif-file or ``\"nopic\"``, or ``None``"
msgstr "文字列で gif ファイルの名前 ``\"nopic\"`` 、または ``None``"

#: ../../library/turtle.rst:1617
msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""
"背景の画像を設定するかまたは現在の背景画像(backgroundimage)の名前を返しま"
"す。 *picname* がファイル名ならば、その画像を背景に設定します。 *picname* が "
"``\"nopic\"`` ならば、(もしあれば)背景画像を削除します。 *picname* が "
"``None`` ならば、現在の背景画像のファイル名を返します。 ::"

#: ../../library/turtle.rst:1632
msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""
"全ての図形と全てのタートルを TurtleScreen から削除します。そして空になった "
"TurtleScreen をリセットして初期状態に戻します: 白い背景、背景画像もイベント束"
"縛もなく、トレーシングはオンです。"

#: ../../library/turtle.rst:1637
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is a different one "
"derived from the Turtle method ``clear``."
msgstr ""
"この TurtleScreen メソッドはグローバル関数としては ``clearscreen`` という名前"
"でだけ使えます。グローバル関数 ``clear`` は Turtle メソッドの ``clear`` から"
"派生した別ものです。"

#: ../../library/turtle.rst:1645
msgid "Reset all Turtles on the Screen to their initial state."
msgstr "スクリーン上の全てのタートルをリセットしその初期状態に戻します。"

#: ../../library/turtle.rst:1648
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""
"この TurtleScreen メソッドはグローバル関数としては ``resetscreen`` という名前"
"でだけ使えます。グローバル関数 ``reset`` は Turtle メソッドの ``reset`` から"
"派生した別ものです。"

#: ../../library/turtle.rst:1655
msgid "positive integer, new width of canvas in pixels"
msgstr "正の整数でピクセル単位の新しいキャンバス幅(canvaswidth)"

#: ../../library/turtle.rst:1656
msgid "positive integer, new height of canvas in pixels"
msgstr "正の整数でピクセル単位の新しいキャンバス高さ(canvasheight)"

#: ../../library/turtle.rst:1657
msgid "colorstring or color-tuple, new background color"
msgstr "色文字列または色タプルで新しい背景色"

#: ../../library/turtle.rst:1659
msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""
"引数が渡されなければ、現在の (キャンバス幅, キャンバス高さ) を返します。そう"
"でなければタートルが描画するキャンバスのサイズを変更します。描画ウィンドウに"
"は影響しません。キャンバスの隠れた部分を見るためにはスクロールバーを使って下"
"さい。このメソッドを使うと、以前はキャンバスの外にあったそうした図形の一部を"
"見えるようにすることができます。"

#: ../../library/turtle.rst:1671
msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr "# 逃げ出してしまったタートルを探すためとかね ;-)"

#: ../../library/turtle.rst:1676
msgid "a number, x-coordinate of lower left corner of canvas"
msgstr "数でキャンバスの左下隅の x-座標"

#: ../../library/turtle.rst:1677
msgid "a number, y-coordinate of lower left corner of canvas"
msgstr "数でキャンバスの左下隅の y-座標"

#: ../../library/turtle.rst:1678
msgid "a number, x-coordinate of upper right corner of canvas"
msgstr "数でキャンバスの右上隅の x-座標"

#: ../../library/turtle.rst:1679
msgid "a number, y-coordinate of upper right corner of canvas"
msgstr "数でキャンバスの右上隅の y-座標"

#: ../../library/turtle.rst:1681
msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""
"ユーザー定義座標系を準備し必要ならばモードを \"world\" に切り替えます。この動"
"作は ``screen.reset()`` を伴います。すでに \"world\" モードになっていた場合、"
"全ての図形は新しい座標に従って再描画されます。"

#: ../../library/turtle.rst:1685
msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr "**重要なお知らせ**: ユーザー定義座標系では角度が歪むかもしれません。"

#: ../../library/turtle.rst:1713
msgid "positive integer"
msgstr "正の整数"

#: ../../library/turtle.rst:1715
msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""
"描画の遅延(*delay*)をミリ秒単位で設定するかまたはその値を返します。(これは概"
"ね引き続くキャンバス更新の時間間隔です。) 遅延が大きくなると、アニメーション"
"は遅くなります。"

#: ../../library/turtle.rst:1719
msgid "Optional argument:"
msgstr "オプション引数:"

#: ../../library/turtle.rst:1733 ../../library/turtle.rst:1734
msgid "nonnegative integer"
msgstr "非負整数"

#: ../../library/turtle.rst:1736
msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  When called without "
"arguments, returns the currently stored value of n. Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""

#: ../../library/turtle.rst:1756
msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr "TurtleScreen の更新を実行します。トレーサーがオフの時に使われます。"

#: ../../library/turtle.rst:1758
msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr "RawTurtle/Turtle のメソッド :func:`speed` も参照して下さい。"

#: ../../library/turtle.rst:1766
msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""
"TurtleScreen に(キー・イベントを収集するために)フォーカスします。ダミー引数"
"は :func:`listen` を onclick メソッドに渡せるようにするためのものです。"

#: ../../library/turtle.rst:1773 ../../library/turtle.rst:1793
msgid "a function with no arguments or ``None``"
msgstr "引数なしの関数または ``None``"

#: ../../library/turtle.rst:1774 ../../library/turtle.rst:1794
msgid "a string: key (e.g. \"a\") or key-symbol (e.g. \"space\")"
msgstr "文字列: キー (例 \"a\") またはキー・シンボル (例 \"space\")"

#: ../../library/turtle.rst:1776
msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""
"*fun* を指定されたキーのキーリリース(key-release)イベントに束縛します。 "
"*fun* が ``None`` ならばイベント束縛は除かれます。注意: キー・イベントを登録"
"できるようにするためには TurtleScreen はフォーカスを持っていないとなりません"
"(:func:`listen` を参照)。"

#: ../../library/turtle.rst:1796
msgid ""
"Bind *fun* to key-press event of key if key is given, or to any key-press-"
"event if no key is given. Remark: in order to be able to register key-"
"events, TurtleScreen must have focus. (See method :func:`listen`.)"
msgstr ""

#: ../../library/turtle.rst:1820
msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"*fun* をタートルのマウスクリック(mouse-click)イベントに束縛します。 *fun* が "
"``None`` ならば、既存の束縛が取り除かれます。"

#: ../../library/turtle.rst:1823
msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named ``turtle``:"
msgstr ""
"Example for a ``screen`` という名の TurtleScreen インスタンスと ``turtle`` と"
"いう名前の Turtle インスタンスの例:"

#: ../../library/turtle.rst:1834
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""
"この TurtleScreen メソッドはグローバル関数としては ``onscreenclick`` という名"
"前でだけ使えます。グローバル関数 ``onclick`` は Turtle メソッドの "
"``onclick`` から派生した別ものです。"

#: ../../library/turtle.rst:1841
msgid "a function with no arguments"
msgstr "引数なし関数"

#: ../../library/turtle.rst:1842
msgid "a number >= 0"
msgstr "数 >= 0"

#: ../../library/turtle.rst:1844
msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr "*t* ミリ秒後に *fun* を呼び出すタイマーを仕掛けます。"

#: ../../library/turtle.rst:1862
msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program. Must *not* be used if a script is "
"run from within IDLE in -n mode (No subprocess) - for interactive use of "
"turtle graphics. ::"
msgstr ""

#: ../../library/turtle.rst:1875 ../../library/turtle.rst:1876
#: ../../library/turtle.rst:1888 ../../library/turtle.rst:1889
msgid "string"
msgstr "string"

#: ../../library/turtle.rst:1878
msgid ""
"Pop up a dialog window for input of a string. Parameter title is the title "
"of the dialog window, prompt is a text mostly describing what information to "
"input. Return the string input. If the dialog is canceled, return "
"``None``. ::"
msgstr ""

#: ../../library/turtle.rst:1894
msgid ""
"Pop up a dialog window for input of a number. title is the title of the "
"dialog window, prompt is a text mostly describing what numerical information "
"to input. default: default value, minval: minimum value for input, maxval: "
"maximum value for input The number input must be in the range minval .. "
"maxval if these are given. If not, a hint is issued and the dialog remains "
"open for correction. Return the number input. If the dialog is canceled,  "
"return ``None``. ::"
msgstr ""

#: ../../library/turtle.rst:1911
msgid "one of the strings \"standard\", \"logo\" or \"world\""
msgstr "文字列 \"standard\", \"logo\", \"world\" のいずれか"

#: ../../library/turtle.rst:1913
msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""
"タートルのモード(\"standard\", \"logo\", \"world\" のいずれか)を設定してリ"
"セットします。モードが渡されなければ現在のモードが返されます。"

#: ../../library/turtle.rst:1916
msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""
"モード \"standard\" は古い :mod:`turtle` 互換です。モード \"logo\" は Logo "
"タートルグラフィックスとほぼ互換です。モード \"world\" はユーザーの定義した"
"「世界座標(world coordinates)」を使います。 **重要なお知らせ**: このモードで"
"は ``x/y`` 比が 1 でないと角度が歪むかもしれません。"

#: ../../library/turtle.rst:1922
msgid "Mode"
msgstr "モード"

#: ../../library/turtle.rst:1922
msgid "Initial turtle heading"
msgstr "タートルの向きの初期値"

#: ../../library/turtle.rst:1922
msgid "positive angles"
msgstr "正の角度"

#: ../../library/turtle.rst:1924
msgid "\"standard\""
msgstr "\"standard\""

#: ../../library/turtle.rst:1924
msgid "to the right (east)"
msgstr "右 (東) 向き"

#: ../../library/turtle.rst:1924
msgid "counterclockwise"
msgstr "反時計回り"

#: ../../library/turtle.rst:1925
msgid "\"logo\""
msgstr "\"logo\""

#: ../../library/turtle.rst:1925
msgid "upward    (north)"
msgstr "上 (北) 向き"

#: ../../library/turtle.rst:1925
msgid "clockwise"
msgstr "時計回り"

#: ../../library/turtle.rst:1938
msgid "one of the values 1.0 or 255"
msgstr "1.0 か 255 のどちらかの値"

#: ../../library/turtle.rst:1940
msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..\\ *cmode*."
msgstr ""
"色モード(colormode)を返すか、または 1.0 か 255 のどちらかの値に設定します。設"
"定した後は、色トリプルの *r*, *g*, *b* 値は 0 から *cmode* の範囲になければな"
"りません。"

#: ../../library/turtle.rst:1961
msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""
"この TurtleScreen の Canvas を返します。Tkinter の Canvas を使って何をするか"
"知っている人には有用です。"

#: ../../library/turtle.rst:1974
msgid "Return a list of names of all currently available turtle shapes."
msgstr "現在使うことのできる全てのタートルの形のリストを返します。"

#: ../../library/turtle.rst:1986
msgid "There are three different ways to call this function:"
msgstr "この関数を呼び出す三つの異なる方法があります:"

#: ../../library/turtle.rst:1988
msgid ""
"*name* is the name of a gif-file and *shape* is ``None``: Install the "
"corresponding image shape. ::"
msgstr ""
"*name* が gif ファイルの名前で *shape* が ``None``: 対応する画像の形を取り込"
"みます。 ::"

#: ../../library/turtle.rst:1994
msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""
"画像の形はタートルが向きを変えても *回転しません* ので、タートルがどちらを向"
"いているか見ても判りません!"

#: ../../library/turtle.rst:1997
msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""
"*name* が任意の文字列で *shape* が座標ペアのタプル: 対応する多角形を取り込み"
"ます。"

#: ../../library/turtle.rst:2005
msgid ""
"*name* is an arbitrary string and shape is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""
"*name* が任意の文字列で *shape* が (合成形の) :class:`Shape` オブジェクト: 対"
"応する合成形を取り込みます。"

#: ../../library/turtle.rst:2008
msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""
"タートルの形を TurtleScreen の形リスト(shapelist)に加えます。このように登録さ"
"れた形だけが ``shape(shapename)`` コマンドに使えます。"

#: ../../library/turtle.rst:2014
msgid "Return the list of turtles on the screen."
msgstr "スクリーン上のタートルのリストを返します。"

#: ../../library/turtle.rst:2025
msgid "Return the height of the turtle window. ::"
msgstr "タートルウィンドウの高さを返します。 ::"

#: ../../library/turtle.rst:2033
msgid "Return the width of the turtle window. ::"
msgstr "タートルウィンドウの幅を返します。 ::"

#: ../../library/turtle.rst:2042
msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr "Screen 独自のメソッド、TurtleScreen から継承したもの以外"

#: ../../library/turtle.rst:2046
msgid "Shut the turtlegraphics window."
msgstr "タートルグラフィックス(turtlegraphics)のウィンドウを閉じます。"

#: ../../library/turtle.rst:2051
msgid "Bind ``bye()`` method to mouse clicks on the Screen."
msgstr "スクリーン上のマウスクリックに ``bye()`` メソッドを束縛します。"

#: ../../library/turtle.rst:2054
msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""
"設定辞書中の \"using_IDLE\" の値が ``False`` (デフォルトです) の場合、さらに"
"メインループ(mainloop)に入ります。注意: もし IDLE が ``-n`` スイッチ(サブプロ"
"セスなし)付きで使われているときは、この値は :file:`turtle.cfg` の中で "
"``True`` とされているべきです。この場合、IDLE のメインループもクライアントス"
"クリプトから見てアクティブです。"

#: ../../library/turtle.rst:2063
msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""
"メインウィンドウのサイズとポジションを設定します。引数のデフォルト値は設定辞"
"書に収められており、 :file:`turtle.cfg` ファイルを通じて変更できます。"

#: ../../library/turtle.rst:2067
msgid ""
"if an integer, a size in pixels, if a float, a fraction of the screen; "
"default is 50% of screen"
msgstr ""
"整数ならばピクセル単位のサイズ、浮動小数点数ならばスクリーンに対する割合 (ス"
"クリーンの 50% がデフォルト)"

#: ../../library/turtle.rst:2069
msgid ""
"if an integer, the height in pixels, if a float, a fraction of the screen; "
"default is 75% of screen"
msgstr ""
"整数ならばピクセル単位の高さ、浮動小数点数ならばスクリーンに対する割合 (スク"
"リーンの 75% がデフォルト)"

#: ../../library/turtle.rst:2071
msgid ""
"if positive, starting position in pixels from the left edge of the screen, "
"if negative from the right edge, if ``None``, center window horizontally"
msgstr ""
"正の数ならばスクリーンの左端からピクセル単位で測った開始位置、 負の数ならば右"
"端から、``None`` ならば水平方向に真ん中"

#: ../../library/turtle.rst:2074
msgid ""
"if positive, starting position in pixels from the top edge of the screen, if "
"negative from the bottom edge, if ``None``, center window vertically"
msgstr ""
"正の数ならばスクリーンの上端からピクセル単位で測った開始位置、 負の数ならば下"
"端から、``None`` ならば垂直方向に真ん中"

#: ../../library/turtle.rst:2089
msgid "a string that is shown in the titlebar of the turtle graphics window"
msgstr "タートルグラフィックスウィンドウのタイトルバーに表示される文字列"

#: ../../library/turtle.rst:2092
msgid "Set title of turtle window to *titlestring*."
msgstr "ウインドウのタイトルを *titlestring* に設定します。"

#: ../../library/turtle.rst:2101
msgid "Public classes"
msgstr ""

#: ../../library/turtle.rst:2107
msgid ""
"a :class:`tkinter.Canvas`, a :class:`ScrolledCanvas` or a :class:"
"`TurtleScreen`"
msgstr ""
":class:`tkinter.Canvas`, :class:`ScrolledCanvas`, :class:`TurtleScreen` のい"
"ずれか"

#: ../../library/turtle.rst:2110
msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""
"タートルを作ります。タートルには上の「Turtle/RawTurtle のメソッド」で説明した"
"全てのメソッドがあります。"

#: ../../library/turtle.rst:2116
msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""
"RawTurtle のサブクラスで同じインターフェイスを持ちますが、最初に必要になった"
"とき自動的に作られる :class:`Screen` オブジェクトに描画します。"

#: ../../library/turtle.rst:2122
msgid "a :class:`tkinter.Canvas`"
msgstr ":class:`tkinter.Canvas`"

#: ../../library/turtle.rst:2124
msgid ""
"Provides screen oriented methods like :func:`setbg` etc. that are described "
"above."
msgstr ""
"上で説明した :func:`setbg` のようなスクリーン向けのメソッドを提供します。"

#: ../../library/turtle.rst:2129
msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""
"TurtleScreen のサブクラスで :ref:`4つのメソッドが加わっています "
"<screenspecific>` 。"

#: ../../library/turtle.rst:2134
msgid ""
"some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas "
"with scrollbars added"
msgstr ""
"この ScrolledCanvas すなわちスクロールバーの付いた Tkinter canvas を収める "
"Tkinter ウィジェット"

#: ../../library/turtle.rst:2137
msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""
"タートルたちが遊び回る場所として自動的に ScrolledCanvas を提供する Screen ク"
"ラスによって使われます。"

#: ../../library/turtle.rst:2142
msgid "one of the strings \"polygon\", \"image\", \"compound\""
msgstr "文字列 \"polygon\", \"image\", \"compound\" のいずれか"

#: ../../library/turtle.rst:2144
msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""
"形をモデル化するデータ構造。ペア ``(type_, data)`` は以下の仕様に従わなければ"
"なりません:"

#: ../../library/turtle.rst:2149
msgid "*type_*"
msgstr "*type_*"

#: ../../library/turtle.rst:2149
msgid "*data*"
msgstr "*data*"

#: ../../library/turtle.rst:2151
msgid "\"polygon\""
msgstr "\"polygon\""

#: ../../library/turtle.rst:2151
msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr "多角形タプル、すなわち座標ペアのタプル"

#: ../../library/turtle.rst:2152
msgid "\"image\""
msgstr "\"image\""

#: ../../library/turtle.rst:2152
msgid "an image  (in this form only used internally!)"
msgstr "画像  (この形式は内部的にのみ使用されます!)"

#: ../../library/turtle.rst:2153
msgid "\"compound\""
msgstr "\"compound\""

#: ../../library/turtle.rst:2153
msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""
"``None`` (合成形は :meth:`addcomponent` メソッドを使って作らなければなりませ"
"ん)"

#: ../../library/turtle.rst:2159
msgid "a polygon, i.e. a tuple of pairs of numbers"
msgstr "多角形、すなわち数のペアのタプル"

#: ../../library/turtle.rst:2160
msgid "a color the *poly* will be filled with"
msgstr "*poly* を塗りつぶす色"

#: ../../library/turtle.rst:2161
msgid "a color for the poly's outline (if given)"
msgstr "*poly* のアウトラインの色 (与えられた場合)"

#: ../../library/turtle.rst:2163
msgid "Example:"
msgstr "例:"

#: ../../library/turtle.rst:2173
msgid "See :ref:`compoundshapes`."
msgstr ":ref:`compoundshapes` を参照。"

#: ../../library/turtle.rst:2178
msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""
"2次元ベクトルのクラスで、タートルグラフィックスを実装するための補助クラス。"
"タートルグラフィックスを使ったプログラムでも有用でしょう。タプルから派生して"
"いるので、ベクターはタプルです!"

#: ../../library/turtle.rst:2182
msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr "以下の演算が使えます (*a*, *b* はベクトル、 *k* は数):"

#: ../../library/turtle.rst:2184
msgid "``a + b`` vector addition"
msgstr "``a + b`` ベクトル和"

#: ../../library/turtle.rst:2185
msgid "``a - b`` vector subtraction"
msgstr "``a - b`` ベクトル差"

#: ../../library/turtle.rst:2186
msgid "``a * b`` inner product"
msgstr "``a * b`` 内積"

#: ../../library/turtle.rst:2187
msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr "``k * a`` および ``a * k`` スカラー倍"

#: ../../library/turtle.rst:2188
msgid "``abs(a)`` absolute value of a"
msgstr "``abs(a)`` a の絶対値"

#: ../../library/turtle.rst:2189
msgid "``a.rotate(angle)`` rotation"
msgstr "``a.rotate(angle)`` 回転"

#: ../../library/turtle.rst:2193
msgid "Help and configuration"
msgstr "ヘルプと設定"

#: ../../library/turtle.rst:2196
msgid "How to use help"
msgstr "ヘルプの使い方"

#: ../../library/turtle.rst:2198
msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""
"Screen と Turtle クラスのパブリックメソッドはドキュメント文字列で網羅的に文書"
"化されていますので、Python のヘルプ機能を通じてオンラインヘルプとして利用でき"
"ます:"

#: ../../library/turtle.rst:2202
msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""
"IDLE を使っているときは、打ち込んだ関数/メソッド呼び出しのシグニチャとドキュ"
"メント文字列の一行目がツールチップとして表示されます。"

#: ../../library/turtle.rst:2205
msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""
":func:`help` をメソッドや関数に対して呼び出すとドキュメント文字列が表示されま"
"す::"

#: ../../library/turtle.rst:2236
msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr "メソッドに由来する関数のドキュメント文字列は変更された形をとります::"

#: ../../library/turtle.rst:2270
msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""
"これらの変更されたドキュメント文字列はインポート時にメソッドから導出される関"
"数定義と一緒に自動的に作られます。"

#: ../../library/turtle.rst:2275
msgid "Translation of docstrings into different languages"
msgstr "ドキュメント文字列の翻訳"

#: ../../library/turtle.rst:2277
msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""
"Screen と Turtle クラスのパブリックメソッドについて、キーがメソッド名で値がド"
"キュメント文字列である辞書を作るユーティリティがあります。"

#: ../../library/turtle.rst:2283
msgid "a string, used as filename"
msgstr "ファイル名として使われる文字列"

#: ../../library/turtle.rst:2285
msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""
"ドキュメント文字列辞書(docstring-dictionary)を作って与えられたファイル名の "
"Python スクリプトに書き込みます。この関数はわざわざ呼び出さなければなりませ"
"ん (タートルグラフィックスのクラスから使われることはありません)。ドキュメント"
"文字列辞書は :file:`{filename}.py` という Python スクリプトに書き込まれます。"
"ドキュメント文字列の異なった言語への翻訳に対するテンプレートとして使われるこ"
"とを意図したものです。"

#: ../../library/turtle.rst:2291
msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""
"もしあなたが(またはあなたの生徒さんが) :mod:`turtle` を自国語のオンラインヘル"
"プ付きで使いたいならば、ドキュメント文字列を翻訳してできあがったファイルをた"
"とえば :file:`turtle_docstringdict_german.py` という名前で保存しなければなり"
"ません。"

#: ../../library/turtle.rst:2295
msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""
"さらに :file:`turtle.cfg` ファイルで適切な設定をしておけば、このファイルがイ"
"ンポート時に読み込まれて元の英語のドキュメント文字列を置き換えます。"

#: ../../library/turtle.rst:2298
msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""
"この文書を書いている時点ではドイツ語とイタリア語のドキュメント文字列辞書が存"
"在します。 ( glingl@aon.at にリクエストして下さい。)"

#: ../../library/turtle.rst:2304
msgid "How to configure Screen and Turtles"
msgstr "Screen および Turtle の設定方法"

#: ../../library/turtle.rst:2306
msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""
"初期デフォルト設定では古い turtle の見た目と振る舞いを真似るようにして、互換"
"性を最大限に保つようにしています。"

#: ../../library/turtle.rst:2309
msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""
"このモジュールの特性を反映した、あるいは個々人の必要性 (たとえばクラスルーム"
"での使用)に合致した、異なった設定を使いたい場合、設定ファイル ``turtle.cfg`` "
"を用意してインポート時に読み込ませその設定に従わせることができます。"

#: ../../library/turtle.rst:2314
msgid ""
"The built in configuration would correspond to the following turtle.cfg::"
msgstr "初期設定は以下の turtle.cfg に対応します::"

#: ../../library/turtle.rst:2337
msgid "Short explanation of selected entries:"
msgstr "いくつかピックアップしたエントリーの短い説明:"

#: ../../library/turtle.rst:2339
msgid ""
"The first four lines correspond to the arguments of the :meth:`Screen.setup` "
"method."
msgstr "最初の4行は :meth:`Screen.setup` メソッドの引数に当たります。"

#: ../../library/turtle.rst:2341
msgid ""
"Line 5 and 6 correspond to the arguments of the method :meth:`Screen."
"screensize`."
msgstr "5行目6行目は :meth:`Screen.screensize` メソッドの引数に当たります。"

#: ../../library/turtle.rst:2343
msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""
"*shape* は最初から用意されている形ならどれでも使えます(arrow, turtle など)。"
"詳しくは ``help(shape)`` をお試し下さい。"

#: ../../library/turtle.rst:2345
msgid ""
"If you want to use no fillcolor (i.e. make the turtle transparent), you have "
"to write ``fillcolor = \"\"`` (but all nonempty strings must not have quotes "
"in the cfg-file)."
msgstr ""
"塗りつぶしの色(fillcolor)を使いたくない(つまりタートルを透明にしたい)場合、 "
"``fillcolor = \"\"`` と書かなければなりません (しかし全ての空でない文字列は "
"cfg ファイル中で引用符を付けてはいけません)。"

#: ../../library/turtle.rst:2348
msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""
"タートルにその状態を反映させるためには ``resizemode = auto`` とします。"

#: ../../library/turtle.rst:2350
msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`."
msgstr ""
"たとえば ``language = italian`` とするとドキュメント文字列辞書"
"(docstringdict) として :file:`turtle_docstringdict_italian.py` がインポート時"
"に読み込まれます (もしそれがインポートパス、たとえば :mod:`turtle` と同じディ"
"レクトリにあれば)。"

#: ../../library/turtle.rst:2353
msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""
"*exampleturtle* および *examplescreen* はこれらのオブジェクトのドキュメント文"
"字列内での呼び名を決めます。メソッドのドキュメント文字列から関数のドキュメン"
"ト文字列に変換する際に、これらの名前は取り除かれます。"

#: ../../library/turtle.rst:2357
msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its -"
"n switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""
"*using_IDLE*: IDLE とその -n スイッチ(サブプロセスなし)を常用するならば、この"
"値を ``True`` に設定して下さい。これにより :func:`exitonclick` がメインループ"
"(mainloop)に入るのを阻止します。"

#: ../../library/turtle.rst:2361
msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""
":file:`turtle.cfg` ファイルは :mod:`turtle` の保存されているディレクトリと現"
"在の作業ディレクトリに追加的に存在し得ます。後者が前者の設定をオーバーライド"
"します。"

#: ../../library/turtle.rst:2365
msgid ""
"The :file:`Lib/turtledemo` directory contains a :file:`turtle.cfg` file.  "
"You can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""
":file:`Lib/turtledemo` ディレクトリにも :file:`turtle.cfg` ファイルがありま"
"す。 デモを実際に(できればデモビュワーからでなく)実行してそこに書かれたものと"
"その効果を学びましょう。"

#: ../../library/turtle.rst:2371
msgid ":mod:`turtledemo` --- Demo scripts"
msgstr ":mod:`turtledemo` --- デモスクリプト"

#: ../../library/turtle.rst:2376
msgid ""
"The :mod:`turtledemo` package includes a set of demo scripts.  These scripts "
"can be run and viewed using the supplied demo viewer as follows::"
msgstr ""
"`turtledemo`パッケージには一連のデモスクリプトが含まれています。これらのスク"
"リプトは以下のように、付属のデモビューアを使用して実行および表示できます::"

#: ../../library/turtle.rst:2381
msgid ""
"Alternatively, you can run the demo scripts individually.  For example, ::"
msgstr "あるいは、個別にデモスクリプトを実行できます。たとえば 、::"

#: ../../library/turtle.rst:2385
msgid "The :mod:`turtledemo` package directory contains:"
msgstr "`turtledemo`パッケージのディレクトリには次のものが含まれます:"

#: ../../library/turtle.rst:2387
msgid ""
"A demo viewer :file:`__main__.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time."
msgstr ""
"ソースコードを眺めつつスクリプトを実行できるデモビュワー :file:`__main__."
"py` 。 "

#: ../../library/turtle.rst:2389
msgid ""
"Multiple scripts demonstrating different features of the :mod:`turtle` "
"module.  Examples can be accessed via the Examples menu.  They can also be "
"run standalone."
msgstr ""

#: ../../library/turtle.rst:2392
msgid ""
"A :file:`turtle.cfg` file which serves as an example of how to write and use "
"such files."
msgstr ""
"設定ファイルの書き方や使い方の例として参考にできる :file:`turtle.cfg` ファイ"
"ル。"

#: ../../library/turtle.rst:2395
msgid "The demo scripts are:"
msgstr "デモスクリプトは以下の通りです:"

#: ../../library/turtle.rst:2400
msgid "Name"
msgstr "名前"

#: ../../library/turtle.rst:2400
msgid "Description"
msgstr "説明"

#: ../../library/turtle.rst:2400
msgid "Features"
msgstr "フィーチャー"

#: ../../library/turtle.rst:2402
msgid "bytedesign"
msgstr "bytedesign"

#: ../../library/turtle.rst:2402
msgid "complex classical turtle graphics pattern"
msgstr "複雑な古典的タートルグラフィックスパターン"

#: ../../library/turtle.rst:2402
msgid ":func:`tracer`, delay, :func:`update`"
msgstr ":func:`tracer`, delay, :func:`update`"

#: ../../library/turtle.rst:2405
msgid "chaos"
msgstr "chaos"

#: ../../library/turtle.rst:2405
msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""
"verhust 力学系のグラフ化, コンピュータの計算が常識的な予想に反する場合がある"
"ことを示します。"

#: ../../library/turtle.rst:2405
msgid "world coordinates"
msgstr "世界座標系"

#: ../../library/turtle.rst:2411
msgid "clock"
msgstr "clock"

#: ../../library/turtle.rst:2411
msgid "analog clock showing time of your computer"
msgstr "コンピュータの時間を示すアナログ時計"

#: ../../library/turtle.rst:2411
msgid "turtles as clock's hands, ontimer"
msgstr "タートルが時計の針, ontimer"

#: ../../library/turtle.rst:2414
msgid "colormixer"
msgstr "colormixer"

#: ../../library/turtle.rst:2414
msgid "experiment with r, g, b"
msgstr "r, g, b の実験"

#: ../../library/turtle.rst:2416
msgid "forest"
msgstr ""

#: ../../library/turtle.rst:2416
msgid "3 breadth-first trees"
msgstr ""

#: ../../library/turtle.rst:2416
msgid "randomization"
msgstr ""

#: ../../library/turtle.rst:2418
msgid "fractalcurves"
msgstr "fractalcurves"

#: ../../library/turtle.rst:2418
msgid "Hilbert & Koch curves"
msgstr "Hilbert & Koch 曲線"

#: ../../library/turtle.rst:2418
msgid "recursion"
msgstr "再帰"

#: ../../library/turtle.rst:2420
msgid "lindenmayer"
msgstr "lindenmayer"

#: ../../library/turtle.rst:2420
msgid "ethnomathematics (indian kolams)"
msgstr "民俗的数学 (インド kolams)"

#: ../../library/turtle.rst:2420
msgid "L-System"
msgstr "L-システム"

#: ../../library/turtle.rst:2423
msgid "minimal_hanoi"
msgstr "minimal_hanoi"

#: ../../library/turtle.rst:2423
msgid "Towers of Hanoi"
msgstr "ハノイの塔"

#: ../../library/turtle.rst:2423
msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr "ハノイ盤として正方形のタートル (shape, shapesize)"

#: ../../library/turtle.rst:2427
msgid "nim"
msgstr ""

#: ../../library/turtle.rst:2427
msgid ""
"play the classical nim game with three heaps of sticks against the computer."
msgstr ""

#: ../../library/turtle.rst:2427
msgid "turtles as nimsticks, event driven (mouse, keyboard)"
msgstr ""

#: ../../library/turtle.rst:2431
msgid "paint"
msgstr "paint"

#: ../../library/turtle.rst:2431
msgid "super minimalistic drawing program"
msgstr "超極小主義的描画プログラム"

#: ../../library/turtle.rst:2434
msgid "peace"
msgstr "peace"

#: ../../library/turtle.rst:2434
msgid "elementary"
msgstr "初歩的"

#: ../../library/turtle.rst:2434
msgid "turtle: appearance and animation"
msgstr "turtle: 見た目とアニメーション"

#: ../../library/turtle.rst:2437
msgid "penrose"
msgstr "penrose"

#: ../../library/turtle.rst:2437
msgid "aperiodic tiling with kites and darts"
msgstr "凧と矢による非周期的タイリング"

#: ../../library/turtle.rst:2440
msgid "planet_and_moon"
msgstr "planet_and_moon"

#: ../../library/turtle.rst:2440
msgid "simulation of gravitational system"
msgstr "重力系のシミュレーション"

#: ../../library/turtle.rst:2440
msgid "compound shapes, :class:`Vec2D`"
msgstr "合成形, :class:`Vec2D`"

#: ../../library/turtle.rst:2443
msgid "round_dance"
msgstr ""

#: ../../library/turtle.rst:2443
msgid "dancing turtles rotating pairwise in opposite direction"
msgstr ""

#: ../../library/turtle.rst:2443
msgid "compound shapes, clone shapesize, tilt, get_shapepoly, update"
msgstr ""

#: ../../library/turtle.rst:2447
msgid "sorting_animate"
msgstr ""

#: ../../library/turtle.rst:2447
msgid "visual demonstration of different sorting methods"
msgstr ""

#: ../../library/turtle.rst:2447
msgid "simple alignment, randomization"
msgstr ""

#: ../../library/turtle.rst:2450
msgid "tree"
msgstr "tree"

#: ../../library/turtle.rst:2450
msgid "a (graphical) breadth first tree (using generators)"
msgstr "(図形的) 幅優先木 (ジェネレータを使って)"

#: ../../library/turtle.rst:2453
msgid "two_canvases"
msgstr ""

#: ../../library/turtle.rst:2453
msgid "simple design"
msgstr ""

#: ../../library/turtle.rst:2453
msgid "turtles on two canvases"
msgstr ""

#: ../../library/turtle.rst:2456
msgid "wikipedia"
msgstr "wikipedia"

#: ../../library/turtle.rst:2456
msgid "a pattern from the wikipedia article on turtle graphics"
msgstr "タートルグラフィックスについての wikipedia の記事の例"

#: ../../library/turtle.rst:2456
msgid ":func:`clone`, :func:`undo`"
msgstr ":func:`clone`, :func:`undo`"

#: ../../library/turtle.rst:2459
msgid "yinyang"
msgstr ""

#: ../../library/turtle.rst:2459
msgid "another elementary example"
msgstr "もう一つの初歩的な例"

#: ../../library/turtle.rst:2462
msgid "Have fun!"
msgstr "楽しんでね!"

#: ../../library/turtle.rst:2466
msgid "Changes since Python 2.6"
msgstr "python 2.6からの変更点"

#: ../../library/turtle.rst:2468
msgid ""
"The methods :meth:`Turtle.tracer`, :meth:`Turtle.window_width` and :meth:"
"`Turtle.window_height` have been eliminated. Methods with these names and "
"functionality are now available only as methods of :class:`Screen`. The "
"functions derived from these remain available. (In fact already in Python "
"2.6 these methods were merely duplications of the corresponding :class:"
"`TurtleScreen`/:class:`Screen`-methods.)"
msgstr ""

#: ../../library/turtle.rst:2476
msgid ""
"The method :meth:`Turtle.fill` has been eliminated. The behaviour of :meth:"
"`begin_fill` and :meth:`end_fill` have changed slightly: now  every filling-"
"process must be completed with an ``end_fill()`` call."
msgstr ""

#: ../../library/turtle.rst:2481
msgid ""
"A method :meth:`Turtle.filling` has been added. It returns a boolean value: "
"``True`` if a filling process is under way, ``False`` otherwise. This "
"behaviour corresponds to a ``fill()`` call without arguments in Python 2.6."
msgstr ""

#: ../../library/turtle.rst:2487
msgid "Changes since Python 3.0"
msgstr "python 3.0からの変更点"

#: ../../library/turtle.rst:2489
msgid ""
"The methods :meth:`Turtle.shearfactor`, :meth:`Turtle.shapetransform` and :"
"meth:`Turtle.get_shapepoly` have been added. Thus the full range of regular "
"linear transforms is now available for transforming turtle shapes. :meth:"
"`Turtle.tiltangle` has been enhanced in functionality: it now can be used to "
"get or set the tiltangle. :meth:`Turtle.settiltangle` has been deprecated."
msgstr ""

#: ../../library/turtle.rst:2496
msgid ""
"The method :meth:`Screen.onkeypress` has been added as a complement to :meth:"
"`Screen.onkey` which in fact binds actions to the keyrelease event. "
"Accordingly the latter has got an alias: :meth:`Screen.onkeyrelease`."
msgstr ""

#: ../../library/turtle.rst:2500
msgid ""
"The method  :meth:`Screen.mainloop` has been added. So when working only "
"with Screen and Turtle objects one must not additionally import :func:"
"`mainloop` anymore."
msgstr ""

#: ../../library/turtle.rst:2504
msgid ""
"Two input methods has been added :meth:`Screen.textinput` and :meth:`Screen."
"numinput`. These popup input dialogs and return strings and numbers "
"respectively."
msgstr ""

#: ../../library/turtle.rst:2508
msgid ""
"Two example scripts :file:`tdemo_nim.py` and :file:`tdemo_round_dance.py` "
"have been added to the :file:`Lib/turtledemo` directory."
msgstr ""
