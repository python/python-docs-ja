# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2023
# Arihiro TAKASE, 2024
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-11 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:08+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/locale.rst:2
msgid ":mod:`!locale` --- Internationalization services"
msgstr ":mod:`!locale` --- 国際化サービス"

#: ../../library/locale.rst:10
msgid "**Source code:** :source:`Lib/locale.py`"
msgstr "**ソースコード:** :source:`Lib/locale.py`"

#: ../../library/locale.rst:14
msgid ""
"The :mod:`locale` module opens access to the POSIX locale database and "
"functionality. The POSIX locale mechanism allows programmers to deal with "
"certain cultural issues in an application, without requiring the programmer "
"to know all the specifics of each country where the software is executed."
msgstr ""
":mod:`locale` モジュールは POSIX ロケールデータベースおよびロケール関連機能へ"
"のアクセスを提供します。 POSIX ロケール機構を使うことで、プログラマはソフト"
"ウェアが実行される各国における詳細を知らなくても、アプリケーション上で特定の"
"地域文化に関係する部分を扱うことができます。"

#: ../../library/locale.rst:21
msgid ""
"The :mod:`locale` module is implemented on top of the :mod:`!_locale` "
"module, which in turn uses an ANSI C locale implementation if available."
msgstr ""

#: ../../library/locale.rst:24
msgid "The :mod:`locale` module defines the following exception and functions:"
msgstr ":mod:`locale` モジュールでは以下の例外と関数を定義しています:"

#: ../../library/locale.rst:29
msgid ""
"Exception raised when the locale passed to :func:`setlocale` is not "
"recognized."
msgstr ""
":func:`setlocale` に渡されたロケールが認識されない場合例外が送出されます。"

#: ../../library/locale.rst:35
msgid ""
"If *locale* is given and not ``None``, :func:`setlocale` modifies the locale "
"setting for the *category*. The available categories are listed in the data "
"description below. *locale* may be a string, or an iterable of two strings "
"(language code and encoding). If it's an iterable, it's converted to a "
"locale name using the locale aliasing engine. An empty string specifies the "
"user's default settings. If the modification of the locale fails, the "
"exception :exc:`Error` is raised. If successful, the new locale setting is "
"returned."
msgstr ""
"*locale* が渡され ``None`` でない場合、:func:`setlocale` は *category* のロ"
"ケール設定を変更します。利用可能なカテゴリーは下記の表を参照してください。 "
"*locale* は文字列か2つの文字列の iterable (言語コードと文字コード) です。"
"iterale の場合 locale aliasing engine を用いてロケール名に変換されます。空の"
"文字列はユーザのデフォルトの設定を指定します。ロケールの変更に失敗した場合 :"
"exc:`Error` が送出されます。成功した場合新しいロケールの設定が返されます。"

#: ../../library/locale.rst:43
msgid ""
"If *locale* is omitted or ``None``, the current setting for *category* is "
"returned."
msgstr ""
"*locale* が省略されたり ``None`` の場合、*category* の現在の設定が返されま"
"す。"

#: ../../library/locale.rst:46
msgid ""
":func:`setlocale` is not thread-safe on most systems. Applications typically "
"start with a call of ::"
msgstr ""
":func:`setlocale` はほとんどのシステムでスレッド安全ではありません。アプリ"
"ケーションを書くとき、大抵は以下のコード ::"

#: ../../library/locale.rst:49
msgid ""
"import locale\n"
"locale.setlocale(locale.LC_ALL, '')"
msgstr ""

#: ../../library/locale.rst:52
msgid ""
"This sets the locale for all categories to the user's default setting "
"(typically specified in the :envvar:`LANG` environment variable).  If the "
"locale is not changed thereafter, using multithreading should not cause "
"problems."
msgstr ""
"から書き始めます。これは全てのカテゴリをユーザの環境における標準設定 (大抵は"
"環境変数 :envvar:`LANG` で指定されています) に設定します。その後複数スレッド"
"を使ってロケールを変更したりしない限り、問題は起こらないはずです。"

#: ../../library/locale.rst:59
msgid ""
"Returns the database of the local conventions as a dictionary. This "
"dictionary has the following strings as keys:"
msgstr ""
"地域的な慣行のデータベースを辞書として返します。辞書は以下の文字列をキーとし"
"て持っています:"

#: ../../library/locale.rst:65
msgid "Category"
msgstr "カテゴリ"

#: ../../library/locale.rst:65
msgid "Key"
msgstr "キー"

#: ../../library/locale.rst:65
msgid "Meaning"
msgstr "意味"

#: ../../library/locale.rst:67
msgid ":const:`LC_NUMERIC`"
msgstr ":const:`LC_NUMERIC`"

#: ../../library/locale.rst:67
msgid "``'decimal_point'``"
msgstr "``'decimal_point'``"

#: ../../library/locale.rst:67
msgid "Decimal point character."
msgstr "小数点を表す文字です。"

#: ../../library/locale.rst:69
msgid "``'grouping'``"
msgstr "``'grouping'``"

#: ../../library/locale.rst:69
msgid ""
"Sequence of numbers specifying which relative positions the "
"``'thousands_sep'`` is expected.  If the sequence is terminated with :const:"
"`CHAR_MAX`, no further grouping is performed. If the sequence terminates "
"with a ``0``,  the last group size is repeatedly used."
msgstr ""
"``'thousands_sep'`` が来るかもしれない場所を相対的に表した数からなる配列で"
"す。配列が :const:`CHAR_MAX` で終端されている場合、それ以上の桁では桁数字のグ"
"ループ化を行いません。配列が ``0`` で終端されている場合、最後に指定したグルー"
"プが反復的に使われます。"

#: ../../library/locale.rst:80
msgid "``'thousands_sep'``"
msgstr "``'thousands_sep'``"

#: ../../library/locale.rst:80
msgid "Character used between groups."
msgstr "桁グループ間を区切るために使われる文字です。"

#: ../../library/locale.rst:82
msgid ":const:`LC_MONETARY`"
msgstr ":const:`LC_MONETARY`"

#: ../../library/locale.rst:82
msgid "``'int_curr_symbol'``"
msgstr "``'int_curr_symbol'``"

#: ../../library/locale.rst:82
msgid "International currency symbol."
msgstr "国際通貨を表現する記号です。"

#: ../../library/locale.rst:84
msgid "``'currency_symbol'``"
msgstr "``'currency_symbol'``"

#: ../../library/locale.rst:84
msgid "Local currency symbol."
msgstr "地域的な通貨を表現する記号です。"

#: ../../library/locale.rst:86
msgid "``'p_cs_precedes/n_cs_precedes'``"
msgstr "``'p_cs_precedes/n_cs_precedes'``"

#: ../../library/locale.rst:86
msgid ""
"Whether the currency symbol precedes the value (for positive resp. negative "
"values)."
msgstr ""
"通貨記号が値の前につくかどうかです (それぞれ正の値、負の値を表します)。"

#: ../../library/locale.rst:91
msgid "``'p_sep_by_space/n_sep_by_space'``"
msgstr "``'p_sep_by_space/n_sep_by_space'``"

#: ../../library/locale.rst:91
msgid ""
"Whether the currency symbol is separated from the value  by a space (for "
"positive resp. negative values)."
msgstr ""
"通貨記号と値との間にスペースを入れるかどうかです (それぞれ正の値、負の値を表"
"します)。"

#: ../../library/locale.rst:96
msgid "``'mon_decimal_point'``"
msgstr "``'mon_decimal_point'``"

#: ../../library/locale.rst:96
msgid "Decimal point used for monetary values."
msgstr "金額表示の際に使われる小数点です。"

#: ../../library/locale.rst:99
msgid "``'frac_digits'``"
msgstr "``'frac_digits'``"

#: ../../library/locale.rst:99
msgid ""
"Number of fractional digits used in local formatting of monetary values."
msgstr "金額を地域的な方法で表現する際の小数点以下の桁数です。"

#: ../../library/locale.rst:103
msgid "``'int_frac_digits'``"
msgstr "``'int_frac_digits'``"

#: ../../library/locale.rst:103
msgid ""
"Number of fractional digits used in international formatting of monetary "
"values."
msgstr "金額を国際的な方法で表現する際の小数点以下の桁数です。"

#: ../../library/locale.rst:107
msgid "``'mon_thousands_sep'``"
msgstr "``'mon_thousands_sep'``"

#: ../../library/locale.rst:107
msgid "Group separator used for monetary values."
msgstr "金額表示の際に桁区切り記号です。"

#: ../../library/locale.rst:110
msgid "``'mon_grouping'``"
msgstr "``'mon_grouping'``"

#: ../../library/locale.rst:110
msgid "Equivalent to ``'grouping'``, used for monetary values."
msgstr "``'grouping'`` と同じで、金額表示の際に使われます。"

#: ../../library/locale.rst:113
msgid "``'positive_sign'``"
msgstr "``'positive_sign'``"

#: ../../library/locale.rst:113
msgid "Symbol used to annotate a positive monetary value."
msgstr "正の値の金額表示に使われる記号です。"

#: ../../library/locale.rst:116
msgid "``'negative_sign'``"
msgstr "``'negative_sign'``"

#: ../../library/locale.rst:116
msgid "Symbol used to annotate a negative monetary value."
msgstr "負の値の金額表示に使われる記号です。"

#: ../../library/locale.rst:119
msgid "``'p_sign_posn/n_sign_posn'``"
msgstr "``'p_sign_posn/n_sign_posn'``"

#: ../../library/locale.rst:119
msgid ""
"The position of the sign (for positive resp. negative values), see below."
msgstr ""
"符号の位置です (それぞれ正の値と負の値を表します)。以下を参照してください。"

#: ../../library/locale.rst:124
msgid ""
"All numeric values can be set to :const:`CHAR_MAX` to indicate that there is "
"no value specified in this locale."
msgstr ""
"数値形式の値に :const:`CHAR_MAX` を設定すると、そのロケールでは値が指定されて"
"いないことを表します。"

#: ../../library/locale.rst:127
msgid ""
"The possible values for ``'p_sign_posn'`` and ``'n_sign_posn'`` are given "
"below."
msgstr ""
"``'p_sign_posn'`` および ``'n_sign_posn'`` の取り得る値は以下の通りです。"

#: ../../library/locale.rst:130
msgid "Value"
msgstr "値"

#: ../../library/locale.rst:130
msgid "Explanation"
msgstr "説明"

#: ../../library/locale.rst:132
msgid "``0``"
msgstr "``0``"

#: ../../library/locale.rst:132
msgid "Currency and value are surrounded by parentheses."
msgstr "通貨記号および値は丸括弧で囲われます。"

#: ../../library/locale.rst:135
msgid "``1``"
msgstr "``1``"

#: ../../library/locale.rst:135
msgid "The sign should precede the value and currency symbol."
msgstr "符号は値と通貨記号より前に来ます。"

#: ../../library/locale.rst:138
msgid "``2``"
msgstr "``2``"

#: ../../library/locale.rst:138
msgid "The sign should follow the value and currency symbol."
msgstr "符号は値と通貨記号の後に続きます。"

#: ../../library/locale.rst:141
msgid "``3``"
msgstr "``3``"

#: ../../library/locale.rst:141
msgid "The sign should immediately precede the value."
msgstr "符号は値の直前に来ます。"

#: ../../library/locale.rst:144
msgid "``4``"
msgstr "``4``"

#: ../../library/locale.rst:144
msgid "The sign should immediately follow the value."
msgstr "符号は値の直後に来ます。"

#: ../../library/locale.rst:147
msgid "``CHAR_MAX``"
msgstr "``CHAR_MAX``"

#: ../../library/locale.rst:147
msgid "Nothing is specified in this locale."
msgstr "このロケールでは特に指定しません。"

#: ../../library/locale.rst:150
msgid ""
"The function temporarily sets the ``LC_CTYPE`` locale to the ``LC_NUMERIC`` "
"locale or the ``LC_MONETARY`` locale if locales are different and numeric or "
"monetary strings are non-ASCII. This temporary change affects other threads."
msgstr ""
"``LC_NUMERIC`` ロケールや ``LC_MONETARY`` ロケールが ``LC_CTYPE`` ロケールと"
"異なっていて、数値文字列や通貨文字列が非 ASCII 文字列の場合、この関数は一時的"
"に ``LC_NUMERIC`` ロケールや ``LC_MONETARY`` ロケールに ``LC_CTYPE`` ロケール"
"を設定します。\n"
"この一時的な変更は他のスレッドに影響を及ぼします。"

#: ../../library/locale.rst:154
msgid ""
"The function now temporarily sets the ``LC_CTYPE`` locale to the "
"``LC_NUMERIC`` locale in some cases."
msgstr ""
"この関数は、一時的に ``LC_NUMERIC`` ロケールに ``LC_CTYPE`` ロケールを設定す"
"る場合があります。"

#: ../../library/locale.rst:161
msgid ""
"Return some locale-specific information as a string (or a tuple for "
"``ALT_DIGITS``).  This function is not available on all systems, and the set "
"of possible options might also vary across platforms.  The possible argument "
"values are numbers, for which symbolic constants are available in the locale "
"module."
msgstr ""

#: ../../library/locale.rst:167
msgid ""
"The :func:`nl_langinfo` function accepts one of the following keys.  Most "
"descriptions are taken from the corresponding description in the GNU C "
"library."
msgstr ""
"関数 :func:`nl_langinfo` は以下のキーのうち一つを受理します。ほとんどの記述"
"は GNU C ライブラリ中の対応する説明から引用されています。"

#: ../../library/locale.rst:173
msgid ""
"Get a string with the name of the character encoding used in the selected "
"locale."
msgstr ""
"選択されたロケールで用いられている文字エンコーディングの名前を文字列で取得し"
"ます。"

#: ../../library/locale.rst:178
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent date and time in a locale-specific way."
msgstr ""
"日付と時刻をロケール特有の方法で表現するために、 :func:`time.strftime` の書式"
"文字列として用いることのできる文字列を取得します。"

#: ../../library/locale.rst:183
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent a date in a locale-specific way."
msgstr ""
"日付をロケール特有の方法で表現するために、 :func:`time.strftime` の書式文字列"
"として用いることのできる文字列を取得します。"

#: ../../library/locale.rst:188
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent a time in a locale-specific way."
msgstr ""
"時刻をロケール特有の方法で表現するために、 :func:`time.strftime` の書式文字列"
"として用いることのできる文字列を取得します。"

#: ../../library/locale.rst:193
msgid ""
"Get a format string for :func:`time.strftime` to represent time in the am/pm "
"format."
msgstr ""
"時刻を午前／午後の書式で表現するために、 :func:`time.strftime` の書式文字列と"
"して用いることのできる文字列を取得します。"

#: ../../library/locale.rst:204
msgid "Get the name of the n-th day of the week."
msgstr "1 週間中の n 番目の曜日名を取得します。"

#: ../../library/locale.rst:208
msgid ""
"This follows the US convention of :const:`DAY_1` being Sunday, not the "
"international convention (ISO 8601) that Monday is the first day of the week."
msgstr ""
"ロケール US における、 :const:`DAY_1` を日曜日とする慣行に従っています。国際"
"的な (ISO 8601) 月曜日を週の初めとする慣行ではありません。"

#: ../../library/locale.rst:220
msgid "Get the abbreviated name of the n-th day of the week."
msgstr "1 週間中の n 番目の曜日名を略式表記で取得します。"

#: ../../library/locale.rst:235
msgid "Get the name of the n-th month."
msgstr "n 番目の月の名前を取得します。"

#: ../../library/locale.rst:250
msgid "Get the abbreviated name of the n-th month."
msgstr "n 番目の月の名前を略式表記で取得します。"

#: ../../library/locale.rst:254
msgid "Get the radix character (decimal dot, decimal comma, etc.)."
msgstr "基数点 (小数点ドット、あるいは小数点コンマ、等) を取得します。"

#: ../../library/locale.rst:258
msgid "Get the separator character for thousands (groups of three digits)."
msgstr "1000 単位桁区切り (3 桁ごとのグループ化) の区切り文字を取得します。"

#: ../../library/locale.rst:262
msgid ""
"Get a regular expression that can be used with the regex function to "
"recognize a positive response to a yes/no question."
msgstr ""
"肯定／否定で答える質問に対する肯定回答を正規表現関数で認識するために利用でき"
"る正規表現を取得します。"

#: ../../library/locale.rst:267
msgid ""
"Get a regular expression that can be used with the ``regex(3)`` function to "
"recognize a negative response to a yes/no question."
msgstr ""

#: ../../library/locale.rst:272
msgid ""
"The regular expressions for :const:`YESEXPR` and :const:`NOEXPR` use syntax "
"suitable for the ``regex`` function from the C library, which might differ "
"from the syntax used in :mod:`re`."
msgstr ""

#: ../../library/locale.rst:279
msgid ""
"Get the currency symbol, preceded by \"-\" if the symbol should appear "
"before the value, \"+\" if the symbol should appear after the value, or \"."
"\" if the symbol should replace the radix character."
msgstr ""
"通貨シンボルを取得します。シンボルを値の前に表示させる場合には \"-\"、値の後"
"ろに表示させる場合には \"+\"、シンボルを基数点と置き換える場合には \".\" を前"
"につけます。"

#: ../../library/locale.rst:285
msgid "Get a string that represents the era used in the current locale."
msgstr "現在のロケールで使われている年代を表現する値を取得します。"

#: ../../library/locale.rst:287
msgid ""
"Most locales do not define this value.  An example of a locale which does "
"define this value is the Japanese one.  In Japan, the traditional "
"representation of dates includes the name of the era corresponding to the "
"then-emperor's reign."
msgstr ""
"ほとんどのロケールではこの値を定義していません。この値を設定しているロケール"
"の例は Japanese です。日本には日付の伝統的な表示法として、時の天皇に対応する"
"元号名があります。"

#: ../../library/locale.rst:292
msgid ""
"Normally it should not be necessary to use this value directly. Specifying "
"the ``E`` modifier in their format strings causes the :func:`time.strftime` "
"function to use this information.  The format of the returned string is not "
"specified, and therefore you should not assume knowledge of it on different "
"systems."
msgstr ""
"通常この値を直接指定する必要はありません。 ``E`` を書式文字列に指定すること"
"で、関数 :func:`time.strftime` がこの情報を使うようになります。返される文字列"
"の様式は決められていないので、異なるシステム間で様式に関する同じ知識が使える"
"と期待してはいけません。"

#: ../../library/locale.rst:300
msgid ""
"Get a format string for :func:`time.strftime` to represent date and time in "
"a locale-specific era-based way."
msgstr ""
"日付および時間をロケール固有の年代に基づいた方法で表現するために、 :func:"
"`time.strftime` の書式文字列として用いることのできる文字列を取得します。"

#: ../../library/locale.rst:305
msgid ""
"Get a format string for :func:`time.strftime` to represent a date in a "
"locale-specific era-based way."
msgstr ""
"日付をロケール固有の年代に基づいた方法で表現するために、 :func:`time."
"strftime` の書式文字列として用いることのできる文字列を取得します。"

#: ../../library/locale.rst:310
msgid ""
"Get a format string for :func:`time.strftime` to represent a time in a "
"locale-specific era-based way."
msgstr ""
"時刻をロケール固有の年代に基づいた方法で表現するために、 :func:`time."
"strftime` の書式文字列として用いることのできる文字列を取得します。"

#: ../../library/locale.rst:315
msgid "Get a tuple of up to 100 strings used to represent the values 0 to 99."
msgstr ""

#: ../../library/locale.rst:320
msgid ""
"Tries to determine the default locale settings and returns them as a tuple "
"of the form ``(language code, encoding)``."
msgstr ""
"標準のロケール設定を取得しようと試み、結果をタプル ``(language code, "
"encoding)`` の形式で返します。"

#: ../../library/locale.rst:323
msgid ""
"According to POSIX, a program which has not called ``setlocale(LC_ALL, '')`` "
"runs using the portable ``'C'`` locale.  Calling ``setlocale(LC_ALL, '')`` "
"lets it use the default locale as defined by the :envvar:`LANG` variable.  "
"Since we do not want to interfere with the current locale setting we thus "
"emulate the behavior in the way described above."
msgstr ""
"POSIXによると、 ``setlocale(LC_ALL, '')`` を呼ばなかったプログラムは、移植可"
"能な ``'C'`` ロケール設定を使います。 ``setlocale(LC_ALL, '')`` を呼ぶこと"
"で、 :envvar:`LANG` 変数で定義された標準のロケール設定を使うようになります。 "
"Python では現在のロケール設定に干渉したくないので、上で述べたような方法でその"
"挙動をエミュレーションしています。"

#: ../../library/locale.rst:329
msgid ""
"To maintain compatibility with other platforms, not only the :envvar:`LANG` "
"variable is tested, but a list of variables given as envvars parameter.  The "
"first found to be defined will be used.  *envvars* defaults to the search "
"path used in GNU gettext; it must always contain the variable name "
"``'LANG'``.  The GNU gettext search path contains ``'LC_ALL'``, "
"``'LC_CTYPE'``, ``'LANG'`` and ``'LANGUAGE'``, in that order."
msgstr ""
"他のプラットフォームとの互換性を維持するために、環境変数 :envvar:`LANG` だけ"
"でなく、引数 *envvars* で指定された環境変数のリストも調べられます。最初に見つ"
"かった定義が使われます。 *envvars* は標準では GNU gettext で使われている検索"
"順になります; これは常に変数名 ``LANG`` を探します。GNU gettext では "
"``'LC_ALL'`` 、 ``'LC_CTYPE'`` 、 ``'LANG'`` 、および ``'LANGUAGE'`` の順に調"
"べられます。"

#: ../../library/locale.rst:336 ../../library/locale.rst:349
msgid ""
"Except for the code ``'C'``, the language code corresponds to :rfc:`1766`. "
"*language code* and *encoding* may be ``None`` if their values cannot be "
"determined."
msgstr ""
"``'C'`` の場合を除き、言語コードは :rfc:`1766` に対応します。 *language "
"code* および *encoding* が決定できなかった場合、 ``None`` になるかもしれませ"
"ん。"

#: ../../library/locale.rst:345
msgid ""
"Returns the current setting for the given locale category as sequence "
"containing *language code*, *encoding*. *category* may be one of the :const:"
"`!LC_\\*` values except :const:`LC_ALL`.  It defaults to :const:`LC_CTYPE`."
msgstr ""

#: ../../library/locale.rst:356
msgid ""
"Return the :term:`locale encoding` used for text data, according to user "
"preferences.  User preferences are expressed differently on different "
"systems, and might not be available programmatically on some systems, so "
"this function only returns a guess."
msgstr ""
"テキストデータに使われる :term:`ロケールエンコーディング <locale encoding>` "
"を、ユーザの設定に基づいて返します。ユーザの設定は異なるシステム間では異なっ"
"た方法で表現され、システムによってはプログラミング的に得ることができないこと"
"もあるので、この関数が返すのはただの推測です。"

#: ../../library/locale.rst:361
msgid ""
"On some systems, it is necessary to invoke :func:`setlocale` to obtain the "
"user preferences, so this function is not thread-safe. If invoking setlocale "
"is not necessary or desired, *do_setlocale* should be set to ``False``."
msgstr ""
"システムによっては、ユーザの設定を取得するために :func:`setlocale` を呼び出す"
"必要があるため、この関数はスレッド安全ではありません。 :func:`setlocale` を呼"
"び出す必要がない、または呼び出したくない場合、 *do_setlocale* を ``False`` に"
"設定する必要があります。"

#: ../../library/locale.rst:365
msgid ""
"On Android or if the :ref:`Python UTF-8 Mode <utf8-mode>` is enabled, always "
"return ``'utf-8'``, the :term:`locale encoding` and the *do_setlocale* "
"argument are ignored."
msgstr ""

#: ../../library/locale.rst:369 ../../library/locale.rst:387
msgid ""
"The :ref:`Python preinitialization <c-preinit>` configures the LC_CTYPE "
"locale. See also the :term:`filesystem encoding and error handler`."
msgstr ""

#: ../../library/locale.rst:372
msgid ""
"The function now always returns ``\"utf-8\"`` on Android or if the :ref:"
"`Python UTF-8 Mode <utf8-mode>` is enabled."
msgstr ""
"この関数は、 Android 上あるいは :ref:`Python UTF-8 モード <utf8-mode>` が有効"
"になっている場合、常に ``\"utf-8\"`` を返すようになりました。"

#: ../../library/locale.rst:379
msgid "Get the current :term:`locale encoding`:"
msgstr ""

#: ../../library/locale.rst:381
msgid "On Android and VxWorks, return ``\"utf-8\"``."
msgstr ""

#: ../../library/locale.rst:382
msgid ""
"On Unix, return the encoding of the current :data:`LC_CTYPE` locale. Return "
"``\"utf-8\"`` if ``nl_langinfo(CODESET)`` returns an empty string: for "
"example, if the current LC_CTYPE locale is not supported."
msgstr ""

#: ../../library/locale.rst:385
msgid "On Windows, return the ANSI code page."
msgstr ""

#: ../../library/locale.rst:390
msgid ""
"This function is similar to :func:`getpreferredencoding(False) "
"<getpreferredencoding>` except this function ignores the :ref:`Python UTF-8 "
"Mode <utf8-mode>`."
msgstr ""

#: ../../library/locale.rst:399
msgid ""
"Returns a normalized locale code for the given locale name.  The returned "
"locale code is formatted for use with :func:`setlocale`.  If normalization "
"fails, the original name is returned unchanged."
msgstr ""
"与えたロケール名を規格化したロケールコードを返します。返されるロケールコード"
"は :func:`setlocale` で使うために書式化されています。規格化が失敗した場合、も"
"との名前がそのまま返されます。"

#: ../../library/locale.rst:403
msgid ""
"If the given encoding is not known, the function defaults to the default "
"encoding for the locale code just like :func:`setlocale`."
msgstr ""
"与えたエンコードがシステムにとって未知の場合、標準の設定では、この関数は :"
"func:`setlocale` と同様に、エンコーディングをロケールコードにおける標準のエン"
"コーディングに設定します。"

#: ../../library/locale.rst:409
msgid ""
"Compares two strings according to the current :const:`LC_COLLATE` setting. "
"As any other compare function, returns a negative, or a positive value, or "
"``0``, depending on whether *string1* collates before or after *string2* or "
"is equal to it."
msgstr ""
"現在の :const:`LC_COLLATE` 設定に従って二つの文字列を比較します。他の比較を行"
"う関数と同じように、 *string1* が *string2* に対して前に来るか、後に来るか、"
"あるいは二つが等しいかによって、それぞれ負の値、正の値、あるいは ``0`` を返し"
"ます。"

#: ../../library/locale.rst:417
msgid ""
"Transforms a string to one that can be used in locale-aware comparisons.  "
"For example, ``strxfrm(s1) < strxfrm(s2)`` is equivalent to ``strcoll(s1, "
"s2) < 0``.  This function can be used when the same string is compared "
"repeatedly, e.g. when collating a sequence of strings."
msgstr ""
"文字列を、ロケールを考慮した比較に使える形式に変換します。例えば、 "
"``strxfrm(s1) < strxfrm(s2)`` は ``strcoll(s1, s2) < 0`` と等価です。この関数"
"は同じ文字列が何度も比較される場合、例えば文字列からなるシーケンスを順序付け"
"て並べる際に使うことができます。"

#: ../../library/locale.rst:426
msgid ""
"Formats a number *val* according to the current :const:`LC_NUMERIC` setting. "
"The format follows the conventions of the ``%`` operator.  For floating-"
"point values, the decimal point is modified if appropriate.  If *grouping* "
"is ``True``, also takes the grouping into account."
msgstr ""

#: ../../library/locale.rst:431
msgid ""
"If *monetary* is true, the conversion uses monetary thousands separator and "
"grouping strings."
msgstr ""
"*monetary* が真なら、桁区切り記号やグループ化文字列を用いて変換を行います。"

#: ../../library/locale.rst:434
msgid ""
"Processes formatting specifiers as in ``format % val``, but takes the "
"current locale settings into account."
msgstr ""
"``format % val`` 形式のフォーマット指定子を、現在のロケール設定を考慮したうえ"
"で処理します。"

#: ../../library/locale.rst:437
msgid "The *monetary* keyword parameter was added."
msgstr "*monetary* キーワード引数が追加されました。"

#: ../../library/locale.rst:443
msgid ""
"Formats a number *val* according to the current :const:`LC_MONETARY` "
"settings."
msgstr ""
"数値 *val* を、現在の :const:`LC_MONETARY` の設定にあわせてフォーマットしま"
"す。"

#: ../../library/locale.rst:445
msgid ""
"The returned string includes the currency symbol if *symbol* is true, which "
"is the default. If *grouping* is ``True`` (which is not the default), "
"grouping is done with the value. If *international* is ``True`` (which is "
"not the default), the international currency symbol is used."
msgstr ""
"*symbol* が真の場合は、返される文字列に通貨記号が含まれるようになります。これ"
"はデフォルトの設定です。*grouping* が ``True`` の場合(これはデフォルトではあ"
"りません)は、値をグループ化します。*international* が ``True`` の場合(これは"
"デフォルトではありません)は、国際的な通貨記号を使用します。"

#: ../../library/locale.rst:452
msgid ""
"This function will not work with the 'C' locale, so you have to set a locale "
"via :func:`setlocale` first."
msgstr ""
"この関数は 'C' ロケールでは動作しないので、まず :func:`setlocale` でロケール"
"を設定する必要があります。"

#: ../../library/locale.rst:458
msgid ""
"Formats a floating-point number using the same format as the built-in "
"function ``str(float)``, but takes the decimal point into account."
msgstr ""

#: ../../library/locale.rst:464
msgid ""
"Converts a string into a normalized number string, following the :const:"
"`LC_NUMERIC` settings."
msgstr ""
"文字列を :const:`LC_NUMERIC` で設定された慣行に従って正規化された数値文字列に"
"変換します。"

#: ../../library/locale.rst:472
msgid ""
"Converts a normalized number string into a formatted string following the :"
"const:`LC_NUMERIC` settings."
msgstr ""

#: ../../library/locale.rst:480
msgid ""
"Converts a string to a number, following the :const:`LC_NUMERIC` settings, "
"by calling *func* on the result of calling :func:`delocalize` on *string*."
msgstr ""

#: ../../library/locale.rst:486
msgid ""
"Converts a string to an integer, following the :const:`LC_NUMERIC` "
"conventions."
msgstr ""
"文字列を :const:`LC_NUMERIC` で設定された慣行に従って整数に変換します。"

#: ../../library/locale.rst:491
msgid ""
"Locale category for the character type functions.  Most importantly, this "
"category defines the text encoding, i.e. how bytes are interpreted as "
"Unicode codepoints.  See :pep:`538` and :pep:`540` for how this variable "
"might be automatically coerced to ``C.UTF-8`` to avoid issues created by "
"invalid settings in containers or incompatible settings passed over remote "
"SSH connections."
msgstr ""

#: ../../library/locale.rst:498
msgid ""
"Python doesn't internally use locale-dependent character transformation "
"functions from ``ctype.h``. Instead, an internal ``pyctype.h`` provides "
"locale-independent equivalents like :c:macro:`!Py_TOLOWER`."
msgstr ""

#: ../../library/locale.rst:505
msgid ""
"Locale category for sorting strings.  The functions :func:`strcoll` and :"
"func:`strxfrm` of the :mod:`locale` module are affected."
msgstr ""
"文字列を並べ替えるためのロケールカテゴリです。 :mod:`locale` モジュールの関"
"数 :func:`strcoll` および :func:`strxfrm` が影響を受けます。"

#: ../../library/locale.rst:511
msgid ""
"Locale category for the formatting of time.  The function :func:`time."
"strftime` follows these conventions."
msgstr ""
"時刻を書式化するためのロケールカテゴリです。 :func:`time.strftime`  はこのカ"
"テゴリに設定されている慣行に従います。"

#: ../../library/locale.rst:517
msgid ""
"Locale category for formatting of monetary values.  The available options "
"are available from the :func:`localeconv` function."
msgstr ""
"金額に関係する値を書式化するためのロケールカテゴリです。設定可能なオプション"
"は関数 :func:`localeconv` で得ることができます。"

#: ../../library/locale.rst:523
msgid ""
"Locale category for message display. Python currently does not support "
"application specific locale-aware messages.  Messages displayed by the "
"operating system, like those returned by :func:`os.strerror` might be "
"affected by this category."
msgstr ""
"メッセージ表示のためのロケールカテゴリです。現在 Python はアプリケーション毎"
"にロケールに対応したメッセージを出力する機能はサポートしていません。 :func:"
"`os.strerror` が返すような、オペレーティングシステムによって表示されるメッ"
"セージはこのカテゴリによって影響を受けます。"

#: ../../library/locale.rst:528
msgid ""
"This value may not be available on operating systems not conforming to the "
"POSIX standard, most notably Windows."
msgstr ""

#: ../../library/locale.rst:534
msgid ""
"Locale category for formatting numbers.  The functions :func:"
"`format_string`, :func:`atoi`, :func:`atof` and :func:`.str` of the :mod:"
"`locale` module are affected by that category.  All other numeric formatting "
"operations are not affected."
msgstr ""

#: ../../library/locale.rst:542
msgid ""
"Combination of all locale settings.  If this flag is used when the locale is "
"changed, setting the locale for all categories is attempted. If that fails "
"for any category, no category is changed at all.  When the locale is "
"retrieved using this flag, a string indicating the setting for all "
"categories is returned. This string can be later used to restore the "
"settings."
msgstr ""
"全てのロケール設定を総合したものです。ロケールを変更する際にこのフラグが使わ"
"れた場合、そのロケールにおける全てのカテゴリを設定しようと試みます。一つでも"
"失敗したカテゴリがあった場合、全てのカテゴリにおいて設定変更を行いません。こ"
"のフラグを使ってロケールを取得した場合、全てのカテゴリにおける設定を示す文字"
"列が返されます。この文字列は、後に設定を元に戻すために使うことができます。"

#: ../../library/locale.rst:551
msgid ""
"This is a symbolic constant used for different values returned by :func:"
"`localeconv`."
msgstr ":func:`localeconv` の返す特別な値のためのシンボル定数です。"

#: ../../library/locale.rst:555
msgid "Example::"
msgstr "以下はプログラム例です::"

#: ../../library/locale.rst:557
msgid ""
">>> import locale\n"
">>> loc = locale.getlocale()  # get current locale\n"
"# use German locale; name might vary with platform\n"
">>> locale.setlocale(locale.LC_ALL, 'de_DE')\n"
">>> locale.strcoll('f\\xe4n', 'foo')  # compare a string containing an "
"umlaut\n"
">>> locale.setlocale(locale.LC_ALL, '')   # use user's preferred locale\n"
">>> locale.setlocale(locale.LC_ALL, 'C')  # use default (C) locale\n"
">>> locale.setlocale(locale.LC_ALL, loc)  # restore saved locale"
msgstr ""

#: ../../library/locale.rst:568
msgid "Background, details, hints, tips and caveats"
msgstr "ロケールの背景、詳細、ヒント、助言および補足説明"

#: ../../library/locale.rst:570
msgid ""
"The C standard defines the locale as a program-wide property that may be "
"relatively expensive to change.  On top of that, some implementations are "
"broken in such a way that frequent locale changes may cause core dumps.  "
"This makes the locale somewhat painful to use correctly."
msgstr ""
"C 標準では、ロケールはプログラム全体にわたる特性であり、その変更は高価な処理"
"であるとしています。加えて、頻繁にロケールを変更するようなひどい実装はコアダ"
"ンプを引き起こすこともあります。このことがロケールを正しく利用する上で苦痛と"
"なっています。"

#: ../../library/locale.rst:575
msgid ""
"Initially, when a program is started, the locale is the ``C`` locale, no "
"matter what the user's preferred locale is.  There is one exception: the :"
"data:`LC_CTYPE` category is changed at startup to set the current locale "
"encoding to the user's preferred locale encoding. The program must "
"explicitly say that it wants the user's preferred locale settings for other "
"categories by calling ``setlocale(LC_ALL, '')``."
msgstr ""
"最初、プログラムが起動したときには、ユーザの希望するロケールにかかわらずロ"
"ケールは ``C`` です。例外が1つあります: :data:`LC_CTYPE` カテゴリは、現在のロ"
"ケールエンコーディングをユーザーの希望するロケールエンコーディングに設定する"
"ために、スタートアップで変更されます。他のカテゴリについては、プログラムは "
"``setlocale(LC_ALL, '')`` を呼び出して、明示的にユーザの希望するロケール設定"
"を行わなければなりません。"

#: ../../library/locale.rst:582
msgid ""
"It is generally a bad idea to call :func:`setlocale` in some library "
"routine, since as a side effect it affects the entire program.  Saving and "
"restoring it is almost as bad: it is expensive and affects other threads "
"that happen to run before the settings have been restored."
msgstr ""
":func:`setlocale` をライブラリルーチン内で呼ぶことは、それがプログラム全体に"
"及ぼす副作用の面から、一般的によくない考えです。ロケールを保存したり復帰した"
"りするのもよくありません: 高価な処理であり、ロケールの設定が復帰する以前に起"
"動してしまった他のスレッドに悪影響を及ぼすからです。"

#: ../../library/locale.rst:587
msgid ""
"If, when coding a module for general use, you need a locale independent "
"version of an operation that is affected by the locale (such as certain "
"formats used with :func:`time.strftime`), you will have to find a way to do "
"it without using the standard library routine.  Even better is convincing "
"yourself that using locale settings is okay.  Only as a last resort should "
"you document that your module is not compatible with non-\\ ``C`` locale "
"settings."
msgstr ""
"もし、汎用を目的としたモジュールを作っていて、ロケールによって影響をうけるよ"
"うな操作 (例えば :func:`time.strftime` の書式の一部) のロケール独立のバージョ"
"ンが必要ということになれば、標準ライブラリルーチンを使わずに何とかしなければ"
"なりません。よりましな方法は、ロケール設定が正しく利用できているか確かめるこ"
"とです。最後の手段は、あなたのモジュールが ``C`` ロケール以外の設定には互換性"
"がないとドキュメントに書くことです。"

#: ../../library/locale.rst:594
msgid ""
"The only way to perform numeric operations according to the locale is to use "
"the special functions defined by this module: :func:`atof`, :func:`atoi`, :"
"func:`format_string`, :func:`.str`."
msgstr ""

#: ../../library/locale.rst:598
msgid ""
"There is no way to perform case conversions and character classifications "
"according to the locale.  For (Unicode) text strings these are done "
"according to the character value only, while for byte strings, the "
"conversions and classifications are done according to the ASCII value of the "
"byte, and bytes whose high bit is set (i.e., non-ASCII bytes) are never "
"converted or considered part of a character class such as letter or "
"whitespace."
msgstr ""
"ロケールに従ってケース変換や文字分類を行う方法はありません。 (ユニコード) テ"
"キスト文字列については、これらは文字の値のみによって行われます。その一方、バ"
"イト文字列はバイトの ASCII 値に従って変換と分類が行われます。そして、上位ビッ"
"トが立っているバイト (すなわち、non-ASCII バイト) は、決して変換されず、英字"
"や空白などの文字クラスの一部とみなされることもありません。"

#: ../../library/locale.rst:609
msgid "For extension writers and programs that embed Python"
msgstr "Python 拡張の作者と、Python を埋め込むようなプログラムに関して"

#: ../../library/locale.rst:611
msgid ""
"Extension modules should never call :func:`setlocale`, except to find out "
"what the current locale is.  But since the return value can only be used "
"portably to restore it, that is not very useful (except perhaps to find out "
"whether or not the locale is ``C``)."
msgstr ""
"拡張モジュールは、現在のロケールを調べる以外は、決して :func:`setlocale` を呼"
"び出してはなりません。しかし、返される値もロケールの復帰のために使えるだけな"
"ので、さほど便利とはいえません (例外はおそらくロケールが ``C`` かどうか調べる"
"ことでしょう)。"

#: ../../library/locale.rst:616
msgid ""
"When Python code uses the :mod:`locale` module to change the locale, this "
"also affects the embedding application.  If the embedding application "
"doesn't want this to happen, it should remove the :mod:`!_locale` extension "
"module (which does all the work) from the table of built-in modules in the :"
"file:`config.c` file, and make sure that the :mod:`!_locale` module is not "
"accessible as a shared library."
msgstr ""

#: ../../library/locale.rst:627
msgid "Access to message catalogs"
msgstr "メッセージカタログへのアクセス"

#: ../../library/locale.rst:636
msgid ""
"The locale module exposes the C library's gettext interface on systems that "
"provide this interface.  It consists of the functions :func:`gettext`, :func:"
"`dgettext`, :func:`dcgettext`, :func:`textdomain`, :func:`bindtextdomain`, "
"and :func:`bind_textdomain_codeset`.  These are similar to the same "
"functions in the :mod:`gettext` module, but use the C library's binary "
"format for message catalogs, and the C library's search algorithms for "
"locating message catalogs."
msgstr ""
"C ライブラリの gettext インタフェースが提供されているシステムでは、 locake モ"
"ジュールでそのインタフェースを公開しています。このインタフェースは関数 :func:"
"`gettext` 、 :func:`dgettext` 、 :func:`dcgettext` 、 :func:`textdomain` 、 :"
"func:`bindtextdomain` 、および :func:`bind_textdomain_codeset` からなります。"
"これらは :mod:`gettext` モジュールの同名の関数に似ていますが、メッセージカタ"
"ログとして C ライブラリのバイナリフォーマットを使い、メッセージカタログを探す"
"ために C ライブラリのサーチアルゴリズムを使います。"

#: ../../library/locale.rst:643
msgid ""
"Python applications should normally find no need to invoke these functions, "
"and should use :mod:`gettext` instead.  A known exception to this rule are "
"applications that link with additional C libraries which internally invoke C "
"functions ``gettext`` or ``dcgettext``.  For these applications, it may be "
"necessary to bind the text domain, so that the libraries can properly locate "
"their message catalogs."
msgstr ""

#: ../../library/locale.rst:19
msgid "module"
msgstr "module"

#: ../../library/locale.rst:19
msgid "_locale"
msgstr ""
