# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:02+0000\n"
"PO-Revision-Date: 2019-09-01 03:21+0000\n"
"Last-Translator: tomo, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/wave.rst:2
msgid ":mod:`wave` --- Read and write WAV files"
msgstr ":mod:`wave` --- WAVファイルの読み書き"

#: ../../library/wave.rst:10
msgid "**Source code:** :source:`Lib/wave.py`"
msgstr "**ソースコード:** :source:`Lib/wave.py`"

#: ../../library/wave.rst:14
msgid ""
"The :mod:`wave` module provides a convenient interface to the WAV sound "
"format. It does not support compression/decompression, but it does support "
"mono/stereo."
msgstr ""
":mod:`wave` モジュールは、WAVサウンドフォーマットへの便利なインターフェイスを"
"提供するモジュールです。このモジュールは圧縮／展開をサポートしていませんが、"
"モノラル／ステレオには対応しています。"

#: ../../library/wave.rst:17
msgid "The :mod:`wave` module defines the following function and exception:"
msgstr ":mod:`wave` モジュールは、以下の関数と例外を定義しています:"

#: ../../library/wave.rst:22
msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"file-like object.  *mode* can be:"
msgstr ""
"*file* が文字列ならその名前のファイルを開き、そうでないなら file like オブ"
"ジェクトとして扱います。 *mode* は以下のうちのいずれかです:"

#: ../../library/wave.rst:26
msgid "``'rb'``"
msgstr "``'rb'``"

#: ../../library/wave.rst:26
msgid "Read only mode."
msgstr "読み出しのみのモード。"

#: ../../library/wave.rst:29
msgid "``'wb'``"
msgstr "``'wb'``"

#: ../../library/wave.rst:29
msgid "Write only mode."
msgstr "書き込みのみのモード。"

#: ../../library/wave.rst:31
msgid "Note that it does not allow read/write WAV files."
msgstr ""
"WAVファイルに対して読み込み／書き込み両方のモードで開くことはできないことに注"
"意して下さい。"

#: ../../library/wave.rst:33
msgid ""
"A *mode* of ``'rb'`` returns a :class:`Wave_read` object, while a *mode* of "
"``'wb'`` returns a :class:`Wave_write` object.  If *mode* is omitted and a "
"file-like object is passed as *file*, ``file.mode`` is used as the default "
"value for *mode*."
msgstr ""
"*mode* が ``'rb'`` の場合 :class:`Wave_read` オブジェクトを返し、 ``'wb'`` の"
"場合 :class:`Wave_write` オブジェクトを返します。 *mode* が省略されていて、 "
"file-like オブジェクトが *file* として渡されると、 ``file.mode`` が *mode* の"
"デフォルト値として使われます。"

#: ../../library/wave.rst:38
msgid ""
"If you pass in a file-like object, the wave object will not close it when "
"its :meth:`close` method is called; it is the caller's responsibility to "
"close the file object."
msgstr ""
"file like オブジェクトを渡した場合、 wave オブジェクトの :meth:`close` メソッ"
"ドを呼び出してもその file like オブジェクトを close しません。 file like オブ"
"ジェクトの close は呼び出し側の責任になります。"

#: ../../library/wave.rst:42
msgid ""
"The :func:`.open` function may be used in a :keyword:`with` statement.  When "
"the :keyword:`!with` block completes, the :meth:`Wave_read.close() <wave."
"Wave_read.close>` or :meth:`Wave_write.close() <wave.Wave_write.close()>` "
"method is called."
msgstr ""
":func:`.open` 関数は :keyword:`with` 文とともに使うことができます。\n"
":keyword:`!with` ブロックが終わるときに、 :meth:`Wave_read.close() <wave."
"Wave_read.close>` メソッドまたは :meth:`Wave_write.close() <wave.Wave_write."
"close()>` メソッドが呼ばれます。"

#: ../../library/wave.rst:47 ../../library/wave.rst:170
msgid "Added support for unseekable files."
msgstr "シーク不能なファイルのサポートが追加されました。"

#: ../../library/wave.rst:52
msgid "A synonym for :func:`.open`, maintained for backwards compatibility."
msgstr ":func:`.open` と同義。後方互換性のために残されています。"

#: ../../library/wave.rst:59
msgid ""
"An error raised when something is impossible because it violates the WAV "
"specification or hits an implementation deficiency."
msgstr ""
"WAVの仕様を犯したり、実装の欠陥に遭遇して何か実行不可能となった時に発生するエ"
"ラー。"

#: ../../library/wave.rst:66
msgid "Wave_read Objects"
msgstr "Wave_read オブジェクト"

#: ../../library/wave.rst:68
msgid ""
"Wave_read objects, as returned by :func:`.open`, have the following methods:"
msgstr ""
":func:`.open` によって返される Wave_read オブジェクトには、以下のメソッドがあ"
"ります:"

#: ../../library/wave.rst:73
msgid ""
"Close the stream if it was opened by :mod:`wave`, and make the instance "
"unusable.  This is called automatically on object collection."
msgstr ""
":mod:`wave` によって開かれていた場合はストリームを閉じ、このオブジェクトのイ"
"ンスタンスを使用できなくします。これはオブジェクトのガベージコレクション時に"
"自動的に呼び出されます。"

#: ../../library/wave.rst:79
msgid "Returns number of audio channels (``1`` for mono, ``2`` for stereo)."
msgstr ""
"オーディオチャンネル数（モノラルなら ``1`` 、ステレオなら ``2`` ）を返しま"
"す。"

#: ../../library/wave.rst:84
msgid "Returns sample width in bytes."
msgstr "サンプルサイズをバイト数で返します。"

#: ../../library/wave.rst:89
msgid "Returns sampling frequency."
msgstr "サンプリングレートを返します。"

#: ../../library/wave.rst:94
msgid "Returns number of audio frames."
msgstr "オーディオフレーム数を返します。"

#: ../../library/wave.rst:99
msgid "Returns compression type (``'NONE'`` is the only supported type)."
msgstr "圧縮形式を返します（ ``'NONE'`` だけがサポートされている形式です）。"

#: ../../library/wave.rst:104
msgid ""
"Human-readable version of :meth:`getcomptype`. Usually ``'not compressed'`` "
"parallels ``'NONE'``."
msgstr ""
":meth:`getcomptype` を人に判読可能な形にしたものです。通常、 ``'NONE'`` に対"
"して ``'not compressed'`` が返されます。"

#: ../../library/wave.rst:110
msgid ""
"Returns a :func:`~collections.namedtuple` ``(nchannels, sampwidth, "
"framerate, nframes, comptype, compname)``, equivalent to output of the :meth:"
"`get\\*` methods."
msgstr ""
":meth:`get\\*` メソッドが返すのと同じ ``(nchannels, sampwidth, framerate, "
"nframes, comptype, compname)`` の :func:`~collections.namedtuple` を返しま"
"す。"

#: ../../library/wave.rst:117
msgid ""
"Reads and returns at most *n* frames of audio, as a :class:`bytes` object."
msgstr ""
"最大 *n* 個のオーディオフレームを読み込んで、 :class:`bytes` オブジェクトとし"
"て返します。"

#: ../../library/wave.rst:122
msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr "ファイルのポインタをオーディオストリームの先頭に戻します。"

#: ../../library/wave.rst:124
msgid ""
"The following two methods are defined for compatibility with the :mod:`aifc` "
"module, and don't do anything interesting."
msgstr ""
"以下の2つのメソッドは :mod:`aifc` モジュールとの互換性のために定義されてお"
"り、何も面白いことはしません。"

#: ../../library/wave.rst:130
msgid "Returns ``None``."
msgstr "``None`` を返します。"

#: ../../library/wave.rst:135
msgid "Raise an error."
msgstr "エラーを発生します。"

#: ../../library/wave.rst:137
msgid ""
"The following two methods define a term \"position\" which is compatible "
"between them, and is otherwise implementation dependent."
msgstr ""
"以下の2つのメソッドは共通の\"位置\"を定義しています。\"位置\"は他の関数とは独"
"立して実装されています。"

#: ../../library/wave.rst:143
msgid "Set the file pointer to the specified position."
msgstr "ファイルのポインタを指定した位置に設定します。"

#: ../../library/wave.rst:148
msgid "Return current file pointer position."
msgstr "ファイルの現在のポインタ位置を返します。"

#: ../../library/wave.rst:154
msgid "Wave_write Objects"
msgstr "Wave_write オブジェクト"

#: ../../library/wave.rst:156
msgid ""
"For seekable output streams, the ``wave`` header will automatically be "
"updated to reflect the number of frames actually written.  For unseekable "
"streams, the *nframes* value must be accurate when the first frame data is "
"written.  An accurate *nframes* value can be achieved either by calling :"
"meth:`~Wave_write.setnframes` or :meth:`~Wave_write.setparams` with the "
"number of frames that will be written before :meth:`~Wave_write.close` is "
"called and then using :meth:`~Wave_write.writeframesraw` to write the frame "
"data, or by calling :meth:`~Wave_write.writeframes` with all of the frame "
"data to be written.  In the latter case :meth:`~Wave_write.writeframes` will "
"calculate the number of frames in the data and set *nframes* accordingly "
"before writing the frame data."
msgstr ""
"seek 可能な出力ストリームでは、実際に書き込まれたフレーム数を反映するように "
"``wave`` ヘッダーは自動的にアップデートされます。 seek 不能なストリームでは、"
"最初のフレームデータが書き込まれる時には *nframes* の値は正確でなければなりま"
"せん。 *nframes* の正確な値は、 :meth:`~Wave_write.close` が呼ばれる前に書き"
"込まれるフレーム数とともに :meth:`~Wave_write.setnframes` または :meth:"
"`~Wave_write.setparams` を呼んで、その後 :meth:`~Wave_write.writeframesraw` "
"を利用してフレームデータを書くか、もしくはすべての書き込むべきフレームデータ"
"とともに :meth:`~Wave_write.writeframes` を呼び出すことによって達成できます。"
"後者のケースでは、 :meth:`~Wave_write.writeframes` はフレームデータを書く前"
"に、データ中のフレームの数を計算して、それに応じて *nframes* を設定します。"

#: ../../library/wave.rst:168
msgid ""
"Wave_write objects, as returned by :func:`.open`, have the following methods:"
msgstr ""
":func:`.open` によって返される Wave_write オブジェクトには、以下のメソッドが"
"あります:"

#: ../../library/wave.rst:176
msgid ""
"Make sure *nframes* is correct, and close the file if it was opened by :mod:"
"`wave`.  This method is called upon object collection.  It will raise an "
"exception if the output stream is not seekable and *nframes* does not match "
"the number of frames actually written."
msgstr ""
"*nframes* が正しいか確認して、ファイルが :mod:`wave` によって開かれていた場合"
"は閉じます。このメソッドはオブジェクトがガベージコレクションされるときに呼び"
"出されます。もし出力ストリームがシーク不能で、 *nframes* が実際に書き込まれた"
"フレームの数と一致しなければ、例外が起きます。"

#: ../../library/wave.rst:184
msgid "Set the number of channels."
msgstr "チャンネル数を設定します。"

#: ../../library/wave.rst:189
msgid "Set the sample width to *n* bytes."
msgstr "サンプルサイズを *n* バイトに設定します。"

#: ../../library/wave.rst:194
msgid "Set the frame rate to *n*."
msgstr "サンプリングレートを *n* に設定します。"

#: ../../library/wave.rst:196
msgid "A non-integral input to this method is rounded to the nearest integer."
msgstr ""
"整数ではない値がこのメソッドに入力された場合は、直近の整数に丸められます。"

#: ../../library/wave.rst:203
msgid ""
"Set the number of frames to *n*.  This will be changed later if the number "
"of frames actually written is different (this update attempt will raise an "
"error if the output stream is not seekable)."
msgstr ""
"フレーム数を *n* に設定します。もし実際に書き込まれたフレームの数と異なるな"
"ら、これは後で変更されます (出力ストリームがシーク不能なら、更新しようとした"
"時にエラーが起きます)。"

#: ../../library/wave.rst:210
msgid ""
"Set the compression type and description. At the moment, only compression "
"type ``NONE`` is supported, meaning no compression."
msgstr ""
"圧縮形式とその記述を設定します。現在のところ、非圧縮を示す圧縮形式 ``NONE`` "
"だけがサポートされています。"

#: ../../library/wave.rst:216
msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``, with values valid for the :meth:`set\\*` methods.  Sets all "
"parameters."
msgstr ""
"この *tuple* は ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)`` でなければならず、その値はそれぞれの :meth:`set\\*` メソッドで有"
"効でなければなりません。すべてのパラメータを設定します。"

#: ../../library/wave.rst:223
msgid ""
"Return current position in the file, with the same disclaimer for the :meth:"
"`Wave_read.tell` and :meth:`Wave_read.setpos` methods."
msgstr ""
"ファイルの中の現在位置を返します。 :meth:`Wave_read.tell` と :meth:"
"`Wave_read.setpos` メソッドでお断りしたことがこのメソッドにも当てはまります。"

#: ../../library/wave.rst:229
msgid "Write audio frames, without correcting *nframes*."
msgstr "*nframes* の修正なしにオーディオフレームを書き込みます。"

#: ../../library/wave.rst:231 ../../library/wave.rst:242
msgid "Any :term:`bytes-like object` is now accepted."
msgstr "どのような :term:`bytes-like object` も使用できるようになりました。"

#: ../../library/wave.rst:237
msgid ""
"Write audio frames and make sure *nframes* is correct.  It will raise an "
"error if the output stream is not seekable and the total number of frames "
"that have been written after *data* has been written does not match the "
"previously set value for *nframes*."
msgstr ""
"出力ストリームが seek 不可能で、 *data* が書き込まれた後でそれ以前に "
"*nframes* に設定された値と書き込まれた全フレーム数が一致しなければ、エラーを"
"送出します。"

#: ../../library/wave.rst:246
msgid ""
"Note that it is invalid to set any parameters after calling :meth:"
"`writeframes` or :meth:`writeframesraw`, and any attempt to do so will "
"raise :exc:`wave.Error`."
msgstr ""
":meth:`writeframes` や :meth:`writeframesraw` メソッドを呼び出したあとで、ど"
"んなパラメータを設定しようとしても不正となることに注意して下さい。そうする"
"と :exc:`wave.Error` を発生します。"
