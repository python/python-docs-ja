# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:48+0900\n"
"PO-Revision-Date: 2018-06-29 17:40+0000\n"
"Last-Translator: tomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/reprlib.rst:2
msgid ":mod:`reprlib` --- Alternate :func:`repr` implementation"
msgstr ":mod:`reprlib` --- もう一つの :func:`repr` の実装"

#: ../../library/reprlib.rst:9
msgid "**Source code:** :source:`Lib/reprlib.py`"
msgstr "**ソースコード:** :source:`Lib/reprlib.py`"

#: ../../library/reprlib.rst:13
msgid ""
"The :mod:`reprlib` module provides a means for producing object "
"representations with limits on the size of the resulting strings. This is "
"used in the Python debugger and may be useful in other contexts as well."
msgstr ""
":mod:`reprlib` モジュールは、結果の文字列のサイズに対する制限付きでオブジェク"
"ト表現を生成するための手段を提供します。これは Python デバッガの中で使用され"
"ており、他の文脈でも同様に役に立つかもしれません。"

#: ../../library/reprlib.rst:17
msgid "This module provides a class, an instance, and a function:"
msgstr "このモジュールはクラスとインスタンス、それに関数を提供します:"

#: ../../library/reprlib.rst:22
msgid ""
"Class which provides formatting services useful in implementing functions "
"similar to the built-in :func:`repr`; size limits for  different object "
"types are added to avoid the generation of representations which are "
"excessively long."
msgstr ""
"組み込み関数 :func:`repr` に似た関数を実装するために役に立つフォーマット用"
"サービスを提供します。\n"
"過度に長い表現を作り出さないようにするための大きさの制限をオブジェクト型ごと"
"に設定できます。"

#: ../../library/reprlib.rst:29
msgid ""
"This is an instance of :class:`Repr` which is used to provide the :func:`."
"repr` function described below.  Changing the attributes of this object will "
"affect the size limits used by :func:`.repr` and the Python debugger."
msgstr ""
"これは下で説明される :func:`.repr` 関数を提供するために使われる :class:"
"`Repr` のインスタンスです。このオブジェクトの属性を変更すると、 :func:`."
"repr` と Python デバッガが使うサイズ制限に影響します。"

#: ../../library/reprlib.rst:37
msgid ""
"This is the :meth:`~Repr.repr` method of ``aRepr``.  It returns a string "
"similar to that returned by the built-in function of the same name, but with "
"limits on most sizes."
msgstr ""
"これは ``aRepr`` の :meth:`~Repr.repr` メソッドです。同じ名前の組み込み関数が"
"返す文字列と似ていますが、最大サイズに制限のある文字列を返します。"

#: ../../library/reprlib.rst:41
msgid ""
"In addition to size-limiting tools, the module also provides a decorator for "
"detecting recursive calls to :meth:`__repr__` and substituting a placeholder "
"string instead."
msgstr ""
"サイズを制限するツールに加えて、このモジュールはさらに  :meth:`__repr__` に対"
"する再帰呼び出しの検出とプレースホルダー文字列による置換のためのデコレータを"
"提供します。"

#: ../../library/reprlib.rst:50
msgid ""
"Decorator for :meth:`__repr__` methods to detect recursive calls within the "
"same thread.  If a recursive call is made, the *fillvalue* is returned, "
"otherwise, the usual :meth:`__repr__` call is made.  For example:"
msgstr ""
":meth:`__repr__` メソッドに対する同一スレッド内の再帰呼び出しを検出するデコ"
"レータです。再帰呼び出しが行われている場合 *fillvalue* が返されます。そうでな"
"ければ通常の :meth:`__repr__` 呼び出しが行われます。例えば:"

#: ../../library/reprlib.rst:71
msgid "Repr Objects"
msgstr "Reprオブジェクト"

#: ../../library/reprlib.rst:73
msgid ""
":class:`Repr` instances provide several attributes which can be used to "
"provide size limits for the representations of different object types,  and "
"methods which format specific object types."
msgstr ""
":class:`Repr` インスタンスはオブジェクト型毎に表現する文字列のサイズを制限す"
"るために使えるいくつかの属性と、特定のオブジェクト型をフォーマットするメソッ"
"ドを提供します。"

#: ../../library/reprlib.rst:80
msgid ""
"Depth limit on the creation of recursive representations.  The default is "
"``6``."
msgstr "再帰的な表現を作る場合の深さ制限。デフォルトは ``6`` です。"

#: ../../library/reprlib.rst:91
msgid ""
"Limits on the number of entries represented for the named object type.  The "
"default is ``4`` for :attr:`maxdict`, ``5`` for :attr:`maxarray`, and  ``6`` "
"for the others."
msgstr ""
"指定されたオブジェクト型に対するエントリ表現の数についての制限。 :attr:"
"`maxdict` に対するデフォルトは ``4`` で、 :attr:`maxarray` は ``5`` 、その他"
"に対しては ``6`` です。"

#: ../../library/reprlib.rst:98
msgid ""
"Maximum number of characters in the representation for an integer.  Digits "
"are dropped from the middle.  The default is ``40``."
msgstr ""
"整数の表現のおける文字数の最大値。中央の数字が抜け落ちます。デフォルトは "
"``40`` です。"

#: ../../library/reprlib.rst:104
msgid ""
"Limit on the number of characters in the representation of the string.  Note "
"that the \"normal\" representation of the string is used as the character "
"source: if escape sequences are needed in the representation, these may be "
"mangled when the representation is shortened.  The default is ``30``."
msgstr ""
"文字列の表現における文字数の制限。文字列の\"通常の\"表現は文字の「元」として"
"使われることに注意してください。表現にエスケープシーケンスが必要とされる場"
"合、表現が短縮されるときにこれらのエスケープシーケンスの形式は崩れます。デ"
"フォルトは ``30`` です。"

#: ../../library/reprlib.rst:112
msgid ""
"This limit is used to control the size of object types for which no specific "
"formatting method is available on the :class:`Repr` object. It is applied in "
"a similar manner as :attr:`maxstring`.  The default is ``20``."
msgstr ""
"この制限は :class:`Repr` オブジェクトに利用できる特定のフォーマットメソッドが"
"ないオブジェクト型のサイズをコントロールするために使われます。 :attr:"
"`maxstring` と同じようなやり方で適用されます。デフォルトは ``20`` です。"

#: ../../library/reprlib.rst:119
msgid ""
"The equivalent to the built-in :func:`repr` that uses the formatting imposed "
"by the instance."
msgstr ""
"このインスタンスで設定されたフォーマットを使う、組み込み :func:`repr` と等価"
"なもの。"

#: ../../library/reprlib.rst:125
msgid ""
"Recursive implementation used by :meth:`.repr`.  This uses the type of *obj* "
"to determine which formatting method to call, passing it *obj* and *level*.  "
"The type-specific methods should call :meth:`repr1` to perform recursive "
"formatting, with ``level - 1`` for the value of *level* in the recursive  "
"call."
msgstr ""
":meth:`.repr` が使う再帰的な実装。\n"
"*obj* の型を使ってどのフォーマットメソッドを呼び出すかを決定し、それに *obj* "
"と *level* を渡します。\n"
"再帰呼び出しにおいて *level* の値に対して ``level - 1`` を与える再帰的な"
"フォーマットを実行するために、型に固有のメソッドは :meth:`repr1` を呼び出しま"
"す。"

#: ../../library/reprlib.rst:134
msgid ""
"Formatting methods for specific types are implemented as methods with a name "
"based on the type name.  In the method name, **TYPE** is replaced by ``'_'."
"join(type(obj).__name__.split())``. Dispatch to these methods is handled by :"
"meth:`repr1`. Type-specific methods which need to recursively format a value "
"should call ``self.repr1(subobj, level - 1)``."
msgstr ""
"型名に基づく名前をもつメソッドとして、特定の型に対するフォーマットメソッドは"
"実装されます。メソッド名では、 **TYPE** は ``'_'.join(type(obj).__name__."
"split())`` に置き換えられます。これらのメソッドへのディスパッチは :meth:"
"`repr1` によって処理されます。再帰的に値をフォーマットする必要がある型固有の"
"メソッドは、 ``self.repr1(subobj, level - 1)`` を呼び出します。"

#: ../../library/reprlib.rst:144
msgid "Subclassing Repr Objects"
msgstr "Reprオブジェクトをサブクラス化する"

#: ../../library/reprlib.rst:146
msgid ""
"The use of dynamic dispatching by :meth:`Repr.repr1` allows subclasses of :"
"class:`Repr` to add support for additional built-in object types or to "
"modify the handling of types already supported. This example shows how "
"special support for file objects could be added::"
msgstr ""
"更なる組み込みオブジェクト型へのサポートを追加するため、あるいはすでにサポー"
"トされている型の扱いを変更するために、 :meth:`Repr.repr1` による動的なディス"
"パッチは :class:`Repr` のサブクラス化に対応しています。\n"
"この例はファイルオブジェクトのための特別なサポートを追加する方法を示していま"
"す::"
