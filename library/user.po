# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/user.rst:3
msgid ":mod:`user` --- User-specific configuration hook"
msgstr ":mod:`user` --- ユーザー設定のフック"

#: ../../library/user.rst:9
msgid "The :mod:`user` module has been removed in Python 3."
msgstr ":mod:`user` モジュールは Python 3 で削除されました。"

#: ../../library/user.rst:16
msgid ""
"As a policy, Python doesn't run user-specified code on startup of Python "
"programs.  (Only interactive sessions execute the script specified in the :"
"envvar:`PYTHONSTARTUP` environment variable if it exists)."
msgstr ""
"ポリシーとして、Python は起動時にユーザー毎の設定を行うコードを実行することは"
"しません (ただし対話型セッションで環境変数 :envvar:`PYTHONSTARTUP` が設定され"
"ていた場合にはそのスクリプトを実行します)。"

#: ../../library/user.rst:20
msgid ""
"However, some programs or sites may find it convenient to allow users to "
"have a standard customization file, which gets run when a program requests "
"it.  This module implements such a mechanism.  A program that wishes to use "
"the mechanism must execute the statement ::"
msgstr ""
"しかしながら、プログラムやサイトによっては、プログラムが要求した時にユーザー"
"ごとの標準設定ファイルを実行できると便利なこともあります。このモジュールはそ"
"のような機構を実装しています。この機構を利用したいプログラムでは、以下の文を"
"実行してください::"

#: ../../library/user.rst:29
msgid ""
"The :mod:`user` module looks for a file :file:`.pythonrc.py` in the user's "
"home directory and if it can be opened, executes it (using :func:`execfile`) "
"in its own (the module :mod:`user`'s) global namespace.  Errors during this "
"phase are not caught; that's up to the program that imports the :mod:`user` "
"module, if it wishes.  The home directory is assumed to be named by the :"
"envvar:`HOME` environment variable; if this is not set, the current "
"directory is used."
msgstr ""
":mod:`user` モジュールはユーザーのホームディレクトリの :file:`.pythonrc.py` "
"ファイルを探し、オープンできるなら (:mod:`user` モジュールの) グローバル名前"
"空間で実行します(:func:`execfile` を利用します)。この段階で発生したエラーは "
"catch されません。 :mod:`user` モジュールを import したプログラムに伝播しま"
"す。ホームディレクトリは環境変数 :envvar:`HOME` が仮定されていますが、もし設"
"定されていなければカレントディレクトリが使われます。"

#: ../../library/user.rst:36
msgid ""
"The user's :file:`.pythonrc.py` could conceivably test for ``sys.version`` "
"if it wishes to do different things depending on the Python version."
msgstr ""
"ユーザーの :file:`.pythonrc.py` では Python のバージョンに従って異なる動作を"
"行うために ``sys.version`` のテストを行うことが考えられます。"

#: ../../library/user.rst:39
msgid ""
"A warning to users: be very conservative in what you place in your :file:`."
"pythonrc.py` file.  Since you don't know which programs will use it, "
"changing the behavior of standard modules or functions is generally not a "
"good idea."
msgstr ""
"ユーザーへの警告: :file:`.pythonrc.py` ファイルに書く内容には慎重になってくだ"
"さい。どのプログラムが利用しているかわからない状況で、標準のモジュールや関数"
"の振る舞いを変えることはおすすめできません。"

#: ../../library/user.rst:44
msgid ""
"A suggestion for programmers who wish to use this mechanism: a simple way to "
"let users specify options for your package is to have them define variables "
"in their :file:`.pythonrc.py` file that you test in your module.  For "
"example, a module :mod:`spam` that has a verbosity level can look for a "
"variable ``user.spam_verbose``, as follows::"
msgstr ""
"この機構を使おうとするプログラマへの提案: あなたのパッケージ向けのオプション"
"をユーザーが設定できるようにするシンプルな方法は、 :file:`.pythonrc.py` ファ"
"イルで変数を定義して、あなたのプログラムでテストする方法です。たとえば、 :"
"mod:`spam` モジュールでメッセージ出力のレベルを変える ``user.spam_verbose`` "
"変数を参照するには以下のようにします:"

#: ../../library/user.rst:54
msgid ""
"(The three-argument form of :func:`getattr` is used in case the user has not "
"defined ``spam_verbose`` in their :file:`.pythonrc.py` file.)"
msgstr ""
"(ユーザが ``spam_verbose`` をファイル :file:`.pythonrc.py` 内で定義してないこ"
"とに備えて :func:`getattr` の3 引数形式を使っています。)"

#: ../../library/user.rst:57
msgid ""
"Programs with extensive customization needs are better off reading a program-"
"specific customization file."
msgstr ""
"大掛かりな設定の必要があるプログラムでは、プログラム固有の設定ファイルを読む"
"方がずっと良いです。"

#: ../../library/user.rst:60
msgid ""
"Programs with security or privacy concerns should *not* import this module; "
"a user can easily break into a program by placing arbitrary code in the :"
"file:`.pythonrc.py` file."
msgstr ""
"セキュリティやプライバシーに配慮するプログラムではこのモジュールを import  *"
"しないで* ください。このモジュールを使うと、ユーザーは :file:`.pythonrc.py` "
"に任意のコードを書くことで簡単にプログラムに侵入することができてしまいます。"

#: ../../library/user.rst:64
msgid ""
"Modules for general use should *not* import this module; it may interfere "
"with the operation of the importing program."
msgstr ""
"汎用のモジュールではこのモジュールを import  *しないで* ください。 import し"
"たプログラムの動作にも干渉してしまいます。"

#: ../../library/user.rst:70
msgid "Module :mod:`site`"
msgstr ":mod:`site` モジュール"

#: ../../library/user.rst:71
msgid "Site-wide customization mechanism."
msgstr "サイト毎のカスタマイズを行う機構"
