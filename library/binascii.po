# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Arihiro TAKASE, 2024
# 石井明久, 2024
# Takanori Suzuki <takanori@takanory.net>, 2024
# tomo, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-04 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: tomo, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/binascii.rst:2
msgid ":mod:`!binascii` --- Convert between binary and ASCII"
msgstr ":mod:`!binascii` --- バイナリ と ASCII 間の変換"

#: ../../library/binascii.rst:13
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`base64` "
"instead. The :mod:`binascii` module contains low-level functions written in "
"C for greater speed that are used by the higher-level modules."
msgstr ""
":mod:`binascii` モジュールにはバイナリと ASCII コード化されたバイナリ表現との"
"間の変換を行うための多数のメソッドが含まれています。通常はこれらの関数を直接"
"使わずに  :mod:`base64` といったラッパーモジュールを使います。:mod:"
"`binascii` モジュールは C で書かれた高速な低水準関数を提供していて、それらは"
"上記の高水準なモジュールで利用されます。"

#: ../../library/binascii.rst:22
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"``a2b_*`` 関数は ASCII 文字だけを含むユニコード文字列を受け取ります。他の関数"
"は (:class:`bytes` や :class:`bytearray` またはバッファープロトコルをサポート"
"するその他のオブジェクトのような) :term:`bytes-like オブジェクト <bytes-like "
"object>` だけを受け取ります。"

#: ../../library/binascii.rst:27
msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr ""
"``a2b_*`` 関数は ASCII のみのユニコード文字列を受け取るようになりました。"

#: ../../library/binascii.rst:31
msgid "The :mod:`binascii` module defines the following functions:"
msgstr ":mod:`binascii` モジュールでは以下の関数を定義します:"

#: ../../library/binascii.rst:36
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"uuencode された 1 行のデータをバイナリに変換し、変換後のバイナリデータを返し"
"ます。最後の行を除いて、通常 1 行には (バイナリデータで) 45 バイトが含まれま"
"す。入力データの先頭には空白文字が連続していてもかまいません。"

#: ../../library/binascii.rst:43
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""

#: ../../library/binascii.rst:47
msgid "Added the *backtick* parameter."
msgstr "*backtick* パラメータを追加しました."

#: ../../library/binascii.rst:53
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"base64 でエンコードされたデータのブロックをバイナリに変換し、変換後のバイナリ"
"データを返します。一度に 1 行以上のデータを与えてもかまいません。"

#: ../../library/binascii.rst:56
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""

#: ../../library/binascii.rst:59
msgid "Valid base64:"
msgstr ""

#: ../../library/binascii.rst:61
msgid "Conforms to :rfc:`3548`."
msgstr ""

#: ../../library/binascii.rst:62
msgid "Contains only characters from the base64 alphabet."
msgstr ""

#: ../../library/binascii.rst:63
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr ""

#: ../../library/binascii.rst:64
msgid "Does not start with a padding."
msgstr ""

#: ../../library/binascii.rst:66
msgid "Added the *strict_mode* parameter."
msgstr ""

#: ../../library/binascii.rst:72
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"バイナリデータを base64 でエンコードされた 1 行の ASCII 文字列に変換します。"
"戻り値は変換後の 1 行の文字列で、*newline* が真の場合改行文字を含みます。この"
"関数の出力は :rfc:`3548` を遵守します。"

#: ../../library/binascii.rst:76
msgid "Added the *newline* parameter."
msgstr "パラメータに *newline* を追加しました。"

#: ../../library/binascii.rst:82
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""
"quoted-printable 形式のデータをバイナリに変換し、バイナリデータを返します。一"
"度に 1 行以上のデータを渡すことができます。オプション引数 *header* が与えられ"
"ており、かつその値が真であれば、アンダースコアは空白文字にデコードされます。"

#: ../../library/binascii.rst:89
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"バイナリデータを quoted-printable 形式でエンコードして 1 行から複数行の "
"ASCII 文字列に変換します。変換後の文字列を返します。オプション引数 "
"*quptetabs* が存在し、かつその値が真であれば、全てのタブおよび空白文字もエン"
"コードされます。オプション引数 *istext* が存在し、かつその値が真であれば、改"
"行はエンコードされませんが、行末の空白文字はエンコードされます。オプション引"
"数 *header* が存在し、かつその値が真である場合、空白文字は :rfc:`1522` にした"
"がってアンダースコアにエンコードされます。オプション引数 *header* が存在し、"
"かつその値が偽である場合、改行文字も同様にエンコードされます。そうでない場"
"合、復帰 (linefeed) 文字の変換によってバイナリデータストリームが破損してしま"
"うかもしれません。"

#: ../../library/binascii.rst:102
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16` "
"+ *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""
"*value* を CRC の初期値として *data* の 16 ビット CRC 値を計算し、その結果を"
"返します。\n"
"この関数は、よく 0x1021 と表現される CRC-CCITT 多項式 *x*:sup:`16` + *x*:sup:"
"`12` + *x*:sup:`5` + 1 を使います。\n"
"この CRC は binhex4 形式で使われています。"

#: ../../library/binascii.rst:110
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""
"符号無し 32 ビットチェックサムである CRC-32 を *data* に対して計算します。 "
"crc の初期値は *value* です。デフォルトの CRC の初期値はゼロです。このアルゴ"
"リズムは ZIP ファイルのチェックサムと同じです。このアルゴリズムはチェックサム"
"アルゴリズムとして設計されたもので、一般的なハッシュアルゴリズムには向きませ"
"ん。以下のようにして使います::"

#: ../../library/binascii.rst:116
msgid ""
"print(binascii.crc32(b\"hello world\"))\n"
"# Or, in two pieces:\n"
"crc = binascii.crc32(b\"hello\")\n"
"crc = binascii.crc32(b\" world\", crc)\n"
"print('crc32 = {:#010x}'.format(crc))"
msgstr ""

#: ../../library/binascii.rst:122
msgid "The result is always unsigned."
msgstr ""

#: ../../library/binascii.rst:128
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"バイナリ *data* の16進表現を返します。*data* の各バイトは、対応する2桁の16進"
"表現に変換されます。したがって、返されるバイトオブジェクトは *data* の2倍の長"
"さになります。"

#: ../../library/binascii.rst:132
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""

#: ../../library/binascii.rst:135
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""

#: ../../library/binascii.rst:150
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "引数 *sep* と *bytes_per_sep* が追加されました."

#: ../../library/binascii.rst:156
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"16進数表記の文字列 *hexstr* の表すバイナリデータを返します。この関数は :func:"
"`b2a_hex` の逆です。 *hexstr* は 16進数字 (大文字でも小文字でも構いません) を"
"偶数個含んでいなければなりません。そうでない場合、例外 :exc:`Error` が送出さ"
"れます。"

#: ../../library/binascii.rst:161
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the :meth:`bytes."
"fromhex` class method."
msgstr ""

#: ../../library/binascii.rst:167
msgid "Exception raised on errors. These are usually programming errors."
msgstr "エラーが発生した際に送出される例外です。通常はプログラムのエラーです。"

#: ../../library/binascii.rst:172
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"変換するデータが不完全な場合に送出される例外です。通常はプログラムのエラーで"
"はなく、多少追加読み込みを行って再度変換を試みることで対処できます。"

#: ../../library/binascii.rst:178
msgid "Module :mod:`base64`"
msgstr ":mod:`base64` モジュール"

#: ../../library/binascii.rst:179
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr "RFC 準拠の base64 形式の、底が 16、32、64、85 のエンコーディング。"

#: ../../library/binascii.rst:182
msgid "Module :mod:`quopri`"
msgstr ":mod:`quopri` モジュール"

#: ../../library/binascii.rst:183
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"MIME 電子メールメッセージで使われる quoted-printable エンコードのサポート。"

#: ../../library/binascii.rst:8
msgid "module"
msgstr "module"

#: ../../library/binascii.rst:8
msgid "base64"
msgstr "base64"
