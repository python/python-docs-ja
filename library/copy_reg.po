# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/copy_reg.rst:2
msgid ":mod:`copy_reg` --- Register :mod:`pickle` support functions"
msgstr ":mod:`copy_reg` --- :mod:`pickle` サポート関数を登録する"

#: ../../library/copy_reg.rst:8
msgid ""
"The :mod:`copy_reg` module has been renamed to :mod:`copyreg` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""
":mod:`copy_reg` モジュールはPython 3 で :mod:`copyreg` に変更されました。 :"
"term:`2to3` ツールが自動的にソースコードの import を変換します。"

#: ../../library/copy_reg.rst:17
msgid ""
"The :mod:`copy_reg` module offers a way to define functions used while "
"pickling specific objects.  The :mod:`pickle`, :mod:`cPickle`, and :mod:"
"`copy` modules use those functions when pickling/copying those objects.  The "
"module provides configuration information about object constructors which "
"are not classes. Such constructors may be factory functions or class "
"instances."
msgstr ""
":mod:`copy_reg` モジュールは特定のオブジェクトを pickle 化するのに使われる関"
"数を定義する手段を提供します。 :mod:`pickle`, :mod:`cPickle`, :mod:`copy` モ"
"ジュールが、そのオブジェクトを pickle 化したりコピーする際にそれら登録関数を"
"使います。このモジュールは、クラスでないオブジェクトコンストラクタについての"
"設定情報を提供します。クラスでないオブジェクトコンストラクタ、とは、おそらく"
"ファクトリ関数かクラスのインスタンスです。"

#: ../../library/copy_reg.rst:26
msgid ""
"Declares *object* to be a valid constructor.  If *object* is not callable "
"(and hence not valid as a constructor), raises :exc:`TypeError`."
msgstr ""
"*object* を有効なコンストラクタであると宣言します。 *object* が呼び出し可能で"
"なければ(したがってコンストラクタとして有効でなければ)、 :exc:`TypeError` を"
"発生します。"

#: ../../library/copy_reg.rst:32
msgid ""
"Declares that *function* should be used as a \"reduction\" function for "
"objects of type *type*; *type* must not be a \"classic\" class object.  "
"(Classic classes are handled differently; see the documentation for the :mod:"
"`pickle` module for details.)  *function* should return either a string or a "
"tuple containing two or three elements."
msgstr ""
"*function* を、型 *type* のオブジェクトに対する \"リダクション\" 関数 として"
"使うことを宣言します。 *type* は旧スタイルクラスオブジェクトであってはいけま"
"せん。 (旧スタイルクラスは異なった扱われ方をします。詳細は、 :mod:`pickle` モ"
"ジュールのドキュメンテーションを参照してください。) *function* は文字列または"
"二ないし三つの要素を含むタプルを返さなければなりません。"

#: ../../library/copy_reg.rst:38
msgid ""
"The optional *constructor* parameter, if provided, is a callable object "
"which can be used to reconstruct the object when called with the tuple of "
"arguments returned by *function* at pickling time.  :exc:`TypeError` will be "
"raised if *object* is a class or *constructor* is not callable."
msgstr ""
"オプションの *constructor* パラメータが与えられた場合、それは呼び出し可能オブ"
"ジェクトで、 *function* が返した引数のタプルとともに pickle 化時に呼ばれてオ"
"ブジェクトを再構築するために使われます。 *object* がクラスの場合、または "
"*constructor* が呼び出し可能でない場合には :exc:`TypeError` が発生します。"

#: ../../library/copy_reg.rst:43
msgid ""
"See the :mod:`pickle` module for more details on the interface expected of "
"*function* and *constructor*."
msgstr ""
"*function* と *constructor* の求められるインターフェイスについての詳細は、 :"
"mod:`pickle` モジュールを参照してください。"

#: ../../library/copy_reg.rst:47
msgid "Example"
msgstr "例"

#: ../../library/copy_reg.rst:49
msgid ""
"The example below would like to show how to register a pickle function and "
"how it will be used:"
msgstr ""
"下記の例は、pickle 関数を登録する方法と、それがどのように使用されるかを示そう"
"としています:"
