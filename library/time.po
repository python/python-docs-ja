# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Osamu NAKAMURA, 2021
# Atsuo Ishimoto <atsuoishimoto@gmail.com>, 2021
# Takanori Suzuki <takanori@takanory.net>, 2022
# Arihiro TAKASE, 2023
# Masato HASHIMOTO <cabezon.hashimoto@gmail.com>, 2023
# tomo, 2024
# Takeshi Nakazato, 2024
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:15+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/time.rst:2
msgid ":mod:`!time` --- Time access and conversions"
msgstr ":mod:`!time` --- 時刻データへのアクセスと変換"

#: ../../library/time.rst:9
msgid ""
"This module provides various time-related functions. For related "
"functionality, see also the :mod:`datetime` and :mod:`calendar` modules."
msgstr ""
"このモジュールでは、時刻に関するさまざまな関数を提供します。関連した機能につ"
"いて、:mod:`datetime`, :mod:`calendar` モジュールも参照してください。"

#: ../../library/time.rst:12
msgid ""
"Although this module is always available, not all functions are available on "
"all platforms.  Most of the functions defined in this module call platform C "
"library functions with the same name.  It may sometimes be helpful to "
"consult the platform documentation, because the semantics of these functions "
"varies among platforms."
msgstr ""
"このモジュールは常に利用可能ですが、すべての関数がすべてのプラットフォームで"
"利用可能なわけではありません。このモジュールで定義されているほとんどの関数"
"は、プラットフォーム上の同名の C ライブラリ関数を呼び出します。これらの関数に"
"対する意味付けはプラットフォーム間で異なるため、プラットフォーム提供のドキュ"
"メントを読んでおくと便利でしょう。"

#: ../../library/time.rst:18
msgid "An explanation of some terminology and conventions is in order."
msgstr "まずいくつかの用語の説明と慣習について整理します。"

#: ../../library/time.rst:24
msgid ""
"The :dfn:`epoch` is the point where the time starts, the return value of "
"``time.gmtime(0)``. It is January 1, 1970, 00:00:00 (UTC) on all platforms."
msgstr ""

#: ../../library/time.rst:31
msgid ""
"The term :dfn:`seconds since the epoch` refers to the total number of "
"elapsed seconds since the epoch, typically excluding `leap seconds`_.  Leap "
"seconds are excluded from this total on all POSIX-compliant platforms."
msgstr ""
":dfn:`エポック秒` (:dfn:`seconds since the epoch`) は、エポックからの総経過秒"
"数を示していますが、たいていはうるう秒 (`leap seconds`_) は含まれていませ"
"ん。\n"
"全ての POSIX 互換のプラットフォームで、うるう秒はこの総秒数には含まれません。"

#: ../../library/time.rst:38
msgid ""
"The functions in this module may not handle dates and times before the "
"epoch_ or far in the future.  The cut-off point in the future is determined "
"by the C library; for 32-bit systems, it is typically in 2038."
msgstr ""
"このモジュールの中の関数は、エポック (epoch_) 以前あるいは遠い未来の日付や時"
"刻を扱うことができません。将来カットオフ（関数が正しく日付や時刻を扱えなくな"
"る）が起きる時点は、C ライブラリによって決まります。32-bit システムではカット"
"オフは通常 2038 年です。"

#: ../../library/time.rst:45
msgid ""
"Function :func:`strptime` can parse 2-digit years when given ``%y`` format "
"code. When 2-digit years are parsed, they are converted according to the "
"POSIX and ISO C standards: values 69--99 are mapped to 1969--1999, and "
"values 0--68 are mapped to 2000--2068."
msgstr ""
"関数 :func:`strptime` は ``%y`` 書式コードが与えられた時に 2 桁の年表記を解析"
"できます。2 桁の年を解析する場合、それらは POSIX および ISO C 標準に従って変"
"換されます: 69-99 の西暦年は 1969-1999 となり、0–68 の西暦年は 2000–2068 にな"
"ります。"

#: ../../library/time.rst:55
msgid ""
"UTC is Coordinated Universal Time (formerly known as Greenwich Mean Time, or "
"GMT).  The acronym UTC is not a mistake but a compromise between English and "
"French."
msgstr ""
"UTC は協定世界時 (Coordinated Universal Time) のことです (以前はグリニッジ標"
"準時または GMT として知られていました)。UTC の頭文字の並びは誤りではなく、英"
"仏の妥協によるものです。"

#: ../../library/time.rst:61
msgid ""
"DST is Daylight Saving Time, an adjustment of the timezone by (usually) one "
"hour during part of the year.  DST rules are magic (determined by local law) "
"and can change from year to year.  The C library has a table containing the "
"local rules (often it is read from a system file for flexibility) and is the "
"only source of True Wisdom in this respect."
msgstr ""
"DST は夏時間 (Daylight Saving Time) のことで、一年のうちの一定期間に 1 時間タ"
"イムゾーンを修正することです。DST のルールは不可思議で (地域ごとに法律で定め"
"られています)、年ごとに変わることもあります。C ライブラリはローカルルールを記"
"したテーブルを持っており (柔軟に対応するため、たいていはシステムファイルから"
"読み込まれます)、この点に関しては唯一の真実の知識の源です。"

#: ../../library/time.rst:67
msgid ""
"The precision of the various real-time functions may be less than suggested "
"by the units in which their value or argument is expressed. E.g. on most "
"Unix systems, the clock \"ticks\" only 50 or 100 times a second."
msgstr ""
"多くの現時刻を返す関数 (real-time functions) の精度は、値や引数を表現するため"
"に使う単位から想像されるよりも低いかも知れません。例えば、ほとんどの Unix シ"
"ステムにおいて、クロックの 1 ティックの精度は 50 から 100 分の 1 秒に過ぎませ"
"ん。"

#: ../../library/time.rst:71
msgid ""
"On the other hand, the precision of :func:`.time` and :func:`sleep` is "
"better than their Unix equivalents: times are expressed as floating-point "
"numbers, :func:`.time` returns the most accurate time available (using Unix :"
"c:func:`!gettimeofday` where available), and :func:`sleep` will accept a "
"time with a nonzero fraction (Unix :c:func:`!select` is used to implement "
"this, where available)."
msgstr ""

#: ../../library/time.rst:78
msgid ""
"The time value as returned by :func:`gmtime`, :func:`localtime`, and :func:"
"`strptime`, and accepted by :func:`asctime`, :func:`mktime` and :func:"
"`strftime`, is a sequence of 9 integers.  The return values of :func:"
"`gmtime`, :func:`localtime`, and :func:`strptime` also offer attribute names "
"for individual fields."
msgstr ""
":func:`gmtime`, :func:`localtime`, :func:`strptime` が返す時刻値、および :"
"func:`asctime`, :func:`mktime`, :func:`strftime` がとる時刻値は 9 個の整数か"
"らなるシーケンスです。:func:`gmtime`, :func:`localtime`, :func:`strptime` の"
"戻り値は個々の値を属性名で取得することもできます。"

#: ../../library/time.rst:84
msgid "See :class:`struct_time` for a description of these objects."
msgstr ""
"これらのオブジェクトについての解説は :class:`struct_time` を参照してくださ"
"い。"

#: ../../library/time.rst:86
msgid ""
"The :class:`struct_time` type was extended to provide the :attr:"
"`~struct_time.tm_gmtoff` and :attr:`~struct_time.tm_zone` attributes when "
"platform supports corresponding ``struct tm`` members."
msgstr ""

#: ../../library/time.rst:92
msgid ""
"The :class:`struct_time` attributes :attr:`~struct_time.tm_gmtoff` and :attr:"
"`~struct_time.tm_zone` are now available on all platforms."
msgstr ""

#: ../../library/time.rst:97
msgid "Use the following functions to convert between time representations:"
msgstr "時間の表現を変換するには、以下の関数を利用してください:"

#: ../../library/time.rst:100
msgid "From"
msgstr "対象"

#: ../../library/time.rst:100
msgid "To"
msgstr "変換先"

#: ../../library/time.rst:100
msgid "Use"
msgstr "関数"

#: ../../library/time.rst:29 ../../library/time.rst:102
#: ../../library/time.rst:105 ../../library/time.rst:108
#: ../../library/time.rst:111
msgid "seconds since the epoch"
msgstr "エポックからの秒数"

#: ../../library/time.rst:102 ../../library/time.rst:108
msgid ":class:`struct_time` in UTC"
msgstr "UTC の :class:`struct_time`"

#: ../../library/time.rst:102
msgid ":func:`gmtime`"
msgstr ":func:`gmtime`"

#: ../../library/time.rst:105 ../../library/time.rst:111
msgid ":class:`struct_time` in local time"
msgstr "ローカル時間の :class:`struct_time`"

#: ../../library/time.rst:105
msgid ":func:`localtime`"
msgstr ":func:`localtime`"

#: ../../library/time.rst:108
msgid ":func:`calendar.timegm`"
msgstr ":func:`calendar.timegm`"

#: ../../library/time.rst:111
msgid ":func:`mktime`"
msgstr ":func:`mktime`"

#: ../../library/time.rst:119
msgid "Functions"
msgstr "関数"

#: ../../library/time.rst:123
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by :"
"func:`gmtime` or :func:`localtime` to a string of the following form: ``'Sun "
"Jun 20 23:21:05 1993'``. The day field is two characters long and is space "
"padded if the day is a single digit, e.g.: ``'Wed Jun  9 04:26:40 1993'``."
msgstr ""

#: ../../library/time.rst:129
msgid ""
"If *t* is not provided, the current time as returned by :func:`localtime` is "
"used. Locale information is not used by :func:`asctime`."
msgstr ""

#: ../../library/time.rst:134
msgid ""
"Unlike the C function of the same name, :func:`asctime` does not add a "
"trailing newline."
msgstr ""
"同名の C の関数と違って、:func:`asctime` は末尾に改行文字を加えません。"

#: ../../library/time.rst:139
msgid ""
"Return the *clk_id* of the thread-specific CPU-time clock for the specified "
"*thread_id*."
msgstr ""

#: ../../library/time.rst:141
msgid ""
"Use :func:`threading.get_ident` or the :attr:`~threading.Thread.ident` "
"attribute of :class:`threading.Thread` objects to get a suitable value for "
"*thread_id*."
msgstr ""

#: ../../library/time.rst:146
msgid ""
"Passing an invalid or expired *thread_id* may result in undefined behavior, "
"such as segmentation fault."
msgstr ""

#: ../../library/time.rst:149
msgid ":ref:`Availability <availability>`: Unix"
msgstr ":ref:`利用可能な環境 <availability>`: Unix"

#: ../../library/time.rst:151
msgid ""
"See the man page for :manpage:`pthread_getcpuclockid(3)` for further "
"information."
msgstr ""
"更なる情報については :manpage:`pthread_getcpuclockid(3)` の man を参照してく"
"ださい。"

#: ../../library/time.rst:158
msgid ""
"Return the resolution (precision) of the specified clock *clk_id*.  Refer "
"to :ref:`time-clock-id-constants` for a list of accepted values for *clk_id*."
msgstr ""
"指定された *clk_id* クロックの分解能(精度)を返します。 *clk_id* として受け付"
"けられる値の一覧は :ref:`time-clock-id-constants` を参照してください。"

#: ../../library/time.rst:161 ../../library/time.rst:174
#: ../../library/time.rst:183 ../../library/time.rst:196
#: ../../library/time.rst:205 ../../library/time.rst:745
#: ../../library/time.rst:862 ../../library/time.rst:890
#: ../../library/time.rst:918 ../../library/time.rst:962
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`利用可能な環境 <availability>`: Unix。"

#: ../../library/time.rst:168
msgid ""
"Return the time of the specified clock *clk_id*.  Refer to :ref:`time-clock-"
"id-constants` for a list of accepted values for *clk_id*."
msgstr ""
"指定された *clk_id* クロックの時刻を返します。 *clk_id* として受け付けられる"
"値の一覧は :ref:`time-clock-id-constants` を参照してください。"

#: ../../library/time.rst:171
msgid ""
"Use :func:`clock_gettime_ns` to avoid the precision loss caused by the :"
"class:`float` type."
msgstr ""

#: ../../library/time.rst:181
msgid "Similar to :func:`clock_gettime` but return time as nanoseconds."
msgstr ":func:`clock_gettime` に似ていますが、ナノ秒単位の時刻を返します。"

#: ../../library/time.rst:190
msgid ""
"Set the time of the specified clock *clk_id*.  Currently, :data:"
"`CLOCK_REALTIME` is the only accepted value for *clk_id*."
msgstr ""
"指定された *clk_id* クロックの時刻を設定します。\n"
"現在、 :data:`CLOCK_REALTIME` は *clk_id* が受け付ける唯一の値です。"

#: ../../library/time.rst:193
msgid ""
"Use :func:`clock_settime_ns` to avoid the precision loss caused by the :"
"class:`float` type."
msgstr ""

#: ../../library/time.rst:203
msgid "Similar to :func:`clock_settime` but set time with nanoseconds."
msgstr ":func:`clock_settime` に似ていますが、ナノ秒単位の時刻を設定します。"

#: ../../library/time.rst:212
msgid ""
"Convert a time expressed in seconds since the epoch_ to a string of a form: "
"``'Sun Jun 20 23:21:05 1993'`` representing local time. The day field is two "
"characters long and is space padded if the day is a single digit, e.g.: "
"``'Wed Jun  9 04:26:40 1993'``."
msgstr ""

#: ../../library/time.rst:217
msgid ""
"If *secs* is not provided or :const:`None`, the current time as returned by :"
"func:`.time` is used. ``ctime(secs)`` is equivalent to "
"``asctime(localtime(secs))``. Locale information is not used by :func:"
"`ctime`."
msgstr ""
"*secs* を指定しないか :const:`None` を指定した場合、:func:`.time` が返す値を"
"現在の時刻として使用します。``ctime(secs)`` は ``asctime(localtime(secs))`` "
"と等価です。ローカル情報は :func:`ctime` には使用されません。"

#: ../../library/time.rst:225
msgid ""
"Get information on the specified clock as a namespace object. Supported "
"clock names and the corresponding functions to read their value are:"
msgstr ""
"指定されたクロックの情報を名前空間オブジェクトとして取得します。サポートされ"
"ているクロック名およびそれらの値を取得する関数は以下の通りです:"

#: ../../library/time.rst:229
msgid "``'monotonic'``: :func:`time.monotonic`"
msgstr "``'monotonic'``: :func:`time.monotonic`"

#: ../../library/time.rst:230
msgid "``'perf_counter'``: :func:`time.perf_counter`"
msgstr "``'perf_counter'``: :func:`time.perf_counter`"

#: ../../library/time.rst:231
msgid "``'process_time'``: :func:`time.process_time`"
msgstr "``'process_time'``: :func:`time.process_time`"

#: ../../library/time.rst:232
msgid "``'thread_time'``: :func:`time.thread_time`"
msgstr "``'thread_time'``: :func:`time.thread_time`"

#: ../../library/time.rst:233
msgid "``'time'``: :func:`time.time`"
msgstr "``'time'``: :func:`time.time`"

#: ../../library/time.rst:235
msgid "The result has the following attributes:"
msgstr "結果は以下の属性をもちます:"

#: ../../library/time.rst:237
msgid ""
"*adjustable*: ``True`` if the clock can be changed automatically (e.g. by a "
"NTP daemon) or manually by the system administrator, ``False`` otherwise"
msgstr ""
"*adjustable*: 自動 (NTP デーモンによるなど) またはシステム管理者による手動で"
"変更できる場合は ``True``、それ以外の場合は ``False`` になります。"

#: ../../library/time.rst:239
msgid ""
"*implementation*: The name of the underlying C function used to get the "
"clock value.  Refer to :ref:`time-clock-id-constants` for possible values."
msgstr ""
"*implementation*: クロック値を取得するために内部で使用している C 関数の名前で"
"す。\n"
"使える値については :ref:`time-clock-id-constants` を参照してください。"

#: ../../library/time.rst:241
msgid ""
"*monotonic*: ``True`` if the clock cannot go backward, ``False`` otherwise"
msgstr ""
"*monotonic*: クロック値が後戻りすることがない場合 ``True`` が、そうでない場合"
"は ``False`` になります。"

#: ../../library/time.rst:243
msgid "*resolution*: The resolution of the clock in seconds (:class:`float`)"
msgstr "*resolution*: クロックの分解能を秒 (:class:`float`) で表します。"

#: ../../library/time.rst:250
msgid ""
"Convert a time expressed in seconds since the epoch_ to a :class:"
"`struct_time` in UTC in which the dst flag is always zero.  If *secs* is not "
"provided or :const:`None`, the current time as returned by :func:`.time` is "
"used.  Fractions of a second are ignored.  See above for a description of "
"the :class:`struct_time` object. See :func:`calendar.timegm` for the inverse "
"of this function."
msgstr ""
"エポック (epoch_) からの経過時間で表現された時刻を、UTC で :class:"
"`struct_time` に変換します。このとき dst フラグは常にゼロとして扱われます。"
"*secs* を指定しないか :const:`None` を指定した場合、:func:`.time` が返す値を"
"現在の時刻として使用します。秒の端数は無視されます。:class:`struct_time` オブ"
"ジェクトについては前述の説明を参照してください。:func:`calendar.timegm` はこ"
"の関数と逆の変換を行います。"

#: ../../library/time.rst:260
msgid ""
"Like :func:`gmtime` but converts to local time.  If *secs* is not provided "
"or :const:`None`, the current time as returned by :func:`.time` is used.  "
"The dst flag is set to ``1`` when DST applies to the given time."
msgstr ""
":func:`gmtime` に似ていますが、ローカル時間に変換します。*secs* を指定しない"
"か :const:`None` を指定した場合、:func:`.time` が返す値を現在の時刻として使用"
"します。DST が適用されている場合は dst フラグには ``1`` が設定されます。"

#: ../../library/time.rst:264
msgid ""
":func:`localtime` may raise :exc:`OverflowError`, if the timestamp is "
"outside the range of values supported by the platform C :c:func:`localtime` "
"or :c:func:`gmtime` functions, and :exc:`OSError` on :c:func:`localtime` or :"
"c:func:`gmtime` failure. It's common for this to be restricted to years "
"between 1970 and 2038."
msgstr ""

#: ../../library/time.rst:273
msgid ""
"This is the inverse function of :func:`localtime`.  Its argument is the :"
"class:`struct_time` or full 9-tuple (since the dst flag is needed; use "
"``-1`` as the dst flag if it is unknown) which expresses the time in *local* "
"time, not UTC.  It returns a floating-point number, for compatibility with :"
"func:`.time`. If the input value cannot be represented as a valid time, "
"either :exc:`OverflowError` or :exc:`ValueError` will be raised (which "
"depends on whether the invalid value is caught by Python or the underlying C "
"libraries). The earliest date for which it can generate a time is platform-"
"dependent."
msgstr ""

#: ../../library/time.rst:285
msgid ""
"Return the value (in fractional seconds) of a monotonic clock, i.e. a clock "
"that cannot go backwards.  The clock is not affected by system clock "
"updates. The reference point of the returned value is undefined, so that "
"only the difference between the results of two calls is valid."
msgstr ""
"モノトニッククロック、すなわち後戻りしないクロックの値を (小数秒で) 返しま"
"す。このクロックはシステムクロックの更新の影響を受けません。戻り値の基準点は"
"定義されていないので、二回の呼び出しの結果の差だけが有効です。"

#: ../../library/time.rst:290 ../../library/time.rst:687
msgid "Clock:"
msgstr ""

#: ../../library/time.rst:292
msgid ""
"On Windows, call ``QueryPerformanceCounter()`` and "
"``QueryPerformanceFrequency()``."
msgstr ""

#: ../../library/time.rst:294
msgid "On macOS, call ``mach_absolute_time()`` and ``mach_timebase_info()``."
msgstr ""

#: ../../library/time.rst:295
msgid "On HP-UX, call ``gethrtime()``."
msgstr ""

#: ../../library/time.rst:296
msgid "Call ``clock_gettime(CLOCK_HIGHRES)`` if available."
msgstr ""

#: ../../library/time.rst:297
msgid "Otherwise, call ``clock_gettime(CLOCK_MONOTONIC)``."
msgstr ""

#: ../../library/time.rst:299
msgid ""
"Use :func:`monotonic_ns` to avoid the precision loss caused by the :class:"
"`float` type."
msgstr ""

#: ../../library/time.rst:304
msgid "The function is now always available and always system-wide."
msgstr "この関数は、常に利用でき、常にシステム全域で使えるようになりました。"

#: ../../library/time.rst:307
msgid "On macOS, the function is now system-wide."
msgstr ""

#: ../../library/time.rst:313
msgid "Similar to :func:`monotonic`, but return time as nanoseconds."
msgstr ":func:`monotonic` に似ていますが、ナノ秒単位の時刻を返します。"

#: ../../library/time.rst:322
msgid ""
"Return the value (in fractional seconds) of a performance counter, i.e. a "
"clock with the highest available resolution to measure a short duration.  It "
"does include time elapsed during sleep and is system-wide.  The reference "
"point of the returned value is undefined, so that only the difference "
"between the results of two calls is valid."
msgstr ""
"パフォーマンスカウンター、すなわち短い時間を計測するための可能な限り高い分解"
"能を持つクロックの値を (小数秒で) 返します。これはスリープ中の経過時間を含"
"み、システムワイドです。戻り値の基準点は定義されていないので、二回の呼び出し"
"の結果の差だけが有効です。"

#: ../../library/time.rst:330
msgid ""
"On CPython, use the same clock than :func:`time.monotonic` and is a "
"monotonic clock, i.e. a clock that cannot go backwards."
msgstr ""

#: ../../library/time.rst:333
msgid ""
"Use :func:`perf_counter_ns` to avoid the precision loss caused by the :class:"
"`float` type."
msgstr ""

#: ../../library/time.rst:338
msgid "On Windows, the function is now system-wide."
msgstr ""

#: ../../library/time.rst:341
msgid "Use the same clock than :func:`time.monotonic`."
msgstr ""

#: ../../library/time.rst:347
msgid "Similar to :func:`perf_counter`, but return time as nanoseconds."
msgstr ":func:`perf_counter` に似ていますが、ナノ秒単位の時刻を返します。"

#: ../../library/time.rst:359
msgid ""
"Return the value (in fractional seconds) of the sum of the system and user "
"CPU time of the current process.  It does not include time elapsed during "
"sleep.  It is process-wide by definition.  The reference point of the "
"returned value is undefined, so that only the difference between the results "
"of two calls is valid."
msgstr ""
"現在のプロセスのシステムおよびユーザー CPU 時間の値を (小数秒で) 返します。こ"
"れはスリープ中の経過時間を含みません。これは定義上プロセスワイドです。戻り値"
"の基準点は定義されていないので、二回の呼び出しの結果の差だけが有効です。"

#: ../../library/time.rst:365
msgid ""
"Use :func:`process_time_ns` to avoid the precision loss caused by the :class:"
"`float` type."
msgstr ""

#: ../../library/time.rst:372
msgid "Similar to :func:`process_time` but return time as nanoseconds."
msgstr ":func:`process_time` に似ていますが、ナノ秒単位の時刻を返します。"

#: ../../library/time.rst:378
msgid ""
"Suspend execution of the calling thread for the given number of seconds. The "
"argument may be a floating-point number to indicate a more precise sleep "
"time."
msgstr ""

#: ../../library/time.rst:382
msgid ""
"If the sleep is interrupted by a signal and no exception is raised by the "
"signal handler, the sleep is restarted with a recomputed timeout."
msgstr ""

#: ../../library/time.rst:385
msgid ""
"The suspension time may be longer than requested by an arbitrary amount, "
"because of the scheduling of other activity in the system."
msgstr ""

#: ../../library/time.rst:388
msgid ""
"On Windows, if *secs* is zero, the thread relinquishes the remainder of its "
"time slice to any other thread that is ready to run. If there are no other "
"threads ready to run, the function returns immediately, and the thread "
"continues execution.  On Windows 8.1 and newer the implementation uses a "
"`high-resolution timer <https://docs.microsoft.com/en-us/windows-hardware/"
"drivers/kernel/high-resolution-timers>`_ which provides resolution of 100 "
"nanoseconds. If *secs* is zero, ``Sleep(0)`` is used."
msgstr ""

#: ../../library/time.rst:396
msgid "Unix implementation:"
msgstr ""

#: ../../library/time.rst:398
msgid "Use ``clock_nanosleep()`` if available (resolution: 1 nanosecond);"
msgstr ""

#: ../../library/time.rst:399
msgid "Or use ``nanosleep()`` if available (resolution: 1 nanosecond);"
msgstr ""

#: ../../library/time.rst:400
msgid "Or use ``select()`` (resolution: 1 microsecond)."
msgstr ""

#: ../../library/time.rst:402
msgid ""
"Raises an :ref:`auditing event <auditing>` ``time.sleep`` with argument "
"``secs``."
msgstr ""

#: ../../library/time.rst:404
msgid ""
"The function now sleeps at least *secs* even if the sleep is interrupted by "
"a signal, except if the signal handler raises an exception (see :pep:`475` "
"for the rationale)."
msgstr ""
"スリープがシグナルに中断されてもシグナルハンドラが例外を送出しない限り、少な"
"くとも *secs* だけスリープするようになりました (論拠については :pep:`475` を"
"参照してください)。"

#: ../../library/time.rst:409
msgid ""
"On Unix, the ``clock_nanosleep()`` and ``nanosleep()`` functions are now "
"used if available. On Windows, a waitable timer is now used."
msgstr ""

#: ../../library/time.rst:413
msgid "Raises an auditing event."
msgstr ""

#: ../../library/time.rst:421
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by :"
"func:`gmtime` or :func:`localtime` to a string as specified by the *format* "
"argument.  If *t* is not provided, the current time as returned by :func:"
"`localtime` is used.  *format* must be a string.  :exc:`ValueError` is "
"raised if any field in *t* is outside of the allowed range."
msgstr ""
":func:`gmtime` や :func:`localtime` が返す時刻値タプルまたは :class:"
"`struct_time` を、*format* で指定した文字列形式に変換します。*t* が与えられて"
"いない場合、:func:`localtime` が返す値を現在の時刻として使用します。*format* "
"は文字列でなくてはなりません。*t* のいずれかのフィールドが許容範囲外の数値で"
"あった場合、:exc:`ValueError` を送出します。"

#: ../../library/time.rst:427
msgid ""
"0 is a legal argument for any position in the time tuple; if it is normally "
"illegal the value is forced to a correct one."
msgstr ""
"0 は時刻タプル内のいずれの位置の引数にも使用できます; それが一般に不正な値で"
"あれば、正しい値に強制的に置き換えられます。"

#: ../../library/time.rst:430
msgid ""
"The following directives can be embedded in the *format* string. They are "
"shown without the optional field width and precision specification, and are "
"replaced by the indicated characters in the :func:`strftime` result:"
msgstr ""
"*format* 文字列には以下のディレクティブ (指示語) を埋め込むことができます。こ"
"れらはフィールド長や精度のオプションを付けずに表され、:func:`strftime` の結果"
"の対応する文字列に置き換えられます:"

#: ../../library/time.rst:435
msgid "Directive"
msgstr "ディレクティブ"

#: ../../library/time.rst:435
msgid "Meaning"
msgstr "意味"

#: ../../library/time.rst:435
msgid "Notes"
msgstr "注釈"

#: ../../library/time.rst:437
msgid "``%a``"
msgstr "``%a``"

#: ../../library/time.rst:437
msgid "Locale's abbreviated weekday name."
msgstr "ロケールの短縮された曜日名になります。"

#: ../../library/time.rst:440
msgid "``%A``"
msgstr "``%A``"

#: ../../library/time.rst:440
msgid "Locale's full weekday name."
msgstr "ロケールの曜日名になります。"

#: ../../library/time.rst:442
msgid "``%b``"
msgstr "``%b``"

#: ../../library/time.rst:442
msgid "Locale's abbreviated month name."
msgstr "ロケールの短縮された月名になります。"

#: ../../library/time.rst:445
msgid "``%B``"
msgstr "``%B``"

#: ../../library/time.rst:445
msgid "Locale's full month name."
msgstr "ロケールの月名になります。"

#: ../../library/time.rst:447
msgid "``%c``"
msgstr "``%c``"

#: ../../library/time.rst:447
msgid "Locale's appropriate date and time representation."
msgstr "ロケールの日時を適切な形式で表します。"

#: ../../library/time.rst:450
msgid "``%d``"
msgstr "``%d``"

#: ../../library/time.rst:450
msgid "Day of the month as a decimal number [01,31]."
msgstr "月中の日にちの 10 進表記になります [01,31]。"

#: ../../library/time.rst:453
msgid "``%f``"
msgstr "``%f``"

#: ../../library/time.rst:453
msgid "Microseconds as a decimal number"
msgstr ""

#: ../../library/time.rst:454
msgid "[000000,999999]."
msgstr ""

#: ../../library/time.rst:453
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/time.rst:457
msgid "``%H``"
msgstr "``%H``"

#: ../../library/time.rst:457
msgid "Hour (24-hour clock) as a decimal number [00,23]."
msgstr "時 (24 時間表記) の 10 進表記になります [00,23]。"

#: ../../library/time.rst:460
msgid "``%I``"
msgstr "``%I``"

#: ../../library/time.rst:460
msgid "Hour (12-hour clock) as a decimal number [01,12]."
msgstr "時 (12 時間表記) の 10 進表記になります [01,12]。"

#: ../../library/time.rst:463
msgid "``%j``"
msgstr "``%j``"

#: ../../library/time.rst:463
msgid "Day of the year as a decimal number [001,366]."
msgstr "年中の日にちの 10 進表記になります [001,366]。"

#: ../../library/time.rst:466
msgid "``%m``"
msgstr "``%m``"

#: ../../library/time.rst:466
msgid "Month as a decimal number [01,12]."
msgstr "月の 10 進表記になります [01,12]。"

#: ../../library/time.rst:469
msgid "``%M``"
msgstr "``%M``"

#: ../../library/time.rst:469
msgid "Minute as a decimal number [00,59]."
msgstr "分の 10 進表記になります [00,59]。"

#: ../../library/time.rst:472
msgid "``%p``"
msgstr "``%p``"

#: ../../library/time.rst:472
msgid "Locale's equivalent of either AM or PM."
msgstr "ロケールの AM もしくは PM と等価な文字列になります。"

#: ../../library/time.rst:472
msgid "\\(2)"
msgstr "\\(2)"

#: ../../library/time.rst:475
msgid "``%S``"
msgstr "``%S``"

#: ../../library/time.rst:475
msgid "Second as a decimal number [00,61]."
msgstr "秒の 10 進表記になります [00,61]。"

#: ../../library/time.rst:475
msgid "\\(3)"
msgstr "\\(3)"

#: ../../library/time.rst:478
msgid "``%U``"
msgstr "``%U``"

#: ../../library/time.rst:478
msgid ""
"Week number of the year (Sunday as the first day of the week) as a decimal "
"number [00,53]. All days in a new year preceding the first Sunday are "
"considered to be in week 0."
msgstr ""
"年の初めから何週目か (日曜を週の始まりとします) を表す 10 進数になります "
"[00,53]。年が明けてから最初の日曜日までのすべての曜日は 0 週目に属すると見な"
"されます。"

#: ../../library/time.rst:478 ../../library/time.rst:489
msgid "\\(4)"
msgstr "\\(4)"

#: ../../library/time.rst:486
msgid "``%w``"
msgstr "``%w``"

#: ../../library/time.rst:486
msgid "Weekday as a decimal number [0(Sunday),6]."
msgstr "曜日の 10 進表記になります [0 (日曜日),6]。"

#: ../../library/time.rst:489
msgid "``%W``"
msgstr "``%W``"

#: ../../library/time.rst:489
msgid ""
"Week number of the year (Monday as the first day of the week) as a decimal "
"number [00,53]. All days in a new year preceding the first Monday are "
"considered to be in week 0."
msgstr ""
"年の初めから何週目か (月曜を週の始まりとします) を表す 10 進数になります "
"[00,53]。年が明けてから最初の月曜日までの全ての曜日は 0 週目に属すると見なさ"
"れます。"

#: ../../library/time.rst:497
msgid "``%x``"
msgstr "``%x``"

#: ../../library/time.rst:497
msgid "Locale's appropriate date representation."
msgstr "ロケールの日付を適切な形式で表します。"

#: ../../library/time.rst:500
msgid "``%X``"
msgstr "``%X``"

#: ../../library/time.rst:500
msgid "Locale's appropriate time representation."
msgstr "ロケールの時間を適切な形式で表します。"

#: ../../library/time.rst:503
msgid "``%y``"
msgstr "``%y``"

#: ../../library/time.rst:503
msgid "Year without century as a decimal number [00,99]."
msgstr "西暦の下 2 桁の 10 進表記になります [00,99]。"

#: ../../library/time.rst:506
msgid "``%Y``"
msgstr "``%Y``"

#: ../../library/time.rst:506
msgid "Year with century as a decimal number."
msgstr "西暦 ( 4桁) の 10 進表記を表します。"

#: ../../library/time.rst:509
msgid "``%z``"
msgstr "``%z``"

#: ../../library/time.rst:509
msgid ""
"Time zone offset indicating a positive or negative time difference from UTC/"
"GMT of the form +HHMM or -HHMM, where H represents decimal hour digits and M "
"represents decimal minute digits [-23:59, +23:59]. [1]_"
msgstr ""
"タイムゾーンと UTC/GMT との時差を表す正または負の時間を +HHMM、-HHMM で表しま"
"す。H は時間の、M は分の 10 進表記になります [-23:59, +23:59]。 [1]_"

#: ../../library/time.rst:515
msgid "``%Z``"
msgstr "``%Z``"

#: ../../library/time.rst:515
msgid "Time zone name (no characters if no time zone exists). Deprecated. [1]_"
msgstr ""
"タイムゾーンの名前を表します (タイムゾーンがない場合には空文字列)。非推奨で"
"す。 [1]_"

#: ../../library/time.rst:518
msgid "``%%``"
msgstr "``%%``"

#: ../../library/time.rst:518
msgid "A literal ``'%'`` character."
msgstr "文字 ``'%'`` を表します。"

#: ../../library/time.rst:521
msgid "Notes:"
msgstr "注釈:"

#: ../../library/time.rst:524
msgid ""
"The ``%f`` format directive only applies to :func:`strptime`, not to :func:"
"`strftime`. However, see also :meth:`datetime.datetime.strptime` and :meth:"
"`datetime.datetime.strftime` where the ``%f`` format directive :ref:`applies "
"to microseconds <format-codes>`."
msgstr ""

#: ../../library/time.rst:530
msgid ""
"When used with the :func:`strptime` function, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr ""
":func:`strptime` 関数で使う場合、``%p`` ディレクティブが出力結果の時刻フィー"
"ルドに影響を及ぼすのは、時刻を解釈するために ``%I`` を使ったときのみです。"

#: ../../library/time.rst:536
msgid ""
"The range really is ``0`` to ``61``; value ``60`` is valid in timestamps "
"representing `leap seconds`_ and value ``61`` is supported for historical "
"reasons."
msgstr ""
"値の幅は実際に ``0`` から ``61`` です; ``60`` は `うるう秒<leap seconds>`_ を"
"表し、 ``61`` は歴史的理由によりサポートされています。"

#: ../../library/time.rst:541
msgid ""
"When used with the :func:`strptime` function, ``%U`` and ``%W`` are only "
"used in calculations when the day of the week and the year are specified."
msgstr ""
":func:`strptime` 関数で使う場合、``%U`` および ``%W`` を計算に使うのは曜日と"
"年を指定したときだけです。"

#: ../../library/time.rst:544
msgid ""
"Here is an example, a format for dates compatible with that specified  in "
"the :rfc:`2822` Internet email standard.  [1]_ ::"
msgstr ""
"以下に :rfc:`2822` インターネット電子メール標準で定義されている日付表現と互換"
"の書式の例を示します。  [1]_ ::"

#: ../../library/time.rst:547
msgid ""
">>> from time import gmtime, strftime\n"
">>> strftime(\"%a, %d %b %Y %H:%M:%S +0000\", gmtime())\n"
"'Thu, 28 Jun 2001 14:17:15 +0000'"
msgstr ""

#: ../../library/time.rst:551
msgid ""
"Additional directives may be supported on certain platforms, but only the "
"ones listed here have a meaning standardized by ANSI C.  To see the full set "
"of format codes supported on your platform, consult the :manpage:"
"`strftime(3)` documentation."
msgstr ""
"一部のプラットフォームではさらにいくつかのディレクティブがサポートされていま"
"すが、標準 ANSI C で意味のある値はここで列挙したものだけです。あなたのプラッ"
"トフォームでサポートされている書式コードの全一覧については、:manpage:"
"`strftime(3)` のドキュメントを参照してください。"

#: ../../library/time.rst:556
msgid ""
"On some platforms, an optional field width and precision specification can "
"immediately follow the initial ``'%'`` of a directive in the following "
"order; this is also not portable. The field width is normally 2 except for "
"``%j`` where it is 3."
msgstr ""
"一部のプラットフォームでは、フィールドの幅や精度を指定するオプションがディレ"
"クティブの先頭の文字 ``'%'`` の直後に付けられるようになっていました; この機能"
"も移植性はありません。フィールドの幅は通常 2 ですが、``%j`` は例外で 3 です。"

#: ../../library/time.rst:567
msgid ""
"Parse a string representing a time according to a format.  The return value "
"is a :class:`struct_time` as returned by :func:`gmtime` or :func:`localtime`."
msgstr ""
"時刻を表現する文字列を書式に従って解釈します。返される値は :func:`gmtime` "
"や :func:`localtime` が返すような :class:`struct_time` です。"

#: ../../library/time.rst:571
msgid ""
"The *format* parameter uses the same directives as those used by :func:"
"`strftime`; it defaults to ``\"%a %b %d %H:%M:%S %Y\"`` which matches the "
"formatting returned by :func:`ctime`. If *string* cannot be parsed according "
"to *format*, or if it has excess data after parsing, :exc:`ValueError` is "
"raised. The default values used to fill in any missing data when more "
"accurate values cannot be inferred are ``(1900, 1, 1, 0, 0, 0, 0, 1, -1)``. "
"Both *string* and *format* must be strings."
msgstr ""
"*format* パラメーターは :func:`strftime` で使うものと同じディレクティブを使い"
"ます; このパラメーターの値はデフォルトでは ``\"%a %b %d %H:%M:%S %Y\"`` で、:"
"func:`ctime` が返すフォーマットに一致します。*string* が *format* に従って解"
"釈できなかった場合、例外 :exc:`ValueError` が送出されます。解析しようとする "
"*string* が解析後に余分なデータを持っていた場合、:exc:`ValueError` が送出され"
"ます。欠落したデータについて、適切な値を推測できない場合はデフォルトの値で埋"
"められ、その値は ``(1900, 1, 1, 0, 0, 0, 0, 1, -1)`` です。*string* も "
"*format* も文字列でなければなりません。"

#: ../../library/time.rst:579
msgid "For example:"
msgstr "例えば:"

#: ../../library/time.rst:586
msgid ""
"Support for the ``%Z`` directive is based on the values contained in "
"``tzname`` and whether ``daylight`` is true.  Because of this, it is "
"platform-specific except for recognizing UTC and GMT which are always known "
"(and are considered to be non-daylight savings timezones)."
msgstr ""
"``%Z`` ディレクティブへのサポートは ``tzname`` に収められている値と "
"``daylight`` が真かどうかで決められます。このため、常に既知の (かつ夏時間でな"
"いと考えられている) UTC や GMT を認識する時以外はプラットフォーム固有の動作に"
"なります。"

#: ../../library/time.rst:591
msgid ""
"Only the directives specified in the documentation are supported.  Because "
"``strftime()`` is implemented per platform it can sometimes offer more "
"directives than those listed.  But ``strptime()`` is independent of any "
"platform and thus does not necessarily support all directives available that "
"are not documented as supported."
msgstr ""
"ドキュメント内で説明されているディレクティブだけがサポートされています。"
"``strftime()`` はプラットフォームごとに実装されているので、説明されていない"
"ディレクティブも利用できるかもしれません。しかし、``strptime()`` はプラット"
"フォーム非依存なので、ドキュメント内でサポートされているとされているディレク"
"ティブ以外は利用できません。"

#: ../../library/time.rst:600
msgid ""
"The type of the time value sequence returned by :func:`gmtime`, :func:"
"`localtime`, and :func:`strptime`.  It is an object with a :term:`named "
"tuple` interface: values can be accessed by index and by attribute name.  "
"The following values are present:"
msgstr ""
":func:`gmtime`, :func:`localtime` および :func:`strptime` が返す時刻値シーケ"
"ンスの型です。これは :term:`名前付きタプル <named tuple>` のインターフェース"
"をもったオブジェクトです。値はインデックスでも属性名でもアクセス可能です。以"
"下の値があります:"

#: ../../library/time.rst:607
msgid "Index"
msgstr "インデックス"

#: ../../library/time.rst:608
msgid "Attribute"
msgstr "属性"

#: ../../library/time.rst:609
msgid "Values"
msgstr "値"

#: ../../library/time.rst:611
msgid "0"
msgstr "0"

#: ../../library/time.rst:613
msgid "(for example, 1993)"
msgstr "(例えば 1993)"

#: ../../library/time.rst:615
msgid "1"
msgstr "1"

#: ../../library/time.rst:617
msgid "range [1, 12]"
msgstr "[1,12] の間の数"

#: ../../library/time.rst:619
msgid "2"
msgstr "2"

#: ../../library/time.rst:621
msgid "range [1, 31]"
msgstr "[1,31] の間の数"

#: ../../library/time.rst:623
msgid "3"
msgstr "3"

#: ../../library/time.rst:625
msgid "range [0, 23]"
msgstr "[0,23] の間の数"

#: ../../library/time.rst:627
msgid "4"
msgstr "4"

#: ../../library/time.rst:629
msgid "range [0, 59]"
msgstr "[0,59] の間の数"

#: ../../library/time.rst:631
msgid "5"
msgstr "5"

#: ../../library/time.rst:633
msgid "range [0, 61]; see :ref:`Note (2) <leap-second>` in :func:`strftime`"
msgstr ""

#: ../../library/time.rst:635
msgid "6"
msgstr "6"

#: ../../library/time.rst:637
msgid "range [0, 6]; Monday is 0"
msgstr ""

#: ../../library/time.rst:639
msgid "7"
msgstr "7"

#: ../../library/time.rst:641
msgid "range [1, 366]"
msgstr "[1,366] の間の数"

#: ../../library/time.rst:643
msgid "8"
msgstr "8"

#: ../../library/time.rst:645
msgid "0, 1 or -1; see below"
msgstr "0, 1 または -1; 以下を参照してください"

#: ../../library/time.rst:647 ../../library/time.rst:651
msgid "N/A"
msgstr "N/A"

#: ../../library/time.rst:649
msgid "abbreviation of timezone name"
msgstr "タイムゾーンの短縮名"

#: ../../library/time.rst:653
msgid "offset east of UTC in seconds"
msgstr "UTC から東方向へのオフセット (秒)"

#: ../../library/time.rst:655
msgid ""
"Note that unlike the C structure, the month value is a range of [1, 12], not "
"[0, 11]."
msgstr ""
"C の構造体とは異なり、月の値は [0, 11] ではなく [1, 12] であることに注意して"
"ください。"

#: ../../library/time.rst:658
msgid ""
"In calls to :func:`mktime`, :attr:`tm_isdst` may be set to 1 when daylight "
"savings time is in effect, and 0 when it is not.  A value of -1 indicates "
"that this is not known, and will usually result in the correct state being "
"filled in."
msgstr ""
":func:`mktime` の呼び出し時に、:attr:`tm_isdst` は夏時間が有効な場合は 1、そ"
"うでない場合は 0 に設定されることがあります。\n"
"値が -1 の場合は夏時間について不明なことを表していて、普通 :attr:`tm_isdst` "
"は正しい状態に設定されます。"

#: ../../library/time.rst:662
msgid ""
"When a tuple with an incorrect length is passed to a function expecting a :"
"class:`struct_time`, or having elements of the wrong type, a :exc:"
"`TypeError` is raised."
msgstr ""
":class:`struct_time` を引数とする関数に正しくない長さの :class:`struct_time` "
"や要素の型が正しくない :class:`struct_time` を与えた場合には、 :exc:"
"`TypeError` が送出されます。"

#: ../../library/time.rst:668
msgid ""
"Return the time in seconds since the epoch_ as a floating-point number. The "
"handling of `leap seconds`_ is platform dependent. On Windows and most Unix "
"systems, the leap seconds are not counted towards the time in seconds since "
"the epoch_. This is commonly referred to as `Unix time <https://en.wikipedia."
"org/wiki/Unix_time>`_."
msgstr ""

#: ../../library/time.rst:674
msgid ""
"Note that even though the time is always returned as a floating-point "
"number, not all systems provide time with a better precision than 1 second. "
"While this function normally returns non-decreasing values, it can return a "
"lower value than a previous call if the system clock has been set back "
"between the two calls."
msgstr ""

#: ../../library/time.rst:680
msgid ""
"The number returned by :func:`.time` may be converted into a more common "
"time format (i.e. year, month, day, hour, etc...) in UTC by passing it to :"
"func:`gmtime` function or in local time by passing it to the :func:"
"`localtime` function. In both cases a :class:`struct_time` object is "
"returned, from which the components of the calendar date may be accessed as "
"attributes."
msgstr ""
":func:`.time` が返す数値は、 :func:`gmtime` 関数に渡されて UTC の、あるいは :"
"func:`localtime` 関数に渡されて現地時間の、より一般的な時間のフォーマット (つ"
"まり、年、月、日、時間など) に変換されているかもしれません。\n"
"どちらの場合でも :class:`struct_time` オブジェクトが返され、このオブジェクト"
"の属性としてカレンダー日付の構成要素へアクセスできます。"

#: ../../library/time.rst:689
msgid "On Windows, call ``GetSystemTimeAsFileTime()``."
msgstr ""

#: ../../library/time.rst:690
msgid "Call ``clock_gettime(CLOCK_REALTIME)`` if available."
msgstr ""

#: ../../library/time.rst:691
msgid "Otherwise, call ``gettimeofday()``."
msgstr ""

#: ../../library/time.rst:693
msgid ""
"Use :func:`time_ns` to avoid the precision loss caused by the :class:`float` "
"type."
msgstr ""

#: ../../library/time.rst:699
msgid ""
"Similar to :func:`~time.time` but returns time as an integer number of "
"nanoseconds since the epoch_."
msgstr ""
":func:`~time.time` に似ていますが、時刻を epoch_ を基点としたナノ秒単位の整数"
"で返します。"

#: ../../library/time.rst:712
msgid ""
"Return the value (in fractional seconds) of the sum of the system and user "
"CPU time of the current thread.  It does not include time elapsed during "
"sleep.  It is thread-specific by definition.  The reference point of the "
"returned value is undefined, so that only the difference between the results "
"of two calls in the same thread is valid."
msgstr ""
"現在のスレッドのシステムおよびユーザー CPU 時間の値を (小数秒で) 返します。こ"
"れはスリープ中の経過時間を含みません。これは定義上スレッド固有です。戻り値の"
"基準点は定義されていないので、同一スレッドにおける二回の呼び出しの結果の差だ"
"けが有効です。"

#: ../../library/time.rst:718
msgid ""
"Use :func:`thread_time_ns` to avoid the precision loss caused by the :class:"
"`float` type."
msgstr ""

#: ../../library/time.rst:721
msgid ":ref:`Availability <availability>`: Linux, Unix, Windows."
msgstr ""

#: ../../library/time.rst:723
msgid "Unix systems supporting ``CLOCK_THREAD_CPUTIME_ID``."
msgstr ""

#: ../../library/time.rst:730
msgid "Similar to :func:`thread_time` but return time as nanoseconds."
msgstr ":func:`thread_time` に似ていますが、ナノ秒単位の時刻を返します。"

#: ../../library/time.rst:737
msgid ""
"Reset the time conversion rules used by the library routines. The "
"environment variable :envvar:`TZ` specifies how this is done. It will also "
"set the variables ``tzname`` (from the :envvar:`TZ` environment variable), "
"``timezone`` (non-DST seconds West of UTC), ``altzone`` (DST seconds west of "
"UTC) and ``daylight`` (to 0 if this timezone does not have any daylight "
"saving time rules, or to nonzero if there is a time, past, present or future "
"when daylight saving time applies)."
msgstr ""

#: ../../library/time.rst:749
msgid ""
"Although in many cases, changing the :envvar:`TZ` environment variable may "
"affect the output of functions like :func:`localtime` without calling :func:"
"`tzset`, this behavior should not be relied on."
msgstr ""
"多くの場合、環境変数 :envvar:`TZ` を変更すると、 :func:`tzset` を呼ばない限"
"り :func:`localtime` のような関数の出力に影響を及ぼすため、値が信頼できなく"
"なってしまいます。"

#: ../../library/time.rst:753
msgid "The :envvar:`TZ` environment variable should contain no whitespace."
msgstr ":envvar:`TZ` 環境変数には空白文字を含めてはなりません。"

#: ../../library/time.rst:755
msgid ""
"The standard format of the :envvar:`TZ` environment variable is (whitespace "
"added for clarity)::"
msgstr ""
"環境変数 :envvar:`TZ` の標準的な書式は以下の通りです (分かりやすいように空白"
"を入れています)::"

#: ../../library/time.rst:758
msgid "std offset [dst [offset [,start[/time], end[/time]]]]"
msgstr ""

#: ../../library/time.rst:760
msgid "Where the components are:"
msgstr "各値は以下のようになっています:"

#: ../../library/time.rst:762
msgid "``std`` and ``dst``"
msgstr "``std`` と ``dst``"

#: ../../library/time.rst:763
msgid ""
"Three or more alphanumerics giving the timezone abbreviations. These will be "
"propagated into time.tzname"
msgstr ""
"三文字またはそれ以上の英数字で、タイムゾーンの略称を与えます。この値は time."
"tzname になります。"

#: ../../library/time.rst:766
msgid "``offset``"
msgstr "``offset``"

#: ../../library/time.rst:767
msgid ""
"The offset has the form: ``± hh[:mm[:ss]]``. This indicates the value added "
"the local time to arrive at UTC.  If preceded by a '-', the timezone is east "
"of the Prime Meridian; otherwise, it is west. If no offset follows dst, "
"summer time is assumed to be one hour ahead of standard time."
msgstr ""
"オフセットは形式: ``± hh[:mm[:ss]]`` をとります。この表現は、UTC 時刻にするた"
"めにローカルな時間に加算する必要のある時間値を示します。'-' が先頭につく場"
"合、そのタイムゾーンは本初子午線 (Prime Meridian) より東側にあります。それ以"
"外の場合は本初子午線の西側です。オフセットが dst の後ろに続かない場合、夏時間"
"は標準時より一時間先行しているものと仮定します。"

#: ../../library/time.rst:772
msgid "``start[/time], end[/time]``"
msgstr "``start[/time], end[/time]``"

#: ../../library/time.rst:773
msgid ""
"Indicates when to change to and back from DST. The format of the start and "
"end dates are one of the following:"
msgstr ""
"いつ DST に移動し、DST から戻ってくるかを示します。開始および終了日時の形式は"
"以下のいずれかです:"

#: ../../library/time.rst:776
msgid ":samp:`J{n}`"
msgstr ":samp:`J{n}`"

#: ../../library/time.rst:777
msgid ""
"The Julian day *n* (1 <= *n* <= 365). Leap days are not counted, so in all "
"years February 28 is day 59 and March 1 is day 60."
msgstr ""
"ユリウス日 (Julian day) *n* (1 <= *n* <= 365) を表します。うるう日は計算に含"
"められないため、2 月 28 日は常に 59 で、3 月 1 日は 60 になります。"

#: ../../library/time.rst:780
msgid ":samp:`{n}`"
msgstr ":samp:`{n}`"

#: ../../library/time.rst:781
msgid ""
"The zero-based Julian day (0 <= *n* <= 365). Leap days are counted, and it "
"is possible to refer to February 29."
msgstr ""
"ゼロから始まるユリウス日 (0 <= *n* <= 365) です。うるう日は計算に含められるた"
"め、2 月 29 日を参照することができます。"

#: ../../library/time.rst:784
msgid ":samp:`M{m}.{n}.{d}`"
msgstr ":samp:`M{m}.{n}.{d}`"

#: ../../library/time.rst:785
msgid ""
"The *d*'th day (0 <= *d* <= 6) of week *n* of month *m* of the year (1 <= "
"*n* <= 5, 1 <= *m* <= 12, where week 5 means \"the last *d* day in month "
"*m*\" which may occur in either the fourth or the fifth week). Week 1 is the "
"first week in which the *d*'th day occurs. Day zero is a Sunday."
msgstr ""
"*m* 月の週 *n* における *d* 番目の日 (0 <= *d* <= 6, 1 <= *n* <= 5, 1 <= *m* "
"<= 12) を表します。週 5 は月 *m* における最終週の *d* 番目の日を表し、第 4 週"
"か第 5 週のどちらかになります。週 1 は日 *d* が最初に現れる日を指します。日 "
"0 は日曜日です。"

#: ../../library/time.rst:791
msgid ""
"``time`` has the same format as ``offset`` except that no leading sign ('-' "
"or '+') is allowed. The default, if time is not given, is 02:00:00."
msgstr ""
"``time`` は ``offset`` とほぼ同じで、先頭に符号 ('-' や '+') を付けてはいけな"
"いところだけが違います。時刻が指定されていなければ、デフォルトの値 02:00:00 "
"になります。"

#: ../../library/time.rst:796
msgid ""
">>> os.environ['TZ'] = 'EST+05EDT,M4.1.0,M10.5.0'\n"
">>> time.tzset()\n"
">>> time.strftime('%X %x %Z')\n"
"'02:07:36 05/08/03 EDT'\n"
">>> os.environ['TZ'] = 'AEST-10AEDT-11,M10.5.0,M3.5.0'\n"
">>> time.tzset()\n"
">>> time.strftime('%X %x %Z')\n"
"'16:08:12 05/08/03 AEST'"
msgstr ""

#: ../../library/time.rst:805
msgid ""
"On many Unix systems (including \\*BSD, Linux, Solaris, and Darwin), it is "
"more convenient to use the system's zoneinfo (:manpage:`tzfile(5)`)  "
"database to specify the timezone rules. To do this, set the  :envvar:`TZ` "
"environment variable to the path of the required timezone  datafile, "
"relative to the root of the systems 'zoneinfo' timezone database, usually "
"located at :file:`/usr/share/zoneinfo`. For example,  ``'US/Eastern'``, "
"``'Australia/Melbourne'``, ``'Egypt'`` or  ``'Europe/Amsterdam'``. ::"
msgstr ""
"多くの Unix システム (\\*BSD, Linux, Solaris, および Darwin を含む) では、シ"
"ステムの zoneinfo (:manpage:`tzfile(5)`) データベースを使ったほうが、タイム"
"ゾーンごとの規則を指定する上で便利です。これを行うには、必要なタイムゾーン"
"データファイルへのパスをシステムの 'zoneinfo' タイムゾーンデータベースからの"
"相対で表した値を環境変数 :envvar:`TZ` に設定します。システムの 'zoneinfo' は"
"通常 :file:`/usr/share/zoneinfo` にあります。例えば、 ``'US/Eastern'`` 、 "
"``'Australia/Melbourne'`` 、 ``'Egypt'``  ないし ``'Europe/Amsterdam'`` と指"
"定します。 ::"

#: ../../library/time.rst:813
msgid ""
">>> os.environ['TZ'] = 'US/Eastern'\n"
">>> time.tzset()\n"
">>> time.tzname\n"
"('EST', 'EDT')\n"
">>> os.environ['TZ'] = 'Egypt'\n"
">>> time.tzset()\n"
">>> time.tzname\n"
"('EET', 'EEST')"
msgstr ""

#: ../../library/time.rst:826
msgid "Clock ID Constants"
msgstr ""

#: ../../library/time.rst:828
msgid ""
"These constants are used as parameters for :func:`clock_getres` and :func:"
"`clock_gettime`."
msgstr ""

#: ../../library/time.rst:833
msgid ""
"Identical to :data:`CLOCK_MONOTONIC`, except it also includes any time that "
"the system is suspended."
msgstr ""

#: ../../library/time.rst:836
msgid ""
"This allows applications to get a suspend-aware monotonic  clock  without "
"having to deal with the complications of :data:`CLOCK_REALTIME`, which may "
"have  discontinuities if the time is changed using ``settimeofday()`` or "
"similar."
msgstr ""

#: ../../library/time.rst:841
msgid ":ref:`Availability <availability>`: Linux >= 2.6.39."
msgstr ":ref:`利用可能な環境 <availability>`: Linux 2.6.39以上。"

#: ../../library/time.rst:848
msgid ""
"The Solaris OS has a ``CLOCK_HIGHRES`` timer that attempts to use an optimal "
"hardware source, and may give close to nanosecond resolution. "
"``CLOCK_HIGHRES`` is the nonadjustable, high-resolution clock."
msgstr ""
"Solaris OS は任意のハードウェアソースの使用を試み、ナノ秒レベルの分解能を提供"
"する ``CLOCK_HIGHRES`` タイマーを具備しています。``CLOCK_HIGHRES`` は変更不可"
"で、高分解能のクロックです。"

#: ../../library/time.rst:852
msgid ":ref:`Availability <availability>`: Solaris."
msgstr ":ref:`利用可能な環境 <availability>`: Solaris。"

#: ../../library/time.rst:859
msgid ""
"Clock that cannot be set and represents monotonic time since some "
"unspecified starting point."
msgstr ""
"設定不可で、モノトニック時刻 (不特定のエポックからの単調増加な時刻) を表しま"
"す。"

#: ../../library/time.rst:869
msgid ""
"Similar to :data:`CLOCK_MONOTONIC`, but provides access to a raw hardware-"
"based time that is not subject to NTP adjustments."
msgstr ""
":data:`CLOCK_MONOTONIC` と似ていますが、NTP の影響を受けていない、ハードウェ"
"アベースの時刻へのアクセスを提供します。"

#: ../../library/time.rst:872
msgid ":ref:`Availability <availability>`: Linux >= 2.6.28, macOS >= 10.12."
msgstr ""

#: ../../library/time.rst:878
msgid ""
"Similar to :data:`CLOCK_MONOTONIC_RAW`, but reads a value cached by the "
"system at context switch and hence has less accuracy."
msgstr ""

#: ../../library/time.rst:881 ../../library/time.rst:940
#: ../../library/time.rst:949
msgid ":ref:`Availability <availability>`: macOS >= 10.12."
msgstr ""

#: ../../library/time.rst:888 ../../library/time.rst:897
msgid "High-resolution per-process timer from the CPU."
msgstr "CPU による高分解能のプロセスごとのタイマーです。"

#: ../../library/time.rst:899
msgid ":ref:`Availability <availability>`: FreeBSD, NetBSD >= 7, OpenBSD."
msgstr ""

#: ../../library/time.rst:905
msgid ""
"`International Atomic Time <https://www.nist.gov/pml/time-and-frequency-"
"division/nist-time-frequently-asked-questions-faq#tai>`_"
msgstr ""

#: ../../library/time.rst:907
msgid ""
"The system must have a current leap second table in order for this to give "
"the correct answer.  PTP or NTP software can maintain a leap second table."
msgstr ""

#: ../../library/time.rst:910
msgid ":ref:`Availability <availability>`: Linux."
msgstr ":ref:`利用可能な環境 <availability>`: Linux。"

#: ../../library/time.rst:916
msgid "Thread-specific CPU-time clock."
msgstr "スレッド固有の CPU タイムクロックです。"

#: ../../library/time.rst:925
msgid ""
"Time whose absolute value is the time the system has been running and not "
"suspended, providing accurate uptime measurement, both absolute and interval."
msgstr ""

#: ../../library/time.rst:929
msgid ":ref:`Availability <availability>`: FreeBSD, OpenBSD >= 5.5."
msgstr ""

#: ../../library/time.rst:936
msgid ""
"Clock that increments monotonically, tracking the time since an arbitrary "
"point, unaffected by frequency or time adjustments and not incremented while "
"the system is asleep."
msgstr ""

#: ../../library/time.rst:946
msgid ""
"Like :data:`CLOCK_UPTIME_RAW`, but the value is cached by the system at "
"context switches and therefore has less accuracy."
msgstr ""

#: ../../library/time.rst:953
msgid ""
"The following constant is the only parameter that can be sent to :func:"
"`clock_settime`."
msgstr ""

#: ../../library/time.rst:959
msgid ""
"System-wide real-time clock.  Setting this clock requires appropriate "
"privileges."
msgstr ""
"システム全体のリアルタイムクロックです。このクロックを設定するには適切な権限"
"が必要です。"

#: ../../library/time.rst:970
msgid "Timezone Constants"
msgstr ""

#: ../../library/time.rst:974
msgid ""
"The offset of the local DST timezone, in seconds west of UTC, if one is "
"defined. This is negative if the local DST timezone is east of UTC (as in "
"Western Europe, including the UK).  Only use this if ``daylight`` is "
"nonzero.  See note below."
msgstr ""
"ローカルの夏時間タイムゾーンにおける UTC からの時刻オフセットで、西に行くほど"
"増加する、秒で表した値です (ほとんどの西ヨーロッパでは負になり、アメリカでは"
"正、イギリスではゼロになります)。``daylight`` がゼロでないときのみ使用してく"
"ださい。以下の注釈を参照してください。"

#: ../../library/time.rst:980
msgid "Nonzero if a DST timezone is defined.  See note below."
msgstr ""
"DST タイムゾーンが定義されている場合ゼロでない値になります。以下の注釈を参照"
"してください。"

#: ../../library/time.rst:984
msgid ""
"The offset of the local (non-DST) timezone, in seconds west of UTC (negative "
"in most of Western Europe, positive in the US, zero in the UK).  See note "
"below."
msgstr ""
"(DST でない) ローカルタイムゾーンの UTC からの時刻オフセットで、西に行くほど"
"増加する秒で表した値です (ほとんどの西ヨーロッパでは負になり、アメリカでは"
"正、イギリスではゼロになります)。以下の注釈を参照してください。"

#: ../../library/time.rst:989
msgid ""
"A tuple of two strings: the first is the name of the local non-DST timezone, "
"the second is the name of the local DST timezone.  If no DST timezone is "
"defined, the second string should not be used.  See note below."
msgstr ""
"二つの文字列からなるタプルです。最初の要素は DST でないローカルのタイムゾーン"
"名です。ふたつめの要素は DST のタイムゾーンです。DST のタイムゾーンが定義され"
"ていない場合。二つ目の文字列を使うべきではありません。以下の注釈を参照してく"
"ださい。"

#: ../../library/time.rst:995
msgid ""
"For the above Timezone constants (:data:`altzone`, :data:`daylight`, :data:"
"`timezone`, and :data:`tzname`), the value is determined by the timezone "
"rules in effect at module load time or the last time :func:`tzset` is called "
"and may be incorrect for times in the past.  It is recommended to use the :"
"attr:`~struct_time.tm_gmtoff` and :attr:`~struct_time.tm_zone` results from :"
"func:`localtime` to obtain timezone information."
msgstr ""

#: ../../library/time.rst:1004
msgid "Module :mod:`datetime`"
msgstr ":mod:`datetime` モジュール"

#: ../../library/time.rst:1005
msgid "More object-oriented interface to dates and times."
msgstr "日付と時刻に対する、よりオブジェクト指向のインターフェースです。"

#: ../../library/time.rst:1007
msgid "Module :mod:`locale`"
msgstr ":mod:`locale` モジュール"

#: ../../library/time.rst:1008
msgid ""
"Internationalization services.  The locale setting affects the "
"interpretation of many format specifiers in :func:`strftime` and :func:"
"`strptime`."
msgstr ""
"国際化サービスです。ロケールの設定は :func:`strftime` および :func:"
"`strptime` の多くの書式指定子の解釈に影響を及ぼします。"

#: ../../library/time.rst:1011
msgid "Module :mod:`calendar`"
msgstr ":mod:`calendar` モジュール"

#: ../../library/time.rst:1012
msgid ""
"General calendar-related functions.   :func:`~calendar.timegm` is the "
"inverse of :func:`gmtime` from this module."
msgstr ""
"一般的なカレンダーに関する関数群です。:func:`~calendar.timegm` はこのモジュー"
"ルの :func:`gmtime` の逆を行う関数です。"

#: ../../library/time.rst:1016
msgid "Footnotes"
msgstr "脚注"

#: ../../library/time.rst:1017
msgid ""
"The use of ``%Z`` is now deprecated, but the ``%z`` escape that expands to "
"the preferred hour/minute offset is not supported by all ANSI C libraries. "
"Also, a strict reading of the original 1982 :rfc:`822` standard calls for a "
"two-digit year (``%y`` rather than ``%Y``), but practice moved to 4-digit "
"years long before the year 2000.  After that, :rfc:`822` became obsolete and "
"the 4-digit year has been first recommended by :rfc:`1123` and then mandated "
"by :rfc:`2822`."
msgstr ""
"``%Z`` の使用は現在非推奨です。ただし、ここで実現したい時間および分オフセット"
"への展開を行ってくれる ``%z`` エスケープはすべての ANSI C ライブラリでサポー"
"トされているわけではありません。また、1982 年に提出されたオリジナルの :rfc:"
"`822` 標準では西暦の表現を 2 桁とするよう要求している (``%Y`` でなく ``%y``) "
"ものの、実際には 2000 年になるだいぶ以前から 4 桁の西暦表現に移行しています。"
"その後 :rfc:`822` は撤廃され、4 桁の西暦表現は :rfc:`1123` で初めて勧告さ"
"れ、:rfc:`2822` において義務付けられました。"

#: ../../library/time.rst:22
msgid "epoch"
msgstr "エポック"

#: ../../library/time.rst:36
msgid "Year 2038"
msgstr "2038年"

#: ../../library/time.rst:42
msgid "2-digit years"
msgstr ""

#: ../../library/time.rst:50
msgid "UTC"
msgstr "UTC"

#: ../../library/time.rst:50
msgid "Coordinated Universal Time"
msgstr "協定世界時"

#: ../../library/time.rst:50
msgid "Greenwich Mean Time"
msgstr "グリニッジ標準時"

#: ../../library/time.rst:59
msgid "Daylight Saving Time"
msgstr "夏時間"

#: ../../library/time.rst:319 ../../library/time.rst:354
#: ../../library/time.rst:707
msgid "benchmarking"
msgstr "ベンチマーク"

#: ../../library/time.rst:354 ../../library/time.rst:707
msgid "CPU time"
msgstr "CPU 時間"

#: ../../library/time.rst:354 ../../library/time.rst:707
msgid "processor time"
msgstr "プロセッサー時間"

#: ../../library/time.rst:416 ../../library/time.rst:562
msgid "% (percent)"
msgstr "% (パーセント)"

#: ../../library/time.rst:416 ../../library/time.rst:562
msgid "datetime format"
msgstr ""
