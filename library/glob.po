# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/glob.rst:2
msgid ":mod:`glob` --- Unix style pathname pattern expansion"
msgstr ":mod:`glob` --- Unix 形式のパス名のパターン展開"

#: ../../library/glob.rst:7
msgid "**Source code:** :source:`Lib/glob.py`"
msgstr "**ソースコード:** :source:`Lib/glob.py`"

#: ../../library/glob.rst:21
msgid ""
"The :mod:`glob` module finds all the pathnames matching a specified pattern "
"according to the rules used by the Unix shell, although results are returned "
"in arbitrary order.  No tilde expansion is done, but ``*``, ``?``, and "
"character ranges expressed with ``[]`` will be correctly matched.  This is "
"done by using the :func:`os.scandir` and :func:`fnmatch.fnmatch` functions "
"in concert, and not by actually invoking a subshell."
msgstr ""
":mod:`glob` モジュールは Unix シェルで使われているルールに従い指定されたパ"
"ターンに一致するすべてのパス名を見つけ出します。返される結果の順序は不定で"
"す。チルダ展開は行われませんが、``*``, ``?``, および ``[]`` で表現される文字"
"範囲については正しくマッチされます。これは、関数 :func:`os.scandir` および :"
"func:`fnmatch.fnmatch` を使用して行われており、実際にサブシェルを呼び出してい"
"るわけではありません。"

#: ../../library/glob.rst:28
msgid ""
"Note that files beginning with a dot (``.``) can only be matched by patterns "
"that also start with a dot, unlike :func:`fnmatch.fnmatch` or :func:`pathlib."
"Path.glob`. (For tilde and shell variable expansion, use :func:`os.path."
"expanduser` and :func:`os.path.expandvars`.)"
msgstr ""

#: ../../library/glob.rst:34
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""
"リテラルにマッチさせるには、メタ文字を括弧に入れてください。例えば、"
"``'[?]'`` は文字 ``'?'`` にマッチします。"

#: ../../library/glob.rst:39
msgid "The :mod:`pathlib` module offers high-level path objects."
msgstr ":mod:`pathlib` モジュールは高水準のパスオブジェクトを提供します。"

#: ../../library/glob.rst:44
msgid ""
"Return a possibly empty list of path names that match *pathname*, which must "
"be a string containing a path specification. *pathname* can be either "
"absolute (like :file:`/usr/src/Python-1.5/Makefile`) or relative (like :file:"
"`../../Tools/\\*/\\*.gif`), and can contain shell-style wildcards. Broken "
"symlinks are included in the results (as in the shell). Whether or not the "
"results are sorted depends on the file system.  If a file that satisfies "
"conditions is removed or added during the call of this function, whether a "
"path name for that file be included is unspecified."
msgstr ""
"*pathname* (パスの指定を含んだ文字列でなければいけません) にマッチする、空の"
"可能性のあるパス名のリストを返します。*pathname* は (:file:`/usr/src/"
"Python-1.5/Makefile` のように) 絶対パスでも、(:file:`../../Tools/\\*/\\*."
"gif` のように) 相対パスでもよく、シェル形式のワイルドカードを含んでいてもかま"
"いません。結果には (シェルと同じく) 壊れたシンボリックリンクも含まれます。結"
"果がソートされるかどうかは、ファイルシステムによって異なります。この関数の呼"
"び出し中に条件を満たすファイルが移動や追加された場合、そのファイルのパス名を"
"含むかどうかは指定されていません。"

#: ../../library/glob.rst:53
msgid ""
"If *root_dir* is not ``None``, it should be a :term:`path-like object` "
"specifying the root directory for searching.  It has the same effect on :"
"func:`glob` as changing the current directory before calling it.  If "
"*pathname* is relative, the result will contain paths relative to *root_dir*."
msgstr ""

#: ../../library/glob.rst:59
msgid ""
"This function can support :ref:`paths relative to directory descriptors "
"<dir_fd>` with the *dir_fd* parameter."
msgstr ""
"この関数は *dir_fd* パラメタで :ref:`ディレクトリ記述子への相対パス "
"<dir_fd>` をサポートしています。"

#: ../../library/glob.rst:65
msgid ""
"If *recursive* is true, the pattern \"``**``\" will match any files and zero "
"or more directories, subdirectories and symbolic links to directories. If "
"the pattern is followed by an :data:`os.sep` or :data:`os.altsep` then files "
"will not match."
msgstr ""
"*recursive* が真の場合、パターン \"``**``\" はあらゆるファイルや0個以上のディ"
"レクトリ、サブディレクトリおよびディレクトリへのシンボリックリンクにマッチし"
"ます。パターンの末尾が :data:`os.sep` または :data:`os.altsep` の場合、ファイ"
"ルは一致しません。"

#: ../../library/glob.rst:70 ../../library/glob.rst:89
msgid ""
"Raises an :ref:`auditing event <auditing>` ``glob.glob`` with arguments "
"``pathname``, ``recursive``."
msgstr ""
"引数 ``pathname``, ``recursive`` を指定して :ref:`監査イベント <auditing>` "
"``glob.glob`` を送出します。 "

#: ../../library/glob.rst:71 ../../library/glob.rst:90
msgid ""
"Raises an :ref:`auditing event <auditing>` ``glob.glob/2`` with arguments "
"``pathname``, ``recursive``, ``root_dir``, ``dir_fd``."
msgstr ""
"引数 ``pathname``, ``recursive``, ``root_dir``, ``dir_fd`` を指定して :ref:`"
"監査イベント <auditing>` ``glob.glob/2`` を送出します。 "

#: ../../library/glob.rst:74
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""
"パターン \"``**``\" を大きなディレクトリツリーで使用するととてつもなく時間が"
"かかるかもしれません。"

#: ../../library/glob.rst:77 ../../library/glob.rst:92
msgid "Support for recursive globs using \"``**``\"."
msgstr "\"``**``\" を使った再帰的な glob がサポートされました。"

#: ../../library/glob.rst:80 ../../library/glob.rst:95
msgid "Added the *root_dir* and *dir_fd* parameters."
msgstr "*root_dir* と *dir_fd* 引数が追加されました。"

#: ../../library/glob.rst:86
msgid ""
"Return an :term:`iterator` which yields the same values as :func:`glob` "
"without actually storing them all simultaneously."
msgstr ""
"実際には一度にすべてを格納せずに、:func:`glob` と同じ値を順に生成する :term:`"
"イテレーター <iterator>` を返します。"

#: ../../library/glob.rst:101
msgid ""
"Escape all special characters (``'?'``, ``'*'`` and ``'['``). This is useful "
"if you want to match an arbitrary literal string that may have special "
"characters in it.  Special characters in drive/UNC sharepoints are not "
"escaped, e.g. on Windows ``escape('//?/c:/Quo vadis?.txt')`` returns ``'//?/"
"c:/Quo vadis[?].txt'``."
msgstr ""
"すべての特殊文字 (``'?'`` 、 ``'*'`` 、 ``'['``) をエスケープします。特殊文字"
"を含んでいる可能性のある任意のリテラル文字列をマッチさせたいときに便利です。"
"drive/UNC sharepoints の特殊文字はエスケープされません。たとえば Windows で"
"は ``escape('//?/c:/Quo vadis?.txt')`` は ``'//?/c:/Quo vadis[?].txt'`` を返"
"します。"

#: ../../library/glob.rst:110
msgid ""
"For example, consider a directory containing the following files: :file:`1."
"gif`, :file:`2.txt`, :file:`card.gif` and a subdirectory :file:`sub` which "
"contains only the file :file:`3.txt`.  :func:`glob` will produce the "
"following results.  Notice how any leading components of the path are "
"preserved. ::"
msgstr ""
"たとえば、次の 3 個のファイル :file:`1.gif`, :file:`2.txt`, :file:`card.gif` "
"と、ファイル  :file:`3.txt` だけを含んだサブディレクトリ :file:`sub` があった"
"場合、:func:`glob` は以下の結果を返します。パスに接頭する要素がどう維持される"
"かに注意してください。::"

#: ../../library/glob.rst:128
msgid ""
"If the directory contains files starting with ``.`` they won't be matched by "
"default. For example, consider a directory containing :file:`card.gif` and :"
"file:`.card.gif`::"
msgstr ""
"ディレクトリが ``.`` で始まるファイルを含んでいる場合、デフォルトでそれらは"
"マッチしません。例えば、 :file:`card.gif` と :file:`.card.gif` を含むディレク"
"トリを考えてください::"

#: ../../library/glob.rst:140
msgid "Module :mod:`fnmatch`"
msgstr ":mod:`fnmatch` モジュール"

#: ../../library/glob.rst:141
msgid "Shell-style filename (not path) expansion"
msgstr "シェル形式の (パスではない) ファイル名展開"
