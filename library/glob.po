# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# E. Kawashima, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/glob.rst:2
msgid ":mod:`glob` --- Unix style pathname pattern expansion"
msgstr ":mod:`glob` --- Unix 形式のパス名のパターン展開"

#: ../../library/glob.rst:10
msgid "**Source code:** :source:`Lib/glob.py`"
msgstr "**ソースコード:** :source:`Lib/glob.py`"

#: ../../library/glob.rst:14
msgid ""
"The :mod:`glob` module finds all the pathnames matching a specified pattern "
"according to the rules used by the Unix shell, although results are returned "
"in arbitrary order.  No tilde expansion is done, but ``*``, ``?``, and "
"character ranges expressed with ``[]`` will be correctly matched.  This is "
"done by using the :func:`os.listdir` and :func:`fnmatch.fnmatch` functions "
"in concert, and not by actually invoking a subshell.  Note that unlike :func:"
"`fnmatch.fnmatch`, :mod:`glob` treats filenames beginning with a dot (``.``) "
"as special cases. (For tilde and shell variable expansion, use :func:`os."
"path.expanduser` and :func:`os.path.expandvars`.)"
msgstr ""
":mod:`glob` モジュールは Unix シェルで使われているルールに従い指定されたパ"
"ターンに一致するすべてのパス名を見つけ出します。返される結果の順序は不定で"
"す。チルダは展開されませんが、``*``, ``?``, および ``[]`` で表現される文字範"
"囲については正しくマッチされます。これは、関数 :func:`os.listdir` および :"
"func:`fnmatch.fnmatch` を使用して行われており、実際にサブシェルを呼び出してい"
"るわけではありません。:func:`fnmatch.fnmatch` と異なり、:mod:`glob` はドット "
"(``.``) で始まるファイル名は特別扱いする点に注意してください。(チルダおよび"
"シェル変数の展開を利用したい場合は :func:`os.path.expanduser` および :func:"
"`os.path.expandvars` を使用してください。)"

#: ../../library/glob.rst:24
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""
"文字通りにマッチさせる場合はメタ文字を括弧に入れてください。例えば、"
"``'[?]'`` は文字 ``'?'`` にマッチします。"

#: ../../library/glob.rst:30
msgid ""
"Return a possibly-empty list of path names that match *pathname*, which must "
"be a string containing a path specification. *pathname* can be either "
"absolute (like :file:`/usr/src/Python-1.5/Makefile`) or relative (like :file:"
"`../../Tools/\\*/\\*.gif`), and can contain shell-style wildcards. Broken "
"symlinks are included in the results (as in the shell)."
msgstr ""
"*pathname* (パスの指定を含んだ文字列でなければいけません。)にマッチする空の可"
"能性のあるパス名のリストを返します。 *pathname* は(:file:`/usr/src/"
"Python-1.5/Makefile` のように)絶対パスでもいいし、(:file:`../../Tools/\\*/"
"\\*.gif` のように)相対パスでもよくて、シェル形式のワイルドカードを含んでいて"
"もかまいません。結果には(シェルと同じく)壊れたシンボリックリンクも含まれま"
"す。"

#: ../../library/glob.rst:39
msgid ""
"Return an :term:`iterator` which yields the same values as :func:`glob` "
"without actually storing them all simultaneously."
msgstr ""
"実際には一度に全てを格納せずに、 :func:`glob` と同じ値を順に生成する :term:`"
"イテレータ <iterator>` を返します。"

#: ../../library/glob.rst:44
msgid ""
"For example, consider a directory containing only the following files: :file:"
"`1.gif`, :file:`2.txt`, and :file:`card.gif`.  :func:`glob` will produce the "
"following results.  Notice how any leading components of the path are "
"preserved. ::"
msgstr ""
"たとえば、次の三つのファイルだけがあるディレクトリを考えてください: :file:`1."
"gif` 、 :file:`2.txt` 、 :file:`card.gif` 。 :func:`glob` は次のような結果に"
"なります。パスに接頭するどの部分が保たれているかに注意してください。 ::"

#: ../../library/glob.rst:57
msgid ""
"If the directory contains files starting with ``.`` they won't be matched by "
"default. For example, consider a directory containing :file:`card.gif` and :"
"file:`.card.gif`::"
msgstr ""
"ディレクトリが ``.`` で始まるファイルを含んでいる場合、デフォルトでそれらは"
"マッチしません。例えば、 :file:`card.gif` と :file:`.card.gif` を含むディレク"
"トリを考えてください::"

#: ../../library/glob.rst:69
msgid "Module :mod:`fnmatch`"
msgstr ":mod:`fnmatch` モジュール"

#: ../../library/glob.rst:70
msgid "Shell-style filename (not path) expansion"
msgstr "シェル形式の(パスではない)ファイル名展開"
