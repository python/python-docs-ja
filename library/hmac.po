# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-13 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:07+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/hmac.rst:2
msgid ":mod:`!hmac` --- Keyed-Hashing for Message Authentication"
msgstr ":mod:`!hmac` --- メッセージ認証のための鍵付きハッシュ化"

#: ../../library/hmac.rst:10
msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr "**ソースコード:** :source:`Lib/hmac.py`"

#: ../../library/hmac.rst:14
msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr ""
"このモジュールでは :rfc:`2104` で記述されている HMAC アルゴリズムを実装してい"
"ます。"

#: ../../library/hmac.rst:19
msgid ""
"Return a new hmac object.  *key* is a bytes or bytearray object giving the "
"secret key.  If *msg* is present, the method call ``update(msg)`` is made. "
"*digestmod* is the digest name, digest constructor or module for the HMAC "
"object to use.  It may be any name suitable to :func:`hashlib.new`. Despite "
"its argument position, it is required."
msgstr ""

#: ../../library/hmac.rst:25
msgid ""
"Parameter *key* can be a bytes or bytearray object. Parameter *msg* can be "
"of any type supported by :mod:`hashlib`. Parameter *digestmod* can be the "
"name of a hash algorithm."
msgstr ""
"引数 *key* に bytes または bytearray オブジェクトを渡せるようになりました。引"
"数 *msg* に :mod:`hashlib` がサポートする全てのタイプを渡せるようになりまし"
"た。引数 *digestmod* にハッシュアルゴリズム名を渡せるようになりました。"

#: ../../library/hmac.rst:30
msgid ""
"The *digestmod* argument is now required.  Pass it as a keyword argument to "
"avoid awkwardness when you do not have an initial *msg*."
msgstr ""

#: ../../library/hmac.rst:37
msgid ""
"Return digest of *msg* for given secret *key* and *digest*. The function is "
"equivalent to ``HMAC(key, msg, digest).digest()``, but uses an optimized C "
"or inline implementation, which is faster for messages that fit into memory. "
"The parameters *key*, *msg*, and *digest* have the same meaning as in :func:"
"`~hmac.new`."
msgstr ""
"与えられたsecret *key* と *digest* の *msg* のダイジェストを返します。この関"
"数は ``HMAC(key, msg, digest).digest()`` に似ていますが、最適化されたCやイン"
"ラインの実装を使用しており、メモリに収まるメッセージに対しては高速です。パラ"
"メータ *key* 、 *msg* 、および *digest* は、 :func:`~hmac.new` と同じ意味を持"
"ちます。"

#: ../../library/hmac.rst:43
msgid ""
"CPython implementation detail, the optimized C implementation is only used "
"when *digest* is a string and name of a digest algorithm, which is supported "
"by OpenSSL."
msgstr ""
"CPython実装の詳細、最適化されたC実装は、OpenSSLがサポートするダイジェストアル"
"ゴリズムの文字列と名前が *digest* の場合にのみ使用されます。"

#: ../../library/hmac.rst:50
msgid "An HMAC object has the following methods:"
msgstr "HMAC オブジェクトは以下のメソッドを持っています:"

#: ../../library/hmac.rst:54
msgid ""
"Update the hmac object with *msg*.  Repeated calls are equivalent to a "
"single call with the concatenation of all the arguments: ``m.update(a); m."
"update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""
"hmac オブジェクトを *msg* で更新します。このメソッドの呼出の繰り返しは、それ"
"らの引数を全て結合した引数で単一の呼び出しをした際と同じになります。すなわち "
"``m.update(a); m.update(b)``  は ``m.update(a + b)`` と等価です。"

#: ../../library/hmac.rst:58
msgid "Parameter *msg* can be of any type supported by :mod:`hashlib`."
msgstr ""
"引数 *msg* は :mod:`hashlib` がサポートしているあらゆる型のいずれかです。"

#: ../../library/hmac.rst:64
msgid ""
"Return the digest of the bytes passed to the :meth:`update` method so far. "
"This bytes object will be the same length as the *digest_size* of the digest "
"given to the constructor.  It may contain non-ASCII bytes, including NUL "
"bytes."
msgstr ""
"これまで :meth:`update` メソッドに渡されたバイト列のダイジェスト値を返しま"
"す。これはコンストラクタに与えられた *digest_size* と同じ長さのバイト列で、 "
"NUL バイトを含む非 ASCII 文字が含まれることがあります。"

#: ../../library/hmac.rst:71
msgid ""
"When comparing the output of :meth:`digest` to an externally supplied digest "
"during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""

#: ../../library/hmac.rst:79
msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the "
"value safely in email or other non-binary environments."
msgstr ""
":meth:`digest` と似ていますが、返される文字列は倍の長さとなり、16進形式となり"
"ます。これは、電子メールなどの非バイナリ環境で値を交換する場合に便利です。"

#: ../../library/hmac.rst:85
msgid ""
"When comparing the output of :meth:`hexdigest` to an externally supplied "
"digest during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""

#: ../../library/hmac.rst:93
msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""
"hmac オブジェクトのコピー (\"クローン\") を返します。このコピーは最初の部分文"
"字列が共通になっている文字列のダイジェスト値を効率よく計算するために使うこと"
"ができます。"

#: ../../library/hmac.rst:97
msgid "A hash object has the following attributes:"
msgstr "ハッシュオブジェクトには次のような属性があります:"

#: ../../library/hmac.rst:101
msgid "The size of the resulting HMAC digest in bytes."
msgstr "生成された HMAC ダイジェストのバイト数。"

#: ../../library/hmac.rst:105
msgid "The internal block size of the hash algorithm in bytes."
msgstr "内部で使われるハッシュアルゴリズムのブロックのバイト数。"

#: ../../library/hmac.rst:111
msgid "The canonical name of this HMAC, always lowercase, e.g. ``hmac-md5``."
msgstr "このHMAC の正規名で、例えば ``hmac-md5`` のように常に小文字です。"

#: ../../library/hmac.rst:116
msgid ""
"Removed the undocumented attributes ``HMAC.digest_cons``, ``HMAC.inner``, "
"and ``HMAC.outer``."
msgstr ""

#: ../../library/hmac.rst:120
msgid "This module also provides the following helper function:"
msgstr "このモジュールは以下のヘルパ関数も提供しています:"

#: ../../library/hmac.rst:124
msgid ""
"Return ``a == b``.  This function uses an approach designed to prevent "
"timing analysis by avoiding content-based short circuiting behaviour, making "
"it appropriate for cryptography.  *a* and *b* must both be of the same type: "
"either :class:`str` (ASCII only, as e.g. returned by :meth:`HMAC."
"hexdigest`), or a :term:`bytes-like object`."
msgstr ""
"``a == b`` を返します。この関数は、内容ベースの短絡的な振る舞いを避けることに"
"よってタイミング分析を防ぐよう設計されたアプローチを用い、暗号化に用いるのに"
"相応しいものとしています。 *a* と *b* は両方が同じ型でなければなりません: (例"
"えば :meth:`HMAC.hexdigest` が返したような ASCII のみの) :class:`str` また"
"は :term:`bytes-like object` のどちらか一方。"

#: ../../library/hmac.rst:132
msgid ""
"If *a* and *b* are of different lengths, or if an error occurs, a timing "
"attack could theoretically reveal information about the types and lengths of "
"*a* and *b*—but not their values."
msgstr ""
"*a* と *b* が異なる長さであったりエラーが発生した場合には、タイミング攻撃で理"
"論上 *a* と *b* の型と長さについての情報が暴露されますが、その値は明らかにな"
"りません。"

#: ../../library/hmac.rst:140
msgid ""
"The function uses OpenSSL's ``CRYPTO_memcmp()`` internally when available."
msgstr ""

#: ../../library/hmac.rst:146
msgid "Module :mod:`hashlib`"
msgstr ":mod:`hashlib` モジュール"

#: ../../library/hmac.rst:147
msgid "The Python module providing secure hash functions."
msgstr "セキュアハッシュ関数を提供する Python モジュールです。"
