# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/posix.rst:2
msgid ":mod:`posix` --- The most common POSIX system calls"
msgstr ":mod:`posix` --- 最も一般的な POSIX システムコール群"

#: ../../library/posix.rst:10
msgid ""
"This module provides access to operating system functionality that is "
"standardized by the C Standard and the POSIX standard (a thinly disguised "
"Unix interface)."
msgstr ""
"このモジュールはオペレーティングシステムの機能のうち、C 言語標準および  "
"(Unix インターフェースをほんの少し隠蔽した) POSIX 標準で標準化されている機能"
"に対するアクセス機構を提供します。"

#: ../../library/posix.rst:16
msgid ""
"**Do not import this module directly.**  Instead, import the module :mod:"
"`os`, which provides a *portable* version of this interface.  On Unix, the :"
"mod:`os` module provides a superset of the :mod:`posix` interface.  On non-"
"Unix operating systems the :mod:`posix` module is not available, but a "
"subset is always available through the :mod:`os` interface.  Once :mod:`os` "
"is imported, there is *no* performance penalty in using it instead of :mod:"
"`posix`.  In addition, :mod:`os` provides some additional functionality, "
"such as automatically calling :func:`~os.putenv` when an entry in ``os."
"environ`` is changed."
msgstr ""
"**このモジュールを直接インポートしてはいけません。** その代わりに、このイン"
"ターフェースの *ポータブル* 版である :mod:`os` モジュールをインポートしてくだ"
"さい。 Unix では、:mod:`os` モジュールは :mod:`posix` インターフェースのスー"
"パーセットを提供しています。非 Unix オペレーティングシステムでは、 :mod:"
"`posix` モジュールは利用できませんが、その一部分は :mod:`os` インターフェース"
"を通して常に利用可能です。一度 :mod:`os` をインポートし :mod:`posix` の代わり"
"にそれを使えば、パフォーマンス上の代償は *ありません* 。加えて :mod:`os` "
"は、 ``os.environ`` の要素が変更されたときに :func:`~os.putenv` を呼び出すな"
"どの追加の機能も提供します。"

#: ../../library/posix.rst:25
msgid ""
"Errors are reported as exceptions; the usual exceptions are given for type "
"errors, while errors reported by the system calls raise :exc:`OSError`."
msgstr ""
"エラーは例外として報告されます; よくある例外は型エラーです。一方、システム"
"コールから報告されたエラーは以下に述べるように :exc:`OSError` を送出します。"

#: ../../library/posix.rst:32
msgid "Large File Support"
msgstr "ラージファイルのサポート"

#: ../../library/posix.rst:40
msgid ""
"Several operating systems (including AIX and Solaris) provide support for "
"files that are larger than 2 GiB from a C programming model where :c:expr:"
"`int` and :c:expr:`long` are 32-bit values. This is typically accomplished "
"by defining the relevant size and offset types as 64-bit values. Such files "
"are sometimes referred to as :dfn:`large files`."
msgstr ""
"いくつかのオペレーティングシステム (AIX および Solaris が含まれます) は、 :c:"
"expr:`int` および :c:expr:`long` を 32 ビット値とする C プログラムモデルで "
"2GB を超えるサイズのファイルのサポートを提供しています。このサポートは典型的"
"には関連するサイズとオフセットの組合せを 64-bit 値として定義することで実現し"
"ています。このようなファイルは時にラージファイル (:dfn:`large files`) と呼ば"
"れます。"

#: ../../library/posix.rst:46
msgid ""
"Large file support is enabled in Python when the size of an :c:type:`off_t` "
"is larger than a :c:expr:`long` and the :c:expr:`long long` is at least as "
"large as an :c:type:`off_t`. It may be necessary to configure and compile "
"Python with certain compiler flags to enable this mode. For example, with "
"Solaris 2.6 and 2.7 you need to do something like::"
msgstr ""
"Python では、 :c:type:`off_t` のサイズが :c:expr:`long` より大きく、かつ :c:"
"expr:`long long` が少なくとも :c:type:`off_t` と同じくらい大きなサイズである"
"とき、ラージファイルのサポートが有効になります。\n"
"この場合、ファイルのサイズ、オフセットおよび Python の通常整数型の範囲を超え"
"るような値の表現には Python の長整数型が使われます。\n"
"このモードを有効にするのに、 :program:`configure` で Python のコンパイルに特"
"定のコンパイルフラグを必要とするかもしれません。\n"
"例えば、Solaris 2.6 および 2.7 では、以下のようにする必要があります::"

#: ../../library/posix.rst:56
msgid "On large-file-capable Linux systems, this might work::"
msgstr ""
"ラージファイル対応の Linux システムでは、以下のようにすれば良いでしょう::"

#: ../../library/posix.rst:65
msgid "Notable Module Contents"
msgstr "注目すべきモジュールの内容"

#: ../../library/posix.rst:67
msgid ""
"In addition to many functions described in the :mod:`os` module "
"documentation, :mod:`posix` defines the following data item:"
msgstr ""
":mod:`os` モジュールのドキュメントで説明されている多数の関数に加え、 :mod:"
"`posix` では以下のデータ項目を定義しています:"

#: ../../library/posix.rst:72
msgid ""
"A dictionary representing the string environment at the time the interpreter "
"was started. Keys and values are bytes on Unix and str on Windows. For "
"example, ``environ[b'HOME']`` (``environ['HOME']`` on Windows) is the "
"pathname of your home directory, equivalent to ``getenv(\"HOME\")`` in C."
msgstr ""
"インタプリタが起動したときの環境を表す文字列辞書です。キーと値は Unix ではバ"
"イト列、 Windows では文字列です。例えば、 ``environ[b'HOME']`` (Windows では "
"``environ['HOME']``) はホームディレクトリのパス名で、 C の "
"``getenv(\"HOME\")`` と同じ値です。"

#: ../../library/posix.rst:77
msgid ""
"Modifying this dictionary does not affect the string environment passed on "
"by :func:`~os.execv`, :func:`~os.popen` or :func:`~os.system`; if you need "
"to change the environment, pass ``environ`` to :func:`~os.execve` or add "
"variable assignments and export statements to the command string for :func:"
"`~os.system` or :func:`~os.popen`."
msgstr ""
"この辞書を編集しても、 :func:`~os.execv` 、 :func:`~os.popen` 、 :func:`~os."
"system` で渡された環境変数文字列には影響は与えません; 環境変数を変更したい場"
"合は、 ``environ`` を :func:`~os.execve` に渡すか、変数への代入文と export 文"
"を :func:`~os.system` や :func:`~os.popen` に渡すコマンド文字列に追加してくだ"
"さい。"

#: ../../library/posix.rst:83
msgid "On Unix, keys and values are bytes."
msgstr "Unix ではキーと値はバイト列になりました。"

#: ../../library/posix.rst:88
msgid ""
"The :mod:`os` module provides an alternate implementation of ``environ`` "
"which updates the environment on modification. Note also that updating :data:"
"`os.environ` will render this dictionary obsolete. Use of the :mod:`os` "
"module version of this is recommended over direct access to the :mod:`posix` "
"module."
msgstr ""
":mod:`os` モジュールでは、もう一つの :data:`os.environ` 実装を提供しており、"
"環境変数が変更された場合、その内容を更新するようになっています。 ``environ`` "
"を更新した場合、この辞書は古い内容を表していることになってしまうので、このこ"
"とにも注意してください。 :mod:`posix` モジュール版を直接アクセスするより"
"も、 :mod:`os` モジュール版を使う方が推奨されています。"
