# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Takanori Suzuki <takanori@takanory.net>, 2021
# Masato HASHIMOTO <cabezon.hashimoto@gmail.com>, 2023
# tomo, 2023
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-04 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:11+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/plistlib.rst:2
msgid ":mod:`!plistlib` --- Generate and parse Apple ``.plist`` files"
msgstr ":mod:`!plistlib` --- Apple ``.plist`` ファイルを生成・解析する"

#: ../../library/plistlib.rst:11
msgid "**Source code:** :source:`Lib/plistlib.py`"
msgstr "**ソースコード:** :source:`Lib/plistlib.py`"

#: ../../library/plistlib.rst:19
msgid ""
"This module provides an interface for reading and writing the \"property "
"list\" files used by Apple, primarily on macOS and iOS. This module supports "
"both binary and XML plist files."
msgstr ""
"このモジュールは Apple (主に macOS と iOS) で使われる「プロパティーリスト」"
"ファイルを読み書きするインターフェイスを提供します。このモジュールはバイナリ"
"と XML の plist ファイルの両方をサポートします。"

#: ../../library/plistlib.rst:23
msgid ""
"The property list (``.plist``) file format is a simple serialization "
"supporting basic object types, like dictionaries, lists, numbers and "
"strings.  Usually the top level object is a dictionary."
msgstr ""
"プロパティーリスト (``.plist``) ファイル形式は基本的型のオブジェクト、たとえ"
"ば辞書やリスト、数、文字列など、に対する単純な直列化です。たいてい、トップレ"
"ベルのオブジェクトは辞書です。"

#: ../../library/plistlib.rst:27
msgid ""
"To write out and to parse a plist file, use the :func:`dump` and :func:"
"`load` functions."
msgstr ""
"plist ファイルを書き出したり解析したりするには :func:`dump` や :func:`load` "
"関数を利用します。"

#: ../../library/plistlib.rst:30
msgid ""
"To work with plist data in bytes or string objects, use :func:`dumps` and :"
"func:`loads`."
msgstr ""
"バイトオブジェクトや文字列オブジェクトの plist データを扱うためには :func:"
"`dumps` や :func:`loads` を利用します。"

#: ../../library/plistlib.rst:33
msgid ""
"Values can be strings, integers, floats, booleans, tuples, lists, "
"dictionaries (but only with string keys), :class:`bytes`, :class:`bytearray` "
"or :class:`datetime.datetime` objects."
msgstr ""
"値は文字列、整数、浮動小数点数、ブール型、タプル、リスト、辞書 (ただし文字列"
"だけがキーになれます)、 :class:`bytes`、:class:`bytearray` または :class:"
"`datetime.datetime` のオブジェクトです。"

#: ../../library/plistlib.rst:37
msgid "New API, old API deprecated.  Support for binary format plists added."
msgstr ""
"新しい API となり、古い API は非推奨となりました。バイナリ形式の plist がサ"
"ポートされました。"

#: ../../library/plistlib.rst:40
msgid ""
"Support added for reading and writing :class:`UID` tokens in binary plists "
"as used by NSKeyedArchiver and NSKeyedUnarchiver."
msgstr ""
"バイナリの plist で NSKeyedArchiver や NSKeyedUnarchiver によって使用される :"
"class:`UID` トークンの読み込み・書き込みのサポートが追加されました。"

#: ../../library/plistlib.rst:44
msgid "Old API removed."
msgstr "古い API が削除されました。"

#: ../../library/plistlib.rst:49
msgid ""
"`PList manual page <https://developer.apple.com/library/archive/"
"documentation/Cocoa/Conceptual/PropertyLists/>`_"
msgstr ""
"`PList マニュアルページ <https://developer.apple.com/library/archive/"
"documentation/Cocoa/Conceptual/PropertyLists/>`_"

#: ../../library/plistlib.rst:50
msgid "Apple's documentation of the file format."
msgstr "このファイル形式の Apple の文書。"

#: ../../library/plistlib.rst:53
msgid "This module defines the following functions:"
msgstr "このモジュールは以下の関数を定義しています:"

#: ../../library/plistlib.rst:57
msgid ""
"Read a plist file. *fp* should be a readable and binary file object. Return "
"the unpacked root object (which usually is a dictionary)."
msgstr ""
"plist ファイルを読み込みます。*fp* は読み込み可能かつバイナリのファイルオブ"
"ジェクトです。展開されたルートオブジェクト (通常は辞書です) を返します。"

#: ../../library/plistlib.rst:61
msgid "The *fmt* is the format of the file and the following values are valid:"
msgstr "*fmt* はファイルの形式で、次の値が有効です。"

#: ../../library/plistlib.rst:63
msgid ":data:`None`: Autodetect the file format"
msgstr ":data:`None`: ファイル形式を自動検出します"

#: ../../library/plistlib.rst:65
msgid ":data:`FMT_XML`: XML file format"
msgstr ":data:`FMT_XML`: XML ファイル形式です"

#: ../../library/plistlib.rst:67
msgid ":data:`FMT_BINARY`: Binary plist format"
msgstr ":data:`FMT_BINARY`: バイナリの plist 形式です"

#: ../../library/plistlib.rst:69
msgid ""
"The *dict_type* is the type used for dictionaries that are read from the "
"plist file."
msgstr "*dict_type* は、 plist ファイルから読み出された辞書に使われる型です。"

#: ../../library/plistlib.rst:72
msgid ""
"When *aware_datetime* is true, fields with type ``datetime.datetime`` will "
"be created as :ref:`aware object <datetime-naive-aware>`, with :attr:`!"
"tzinfo` as :attr:`datetime.UTC`."
msgstr ""
"*aware_datetime* が true の場合、 ``datetime.datetime`` 型によるフィールド"
"は、 :attr:`datetime.UTC` の :attr:`!tzinfo` 付きで :ref:`aware オブジェクト "
"<datetime-naive-aware>` として作成されます。"

#: ../../library/plistlib.rst:76
msgid ""
"XML data for the :data:`FMT_XML` format is parsed using the Expat parser "
"from :mod:`xml.parsers.expat` -- see its documentation for possible "
"exceptions on ill-formed XML.  Unknown elements will simply be ignored by "
"the plist parser."
msgstr ""
":data:`FMT_XML` 形式の XML データは :mod:`xml.parsers.expat` にある Expat "
"パーサーを使って解析されます。不正な形式の XML に対して送出される可能性のある"
"例外については、そちらの文書を参照してください。plist 解析器では、未知の要素"
"は単純に無視されます。"

#: ../../library/plistlib.rst:81
msgid ""
"The parser for the binary format raises :exc:`InvalidFileException` when the "
"file cannot be parsed."
msgstr ""
"バイナリ形式のパーサーは、ファイルを解析できない場合に :exc:"
"`InvalidFileException` を送出します。"

#: ../../library/plistlib.rst:86 ../../library/plistlib.rst:131
msgid "The keyword-only parameter *aware_datetime* has been added."
msgstr "キーワード専用引数 *aware_datetime* が追加されました。"

#: ../../library/plistlib.rst:92
msgid ""
"Load a plist from a bytes or string object. See :func:`load` for an "
"explanation of the keyword arguments."
msgstr ""
"バイナリまたは文字列オブジェクトから plist をロードします。キーワード引数の説"
"明については、 :func:`load` を参照してください。"

#: ../../library/plistlib.rst:97
msgid "*data* can be a string when *fmt* equals :data:`FMT_XML`."
msgstr "*fmt* が :data:`FMT_XML` の場合、 *data* は文字列たり得ます。"

#: ../../library/plistlib.rst:102
msgid ""
"Write *value* to a plist file. *Fp* should be a writable, binary file object."
msgstr ""
"plist ファイルに *value* を書き込みます。*Fp* は、書き込み可能なバイナリファ"
"イルオブジェクトにしてください。"

#: ../../library/plistlib.rst:105
msgid ""
"The *fmt* argument specifies the format of the plist file and can be one of "
"the following values:"
msgstr ""
"*fmt* 引数は plist ファイルの形式を指定し、次のいずれかの値をとることができま"
"す。"

#: ../../library/plistlib.rst:108
msgid ":data:`FMT_XML`: XML formatted plist file"
msgstr ":data:`FMT_XML`: XML 形式の plist ファイルです"

#: ../../library/plistlib.rst:110
msgid ":data:`FMT_BINARY`: Binary formatted plist file"
msgstr ":data:`FMT_BINARY`: バイナリ形式の plist ファイルです"

#: ../../library/plistlib.rst:112
msgid ""
"When *sort_keys* is true (the default) the keys for dictionaries will be "
"written to the plist in sorted order, otherwise they will be written in the "
"iteration order of the dictionary."
msgstr ""
"*sort_keys* が真 (デフォルト) の場合、辞書内のキーは、plist にソートされた順"
"序で書き込まれます。偽の場合、ディクショナリのイテレートの順序で書き込まれま"
"す。"

#: ../../library/plistlib.rst:116
msgid ""
"When *skipkeys* is false (the default) the function raises :exc:`TypeError` "
"when a key of a dictionary is not a string, otherwise such keys are skipped."
msgstr ""
"*skipkeys* が偽 (デフォルト) の場合、この関数は辞書のキーが文字列でない場合"
"に :exc:`TypeError` を送出します。真の場合、そのようなキーは読み飛ばされま"
"す。"

#: ../../library/plistlib.rst:119
msgid ""
"When *aware_datetime* is true and any field with type ``datetime.datetime`` "
"is set as an :ref:`aware object <datetime-naive-aware>`, it will convert to "
"UTC timezone before writing it."
msgstr ""

#: ../../library/plistlib.rst:123
msgid ""
"A :exc:`TypeError` will be raised if the object is of an unsupported type or "
"a container that contains objects of unsupported types."
msgstr ""
":exc:`TypeError` が、オブジェクトがサポート外の型のものであったりサポート外の"
"型のオブジェクトを含むコンテナだった場合に、送出されます。"

#: ../../library/plistlib.rst:126
msgid ""
"An :exc:`OverflowError` will be raised for integer values that cannot be "
"represented in (binary) plist files."
msgstr ""
"(バイナリの) plist ファイル内で表現できない整数値に対しては、 :exc:"
"`OverflowError` が送出されます。"

#: ../../library/plistlib.rst:137
msgid ""
"Return *value* as a plist-formatted bytes object. See the documentation for :"
"func:`dump` for an explanation of the keyword arguments of this function."
msgstr ""
"*value* を plist 形式のバイトオブジェクトとして返します。この関数のキーワード"
"引数の説明については、 :func:`dump` を参照してください。"

#: ../../library/plistlib.rst:144
msgid "The following classes are available:"
msgstr "以下のクラスが使用可能です:"

#: ../../library/plistlib.rst:148
msgid ""
"Wraps an :class:`int`.  This is used when reading or writing NSKeyedArchiver "
"encoded data, which contains UID (see PList manual)."
msgstr ""
":class:`int` をラップします。これは NSKeyedArchiver でエンコードされた UID を"
"含むデータ、の読み込みや書き込みに使用されます (PList マニュアルを参照) 。"

#: ../../library/plistlib.rst:151
msgid ""
"It has one attribute, :attr:`data`, which can be used to retrieve the int "
"value of the UID.  :attr:`data` must be in the range ``0 <= data < 2**64``."
msgstr ""
"これは一つ、 :attr:`data` 属性を持ち、これにより UID の int 値を取得すること"
"ができます。 :attr:`data` は ``0 <= data < 2**64`` の範囲内でなければなりませ"
"ん。"

#: ../../library/plistlib.rst:157
msgid "The following constants are available:"
msgstr "以下の定数が利用可能です:"

#: ../../library/plistlib.rst:161
msgid "The XML format for plist files."
msgstr "plist ファイルの XML 形式です"

#: ../../library/plistlib.rst:168
msgid "The binary format for plist files"
msgstr "plist ファイルのバイナリ形式です"

#: ../../library/plistlib.rst:174
msgid "Examples"
msgstr "使用例"

#: ../../library/plistlib.rst:176
msgid "Generating a plist::"
msgstr "plist を作ります::"

#: ../../library/plistlib.rst:178
msgid ""
"import datetime\n"
"import plistlib\n"
"\n"
"pl = dict(\n"
"    aString = \"Doodah\",\n"
"    aList = [\"A\", \"B\", 12, 32.1, [1, 2, 3]],\n"
"    aFloat = 0.1,\n"
"    anInt = 728,\n"
"    aDict = dict(\n"
"        anotherString = \"<hello & hi there!>\",\n"
"        aThirdString = \"M\\xe4ssig, Ma\\xdf\",\n"
"        aTrueValue = True,\n"
"        aFalseValue = False,\n"
"    ),\n"
"    someData = b\"<binary gunk>\",\n"
"    someMoreData = b\"<lots of binary gunk>\" * 10,\n"
"    aDate = datetime.datetime.now()\n"
")\n"
"print(plistlib.dumps(pl).decode())"
msgstr ""

#: ../../library/plistlib.rst:198
msgid "Parsing a plist::"
msgstr "plist を解析します::"

#: ../../library/plistlib.rst:200
msgid ""
"import plistlib\n"
"\n"
"plist = b\"\"\"<plist version=\"1.0\">\n"
"<dict>\n"
"    <key>foo</key>\n"
"    <string>bar</string>\n"
"</dict>\n"
"</plist>\"\"\"\n"
"pl = plistlib.loads(plist)\n"
"print(pl[\"foo\"])"
msgstr ""

#: ../../library/plistlib.rst:13
msgid "plist"
msgstr "plist"

#: ../../library/plistlib.rst:13
msgid "file"
msgstr "ファイル"

#: ../../library/plistlib.rst:13
msgid "property list"
msgstr "property list"
