# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:06+0000\n"
"PO-Revision-Date: 2020-05-30 12:14+0000\n"
"Last-Translator: tomo, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.sax.rst:2
msgid ":mod:`xml.sax` --- Support for SAX2 parsers"
msgstr ":mod:`xml.sax` --- SAX2 パーサのサポート"

#: ../../library/xml.sax.rst:11
msgid "**Source code:** :source:`Lib/xml/sax/__init__.py`"
msgstr "**ソースコード:** :source:`Lib/xml/sax/__init__.py`"

#: ../../library/xml.sax.rst:15
msgid ""
"The :mod:`xml.sax` package provides a number of modules which implement the "
"Simple API for XML (SAX) interface for Python.  The package itself provides "
"the SAX exceptions and the convenience functions which will be most used by "
"users of the SAX API."
msgstr ""
":mod:`xml.sax` パッケージは Python 用の Simple API for XML (SAX) インター"
"フェースを実装した数多くのモジュールを提供しています。またパッケージには SAX "
"例外と SAX API 利用者が頻繁に利用するであろう有用な関数群も含まれています。"

#: ../../library/xml.sax.rst:23
msgid ""
"The :mod:`xml.sax` module is not secure against maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see :ref:`xml-"
"vulnerabilities`."
msgstr ""
":mod:`xml.sax` モジュールは悪意を持って作成されたデータに対して安全ではありま"
"せん。信頼できないデータや認証されていないデータをパースする必要がある場合"
"は :ref:`xml-vulnerabilities` を参照してください。"

#: ../../library/xml.sax.rst:29
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security. Before, the parser created network connections to fetch "
"remote files or loaded local files from the file system for DTD and "
"entities. The feature can be enabled again with method :meth:`~xml.sax."
"xmlreader.XMLReader.setFeature` on the parser object and argument :data:"
"`~xml.sax.handler.feature_external_ges`."
msgstr ""
"SAXパーサーは、セキュリティーを向上させるために、デフォルトで一般的な外部エン"
"ティティーを処理しなくなりました。以前は、パーサーは、DTDおよびエンティティ用"
"にファイルシステムからリモートファイルまたはロードされたローカルファイルを"
"フェッチするためのネットワーク接続を作成していました。この機能は parser オブ"
"ジェクトと(実) 引数 :data:`~xml.sax.handler.feature_external_ges` の :meth:"
"`~xml.sax.xmlreader.XMLReader.setFeature` メソッドで再度有効にすることができ"
"ます。"

#: ../../library/xml.sax.rst:36
msgid "The convenience functions are:"
msgstr "その関数群は以下の通りです:"

#: ../../library/xml.sax.rst:41
msgid ""
"Create and return a SAX :class:`~xml.sax.xmlreader.XMLReader` object.  The "
"first parser found will be used.  If *parser_list* is provided, it must be "
"an iterable of strings which name modules that have a function named :func:"
"`create_parser`.  Modules listed in *parser_list* will be used before "
"modules in the default list of parsers."
msgstr ""
"SAX :class:`~xml.sax.xmlreader.XMLReader` オブジェクトを生成し、返します。最"
"初に見つかったパーサーが使用されます。*parser_list* を与える場合、それは :"
"func:`create_parser` という名前の関数をもつモジュール名のイテラブルでなければ"
"なりません。\n"
"*parser_list* に列挙されているモジュールは、パーサーのデフォルトリストにある"
"モジュールよりも先に使われます。"

#: ../../library/xml.sax.rst:47
msgid "The *parser_list* argument can be any iterable, not just a list."
msgstr "*parser_list* 引数はリストだけでなく、イテラブルでもよくなりました。"

#: ../../library/xml.sax.rst:53
msgid ""
"Create a SAX parser and use it to parse a document.  The document, passed in "
"as *filename_or_stream*, can be a filename or a file object.  The *handler* "
"parameter needs to be a SAX :class:`~handler.ContentHandler` instance.  If "
"*error_handler* is given, it must be a SAX :class:`~handler.ErrorHandler` "
"instance; if omitted,  :exc:`SAXParseException` will be raised on all "
"errors.  There is no return value; all work must be done by the *handler* "
"passed in."
msgstr ""
"SAX パーサを生成し、そのパーサをドキュメントの解析に使用します。"
"*filename_or_stream* として与えられるドキュメントは、ファイル名でもファイルオ"
"ブジェクトでもかまいません。 *handler* 引数は SAX :class:`~handler."
"ContentHandler` のインスタントである必要があります。*error_handler* が与えら"
"れる場合は、 SAX :class:`~handler.ErrorHandler`  のインスタンスである必要があ"
"ります。この引数を省略した場合、全ての例外に対して :exc:`SAXParseException` "
"が発生します。 戻り値はありません。すべての操作は渡される *handler* によって"
"行われなければなりません。"

#: ../../library/xml.sax.rst:64
msgid ""
"Similar to :func:`parse`, but parses from a buffer *string* received as a "
"parameter.  *string* must be a :class:`str` instance or a :term:`bytes-like "
"object`."
msgstr ""
":func:`parse` と同様ですが、こちらは引数で受け取ったバッファ *string* をパー"
"スします。\n"
"*string* は :class:`str` インスタンスか :term:`bytes-like object` でなければ"
"なりません。"

#: ../../library/xml.sax.rst:68
msgid "Added support of :class:`str` instances."
msgstr ":class:`str` インスタンスがサポートされました。"

#: ../../library/xml.sax.rst:71
msgid ""
"A typical SAX application uses three kinds of objects: readers, handlers and "
"input sources.  \"Reader\" in this context is another term for parser, i.e. "
"some piece of code that reads the bytes or characters from the input source, "
"and produces a sequence of events. The events then get distributed to the "
"handler objects, i.e. the reader invokes a method on the handler.  A SAX "
"application must therefore obtain a reader object, create or open the input "
"sources, create the handlers, and connect these objects all together.  As "
"the final step of preparation, the reader is called to parse the input. "
"During parsing, methods on the handler objects are called based on "
"structural and syntactic events from the input data."
msgstr ""
"典型的な SAX アプリケーションでは3種類のオブジェクト(リーダ、ハンドラ、入力"
"元)が用いられます。ここで言うリーダとはパーサを指しています。つまり、入力元か"
"らバイト列または文字列を読み込み、一連のイベントを発生させるコード片のことで"
"す。発生したイベントはハンドラ・オブジェクトに割り振られます。言い換えると、"
"リーダがハンドラのメソッドを呼び出すわけです。つまり、 SAX アプリケーション"
"は、リーダ・オブジェクトを作成し、入力元のオブジェクトを作成するか開き、ハン"
"ドラ・オブジェクトを作成し、これら3つのオブジェクトを連携させる必要がありま"
"す。準備の最終段階では、リーダが呼び出され、入力をパースします。パース中に"
"は、入力データからの構造イベントや構文イベントに基づいて、ハンドラ・オブジェ"
"クトのメソッドが呼び出されます。"

#: ../../library/xml.sax.rst:82
msgid ""
"For these objects, only the interfaces are relevant; they are normally not "
"instantiated by the application itself.  Since Python does not have an "
"explicit notion of interface, they are formally introduced as classes, but "
"applications may use implementations which do not inherit from the provided "
"classes.  The :class:`~xml.sax.xmlreader.InputSource`, :class:`~xml.sax."
"xmlreader.Locator`, :class:`~xml.sax.xmlreader.Attributes`, :class:`~xml.sax."
"xmlreader.AttributesNS`, and :class:`~xml.sax.xmlreader.XMLReader` "
"interfaces are defined in the module :mod:`xml.sax.xmlreader`.  The handler "
"interfaces are defined in :mod:`xml.sax.handler`.  For convenience, :class:"
"`~xml.sax.xmlreader.InputSource` (which is often instantiated directly) and "
"the handler classes are also available from :mod:`xml.sax`.  These "
"interfaces are described below."
msgstr ""
"これらのオブジェクトでは、インタフェースだけが関係します。通常、これらはアプ"
"リケーション自体によってはインスタンス化されません。 Python は明示的なインタ"
"フェースの概念を持たないので、インタフェースはクラスとして導入されました。し"
"かし、アプリケーションは、提供されたクラスを継承せずに実装してもかまいませ"
"ん。 インタフェース :class:`~xml.sax.xmlreader.InputSource`, :class:`~xml."
"sax.xmlreader.Locator`, :class:`~xml.sax.xmlreader.Attributes`, :class:`~xml."
"sax.xmlreader.AttributesNS`, :class:`~xml.sax.xmlreader.XMLReader`  はモ"
"ジュール :mod:`xml.sax.xmlreader` で定義されています。ハンドラインタフェース"
"は :mod:`xml.sax.handler` で定義されています。利便性のため、  :class:`~xml."
"sax.xmlreader.InputSource` (よく直接インスタンス化されるクラス) とハンドラク"
"ラスは :mod:`xml.sax` からもアクセスできます。これらのインタフェースについて"
"下記で説明します。"

#: ../../library/xml.sax.rst:95
msgid ""
"In addition to these classes, :mod:`xml.sax` provides the following "
"exception classes."
msgstr "このほかに :mod:`xml.sax` は次の例外クラスも提供しています。"

#: ../../library/xml.sax.rst:101
msgid ""
"Encapsulate an XML error or warning.  This class can contain basic error or "
"warning information from either the XML parser or the application: it can be "
"subclassed to provide additional functionality or to add localization.  Note "
"that although the handlers defined in the :class:`~xml.sax.handler."
"ErrorHandler` interface receive instances of this exception, it is not "
"required to actually raise the exception --- it is also useful as a "
"container for information."
msgstr ""
"XML エラーと警告をカプセル化します。このクラスには XML パーサとアプリケーショ"
"ンで発生するエラーおよび警告の基本的な情報を持たせることができます。また機能"
"追加や地域化のためにサブクラス化することも可能です。なお :class:`~xml.sax."
"handler.ErrorHandler` で定義されているハンドラがこの例外のインスタンスを受け"
"取ることに注意してください。実際に例外を発生させることは必須でなく、情報のコ"
"ンテナとして利用されることもあるからです。"

#: ../../library/xml.sax.rst:109
msgid ""
"When instantiated, *msg* should be a human-readable description of the "
"error. The optional *exception* parameter, if given, should be ``None`` or "
"an exception that was caught by the parsing code and is being passed along "
"as information."
msgstr ""
"インスタンスを作成する際 *msg* はエラー内容を示す可読データにしてください。オ"
"プションの *exception* 引数は ``None`` にするか、パース用コードで捕捉されて情"
"報として渡される例外にしてください。"

#: ../../library/xml.sax.rst:113
msgid "This is the base class for the other SAX exception classes."
msgstr "このクラスはSAX 例外の基底クラスになります。"

#: ../../library/xml.sax.rst:118
msgid ""
"Subclass of :exc:`SAXException` raised on parse errors. Instances of this "
"class are passed to the methods of the SAX :class:`~xml.sax.handler."
"ErrorHandler` interface to provide information about the parse error.  This "
"class supports the SAX :class:`~xml.sax.xmlreader.Locator` interface as well "
"as the :class:`SAXException` interface."
msgstr ""
"パースエラー時に発生する :exc:`SAXException` のサブクラスです。パースエラーに"
"関する情報として、このクラスのインスタンスが SAX :class:`~xml.sax.handler."
"ErrorHandler` インターフェースのメソッドに渡されます。このクラスは :class:"
"`SAXException` 同様 SAX :class:`~xml.sax.xmlreader.Locator` インターフェース"
"もサポートしています。"

#: ../../library/xml.sax.rst:128
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`~xml.sax.xmlreader."
"XMLReader` is confronted with an unrecognized feature or property.  SAX "
"applications and extensions may use this class for similar purposes."
msgstr ""
"SAX :class:`~xml.sax.xmlreader.XMLReader` が認識できない機能やプロパティに遭"
"遇したとき発生させる :exc:`SAXException` のサブクラスです。 SAX アプリケー"
"ションや拡張モジュールにおいて同様の目的にこのクラスを利用することもできま"
"す。"

#: ../../library/xml.sax.rst:136
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`~xml.sax.xmlreader."
"XMLReader` is asked to enable a feature that is not supported, or to set a "
"property to a value that the implementation does not support.  SAX "
"applications and extensions may use this class for similar purposes."
msgstr ""
"SAX :class:`~xml.sax.xmlreader.XMLReader` が要求された機能をサポートしていな"
"いとき発生させる :exc:`SAXException` のサブクラスです。 SAX アプリケーション"
"や拡張モジュールにおいて同様の目的にこのクラスを利用することもできます。"

#: ../../library/xml.sax.rst:148
msgid "`SAX: The Simple API for XML <http://www.saxproject.org/>`_"
msgstr "`SAX: The Simple API for XML <http://www.saxproject.org/>`_"

#: ../../library/xml.sax.rst:146
msgid ""
"This site is the focal point for the definition of the SAX API.  It provides "
"a Java implementation and online documentation.  Links to implementations "
"and historical information are also available."
msgstr ""
"SAX API 定義に関し中心となっているサイトです。Java による実装とオンライン・ド"
"キュメントが提供されています。実装と SAX API の歴史に関する情報のリンクも掲載"
"されています。"

#: ../../library/xml.sax.rst:151
msgid "Module :mod:`xml.sax.handler`"
msgstr ":mod:`xml.sax.handler` モジュール"

#: ../../library/xml.sax.rst:151
msgid "Definitions of the interfaces for application-provided objects."
msgstr "アプリケーションが提供するオブジェクトのインターフェース定義。"

#: ../../library/xml.sax.rst:154
msgid "Module :mod:`xml.sax.saxutils`"
msgstr ":mod:`xml.sax.saxutils` モジュール"

#: ../../library/xml.sax.rst:154
msgid "Convenience functions for use in SAX applications."
msgstr "SAX アプリケーション向けの有用な関数群。"

#: ../../library/xml.sax.rst:156
msgid "Module :mod:`xml.sax.xmlreader`"
msgstr ":mod:`xml.sax.xmlreader` モジュール"

#: ../../library/xml.sax.rst:157
msgid "Definitions of the interfaces for parser-provided objects."
msgstr "パーサが提供するオブジェクトのインターフェース定義。"

#: ../../library/xml.sax.rst:163
msgid "SAXException Objects"
msgstr "SAXException オブジェクト"

#: ../../library/xml.sax.rst:165
msgid ""
"The :class:`SAXException` exception class supports the following methods:"
msgstr ":class:`SAXException` 例外クラスは以下のメソッドをサポートしています:"

#: ../../library/xml.sax.rst:170
msgid "Return a human-readable message describing the error condition."
msgstr "エラー状態を示す可読メッセージを返します。"

#: ../../library/xml.sax.rst:175
msgid "Return an encapsulated exception object, or ``None``."
msgstr "カプセル化した例外オブジェクトまたは ``None`` を返します。"
