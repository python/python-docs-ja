# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pdb.rst:4
msgid ":mod:`pdb` --- The Python Debugger"
msgstr ":mod:`pdb` --- Python デバッガ"

#: ../../library/pdb.rst:9
msgid "**Source code:** :source:`Lib/pdb.py`"
msgstr "**ソースコード:** :source:`Lib/pdb.py`"

#: ../../library/pdb.rst:15
msgid ""
"The module :mod:`pdb` defines an interactive source code debugger for Python "
"programs.  It supports setting (conditional) breakpoints and single stepping "
"at the source line level, inspection of stack frames, source code listing, "
"and evaluation of arbitrary Python code in the context of any stack frame.  "
"It also supports post-mortem debugging and can be called under program "
"control."
msgstr ""
"モジュール :mod:`pdb` は Python プログラム用の対話型ソースコードデバッガを定"
"義します。 (条件付き)ブレークポイントの設定やソース行レベルでのシングルステッ"
"プ実行、スタックフレームのインスペクション、ソースコードリスティングおよびあ"
"らゆるスタックフレームのコンテキストにおける任意の Python コードの評価をサ"
"ポートしています。事後解析デバッギングもサポートし、プログラムの制御下で呼び"
"出すことができます。"

#: ../../library/pdb.rst:26
msgid ""
"The debugger is extensible --- it is actually defined as the class :class:"
"`Pdb`. This is currently undocumented but easily understood by reading the "
"source.  The extension interface uses the modules :mod:`bdb` and :mod:`cmd`."
msgstr ""
"デバッガは拡張可能です --- 実際にはクラス :class:`Pdb` として定義されていま"
"す。現在これについてのドキュメントはありませんが、ソースを読めば簡単に理解で"
"きます。拡張インターフェースはモジュール :mod:`bdb` と :mod:`cmd` を使ってい"
"ます。"

#: ../../library/pdb.rst:30
msgid ""
"The debugger's prompt is ``(Pdb)``. Typical usage to run a program under "
"control of the debugger is::"
msgstr ""
"デバッガのプロンプトは ``(Pdb)`` です。デバッガに制御された状態でプログラムを"
"実行するための典型的な使い方は以下のようになります::"

#: ../../library/pdb.rst:44
msgid ""
":file:`pdb.py` can also be invoked as a script to debug other scripts.  For "
"example::"
msgstr ""
"他のスクリプトをデバッグするために、 :file:`pdb.py` をスクリプトとして呼び出"
"すこともできます。例えば::"

#: ../../library/pdb.rst:49
msgid ""
"When invoked as a script, pdb will automatically enter post-mortem debugging "
"if the program being debugged exits abnormally. After post-mortem debugging "
"(or after normal exit of the program), pdb will restart the program. "
"Automatic restarting preserves pdb's state (such as breakpoints) and in most "
"cases is more useful than quitting the debugger upon program's exit."
msgstr ""
"スクリプトとして pdb を起動すると、デバッグ中のプログラムが異常終了した時に "
"pdb が自動的に事後デバッグモードに入ります。事後デバッグ後 (またはプログラム"
"の正常終了後) には、 pdb はプログラムを再起動します。自動再起動を行った場"
"合、 pdb の状態 (ブレークポイントなど) はそのまま維持されるので、たいていの場"
"合、プログラム終了時にデバッガも終了させるよりも便利なはずです。"

#: ../../library/pdb.rst:55
msgid "Restarting post-mortem behavior added."
msgstr "事後デバッグ後の再起動機能が追加されました."

#: ../../library/pdb.rst:58
msgid ""
"The typical usage to break into the debugger from a running program is to "
"insert ::"
msgstr "実行するプログラムをデバッガで分析する典型的な使い方は::"

#: ../../library/pdb.rst:63
msgid ""
"at the location you want to break into the debugger.  You can then step "
"through the code following this statement, and continue running without the "
"debugger using the ``c`` command."
msgstr ""
"をデバッガで分析したい場所に挿入することです。そうすることで、コードの中の以"
"下に続く文をステップ実行できます、そして、 ``c`` コマンドでデバッガを走らせる"
"ことなく続けることもできます。"

#: ../../library/pdb.rst:67
msgid "The typical usage to inspect a crashed program is::"
msgstr ""
"クラッシュしたプログラムを調べるための典型的な使い方は以下のようになります::"

#: ../../library/pdb.rst:85
msgid ""
"The module defines the following functions; each enters the debugger in a "
"slightly different way:"
msgstr ""
"このモジュールは以下の関数を定義しています。それぞれが少しづつ違った方法でデ"
"バッガに入ります:"

#: ../../library/pdb.rst:90
msgid ""
"Execute the *statement* (given as a string) under debugger control.  The "
"debugger prompt appears before any code is executed; you can set breakpoints "
"and type ``continue``, or you can step through the statement using ``step`` "
"or ``next`` (all these commands are explained below).  The optional "
"*globals* and *locals* arguments specify the environment in which the code "
"is executed; by default the dictionary of the module :mod:`__main__` is "
"used.  (See the explanation of the :keyword:`exec` statement or the :func:"
"`eval` built-in function.)"
msgstr ""
"デバッガに制御された状態で(文字列として与えられた) *statement* を実行します。"
"デバッガプロンプトはあらゆるコードが実行される前に現れます。ブレークポイント"
"を設定し、 ``continue`` とタイプできます。あるいは、文を ``step`` や "
"``next`` を使って一つづつ実行することができます (これらのコマンドはすべて下で"
"説明します) 。オプションの *globals* と *locals* 引数はコードを実行する環境を"
"指定します。デフォルトでは、モジュール :mod:`__main__` の辞書が使われます。 "
"(:keyword:`exec` 文または :func:`eval` 組み込み関数の説明を参照してくださ"
"い。)"

#: ../../library/pdb.rst:102
msgid ""
"Evaluate the *expression* (given as a string) under debugger control.  When :"
"func:`runeval` returns, it returns the value of the expression.  Otherwise "
"this function is similar to :func:`run`."
msgstr ""
"デバッガの制御もとで(文字列として与えられる) *expression* を評価します。 :"
"func:`runeval` がリターンしたとき、式の値を返します。その他の点では、この関数"
"は :func:`run` と同様です。"

#: ../../library/pdb.rst:109
msgid ""
"Call the *function* (a function or method object, not a string) with the "
"given arguments.  When :func:`runcall` returns, it returns whatever the "
"function call returned.  The debugger prompt appears as soon as the function "
"is entered."
msgstr ""
"*function* (関数またはメソッドオブジェクト、文字列ではありません) を与えられ"
"た引数とともに呼び出します。 :func:`runcall` から復帰するとき、関数呼び出しが"
"返したものはなんでも返します。関数に入るとすぐにデバッガプロンプトが現れま"
"す。"

#: ../../library/pdb.rst:116
msgid ""
"Enter the debugger at the calling stack frame.  This is useful to hard-code "
"a breakpoint at a given point in a program, even if the code is not "
"otherwise being debugged (e.g. when an assertion fails)."
msgstr ""
"スタックフレームを呼び出したところでデバッガに入ります。たとえコードが別の方"
"法でデバッグされている最中でなくても (例えば、アサーションが失敗するとき)、こ"
"れはプログラムの所定の場所でブレークポイントをハードコードするために役に立ち"
"ます。"

#: ../../library/pdb.rst:123
msgid ""
"Enter post-mortem debugging of the given *traceback* object.  If no "
"*traceback* is given, it uses the one of the exception that is currently "
"being handled (an exception must be being handled if the default is to be "
"used)."
msgstr ""
"与えられた *traceback* オブジェクトの事後解析デバッギングに入ります。もし "
"*traceback* が与えられなければ、その時点で取り扱っている例外のうちのひとつを"
"使います。 (デフォルト動作をさせるには、例外を取り扱っている最中である必要が"
"あります。)"

#: ../../library/pdb.rst:131
msgid ""
"Enter post-mortem debugging of the traceback found in :data:`sys."
"last_traceback`."
msgstr ""
":data:`sys.last_traceback` のトレースバックの事後解析デバッギングに入ります。"

#: ../../library/pdb.rst:135
msgid ""
"The ``run*`` functions and :func:`set_trace` are aliases for instantiating "
"the :class:`Pdb` class and calling the method of the same name.  If you want "
"to access further features, you have to do this yourself:"
msgstr ""
"``run*`` 関数と :func:`set_trace` は、 :class:`Pdb` クラスをインスタンス化し"
"て同名のメソッドを実行することのエイリアス関数です。それ以上の機能を利用した"
"い場合は、インスタンス化を自分で行わなければなりません:"

#: ../../library/pdb.rst:141
msgid ":class:`Pdb` is the debugger class."
msgstr ":class:`Pdb` はデバッガクラスです。"

#: ../../library/pdb.rst:143
msgid ""
"The *completekey*, *stdin* and *stdout* arguments are passed to the "
"underlying :class:`cmd.Cmd` class; see the description there."
msgstr ""
"*completekey*, *stdin*, *stdout* 引数は、基底にある :class:`cmd.Cmd` クラスに"
"渡されます。そちらの解説を参照してください。"

#: ../../library/pdb.rst:146
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. [1]_"
msgstr ""
"*skip* 引数が指定された場合、 glob スタイルのモジュール名パターンの iterable "
"(イテレート可能オブジェクト) でなければなりません。デバッガはこのパターンのど"
"れかにマッチするモジュールに属するフレームにはステップインしません。 [1]_"

#: ../../library/pdb.rst:150
msgid "Example call to enable tracing with *skip*::"
msgstr "*skip* を使ってトレースする呼び出しの例::"

#: ../../library/pdb.rst:154
msgid "The *skip* argument."
msgstr "*skip* 引数が追加されました。"

#: ../../library/pdb.rst:162
msgid "See the documentation for the functions explained above."
msgstr "前述のこれら関数のドキュメントを参照してください。"

#: ../../library/pdb.rst:168
msgid "Debugger Commands"
msgstr "デバッガコマンド"

#: ../../library/pdb.rst:170
msgid ""
"The debugger recognizes the following commands.  Most commands can be "
"abbreviated to one or two letters; e.g. ``h(elp)`` means that either ``h`` "
"or ``help`` can be used to enter the help command (but not ``he`` or "
"``hel``, nor ``H`` or ``Help`` or ``HELP``).  Arguments to commands must be "
"separated by whitespace (spaces or tabs).  Optional arguments are enclosed "
"in square brackets (``[]``) in the command syntax; the square brackets must "
"not be typed. Alternatives in the command syntax are separated by a vertical "
"bar (``|``)."
msgstr ""
"デバッガは以下のコマンドを認識します。ほとんどのコマンドは一文字または二文字"
"に省略することができます。例えば、 ``h(elp)`` が意味するのは、ヘルプコマンド"
"を入力するために ``h`` か ``help`` のどちらか一方を使うことができるということ"
"です ( が、 ``he`` や ``hel`` は使えず、また ``H`` や ``Help`` 、 ``HELP`` も"
"使えません ) 。コマンドの引数は空白 ( スペースまたはタブ ) で区切られなければ"
"なりません。オプションの引数はコマンド構文の角括弧 (``[]``) の中に入れなけれ"
"ばなりません。角括弧をタイプしてはいけません。コマンド構文における選択肢は垂"
"直バー (``|``) で区切られます。"

#: ../../library/pdb.rst:178
msgid ""
"Entering a blank line repeats the last command entered.  Exception: if the "
"last command was a ``list`` command, the next 11 lines are listed."
msgstr ""
"空行を入力すると入力された直前のコマンドを繰り返します。例外: 直前のコマンド"
"が ``list`` コマンドならば、次の11行がリストされます。"

#: ../../library/pdb.rst:181
msgid ""
"Commands that the debugger doesn't recognize are assumed to be Python "
"statements and are executed in the context of the program being debugged.  "
"Python statements can also be prefixed with an exclamation point (``!``).  "
"This is a powerful way to inspect the program being debugged; it is even "
"possible to change a variable or call a function.  When an exception occurs "
"in such a statement, the exception name is printed but the debugger's state "
"is not changed."
msgstr ""
"デバッガが認識しないコマンドは Python 文とみなして、デバッグしているプログラ"
"ムのコンテキストおいて実行されます。先頭にに感嘆符 (``!``) を付けることで "
"Python 文であると明示することもできます。これはデバッグ中のプログラムを調査す"
"る強力な方法です。変数を変更したり関数を呼び出したりすることも可能です。この"
"ような文で例外が発生した場合には例外名が出力されますが、デバッガの状態は変化"
"しません。"

#: ../../library/pdb.rst:189
msgid ""
"Multiple commands may be entered on a single line, separated by ``;;``.  (A "
"single ``;`` is not used as it is the separator for multiple commands in a "
"line that is passed to the Python parser.) No intelligence is applied to "
"separating the commands; the input is split at the first ``;;`` pair, even "
"if it is in the middle of a quoted string."
msgstr ""
"複数のコマンドを ``;;`` で区切って一行で入力することができます。 (一つだけの "
"``;`` は使われません。なぜなら、 Python パーサへ渡される行内の複数のコマンド"
"のための分離記号だからです。) コマンドを分割するために何も知的なことはしてい"
"ません。たとえ引用文字列の途中であっても、入力は最初の ``;;`` 対で分割されま"
"す。"

#: ../../library/pdb.rst:195
msgid ""
"The debugger supports aliases.  Aliases can have parameters which allows one "
"a certain level of adaptability to the context under examination."
msgstr ""
"デバッガはエイリアスをサポートします。エイリアスはパラメータを持つことがで"
"き、調査中のコンテキストに対して人がある程度柔軟に対応できます。"

#: ../../library/pdb.rst:202
msgid ""
"If a file :file:`.pdbrc`  exists in the user's home directory or in the "
"current directory, it is read in and executed as if it had been typed at the "
"debugger prompt. This is particularly useful for aliases.  If both files "
"exist, the one in the home directory is read first and aliases defined there "
"can be overridden by the local file."
msgstr ""
"ファイル :file:`.pdbrc` はユーザのホームディレクトリか、またはカレントディレ"
"クトリにあります。それはまるでデバッガのプロンプトでタイプしたかのように読み"
"込まれて実行されます。これは特にエイリアスのために便利です。両方のファイルが"
"存在する場合、ホームディレクトリのものが最初に読まれ、そこに定義されているエ"
"イリアスはローカルファイルにより上書きされることがあります。"

#: ../../library/pdb.rst:214
msgid "h(elp) [*command*]"
msgstr "h(elp) [*command*]"

#: ../../library/pdb.rst:209
msgid ""
"Without argument, print the list of available commands.  With a *command* as "
"argument, print help about that command.  ``help pdb`` displays the full "
"documentation file; if the environment variable :envvar:`PAGER` is defined, "
"the file is piped through that command instead.  Since the *command* "
"argument must be an identifier, ``help exec`` must be entered to get help on "
"the ``!`` command."
msgstr ""
"引数なしでは、利用できるコマンドの一覧をプリントします。引数として *command* "
"がある場合は、そのコマンドについてのヘルプをプリントします。 ``help pdb`` は"
"完全ドキュメンテーションファイルを表示します。環境変数 :envvar:`PAGER` が定義"
"されているならば、代わりにファイルはそのコマンドへパイプされます。 *command* "
"引数が識別子でなければならないので、 ``!`` コマンドについてのヘルプを得るため"
"には ``help exec`` と入力しなければなりません。"

#: ../../library/pdb.rst:218
msgid "w(here)"
msgstr "w(here)"

#: ../../library/pdb.rst:217
msgid ""
"Print a stack trace, with the most recent frame at the bottom.  An arrow "
"indicates the current frame, which determines the context of most commands."
msgstr ""
"スタックの底にある最も新しいフレームと一緒にスタックトレースをプリントしま"
"す。矢印はカレントフレームを指し、それがほとんどのコマンドのコンテキストを決"
"定します。"

#: ../../library/pdb.rst:221
msgid "d(own)"
msgstr "d(own)"

#: ../../library/pdb.rst:221
msgid ""
"Move the current frame one level down in the stack trace (to a newer frame)."
msgstr ""
"( より新しいフレームに向かって ) スタックトレース内でカレントフレームを1レベ"
"ル下げます。"

#: ../../library/pdb.rst:224
msgid "u(p)"
msgstr "u(p)"

#: ../../library/pdb.rst:224
msgid ""
"Move the current frame one level up in the stack trace (to an older frame)."
msgstr ""
"( より古いフレームに向かって ) スタックトレース内でカレントフレームを1レベル"
"上げます。"

#: ../../library/pdb.rst:239
msgid "b(reak) [[*filename*:]\\ *lineno* | *function*\\ [, *condition*]]"
msgstr "b(reak) [[*filename*:]\\ *lineno* | *function*\\ [, *condition*]]"

#: ../../library/pdb.rst:227
msgid ""
"With a *lineno* argument, set a break there in the current file.  With a "
"*function* argument, set a break at the first executable statement within "
"that function. The line number may be prefixed with a filename and a colon, "
"to specify a breakpoint in another file (probably one that hasn't been "
"loaded yet). The file is searched on ``sys.path``. Note that each breakpoint "
"is assigned a number to which all the other breakpoint commands refer."
msgstr ""
"*lineno* 引数がある場合は、現在のファイルのその場所にブレークポイントを設定し"
"ます。 *function* 引数がある場合は、その関数の中の最初の実行可能文にブレーク"
"ポイントを設定します。別のファイル ( まだロードされていないかもしれないも"
"の ) のブレークポイントを指定するために、行番号はファイル名とコロンをともに先"
"頭に付けられます。ファイルは ``sys.path`` にそって検索されます。各ブレークポ"
"イントは番号を割り当てられ、その番号を他のすべてのブレークポイントコマンドが"
"参照することに注意してください。"

#: ../../library/pdb.rst:234
msgid ""
"If a second argument is present, it is an expression which must evaluate to "
"true before the breakpoint is honored."
msgstr ""
"第二引数を指定する場合、その値は式で、その評価値が真でなければブレークポイン"
"トは有効になりません。"

#: ../../library/pdb.rst:237
msgid ""
"Without argument, list all breaks, including for each breakpoint, the number "
"of times that breakpoint has been hit, the current ignore count, and the "
"associated condition if any."
msgstr ""
"引数なしの場合は、それぞれのブレークポイントに対して、そのブレークポイントに"
"行き当たった回数、現在の通過カウント ( ignore count ) と、もしあれば関連条件"
"を含めてすべてのブレークポイントをリストします。"

#: ../../library/pdb.rst:243
msgid "tbreak [[*filename*:]\\ *lineno* | *function*\\ [, *condition*]]"
msgstr "tbreak [[*filename*:]\\ *lineno* | *function*\\ [, *condition*]]"

#: ../../library/pdb.rst:242
msgid ""
"Temporary breakpoint, which is removed automatically when it is first hit.  "
"The arguments are the same as break."
msgstr ""
"一時的なブレークポイントで、最初にそこに達したときに自動的に取り除かれます。"
"引数は break と同じです。"

#: ../../library/pdb.rst:248
msgid "cl(ear) [*filename:lineno* | *bpnumber* [*bpnumber ...*]]"
msgstr "cl(ear) [*filename:lineno* | *bpnumber* [*bpnumber ...*]]"

#: ../../library/pdb.rst:246
msgid ""
"With a *filename:lineno* argument, clear all the breakpoints at this line. "
"With a space separated list of breakpoint numbers, clear those breakpoints. "
"Without argument, clear all breaks (but first ask confirmation)."
msgstr ""
"*filename:lineno* 引数を与えると、その行にある全てのブレークポイントを解除し"
"ます。スペースで区切られたブレークポイントナンバーのリストを与えると、それら"
"のブレークポイントを解除します。引数なしの場合は、すべてのブレークポイントを"
"解除します ( が、はじめに確認します ) 。"

#: ../../library/pdb.rst:254
msgid "disable [*bpnumber* [*bpnumber ...*]]"
msgstr "disable [*bpnumber* [*bpnumber ...*]]"

#: ../../library/pdb.rst:251
msgid ""
"Disables the breakpoints given as a space separated list of breakpoint "
"numbers. Disabling a breakpoint means it cannot cause the program to stop "
"execution, but unlike clearing a breakpoint, it remains in the list of "
"breakpoints and can be (re-)enabled."
msgstr ""
"スペースで区切られたブレークポイントナンバーのリストとして与えられるブレーク"
"ポイントを無効にします。ブレークポイントを無効にすると、プログラムの実行を止"
"めることができなくなりますが、ブレークポイントの解除と違いブレークポイントの"
"リストに残ったままになり、 (再び)有効にすることができます。"

#: ../../library/pdb.rst:257
msgid "enable [*bpnumber* [*bpnumber ...*]]"
msgstr "enable [*bpnumber* [*bpnumber ...*]]"

#: ../../library/pdb.rst:257
msgid "Enables the breakpoints specified."
msgstr "指定したブレークポイントを有効にします。"

#: ../../library/pdb.rst:264
msgid "ignore *bpnumber* [*count*]"
msgstr "ignore *bpnumber* [*count*]"

#: ../../library/pdb.rst:260
msgid ""
"Sets the ignore count for the given breakpoint number.  If count is omitted, "
"the ignore count is set to 0.  A breakpoint becomes active when the ignore "
"count is zero.  When non-zero, the count is decremented each time the "
"breakpoint is reached and the breakpoint is not disabled and any associated "
"condition evaluates to true."
msgstr ""
"与えられたブレークポイントナンバーに通過カウントを設定します。 count が省略さ"
"れると、通過カウントは 0 に設定されます。通過カウントがゼロになったとき、ブ"
"レークポイントが機能する状態になります。ゼロでないときは、そのブレークポイン"
"トが無効にされず、どんな関連条件も真に評価されていて、ブレークポイントに来る"
"たびに count が減らされます。"

#: ../../library/pdb.rst:269
msgid "condition *bpnumber* [*condition*]"
msgstr "condition *bpnumber* [*condition*]"

#: ../../library/pdb.rst:267
msgid ""
"Condition is an expression which must evaluate to true before the breakpoint "
"is honored.  If condition is absent, any existing condition is removed; i."
"e., the breakpoint is made unconditional."
msgstr ""
"condition はブレークポイントが取り上げられる前に真と評価されなければならない"
"式です。 condition がない場合は、どんな既存の条件も取り除かれます。すなわち、"
"ブレークポイントは無条件になります。"

#: ../../library/pdb.rst:301
msgid "commands [*bpnumber*]"
msgstr "commands [*bpnumber*]"

#: ../../library/pdb.rst:272
msgid ""
"Specify a list of commands for breakpoint number *bpnumber*.  The commands "
"themselves appear on the following lines.  Type a line containing just 'end' "
"to terminate the commands. An example::"
msgstr ""
"ブレークポイントナンバー *bpnumber* にコマンドのリストを指定します。コマンド"
"そのものはその後の行に続けます。 'end' だけからなる行を入力することでコマンド"
"群の終わりを示します。例を挙げます::"

#: ../../library/pdb.rst:281
msgid ""
"To remove all commands from a breakpoint, type commands and follow it "
"immediately with  end; that is, give no commands."
msgstr ""
"ブレークポイントからコマンドを取り除くには、 commands のあとに end だけを続け"
"ます。つまり、コマンドを一つも指定しないようにします。"

#: ../../library/pdb.rst:284
msgid ""
"With no *bpnumber* argument, commands refers to the last breakpoint set."
msgstr ""
"*bpnumber* 引数が指定されない場合、最後にセットされたブレークポイントを参照す"
"ることになります。"

#: ../../library/pdb.rst:286
msgid ""
"You can use breakpoint commands to start your program up again. Simply use "
"the continue command, or step, or any other command that resumes execution."
msgstr ""
"ブレークポイントコマンドはプログラムを走らせ直すのに使えます。ただ continue "
"コマンドや step、その他実行を再開するコマンドを使えば良いのです。"

#: ../../library/pdb.rst:289
msgid ""
"Specifying any command resuming execution (currently continue, step, next, "
"return, jump, quit and their abbreviations) terminates the command list (as "
"if that command was immediately followed by end). This is because any time "
"you resume execution (even with a simple next or step), you may encounter "
"another breakpoint—which could have its own command list, leading to "
"ambiguities about which list to execute."
msgstr ""
"実行を再開するコマンド (現在のところ continue, step, next, return, jump, "
"quit とそれらの省略形) によって、コマンドリストは終了するものと見なされます "
"(コマンドにすぐ end が続いているかのように)。というのも実行を再開すれば (それ"
"が単純な next や step であっても) 別のブレークポイントに到達するかもしれない"
"からです。そのブレークポイントにさらにコマンドリストがあれば、どちらのリスト"
"を実行すべきか状況が曖昧になります。"

#: ../../library/pdb.rst:296
msgid ""
"If you use the 'silent' command in the command list, the usual message about "
"stopping at a breakpoint is not printed.  This may be desirable for "
"breakpoints that are to print a specific message and then continue.  If none "
"of the other commands print anything, you see no sign that the breakpoint "
"was reached."
msgstr ""
"コマンドリストの中で 'silent' コマンドを使うと、ブレークポイントで停止したと"
"いう通常のメッセージはプリントされません。この振る舞いは特定のメッセージを出"
"して実行を続けるようなブレークポイントでは望ましいものでしょう。他のコマンド"
"が何も画面出力をしなければ、そのブレークポイントに到達したというサインを見な"
"いことになります。"

#: ../../library/pdb.rst:305
msgid "s(tep)"
msgstr "s(tep)"

#: ../../library/pdb.rst:304
msgid ""
"Execute the current line, stop at the first possible occasion (either in a "
"function that is called or on the next line in the current function)."
msgstr ""
"現在の行を実行し、最初に実行可能なものがあらわれたときに (呼び出された関数の"
"中か、現在の関数の次の行で) 停止します。"

#: ../../library/pdb.rst:311
msgid "n(ext)"
msgstr "n(ext)"

#: ../../library/pdb.rst:308
msgid ""
"Continue execution until the next line in the current function is reached or "
"it returns.  (The difference between ``next`` and ``step`` is that ``step`` "
"stops inside a called function, while ``next`` executes called functions at "
"(nearly) full speed, only stopping at the next line in the current function.)"
msgstr ""
"現在の関数の次の行に達するか、あるいは関数が返るまで実行を継続します。 "
"( ``next`` と ``step`` の差は ``step`` が呼び出された関数の内部で停止するのに"
"対し、 ``next`` は呼び出された関数を ( ほぼ ) 全速力で実行し、現在の関数内の"
"次の行で停止するだけです。)"

#: ../../library/pdb.rst:317
msgid "unt(il)"
msgstr "unt(il)"

#: ../../library/pdb.rst:314
msgid ""
"Continue execution until the line with the line number greater than the "
"current one is reached or when returning from current frame."
msgstr ""
"行番号が現在行より大きくなるまで、もしくは、現在のフレームから戻るまで、実行"
"を続けます。"

#: ../../library/pdb.rst:320
msgid "r(eturn)"
msgstr "r(eturn)"

#: ../../library/pdb.rst:320
msgid "Continue execution until the current function returns."
msgstr "現在の関数が返るまで実行を継続します。"

#: ../../library/pdb.rst:323
msgid "c(ont(inue))"
msgstr "c(ont(inue))"

#: ../../library/pdb.rst:323
msgid "Continue execution, only stop when a breakpoint is encountered."
msgstr "ブレークポイントに出会うまで、実行を継続します。"

#: ../../library/pdb.rst:332
msgid "j(ump) *lineno*"
msgstr "j(ump) *lineno*"

#: ../../library/pdb.rst:326
msgid ""
"Set the next line that will be executed.  Only available in the bottom-most "
"frame.  This lets you jump back and execute code again, or jump forward to "
"skip code that you don't want to run."
msgstr ""
"次に実行する行を指定します。最も底のフレーム中でのみ実行可能です。前に戻って"
"実行したり、不要な部分をスキップして先の処理を実行する場合に使用します。"

#: ../../library/pdb.rst:330
msgid ""
"It should be noted that not all jumps are allowed --- for instance it is not "
"possible to jump into the middle of a :keyword:`for` loop or out of a :"
"keyword:`finally` clause."
msgstr ""
"ジャンプには制限があり、例えば :keyword:`for` ループの中には飛び込めません"
"し、 :keyword:`finally` 節の外にも飛ぶ事ができません。"

#: ../../library/pdb.rst:338
msgid "l(ist) [*first*\\ [, *last*]]"
msgstr "l(ist) [*first*\\ [, *last*]]"

#: ../../library/pdb.rst:335
msgid ""
"List source code for the current file.  Without arguments, list 11 lines "
"around the current line or continue the previous listing.  With one "
"argument, list 11 lines around at that line.  With two arguments, list the "
"given range; if the second argument is less than the first, it is "
"interpreted as a count."
msgstr ""
"現在のファイルのソースコードをリスト表示します。引数なしの場合は、現在の行の"
"周囲を11行リストするか、または前のリストの続きを表示します。引数が一つある場"
"合は、その行の周囲を11行表示します。引数が二つの場合は、与えられた範囲をリス"
"ト表示します。第二引数が第一引数より小さいときは、カウントと解釈されます。"

#: ../../library/pdb.rst:341
msgid "a(rgs)"
msgstr "a(rgs)"

#: ../../library/pdb.rst:341
msgid "Print the argument list of the current function."
msgstr "現在の関数の引数リストをプリントします。"

#: ../../library/pdb.rst:349
msgid "p *expression*"
msgstr "p *expression*"

#: ../../library/pdb.rst:344
msgid "Evaluate the *expression* in the current context and print its value."
msgstr ""
"現在のコンテキストにおいて *expression* を評価し、その値をプリントします。"

#: ../../library/pdb.rst:348
msgid ""
"``print`` can also be used, but is not a debugger command --- this executes "
"the Python :keyword:`print` statement."
msgstr ""
"``print`` も使うことができますが、デバッガコマンドではありません --- これは "
"Python の :keyword:`print` 文を実行します。"

#: ../../library/pdb.rst:353
msgid "pp *expression*"
msgstr "pp *expression*"

#: ../../library/pdb.rst:352
msgid ""
"Like the ``p`` command, except the value of the expression is pretty-printed "
"using the :mod:`pprint` module."
msgstr ""
":mod:`pprint` モジュールを使って例外の値が整形されることを除いて ``p`` コマン"
"ドと同様です。"

#: ../../library/pdb.rst:374
msgid "alias [*name* [command]]"
msgstr "alias [*name* [command]]"

#: ../../library/pdb.rst:356
msgid ""
"Creates an alias called *name* that executes *command*.  The command must "
"*not* be enclosed in quotes.  Replaceable parameters can be indicated by "
"``%1``, ``%2``, and so on, while ``%*`` is replaced by all the parameters.  "
"If no command is given, the current alias for *name* is shown. If no "
"arguments are given, all aliases are listed."
msgstr ""
"*name* という名前の *command* を実行するエイリアスを作成します。コマンドは引"
"用符で囲まれていては *いけません* 。入れ替え可能なパラメータは ``%1`` 、 "
"``%2`` などで指し示され、さらに ``%*`` は全パラメータに置き換えられます。コマ"
"ンドが与えられなければ、 *name* に対する現在のエイリアスを表示します。引数が"
"与えられなければ、すべてのエイリアスがリストされます。"

#: ../../library/pdb.rst:362
msgid ""
"Aliases may be nested and can contain anything that can be legally typed at "
"the pdb prompt.  Note that internal pdb commands *can* be overridden by "
"aliases. Such a command is then hidden until the alias is removed.  Aliasing "
"is recursively applied to the first word of the command line; all other "
"words in the line are left alone."
msgstr ""
"エイリアスは入れ子になってもよく、 pdb プロンプトで合法的にタイプできるどんな"
"ものでも含めることができます。内部 pdb コマンドをエイリアスによって上書きする"
"ことが *できます* 。そのとき、このようなコマンドはエイリアスが取り除かれるま"
"で隠されます。エイリアス化はコマンド行の最初の語へ再帰的に適用されます。行の"
"他のすべての語はそのままです。"

#: ../../library/pdb.rst:368
msgid ""
"As an example, here are two useful aliases (especially when placed in the :"
"file:`.pdbrc` file)::"
msgstr ""
"例として、二つの便利なエイリアスがあります (特に :file:`.pdbrc` ファイルに置"
"かれたときに)::"

#: ../../library/pdb.rst:377
msgid "unalias *name*"
msgstr "unalias *name*"

#: ../../library/pdb.rst:377
msgid "Deletes the specified alias."
msgstr "指定したエイリアスを削除します。"

#: ../../library/pdb.rst:386
msgid "[!]\\ *statement*"
msgstr "[!]\\ *statement*"

#: ../../library/pdb.rst:380
msgid ""
"Execute the (one-line) *statement* in the context of the current stack "
"frame. The exclamation point can be omitted unless the first word of the "
"statement resembles a debugger command. To set a global variable, you can "
"prefix the assignment command with a ``global`` command on the same line, e."
"g.::"
msgstr ""
"現在のスタックフレームのコンテキストにおいて(一行の) *statement* を実行しま"
"す。文の最初の語がデバッガコマンドと共通でない場合は、感嘆符を省略することが"
"できます。グローバル変数を設定するために、同じ行に ``global`` コマンドととも"
"に代入コマンドの前に付けることができます。::"

#: ../../library/pdb.rst:393
msgid "run [*args* ...]"
msgstr "run [*args* ...]"

#: ../../library/pdb.rst:389
msgid ""
"Restart the debugged Python program. If an argument is supplied, it is split "
"with \"shlex\" and the result is used as the new sys.argv. History, "
"breakpoints, actions and debugger options are preserved. \"restart\" is an "
"alias for \"run\"."
msgstr ""
"デバッグ中のプログラムを再実行します。もし引数が与えられると、 \"shlex\" で分"
"割され、結果が新しい sys.argv として使われます。ヒストリー、ブレークポイン"
"ト、アクション、そして、デバッガオプションは引き継がれます。 \"restart\" は "
"\"run\" の別名です。"

#: ../../library/pdb.rst:397
msgid "q(uit)"
msgstr "q(uit)"

#: ../../library/pdb.rst:396
msgid "Quit from the debugger. The program being executed is aborted."
msgstr "デバッガを終了します。実行しているプログラムは中断されます。"

#: ../../library/pdb.rst:400
msgid "Footnotes"
msgstr "脚注"

#: ../../library/pdb.rst:401
msgid ""
"Whether a frame is considered to originate in a certain module is determined "
"by the ``__name__`` in the frame globals."
msgstr ""
"フレームが属するモジュールは、そのフレームのグローバルの ``__name__`` によっ"
"て決定されます。"
