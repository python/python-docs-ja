# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/site.rst:2
msgid ":mod:`site` --- Site-specific configuration hook"
msgstr ":mod:`site` --- サイト固有の設定フック"

#: ../../library/site.rst:7
msgid "**Source code:** :source:`Lib/site.py`"
msgstr "**ソースコード:** :source:`Lib/site.py`"

#: ../../library/site.rst:13
msgid ""
"**This module is automatically imported during initialization.** The "
"automatic import can be suppressed using the interpreter's :option:`-S` "
"option."
msgstr ""
"**このモジュールは初期化中に自動的にインポートされます。** 自動インポートはイ"
"ンタプリタの :option:`-S` オプションで禁止できます。"

#: ../../library/site.rst:18
msgid ""
"Importing this module will append site-specific paths to the module search "
"path and add a few builtins."
msgstr ""
"このモジュールをインポートすることで、サイト固有のパスをモジュール検索パスへ"
"付け加え、また、いくつかのビルトインを追加します。"

#: ../../library/site.rst:25
msgid ""
"It starts by constructing up to four directories from a head and a tail "
"part. For the head part, it uses ``sys.prefix`` and ``sys.exec_prefix``; "
"empty heads are skipped.  For the tail part, it uses the empty string and "
"then :file:`lib/site-packages` (on Windows) or :file:`lib/python{X.Y}/site-"
"packages` and then :file:`lib/site-python` (on Unix and Macintosh).  For "
"each of the distinct head-tail combinations, it sees if it refers to an "
"existing directory, and if so, adds it to ``sys.path`` and also inspects the "
"newly added path for configuration files."
msgstr ""
"サイト固有のパスは、前部と後部から構築される最大で四つまでのディレクトリから"
"始めます。 前部には、 ``sys.prefix`` と ``sys.exec_prefix`` を使用します。空"
"の前部は省略されます。 後部には、まず空文字列を使い、次に :file:`lib/site-"
"packages` (Windows) または :file:`lib/python{X.Y}/site-packages`, そして :"
"file:`lib/site-python` (Unix と Macintosh)を使います。 前部-後部の組み合わせ"
"のそれぞれに対して、それが存在するディレクトリを参照しているかどうかを調べ、"
"もしそうならば ``sys.path`` へ追加します。そして、 パス設定ファイルを新しく追"
"加されたパスからも検索します。"

#: ../../library/site.rst:34
msgid ""
"A path configuration file is a file whose name has the form :file:`{name}."
"pth` and exists in one of the four directories mentioned above; its contents "
"are additional items (one per line) to be added to ``sys.path``.  Non-"
"existing items are never added to ``sys.path``, and no check is made that "
"the item refers to a directory rather than a file.  No item is added to "
"``sys.path`` more than once.  Blank lines and lines beginning with ``#`` are "
"skipped.  Lines starting with ``import`` (followed by space or tab) are "
"executed."
msgstr ""
"パス設定ファイルは :file:`{name}.pth` という形式の名前をもつファイルで、上の4"
"つのディレクトリのひとつにあります。その内容は ``sys.path`` に追加される追加"
"項目(一行に一つ)です。存在しない項目は ``sys.path`` へは決して追加されません"
"が、項目がファイルではなくディレクトリを参照しているかどうかはチェックされま"
"せん。項目が ``sys.path`` へ二回以上追加されることはありません。空行と ``#`` "
"で始まる行は読み飛ばされます。 ``import`` で始まる(そしてその後ろにスペースか"
"タブが続く)行は実行されます。"

#: ../../library/site.rst:42
msgid "A space or tab is now required after the import keyword."
msgstr "import キーワードの後ろにスペースかタブが必要になりました。"

#: ../../library/site.rst:49
msgid ""
"For example, suppose ``sys.prefix`` and ``sys.exec_prefix`` are set to :file:"
"`/usr/local`.  The Python X.Y library is then installed in :file:`/usr/local/"
"lib/python{X.Y}`.  Suppose this has a subdirectory :file:`/usr/local/lib/"
"python{X.Y}/site-packages` with three subsubdirectories, :file:`foo`, :file:"
"`bar` and :file:`spam`, and two path configuration files, :file:`foo.pth` "
"and :file:`bar.pth`.  Assume :file:`foo.pth` contains the following::"
msgstr ""
"例えば、 ``sys.prefix`` と ``sys.exec_prefix`` が :file:`/usr/local` に設定さ"
"れていると仮定します。そのときPython X.Y ライブラリは :file:`/usr/local/lib/"
"python{X.Y}` にインストールされています。ここにはサブディレクトリ :file:`/"
"usr/local/lib/python{X.Y}/site-packages` があり、その中に三つのサブディレクト"
"リ :file:`foo`, :file:`bar` および :file:`spam` と二つのパス設定ファイル :"
"file:`foo.pth` と :file:`bar.pth` をもつと仮定します。 :file:`foo.pth` には以"
"下のものが記載されていると想定してください::"

#: ../../library/site.rst:63
msgid "and :file:`bar.pth` contains::"
msgstr "また、 :file:`bar.pth` には::"

#: ../../library/site.rst:69
msgid ""
"Then the following version-specific directories are added to ``sys.path``, "
"in this order::"
msgstr ""
"が記載されているとします。そのとき、次のバージョンごとのディレクトリが ``sys."
"path`` へこの順番で追加されます::"

#: ../../library/site.rst:75
msgid ""
"Note that :file:`bletch` is omitted because it doesn't exist; the :file:"
"`bar` directory precedes the :file:`foo` directory because :file:`bar.pth` "
"comes alphabetically before :file:`foo.pth`; and :file:`spam` is omitted "
"because it is not mentioned in either path configuration file."
msgstr ""
":file:`bletch` は存在しないため省略されるということに注意してください。 :"
"file:`bar` ディレクトリは :file:`foo` ディレクトリの前に来ます。なぜなら、 :"
"file:`bar.pth` がアルファベット順で :file:`foo.pth` の前に来るからです。ま"
"た、 :file:`spam` はどちらのパス設定ファイルにも記載されていないため、省略さ"
"れます。"

#: ../../library/site.rst:82
msgid ""
"After these path manipulations, an attempt is made to import a module named :"
"mod:`sitecustomize`, which can perform arbitrary site-specific "
"customizations. It is typically created by a system administrator in the "
"site-packages directory.  If this import fails with an :exc:`ImportError` "
"exception, it is silently ignored.  If Python is started without output "
"streams available, as with :file:`pythonw.exe` on Windows (which is used by "
"default to start IDLE), attempted output from :mod:`sitecustomize` is "
"ignored. Any exception other than :exc:`ImportError` causes a silent and "
"perhaps mysterious failure of the process."
msgstr ""
"これらのパス操作の後に、 :mod:`sitecustomize` という名前のモジュールをイン"
"ポートしようします。そのモジュールは任意のサイト固有のカスタマイゼーションを"
"行うことができます。典型的にはこれはシステム管理者によって site-packages ディ"
"レクトリに作成されます。 :exc:`ImportError` 例外が発生してこのインポートに失"
"敗した場合は、何も表示せずに無視されます。Windows での :file:`pythonw.exe` "
"(IDLE を開始するとデフォルトで使われます)のような、Python が出力ストリームが"
"利用出来ない状態で開始された場合, 　:mod:`sitecustomize` から試みられた出力は"
"無視されます。 :exc:`ImportError` 以外のあらゆる例外は黙殺され、そしてそれは"
"おそらく不可思議な失敗にみえるでしょう。"

#: ../../library/site.rst:94
msgid ""
"After this, an attempt is made to import a module named :mod:"
"`usercustomize`, which can perform arbitrary user-specific customizations, "
"if :data:`ENABLE_USER_SITE` is true.  This file is intended to be created in "
"the user site-packages directory (see below), which is part of ``sys.path`` "
"unless disabled by :option:`-s`.  An :exc:`ImportError` will be silently "
"ignored."
msgstr ""
"このあとで、 :data:`ENABLE_USER_SITE` が真であれば、任意のユーザ固有のカスタ"
"マイズを行うことが出来る :mod:`usercustomize` と名付けられたモジュールのイン"
"ポートが試みられます。このファイルはユーザの site-packages ディレクトリ(下記"
"参照)に作られることを意図していて、その場所はオプション :option:`-s` によって"
"無効にされない限りは ``sys.path`` に含まれます。:exc:`ImportError` は黙って無"
"視されます。"

#: ../../library/site.rst:100
msgid ""
"Note that for some non-Unix systems, ``sys.prefix`` and ``sys.exec_prefix`` "
"are empty, and the path manipulations are skipped; however the import of :"
"mod:`sitecustomize` and :mod:`usercustomize` is still attempted."
msgstr ""
"いくつかの非Unixシステムでは、 ``sys.prefix`` と ``sys.exec_prefix`` は空で、"
"パス操作は省略されます。しかし、 :mod:`sitecustomize` と :mod:"
"`usercustomize` のインポートはそのときでも試みられます。"

#: ../../library/site.rst:107
msgid "A list of prefixes for site-packages directories."
msgstr "siteパッケージディレクトリのprefixのリスト。"

#: ../../library/site.rst:114
msgid ""
"Flag showing the status of the user site-packages directory.  ``True`` means "
"that it is enabled and was added to ``sys.path``.  ``False`` means that it "
"was disabled by user request (with :option:`-s` or :envvar:"
"`PYTHONNOUSERSITE`).  ``None`` means it was disabled for security reasons "
"(mismatch between user or group id and effective id) or by an administrator."
msgstr ""
"ユーザーサイトディレクトリのステータスを示すフラグ。 ``True`` の場合、ユー"
"ザーサイトディレクトリが有効で ``sys.path`` に追加されていることを意味してい"
"ます。 ``False`` の場合、ユーザによるリクエスト(オプション :option:`-s` か :"
"envvar:`PYTHONNOUSERSITE`)によって、 ``None`` の場合セキュリティ上の理由(ユー"
"ザまたはグループIDと実効IDの間のミスマッチ)あるいは管理者によって、ユーザーサ"
"イトディレクトリが無効になっていることを示しています。ユーザーサイトディレク"
"トリのステータスを示すフラグ。 ``True`` の場合、ユーザーサイトディレクトリが"
"有効で ``sys.path`` に追加されていることを意味しています。 ``False`` の場合、"
"ユーザによるリクエスト(オプション :option:`-s` か :envvar:`PYTHONNOUSERSITE`)"
"によって、 ``None`` の場合セキュリティ上の理由(ユーザまたはグループIDと実効ID"
"の間のミスマッチ)あるいは管理者によって、ユーザーサイトディレクトリが無効に"
"なっていることを示しています。"

#: ../../library/site.rst:126
msgid ""
"Path to the user site-packages for the running Python.  Can be ``None`` if :"
"func:`getusersitepackages` hasn't been called yet.  Default value is :file:"
"`~/.local/lib/python{X.Y}/site-packages` for UNIX and non-framework Mac OS X "
"builds, :file:`~/Library/Python/{X.Y}/lib/python/site-packages` for Mac "
"framework builds, and :file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-"
"packages` on Windows.  This directory is a site directory, which means that :"
"file:`.pth` files in it will be processed."
msgstr ""
"Python 実行時のユーザの site-packages へのパスです。 :func:"
"`getusersitepackages` がまだ呼び出されていなければ ``None`` かもしれません。"
"デフォルト値は UNIX と frameworkなしの Mac OS X ビルドでは :file:`~/.local/"
"lib/python{X.Y}/site-packages` 、Mac framework ビルドでは :file:`~/Library/"
"Python/{X.Y}/lib/python/site-packages`、Windows では :file:`{%APPDATA%}\\"
"\\Python\\\\Python{XY}\\\\site-packages` です。このディレクトリは site ディレ"
"クトリなので、 ここにいる :file:`.pth` ファイルが処理されます。"

#: ../../library/site.rst:139
msgid ""
"Path to the base directory for the user site-packages.  Can be ``None`` if :"
"func:`getuserbase` hasn't been called yet.  Default value is :file:`~/."
"local` for UNIX and Mac OS X non-framework builds, :file:`~/Library/Python/"
"{X.Y}` for Mac framework builds, and :file:`{%APPDATA%}\\\\Python` for "
"Windows.  This value is used by Distutils to compute the installation "
"directories for scripts, data files, Python modules, etc. for the :ref:`user "
"installation scheme <inst-alt-install-user>`.  See also :envvar:"
"`PYTHONUSERBASE`."
msgstr ""
"ユーザの site-packages のベースとなるディレクトリへのパスです。 :func:"
"`getuserbase` がまだ呼び出されていなければ ``None`` かもしれません。デフォル"
"ト値は  UNIX と frameworkなしの Mac OS X ビルドでは :file:`~/.local` 、Mac "
"framework ビルドでは :file:`~/Library/Python/{X.Y}` 、Windows では :file:"
"`{%APPDATA%}\\\\Python` です。この値は Distutils が、スクリプト、データファイ"
"ル、Python モジュールなどのインストール先のディレクトリを :ref:`user "
"installation scheme <inst-alt-install-user>` で計算するのに使われます。 :"
"envvar:`PYTHONUSERBASE` も参照してください。"

#: ../../library/site.rst:153
msgid ""
"Add a directory to sys.path and process its :file:`.pth` files.  Typically "
"used in :mod:`sitecustomize` or :mod:`usercustomize` (see above)."
msgstr ""
"sys.path にディレクトリを追加し、その :file:`.pth` ファイル群を処理します。典"
"型的には :mod:`sitecustomize` か :mod:`usercustomize` 内で使われます(上述)。"

#: ../../library/site.rst:159
msgid ""
"Return a list containing all global site-packages directories (and possibly "
"site-python)."
msgstr ""
"全てのグローバルな site-packages ディレクトリ(と、おそらく site-python も)の"
"リストを返します。"

#: ../../library/site.rst:167
msgid ""
"Return the path of the user base directory, :data:`USER_BASE`.  If it is not "
"initialized yet, this function will also set it, respecting :envvar:"
"`PYTHONUSERBASE`."
msgstr ""
"ユーザのベースディレクトリへのパス :data:`USER_BASE` を返します。未初期化であ"
"ればこの関数は :envvar:`PYTHONUSERBASE` を参考にして、設定もします。"

#: ../../library/site.rst:176
msgid ""
"Return the path of the user-specific site-packages directory, :data:"
"`USER_SITE`.  If it is not initialized yet, this function will also set it, "
"respecting :envvar:`PYTHONNOUSERSITE` and :data:`USER_BASE`."
msgstr ""
"ユーザのベースディレクトリへのパス :data:`USER_SITE` を返します。未初期化であ"
"ればこの関数は :envvar:`PYTHONNOUSERSITE` と :data:`USER_BASE` を参考にして、"
"設定もします。"

#: ../../library/site.rst:183
msgid ""
"The :mod:`site` module also provides a way to get the user directories from "
"the command line:"
msgstr ""
":mod:`site` モジュールはユーザディレクトリをコマンドラインから得る手段も提供"
"しています:"

#: ../../library/site.rst:193
msgid ""
"If it is called without arguments, it will print the contents of :data:`sys."
"path` on the standard output, followed by the value of :data:`USER_BASE` and "
"whether the directory exists, then the same thing for :data:`USER_SITE`, and "
"finally the value of :data:`ENABLE_USER_SITE`."
msgstr ""
"引数なしで呼び出された場合、:data:`sys.path` の中身を表示し、続けて :data:"
"`USER_BASE` とそのディレクトリが存在するかどうか、 :data:`USER_SITE` とその"
"ディレクトリが存在するかどうか、最後に :data:`ENABLE_USER_SITE` の値を、標準"
"出力に出力します。"

#: ../../library/site.rst:200
msgid "Print the path to the user base directory."
msgstr "ユーザのベースディレクトリを表示します。"

#: ../../library/site.rst:204
msgid "Print the path to the user site-packages directory."
msgstr "ユーザの site-packages ディレクトリを表示します。"

#: ../../library/site.rst:206
msgid ""
"If both options are given, user base and user site will be printed (always "
"in this order), separated by :data:`os.pathsep`."
msgstr ""
"両方のオプションが指定された場合、ユーザのベースとユーザの site が(常にこの順"
"序で) :data:`os.pathsep` 区切りで表示されます。"

#: ../../library/site.rst:209
msgid ""
"If any option is given, the script will exit with one of these values: ``0`` "
"if the user site-packages directory is enabled, ``1`` if it was disabled by "
"the user, ``2`` if it is disabled for security reasons or by an "
"administrator, and a value greater than 2 if there is an error."
msgstr ""
"いずれかのオプションが与えられた場合に、このスクリプトは次のいずれかの終了"
"コードで終了します: ユーザの site-packages が有効ならば ``0`` 、ユーザにより"
"無効にされていれば ``1`` 、セキュリティ的な理由あるいは管理者によって無効にさ"
"れている場合 ``2`` 、そして何かエラーがあった場合は 2 より大きな値。"

#: ../../library/site.rst:216
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` -- Per user site-packages directory"
