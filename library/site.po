# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Arihiro TAKASE, 2023
# Nozomu Kaneko <nozom.kaneko@gmail.com>, 2023
# tomo, 2023
# Masato HASHIMOTO <cabezon.hashimoto@gmail.com>, 2023
# TENMYO Masakazu, 2023
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:13+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/site.rst:2
msgid ":mod:`!site` --- Site-specific configuration hook"
msgstr ":mod:`!site` --- サイト固有の設定フック"

#: ../../library/site.rst:7
msgid "**Source code:** :source:`Lib/site.py`"
msgstr "**ソースコード:** :source:`Lib/site.py`"

#: ../../library/site.rst:13
msgid ""
"**This module is automatically imported during initialization.** The "
"automatic import can be suppressed using the interpreter's :option:`-S` "
"option."
msgstr ""
"**このモジュールは初期化中に自動的にインポートされます。** 自動インポートはイ"
"ンタプリタの :option:`-S` オプションで禁止できます。"

#: ../../library/site.rst:18
msgid ""
"Importing this module normally appends site-specific paths to the module "
"search path and adds :ref:`callables <site-consts>`, including :func:`help` "
"to the built-in namespace. However, Python startup option :option:`-S` "
"blocks this and this module can be safely imported with no automatic "
"modifications to the module search path or additions to the builtins.  To "
"explicitly trigger the usual site-specific additions, call the :func:`main` "
"function."
msgstr ""

#: ../../library/site.rst:25
msgid ""
"Importing the module used to trigger paths manipulation even when using :"
"option:`-S`."
msgstr ""
"以前は :option:`-S` を使っているときでも、モジュールをインポートするとパス変"
"更が起動されていました。"

#: ../../library/site.rst:32
msgid ""
"It starts by constructing up to four directories from a head and a tail "
"part. For the head part, it uses ``sys.prefix`` and ``sys.exec_prefix``; "
"empty heads are skipped.  For the tail part, it uses the empty string and "
"then :file:`lib/site-packages` (on Windows) or :file:`lib/python{X.Y[t]}/"
"site-packages` (on Unix and macOS). (The optional suffix \"t\" indicates "
"the :term:`free threading` build, and is appended if ``\"t\"`` is present in "
"the :attr:`sys.abiflags` constant.) For each of the distinct head-tail "
"combinations, it sees if it refers to an existing directory, and if so, adds "
"it to ``sys.path`` and also inspects the newly added path for configuration "
"files."
msgstr ""

#: ../../library/site.rst:44
msgid "Support for the \"site-python\" directory has been removed."
msgstr "\"site-python\" ディレクトリのサポートは削除されました。"

#: ../../library/site.rst:47
msgid ""
"On Unix, :term:`Free threading <free threading>` Python installations are "
"identified by the \"t\" suffix in the version-specific directory name, such "
"as :file:`lib/python3.13t/`."
msgstr ""

#: ../../library/site.rst:52
msgid ""
"If a file named \"pyvenv.cfg\" exists one directory above sys.executable, "
"sys.prefix and sys.exec_prefix are set to that directory and it is also "
"checked for site-packages (sys.base_prefix and sys.base_exec_prefix will "
"always be the \"real\" prefixes of the Python installation). If \"pyvenv."
"cfg\" (a bootstrap configuration file) contains the key \"include-system-"
"site-packages\" set to anything other than \"true\" (case-insensitive), the "
"system-level prefixes will not be searched for site-packages; otherwise they "
"will."
msgstr ""
"\"pyvenv.cfg\" という名前のファイルが上で挙げたディレクトリの 1 つに存在して"
"いた場合、 sys.executable, sys.prefix, sys.exec_prefix にはそのディレクトリが"
"設定され、 site-packages もチェックします (sys.base_prefix と sys."
"base_exec_prefix は常にインストールされているPythonの \"実際の\" プレフィック"
"スです)。\n"
"(ブートストラップの設定ファイルである) \"pyvenv.cfg\" で、キー \"include-"
"system-site-packages\" に \"true\" (大文字小文字は区別しない) 以外が設定され"
"ている場合は、 site-packages を探しにシステムレベルのプレフィックスも見に行き"
"ません; そうでない場合は見に行きます。"

#: ../../library/site.rst:65
msgid ""
"A path configuration file is a file whose name has the form :file:`{name}."
"pth` and exists in one of the four directories mentioned above; its contents "
"are additional items (one per line) to be added to ``sys.path``.  Non-"
"existing items are never added to ``sys.path``, and no check is made that "
"the item refers to a directory rather than a file.  No item is added to "
"``sys.path`` more than once.  Blank lines and lines beginning with ``#`` are "
"skipped.  Lines starting with ``import`` (followed by space or tab) are "
"executed."
msgstr ""
"パス設定ファイルは :file:`{name}.pth` という形式の名前をもつファイルで、上の4"
"つのディレクトリのひとつにあります。その内容は ``sys.path`` に追加される追加"
"項目(一行に一つ)です。存在しない項目は ``sys.path`` へは決して追加されません"
"が、項目がファイルではなくディレクトリを参照しているかどうかはチェックされま"
"せん。項目が ``sys.path`` へ二回以上追加されることはありません。空行と ``#`` "
"で始まる行は読み飛ばされます。 ``import`` で始まる(そしてその後ろにスペースか"
"タブが続く)行は実行されます。"

#: ../../library/site.rst:75
msgid ""
"An executable line in a :file:`.pth` file is run at every Python startup, "
"regardless of whether a particular module is actually going to be used. Its "
"impact should thus be kept to a minimum. The primary intended purpose of "
"executable lines is to make the corresponding module(s) importable (load 3rd-"
"party import hooks, adjust :envvar:`PATH` etc). Any other initialization is "
"supposed to be done upon a module's actual import, if and when it happens. "
"Limiting a code chunk to a single line is a deliberate measure to discourage "
"putting anything more complex here."
msgstr ""
":file:`.pth` ファイル内の実行可能な行は、特定のモジュールが実際に使用されるか"
"どうかに関係なく、Pythonの起動時に毎回実行されます。したがって、その影響は最"
"小限に抑えられるべきです。実行可能な行の主な目的は、対応するモジュールをイン"
"ポート可能にすることです(サードパーティ製インポートフックのロード、 :envvar:"
"`PATH` の調整など)。その他の初期化は、モジュールが実際にインポートされたとき"
"に行われます。コードのチャンクを1行に制限することは、より複雑なものをここに入"
"れないようにするための意図的な手段です。"

#: ../../library/site.rst:86
msgid ""
"The :file:`.pth` files are now decoded by UTF-8 at first and then by the :"
"term:`locale encoding` if it fails."
msgstr ""
":file:`.pth` ファイルは、最初に UTF-8 で、失敗した場合は :term:`locale "
"encoding` でデコードされるようになります。"

#: ../../library/site.rst:94
msgid ""
"For example, suppose ``sys.prefix`` and ``sys.exec_prefix`` are set to :file:"
"`/usr/local`.  The Python X.Y library is then installed in :file:`/usr/local/"
"lib/python{X.Y}`.  Suppose this has a subdirectory :file:`/usr/local/lib/"
"python{X.Y}/site-packages` with three subsubdirectories, :file:`foo`, :file:"
"`bar` and :file:`spam`, and two path configuration files, :file:`foo.pth` "
"and :file:`bar.pth`.  Assume :file:`foo.pth` contains the following::"
msgstr ""
"例えば、 ``sys.prefix`` と ``sys.exec_prefix`` が :file:`/usr/local` に設定さ"
"れていると仮定します。そのときPython X.Y ライブラリは :file:`/usr/local/lib/"
"python{X.Y}` にインストールされています。ここにはサブディレクトリ :file:`/"
"usr/local/lib/python{X.Y}/site-packages` があり、その中に三つのサブディレクト"
"リ :file:`foo`, :file:`bar` および :file:`spam` と二つのパス設定ファイル :"
"file:`foo.pth` と :file:`bar.pth` をもつと仮定します。 :file:`foo.pth` には以"
"下のものが記載されていると想定してください::"

#: ../../library/site.rst:102
msgid ""
"# foo package configuration\n"
"\n"
"foo\n"
"bar\n"
"bletch"
msgstr ""

#: ../../library/site.rst:108
msgid "and :file:`bar.pth` contains::"
msgstr "また、 :file:`bar.pth` には::"

#: ../../library/site.rst:110
msgid ""
"# bar package configuration\n"
"\n"
"bar"
msgstr ""

#: ../../library/site.rst:114
msgid ""
"Then the following version-specific directories are added to ``sys.path``, "
"in this order::"
msgstr ""
"が記載されているとします。そのとき、次のバージョンごとのディレクトリが ``sys."
"path`` へこの順番で追加されます::"

#: ../../library/site.rst:117
msgid ""
"/usr/local/lib/pythonX.Y/site-packages/bar\n"
"/usr/local/lib/pythonX.Y/site-packages/foo"
msgstr ""

#: ../../library/site.rst:120
msgid ""
"Note that :file:`bletch` is omitted because it doesn't exist; the :file:"
"`bar` directory precedes the :file:`foo` directory because :file:`bar.pth` "
"comes alphabetically before :file:`foo.pth`; and :file:`spam` is omitted "
"because it is not mentioned in either path configuration file."
msgstr ""
":file:`bletch` は存在しないため省略されるということに注意してください。 :"
"file:`bar` ディレクトリは :file:`foo` ディレクトリの前に来ます。なぜなら、 :"
"file:`bar.pth` がアルファベット順で :file:`foo.pth` の前に来るからです。ま"
"た、 :file:`spam` はどちらのパス設定ファイルにも記載されていないため、省略さ"
"れます。"

#: ../../library/site.rst:126
msgid ":mod:`sitecustomize`"
msgstr ":mod:`sitecustomize`"

#: ../../library/site.rst:130
msgid ""
"After these path manipulations, an attempt is made to import a module named :"
"mod:`sitecustomize`, which can perform arbitrary site-specific "
"customizations. It is typically created by a system administrator in the "
"site-packages directory.  If this import fails with an :exc:`ImportError` or "
"its subclass exception, and the exception's :attr:`~ImportError.name` "
"attribute equals to ``'sitecustomize'``, it is silently ignored.  If Python "
"is started without output streams available, as with :file:`pythonw.exe` on "
"Windows (which is used by default to start IDLE), attempted output from :mod:"
"`sitecustomize` is ignored.  Any other exception causes a silent and perhaps "
"mysterious failure of the process."
msgstr ""
"これらのパス操作の後に、 :mod:`sitecustomize` という名前のモジュールをイン"
"ポートしようします。そのモジュールは任意のサイト固有のカスタマイゼーションを"
"行うことができます。典型的にはこれはシステム管理者によって site-packages ディ"
"レクトリに作成されます。 このインポートが :exc:`ImportError` またはそのサブク"
"ラス例外で失敗し、例外の :attr:`~ImportError.name` 属性が "
"``'sitecustomize'`` に等しい場合は、何も表示せずに無視されます。Pythonが出力"
"ストリームを利用できない状態で起動された場合、Windowsでは :file:`pythonw."
"exe` (IDLEを開始するとデフォルトで使われます) のような、 :mod:"
"`sitecustomize` から試みられた出力は無視されます。その他の例外は黙殺され、そ"
"してそれはおそらく不可思議な失敗にみえるでしょう。"

#: ../../library/site.rst:142
msgid ":mod:`usercustomize`"
msgstr ":mod:`usercustomize`"

#: ../../library/site.rst:146
msgid ""
"After this, an attempt is made to import a module named :mod:"
"`usercustomize`, which can perform arbitrary user-specific customizations, "
"if :data:`~site.ENABLE_USER_SITE` is true.  This file is intended to be "
"created in the user site-packages directory (see below), which is part of "
"``sys.path`` unless disabled by :option:`-s`.  If this import fails with an :"
"exc:`ImportError` or its subclass exception, and the exception's :attr:"
"`~ImportError.name` attribute equals to ``'usercustomize'``, it is silently "
"ignored."
msgstr ""
"このあとで、 :data:`~site.ENABLE_USER_SITE` が真であれば、任意のユーザ固有の"
"カスタマイズを行うことが出来る :mod:`usercustomize` と名付けられたモジュール"
"のインポートが試みられます。このファイルはユーザの site-packages ディレクトリ"
"(下記参照)に作られることを意図していて、その場所はオプション :option:`-s` に"
"よって無効にされない限りは ``sys.path`` に含まれます。このインポートが :exc:"
"`ImportError` またはそのサブクラス例外で失敗し、例外の :attr:`~ImportError."
"name` 属性が ``'usercustomize'`` と等しい場合、それは黙って無視されます。"

#: ../../library/site.rst:154
msgid ""
"Note that for some non-Unix systems, ``sys.prefix`` and ``sys.exec_prefix`` "
"are empty, and the path manipulations are skipped; however the import of :"
"mod:`sitecustomize` and :mod:`usercustomize` is still attempted."
msgstr ""
"いくつかの非Unixシステムでは、 ``sys.prefix`` と ``sys.exec_prefix`` は空で、"
"パス操作は省略されます。しかし、 :mod:`sitecustomize` と :mod:"
"`usercustomize` のインポートはそのときでも試みられます。"

#: ../../library/site.rst:163
msgid "Readline configuration"
msgstr "readline の設定"

#: ../../library/site.rst:165
msgid ""
"On systems that support :mod:`readline`, this module will also import and "
"configure the :mod:`rlcompleter` module, if Python is started in :ref:"
"`interactive mode <tut-interactive>` and without the :option:`-S` option. "
"The default behavior is enable tab-completion and to use :file:`~/."
"python_history` as the history save file.  To disable it, delete (or "
"override) the :data:`sys.__interactivehook__` attribute in your :mod:"
"`sitecustomize` or :mod:`usercustomize` module or your :envvar:"
"`PYTHONSTARTUP` file."
msgstr ""
":mod:`readline` をサポートするシステムではこのモジュールは、Python を :ref:`"
"対話モード <tut-interactive>` で :option:`-S` オプションなしで開始した場合"
"に :mod:`rlcompleter` モジュールをインポートして設定します。デフォルトの振る"
"舞いでは、タブ補完を有効にし、履歴保存ファイルに :file:`~/.python_history` を"
"使います。これを無効にするには、あなたの :mod:`sitecustomize` または :mod:"
"`usercustomize` あるいは :envvar:`PYTHONSTARTUP` ファイル内で :data:`sys."
"__interactivehook__` 属性を削除 (または上書き) してください。 (---訳注: site "
"モジュールは :data:`~sys.__interactivehook__` に readline 設定関数を設定後"
"に :mod:`sitecustomize` 等のユーザ設定を実行します。 :data:`~sys."
"__interactivehook__` のチェックが行われるのは site モジュール実行の後です。 "
"---)"

#: ../../library/site.rst:174
msgid "Activation of rlcompleter and history was made automatic."
msgstr ""
"rlcompleter とhistory のアクティベーションが自動で行われるようになりました。"

#: ../../library/site.rst:179
msgid "Module contents"
msgstr "モジュールの内容"

#: ../../library/site.rst:183
msgid "A list of prefixes for site-packages directories."
msgstr "siteパッケージディレクトリのprefixのリスト。"

#: ../../library/site.rst:188
msgid ""
"Flag showing the status of the user site-packages directory.  ``True`` means "
"that it is enabled and was added to ``sys.path``.  ``False`` means that it "
"was disabled by user request (with :option:`-s` or :envvar:"
"`PYTHONNOUSERSITE`).  ``None`` means it was disabled for security reasons "
"(mismatch between user or group id and effective id) or by an administrator."
msgstr ""
"ユーザサイトディレクトリのステータスを示すフラグ。 ``True`` の場合、ユーザサ"
"イトディレクトリが有効で ``sys.path`` に追加されていることを意味しています。 "
"``False`` の場合、ユーザによるリクエスト(オプション :option:`-s` か :envvar:"
"`PYTHONNOUSERSITE`)によって、 ``None`` の場合セキュリティ上の理由(ユーザまた"
"はグループIDと実効IDの間のミスマッチ)あるいは管理者によって、ユーザサイトディ"
"レクトリが無効になっていることを示しています。"

#: ../../library/site.rst:198
msgid ""
"Path to the user site-packages for the running Python.  Can be ``None`` if :"
"func:`getusersitepackages` hasn't been called yet.  Default value is :file:"
"`~/.local/lib/python{X.Y}[t]/site-packages` for UNIX and non-framework macOS "
"builds, :file:`~/Library/Python/{X.Y}/lib/python/site-packages` for macOS "
"framework builds, and :file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-"
"packages` on Windows.  The optional \"t\" indicates the free-threaded "
"build.  This directory is a site directory, which means that :file:`.pth` "
"files in it will be processed."
msgstr ""

#: ../../library/site.rst:210
msgid ""
"Path to the base directory for the user site-packages.  Can be ``None`` if :"
"func:`getuserbase` hasn't been called yet.  Default value is :file:`~/."
"local` for UNIX and macOS non-framework builds, :file:`~/Library/Python/{X.Y}"
"` for macOS framework builds, and :file:`{%APPDATA%}\\\\Python` for "
"Windows.  This value is used to compute the installation directories for "
"scripts, data files, Python modules, etc. for the :ref:`user installation "
"scheme <sysconfig-user-scheme>`. See also :envvar:`PYTHONUSERBASE`."
msgstr ""
"ユーザの site-packages のベースとなるディレクトリへのパスです。 :func:"
"`getuserbase` がまだ呼び出されていなければ ``None`` かもしれません。デフォル"
"ト値は  UNIX と frameworkなしの macOS ビルドでは :file:`~/.local` 、macOS "
"framework ビルドでは :file:`~/Library/Python/{X.Y}` 、Windows では :file:"
"`{%APPDATA%}\\\\Python` です。この値は、スクリプト、データファイル、Python モ"
"ジュールなどのインストール先のディレクトリを :ref:`ユーザーインストールスキー"
"ム <sysconfig-user-scheme>` で計算するのに使われます。 :envvar:"
"`PYTHONUSERBASE` も参照してください。"

#: ../../library/site.rst:222
msgid ""
"Adds all the standard site-specific directories to the module search path.  "
"This function is called automatically when this module is imported, unless "
"the Python interpreter was started with the :option:`-S` flag."
msgstr ""
"モジュール検索パスに標準のサイト固有ディレクトリを追加します。この関数は、"
"Python インタプリタが :option:`-S` で開始されていない限り、このモジュールイン"
"ポート時に自動的に呼び出されます。"

#: ../../library/site.rst:226
msgid "This function used to be called unconditionally."
msgstr "この関数は以前は無条件に呼び出されていました。"

#: ../../library/site.rst:232
msgid ""
"Add a directory to sys.path and process its :file:`.pth` files.  Typically "
"used in :mod:`sitecustomize` or :mod:`usercustomize` (see above)."
msgstr ""
"sys.path にディレクトリを追加し、その :file:`.pth` ファイル群を処理します。典"
"型的には :mod:`sitecustomize` か :mod:`usercustomize` 内で使われます(上述)。"

#: ../../library/site.rst:238
msgid "Return a list containing all global site-packages directories."
msgstr "全てのグローバルな site-packages ディレクトリのリストを返します。"

#: ../../library/site.rst:245
msgid ""
"Return the path of the user base directory, :data:`USER_BASE`.  If it is not "
"initialized yet, this function will also set it, respecting :envvar:"
"`PYTHONUSERBASE`."
msgstr ""
"ユーザのベースディレクトリへのパス :data:`USER_BASE` を返します。未初期化であ"
"ればこの関数は :envvar:`PYTHONUSERBASE` を参考にして、設定もします。"

#: ../../library/site.rst:254
msgid ""
"Return the path of the user-specific site-packages directory, :data:"
"`USER_SITE`.  If it is not initialized yet, this function will also set it, "
"respecting :data:`USER_BASE`.  To determine if the user-specific site-"
"packages was added to ``sys.path`` :data:`ENABLE_USER_SITE` should be used."
msgstr ""
"ユーザ固有の site パッケージのディレクトリへのパス :data:`USER_SITE` を返しま"
"す。未初期化であればこの関数は :data:`USER_BASE` を参考にして、設定もしま"
"す。\n"
"ユーザ固有の site パッケージが ``sys.path`` に追加されたかどうかを確認するに"
"は :data:`ENABLE_USER_SITE` を使ってください。"

#: ../../library/site.rst:266
msgid "Command Line Interface"
msgstr "コマンドラインインターフェイス"

#: ../../library/site.rst:270
msgid ""
"The :mod:`site` module also provides a way to get the user directories from "
"the command line:"
msgstr ""
":mod:`site` モジュールはユーザディレクトリをコマンドラインから得る手段も提供"
"しています:"

#: ../../library/site.rst:273
msgid ""
"$ python -m site --user-site\n"
"/home/user/.local/lib/python3.11/site-packages"
msgstr ""

#: ../../library/site.rst:278
msgid ""
"If it is called without arguments, it will print the contents of :data:`sys."
"path` on the standard output, followed by the value of :data:`USER_BASE` and "
"whether the directory exists, then the same thing for :data:`USER_SITE`, and "
"finally the value of :data:`ENABLE_USER_SITE`."
msgstr ""
"引数なしで呼び出された場合、:data:`sys.path` の中身を表示し、続けて :data:"
"`USER_BASE` とそのディレクトリが存在するかどうか、 :data:`USER_SITE` とその"
"ディレクトリが存在するかどうか、最後に :data:`ENABLE_USER_SITE` の値を、標準"
"出力に出力します。"

#: ../../library/site.rst:285
msgid "Print the path to the user base directory."
msgstr "ユーザのベースディレクトリを表示します。"

#: ../../library/site.rst:289
msgid "Print the path to the user site-packages directory."
msgstr "ユーザの site-packages ディレクトリを表示します。"

#: ../../library/site.rst:291
msgid ""
"If both options are given, user base and user site will be printed (always "
"in this order), separated by :data:`os.pathsep`."
msgstr ""
"両方のオプションが指定された場合、ユーザのベースとユーザの site が(常にこの順"
"序で) :data:`os.pathsep` 区切りで表示されます。"

#: ../../library/site.rst:294
msgid ""
"If any option is given, the script will exit with one of these values: ``0`` "
"if the user site-packages directory is enabled, ``1`` if it was disabled by "
"the user, ``2`` if it is disabled for security reasons or by an "
"administrator, and a value greater than 2 if there is an error."
msgstr ""
"いずれかのオプションが与えられた場合に、このスクリプトは次のいずれかの終了"
"コードで終了します: ユーザの site-packages が有効ならば ``0`` 、ユーザにより"
"無効にされていれば ``1`` 、セキュリティ的な理由あるいは管理者によって無効にさ"
"れている場合 ``2`` 、そして何かエラーがあった場合は 2 より大きな値。"

#: ../../library/site.rst:301
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` -- ユーザごとの ``site-packages`` ディレクトリ"

#: ../../library/site.rst:302
msgid ":ref:`sys-path-init` -- The initialization of :data:`sys.path`."
msgstr ":ref:`sys-path-init` -- :data:`sys.path`. の初期化。"

#: ../../library/site.rst:16
msgid "module"
msgstr "module"

#: ../../library/site.rst:16
msgid "search"
msgstr "検索"

#: ../../library/site.rst:16 ../../library/site.rst:90
msgid "path"
msgstr "パス"

#: ../../library/site.rst:29
msgid "site-packages"
msgstr "site-packages"

#: ../../library/site.rst:29
msgid "directory"
msgstr "ディレクトリ"

#: ../../library/site.rst:61
msgid "# (hash)"
msgstr "# (hash)"

#: ../../library/site.rst:61
msgid "comment"
msgstr "コメント"

#: ../../library/site.rst:61
msgid "statement"
msgstr "statement"

#: ../../library/site.rst:61
msgid "import"
msgstr "import"

#: ../../library/site.rst:90
msgid "package"
msgstr "package"

#: ../../library/site.rst:90
msgid "configuration"
msgstr "設定"

#: ../../library/site.rst:90
msgid "file"
msgstr "ファイル"
