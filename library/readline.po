# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2015-2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/readline.rst:2
msgid ":mod:`readline` --- GNU readline interface"
msgstr ":mod:`readline` --- GNU readline のインタフェース"

#: ../../library/readline.rst:10
msgid ""
"The :mod:`readline` module defines a number of functions to facilitate "
"completion and reading/writing of history files from the Python interpreter. "
"This module can be used directly, or via the :mod:`rlcompleter` module, "
"which supports completion of Python identifiers at the interactive prompt.  "
"Settings made using  this module affect the behaviour of both the "
"interpreter's interactive prompt  and the prompts offered by the :func:"
"`raw_input` and :func:`input` built-in functions."
msgstr ""
":mod:`readline` モジュールでは、補完や Python インタプリタからの履歴ファイル"
"の読み書きを容易にするための多くの関数を定義しています。\n"
"このモジュールは直接、または :mod:`rlcompleter` モジュールを介して使うことが"
"できます。\n"
":mod:`rlcompleter` モジュールは対話的プロンプトで Python 識別子の補完をサポー"
"トするものです。\n"
"このモジュールを使って設定した内容は、インタプリタの対話プロンプトと、組み込"
"み関数の :func:`raw_input` および :func:`input` :func:`input` が提示するプロ"
"ンプトの両方の挙動に影響します。"

#: ../../library/readline.rst:20
msgid ""
"The underlying Readline library API may be implemented by the ``libedit`` "
"library instead of GNU readline. On MacOS X the :mod:`readline` module "
"detects which library is being used at run time."
msgstr ""
"下層の Readline ライブラリー API は GNU readline ではなく ``libedit`` ライブ"
"ラリーで実装される可能性があります。\n"
"MacOS X では :mod:`readline` モジュールはどのライブラリーが使われているかを実"
"行時に検出します。"

#: ../../library/readline.rst:25
msgid ""
"The configuration file for ``libedit`` is different from that of GNU "
"readline. If you programmatically load configuration strings you can check "
"for the text \"libedit\" in :const:`readline.__doc__` to differentiate "
"between GNU readline and libedit."
msgstr ""
"``libedit`` の設定ファイルは GNU readline のものとは異なります。もし設定文字"
"列をプログラムからロードしているなら、 GNU readline と libedit を区別するため"
"に \"libedit\" という文字列が :const:`readline.__doc__` に含まれているかどう"
"かチェックしてください。"

#: ../../library/readline.rst:30
msgid ""
"Readline keybindings may be configured via an initialization file, typically "
"``.inputrc`` in your home directory.  See `Readline Init File <https://"
"cnswww.cns.cwru.edu/php/chet/readline/rluserman.html#SEC9>`_ in the GNU "
"Readline manual for information about the format and allowable constructs of "
"that file, and the capabilities of the Readline library in general."
msgstr ""
"readline のキーバインディングは初期化ファイルで設定できます。\n"
"このファイルは、たいていはホームディレクトリに ``.inputrc`` という名前で置い"
"てあります。\n"
"GNU Readline マニュアルの  `Readline Init File <https://cnswww.cns.cwru.edu/"
"php/chet/readline/rluserman.html#SEC9>`_ を参照して、そのファイルの形式や可能"
"な構成、 Readline ライブラリ全体の機能を知ってください。"

#: ../../library/readline.rst:39
msgid "Init file"
msgstr "初期化ファイル"

#: ../../library/readline.rst:41
msgid "The following functions relate to the init file and user configuration:"
msgstr "以下の関数は初期化ファイルならびにユーザ設定関連のものです:"

#: ../../library/readline.rst:46
msgid ""
"Execute the init line provided in the *string* argument. This calls :c:func:"
"`rl_parse_and_bind` in the underlying library."
msgstr ""
"*string* 引数で渡された最初の行を実行します。これにより下層のライブラリーの :"
"c:func:`rl_parse_and_bind` が呼ばれます。"

#: ../../library/readline.rst:52
msgid ""
"Execute a readline initialization file. The default filename is the last "
"filename used. This calls :c:func:`rl_read_init_file` in the underlying "
"library."
msgstr ""
"readline 初期化ファイルを実行します。デフォルトのファイル名は最後に使用された"
"ファイル名です。これにより下層のライブラリーの :c:func:`rl_read_init_file` が"
"呼ばれます。"

#: ../../library/readline.rst:57
msgid "Line buffer"
msgstr "行バッファ"

#: ../../library/readline.rst:59
msgid "The following functions operate on the line buffer:"
msgstr "以下の関数は行バッファを操作します:"

#: ../../library/readline.rst:64
msgid ""
"Return the current contents of the line buffer (:c:data:`rl_line_buffer` in "
"the underlying library)."
msgstr ""
"行バッファ  (下層のライブラリーの :c:data:`rl_line_buffer`) の現在の内容を返"
"します。"

#: ../../library/readline.rst:70
msgid ""
"Insert text into the line buffer at the cursor position.  This calls :c:func:"
"`rl_insert_text` in the underlying library, but ignores the return value."
msgstr ""
"テキストをカーサー位置の行バッファに挿入します。これにより下層のライブラリー"
"の :c:func:`rl_insert_text` が呼ばれますが、戻り値は無視されます。"

#: ../../library/readline.rst:77
msgid ""
"Change what's displayed on the screen to reflect the current contents of the "
"line buffer.  This calls :c:func:`rl_redisplay` in the underlying library."
msgstr ""
"スクリーンの表示を変更して行バッファの現在の内容を反映させます。これにより下"
"層のライブラリーの :c:func:`rl_redisplay` が呼ばれます。"

#: ../../library/readline.rst:82
msgid "History file"
msgstr "履歴ファイル"

#: ../../library/readline.rst:84
msgid "The following functions operate on a history file:"
msgstr "以下の関数は履歴ファイルを操作します:"

#: ../../library/readline.rst:89
msgid ""
"Load a readline history file, and append it to the history list. The default "
"filename is :file:`~/.history`.  This calls :c:func:`read_history` in the "
"underlying library."
msgstr ""
"readline 履歴ファイルを読み込み、履歴リストに追加します。デフォルトのファイル"
"名は :file:`~/.history` です。これにより下層のライブラリーの :c:func:"
"`read_history` が呼ばれます。"

#: ../../library/readline.rst:96
msgid ""
"Save the history list to a readline history file, overwriting any existing "
"file.  The default filename is :file:`~/.history`.  This calls :c:func:"
"`write_history` in the underlying library."
msgstr ""
"履歴リストを readline 履歴ファイルに保存します。既存のファイルは上書きされま"
"す。デフォルトのファイル名は :file:`~/.history` です。これにより下層のライブ"
"ラリーの :c:func:`write_history` が呼ばれます。"

#: ../../library/readline.rst:104
msgid ""
"Set or return the desired number of lines to save in the history file. The :"
"func:`write_history_file` function uses this value to truncate the history "
"file, by calling :c:func:`history_truncate_file` in the underlying library.  "
"Negative values imply unlimited history file size."
msgstr ""

#: ../../library/readline.rst:112
msgid "History list"
msgstr "履歴リスト"

#: ../../library/readline.rst:114
msgid "The following functions operate on a global history list:"
msgstr "以下の関数はグローバルな履歴リストを操作します:"

#: ../../library/readline.rst:119
msgid ""
"Clear the current history.  This calls :c:func:`clear_history` in the "
"underlying library.  The Python function only exists if Python was compiled "
"for a version of the library that supports it."
msgstr ""
"現在の履歴をクリアします。これにより下層のライブラリーの :c:func:"
"`clear_history` が呼ばれます。Python がこの機能をサポートするライブラリーの"
"バージョンでコンパイルされたときのみ、この関数は存在します。"

#: ../../library/readline.rst:128
msgid ""
"Return the number of items currently in the history.  (This is different "
"from :func:`get_history_length`, which returns the maximum number of lines "
"that will be written to a history file.)"
msgstr ""
"履歴に現在ある項目の数を返します。 (:func:`get_history_length` は履歴ファイル"
"に書かれる最大行数を返します。)"

#: ../../library/readline.rst:137
msgid ""
"Return the current contents of history item at *index*.  The item index is "
"one-based.  This calls :c:func:`history_get` in the underlying library."
msgstr ""
"現在の履歴の *index* 番目の項目を返します。添字は1から始まります。これにより"
"下層のライブラリーの :c:func:`history_get` が呼ばれます。"

#: ../../library/readline.rst:145
msgid ""
"Remove history item specified by its position from the history. The position "
"is zero-based.  This calls :c:func:`remove_history` in the underlying "
"library."
msgstr ""
"履歴から指定された位置の項目を削除します。添字は0から始まります。これにより下"
"層のライブラリーの :c:func:`remove_history` が呼ばれます。"

#: ../../library/readline.rst:154
msgid ""
"Replace history item specified by its position with *line*. The position is "
"zero-based.  This calls :c:func:`replace_history_entry` in the underlying "
"library."
msgstr ""
"指定された位置の項目を *line* で置き換えます。添字は0から始まります。これによ"
"り下層のライブラリーの :c:func:`replace_history_entry` が呼ばれます。"

#: ../../library/readline.rst:163
msgid ""
"Append *line* to the history buffer, as if it was the last line typed. This "
"calls :c:func:`add_history` in the underlying library."
msgstr ""
"最後に入力したかのように、 *line* を履歴バッファに追加します。これにより下層"
"のライブラリーの :c:func:`add_history` が呼ばれます。"

#: ../../library/readline.rst:168
msgid "Startup hooks"
msgstr "開始フック"

#: ../../library/readline.rst:175
msgid ""
"Set or remove the function invoked by the :c:data:`rl_startup_hook` callback "
"of the underlying library.  If *function* is specified, it will be used as "
"the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments just before "
"readline prints the first prompt."
msgstr ""

#: ../../library/readline.rst:184
msgid ""
"Set or remove the function invoked by the :c:data:`rl_pre_input_hook` "
"callback of the underlying library.  If *function* is specified, it will be "
"used as the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments after the first "
"prompt has been printed and just before readline starts reading input "
"characters.  This function only exists if Python was compiled for a version "
"of the library that supports it."
msgstr ""

#: ../../library/readline.rst:194
msgid "Completion"
msgstr "補完"

#: ../../library/readline.rst:196
msgid ""
"The following functions relate to implementing a custom word completion "
"function.  This is typically operated by the Tab key, and can suggest and "
"automatically complete a word being typed.  By default, Readline is set up "
"to be used by :mod:`rlcompleter` to complete Python identifiers for the "
"interactive interpreter.  If the :mod:`readline` module is to be used with a "
"custom completer, a different set of word delimiters should be set."
msgstr ""

#: ../../library/readline.rst:206
msgid ""
"Set or remove the completer function.  If *function* is specified, it will "
"be used as the new completer function; if omitted or ``None``, any completer "
"function already installed is removed.  The completer function is called as "
"``function(text, state)``, for *state* in ``0``, ``1``, ``2``, ..., until it "
"returns a non-string value.  It should return the next possible completion "
"starting with *text*."
msgstr ""
"completer 関数を設定または削除します。*function* が指定された場合、新たな "
"completer 関数として用いられます;  省略された場合や ``None`` の場合、現在イン"
"ストールされている completer 関数は削除されます。completer 関数は "
"``function(text, state)`` の形式で、関数が文字列でない値を返すまで *state* "
"を ``0``, ``1``, ``2``, ..., にして呼び出します。この関数は *text* から始まる"
"補完結果として次に来そうなものを返さなければなりません。"

#: ../../library/readline.rst:213
msgid ""
"The installed completer function is invoked by the *entry_func* callback "
"passed to :c:func:`rl_completion_matches` in the underlying library. The "
"*text* string comes from the first parameter to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""

#: ../../library/readline.rst:222
msgid ""
"Get the completer function, or ``None`` if no completer function has been "
"set."
msgstr ""
"completer 関数を取得します。completer 関数が設定されていなければ ``None`` を"
"返します。"

#: ../../library/readline.rst:229
msgid ""
"Get the type of completion being attempted.  This returns the :c:data:"
"`rl_completion_type` variable in the underlying library as an integer."
msgstr ""

#: ../../library/readline.rst:238
msgid ""
"Get the beginning or ending index of the completion scope. These indexes are "
"the *start* and *end* arguments passed to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""

#: ../../library/readline.rst:247
msgid ""
"Set or get the word delimiters for completion.  These determine the start of "
"the word to be considered for completion (the completion scope). These "
"functions access the :c:data:`rl_completer_word_break_characters` variable "
"in the underlying library."
msgstr ""

#: ../../library/readline.rst:254
msgid ""
"Set or remove the completion display function.  If *function* is specified, "
"it will be used as the new completion display function; if omitted or "
"``None``, any completion display function already installed is removed.  "
"This sets or clears the :c:data:`rl_completion_display_matches_hook` "
"callback in the underlying library.  The completion display function is "
"called as ``function(substitution, [matches], longest_match_length)`` once "
"each time matches need to be displayed."
msgstr ""

#: ../../library/readline.rst:268
msgid "Example"
msgstr "例"

#: ../../library/readline.rst:270
msgid ""
"The following example demonstrates how to use the :mod:`readline` module's "
"history reading and writing functions to automatically load and save a "
"history file named :file:`.pyhist` from the user's home directory.  The code "
"below would normally be executed automatically during interactive sessions "
"from the user's :envvar:`PYTHONSTARTUP` file. ::"
msgstr ""
"以下の例では、ユーザのホームディレクトリにある :file:`.pyhist` という名前のヒ"
"ストリファイルを自動的に読み書きするために、 :mod:`readline` モジュールによる"
"ヒストリの読み書き関数をどのように使うかを例示しています。以下のソースコード"
"は通常、対話セッションの中で :envvar:`PYTHONSTARTUP` ファイルから読み込まれ自"
"動的に実行されることになります。 ::"

#: ../../library/readline.rst:289
msgid ""
"The following example extends the :class:`code.InteractiveConsole` class to "
"support history save/restore. ::"
msgstr ""
"次の例では :class:`code.InteractiveConsole` クラスを拡張し、履歴の保存・復旧"
"をサポートします。 ::"
