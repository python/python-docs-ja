# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/telnetlib.rst:2
msgid ":mod:`telnetlib` --- Telnet client"
msgstr ":mod:`telnetlib` --- Telnet クライアント"

#: ../../library/telnetlib.rst:11
msgid "**Source code:** :source:`Lib/telnetlib.py`"
msgstr "**ソースコード:** :source:`Lib/telnetlib.py`"

#: ../../library/telnetlib.rst:15
msgid ""
"The :mod:`telnetlib` module provides a :class:`Telnet` class that implements "
"the Telnet protocol.  See :rfc:`854` for details about the protocol. In "
"addition, it provides symbolic constants for the protocol characters (see "
"below), and for the telnet options. The symbolic names of the telnet options "
"follow the definitions in ``arpa/telnet.h``, with the leading ``TELOPT_`` "
"removed. For symbolic names of options which are traditionally not included "
"in ``arpa/telnet.h``, see the module source itself."
msgstr ""
":mod:`telnetlib` モジュールでは、Telnet プロトコルを実装している :class:"
"`Telnet` クラスを提供します。Telnet プロトコルについての詳細は :rfc:`854` を"
"参照してください。加えて、このモジュールでは Telnet プロトコルにおける制御文"
"字 (下を参照してください) と、telnet オプションに対するシンボル定数を提供して"
"います。telnet オプションに対するシンボル名は ``arpa/telnet.h`` の "
"``TELOPT_`` がない状態での定義に従います。伝統的に ``arpa/telnet.h`` に含めら"
"れていない telnet オプションのシンボル名については、このモジュールのソース"
"コード自体を参照してください。"

#: ../../library/telnetlib.rst:23
msgid ""
"The symbolic constants for the telnet commands are: IAC, DONT, DO, WONT, "
"WILL, SE (Subnegotiation End), NOP (No Operation), DM (Data Mark), BRK "
"(Break), IP (Interrupt process), AO (Abort output), AYT (Are You There), EC "
"(Erase Character), EL (Erase Line), GA (Go Ahead), SB (Subnegotiation Begin)."
msgstr ""
"telnet コマンドのシンボル定数は、IAC、DONT、DO、WONT、WILL、SE (サブネゴシ"
"エーション終了)、NOP (何もしない)、DM (データマーク)、 BRK (ブレーク)、IP (プ"
"ロセス割り込み)、AO (出力中断)、 AYT (応答確認)、EC (文字削除)、EL (行削除)、"
"GA (進め)、SB ( サブネゴシエーション開始) です。"

#: ../../library/telnetlib.rst:31
msgid ""
":class:`Telnet` represents a connection to a Telnet server. The instance is "
"initially not connected by default; the :meth:`~Telnet.open` method must be "
"used to establish a connection.  Alternatively, the host name and optional "
"port number can be passed to the constructor, to, in which case the "
"connection to the server will be established before the constructor "
"returns.  The optional *timeout* parameter specifies a timeout in seconds "
"for blocking operations like the connection attempt (if not specified, the "
"global default timeout setting will be used)."
msgstr ""

#: ../../library/telnetlib.rst:40
msgid "Do not reopen an already connected instance."
msgstr "すでに接続の開かれているンスタンスを再度開いてはいけません。"

#: ../../library/telnetlib.rst:42
msgid ""
"This class has many :meth:`read_\\*` methods.  Note that some of them  "
"raise :exc:`EOFError` when the end of the connection is read, because they "
"can return an empty string for other reasons.  See the individual "
"descriptions below."
msgstr ""
"このクラスは多くの :meth:`read_\\*` メソッドを持っています。これらのメソッド"
"のいくつかは、接続の終端を示す文字を読み込んだ場合に :exc:`EOFError` を送出す"
"るので注意してください。例外を送出するのは、これらの関数が終端に到達しなくて"
"も空の文字列を返す可能性があるからです。詳しくは下記の個々の説明を参照してく"
"ださい。"

#: ../../library/telnetlib.rst:46 ../../library/telnetlib.rst:138
msgid "*timeout* was added."
msgstr "*timeout* が追加されました。"

#: ../../library/telnetlib.rst:52
msgid ":rfc:`854` - Telnet Protocol Specification"
msgstr ":rfc:`854` - Telnet プロトコル仕様"

#: ../../library/telnetlib.rst:53
msgid "Definition of the Telnet protocol."
msgstr "Telnet プロトコルの定義。"

#: ../../library/telnetlib.rst:59
msgid "Telnet Objects"
msgstr "Telnet オブジェクト"

#: ../../library/telnetlib.rst:61
msgid ":class:`Telnet` instances have the following methods:"
msgstr ":class:`Telnet` インスタンスは以下のメソッドを持っています:"

#: ../../library/telnetlib.rst:66
msgid ""
"Read until a given string, *expected*, is encountered or until *timeout* "
"seconds have passed."
msgstr ""
"*expected* で指定された文字列を読み込むか、 *timeout* で指定された秒数が経過"
"するまで読み込みます。"

#: ../../library/telnetlib.rst:69
msgid ""
"When no match is found, return whatever is available instead, possibly the "
"empty string.  Raise :exc:`EOFError` if the connection is closed and no "
"cooked data is available."
msgstr ""
"与えられた文字列に一致する部分が見つからなかった場合、読み込むことができたも"
"の全てを返します。これは空の文字列になる可能性があります。接続が閉じられ、転"
"送処理済みのデータが得られない場合には :exc:`EOFError` が送出されます。"

#: ../../library/telnetlib.rst:76
msgid "Read all data until EOF; block until connection closed."
msgstr ""
"EOFに到達するまでの全てのデータを読み込みます; 接続が閉じられるまでブロックし"
"ます。"

#: ../../library/telnetlib.rst:81
msgid ""
"Read at least one byte of cooked data unless EOF is hit. Return ``''`` if "
"EOF is hit.  Block if no data is immediately available."
msgstr ""
"EOF に到達しない限り、少なくとも 1 バイトの転送処理済みデータを読み込みます。"
"EOF に到達した場合は ``''`` を返します。すぐに読み出せるデータが存在しない場"
"合にはブロックします。"

#: ../../library/telnetlib.rst:87
msgid "Read everything that can be without blocking in I/O (eager)."
msgstr ""
"I/O によるブロックを起こさずに読み出せる全てのデータを読み込みます (eager "
"モード)。"

#: ../../library/telnetlib.rst:89 ../../library/telnetlib.rst:98
msgid ""
"Raise :exc:`EOFError` if connection closed and no cooked data available.  "
"Return ``''`` if no cooked data available otherwise. Do not block unless in "
"the midst of an IAC sequence."
msgstr ""
"接続が閉じられており、転送処理済みのデータとして読み出せるものがない場合に"
"は :exc:`EOFError` が送出されます。それ以外の場合で、単に読み出せるデータがな"
"い場合には ``''`` を返します。 IAC シーケンス操作中でないかぎりブロックしませ"
"ん。"

#: ../../library/telnetlib.rst:96
msgid "Read readily available data."
msgstr "現在すぐに読み出せるデータを読み出します。"

#: ../../library/telnetlib.rst:105
msgid "Process and return data already in the queues (lazy)."
msgstr "すでにキューに入っているデータを処理して返します (lazy モード)。"

#: ../../library/telnetlib.rst:107
msgid ""
"Raise :exc:`EOFError` if connection closed and no data available. Return "
"``''`` if no cooked data available otherwise.  Do not block unless in the "
"midst of an IAC sequence."
msgstr ""
"接続が閉じられており、読み出せるデータがない場合には :exc:`EOFError` を送出し"
"ます。それ以外の場合で、転送処理済みのデータで読み出せるものがない場合には "
"``''`` を返します。 IAC シーケンス操作中でないかぎりブロックしません。"

#: ../../library/telnetlib.rst:114
msgid "Return any data available in the cooked queue (very lazy)."
msgstr ""
"すでに処理済みキューに入っているデータを処理して返します (very lazy モード)。"

#: ../../library/telnetlib.rst:116
msgid ""
"Raise :exc:`EOFError` if connection closed and no data available. Return "
"``''`` if no cooked data available otherwise.  This method never blocks."
msgstr ""
"接続が閉じられており、読み出せるデータがない場合には :exc:`EOFError` を送出し"
"ます。それ以外の場合で、転送処理済みのデータで読み出せるものがない場合には "
"``''`` を返します。このメソッドは決してブロックしません。"

#: ../../library/telnetlib.rst:122
msgid ""
"Return the data collected between a SB/SE pair (suboption begin/end). The "
"callback should access these data when it was invoked with a ``SE`` command. "
"This method never blocks."
msgstr ""
"SB/SE ペア (サブオプション開始／終了) の間に収集されたデータを返します。 "
"``SE`` コマンドによって起動されたコールバック関数はこれらのデータにアクセスし"
"なければなりません。このメソッドはけっしてブロックしません。"

#: ../../library/telnetlib.rst:131
msgid ""
"Connect to a host. The optional second argument is the port number, which "
"defaults to the standard Telnet port (23). The optional *timeout* parameter "
"specifies a timeout in seconds for blocking operations like the connection "
"attempt (if not specified, the global default timeout setting will be used)."
msgstr ""
"サーバホストに接続します。第二引数はオプションで、ポート番号を指定します。標"
"準の値は通常の Telnet ポート番号 (23) です。オプション引数の *timeout* が渡さ"
"れた場合、コネクション接続時などのブロックする操作のタイムアウト時間を秒数で"
"指定します (指定されなかった場合は、グローバルのデフォルトタイムアウト設定が"
"利用されます)。"

#: ../../library/telnetlib.rst:136
msgid "Do not try to reopen an already connected instance."
msgstr "すでに接続しているインスタンスで再接続を試みてはいけません。"

#: ../../library/telnetlib.rst:144
msgid ""
"Print a debug message when the debug level is ``>`` 0. If extra arguments "
"are present, they are substituted in the message using the standard string "
"formatting operator."
msgstr ""
"デバッグレベルが ``>`` 0 のとき、デバッグ用のメッセージを出力します。追加の引"
"数が存在する場合、標準の文字列書式化演算子 ``%`` を使って *msg* 中の書式指定"
"子に代入されます。"

#: ../../library/telnetlib.rst:151
msgid ""
"Set the debug level.  The higher the value of *debuglevel*, the more debug "
"output you get (on ``sys.stdout``)."
msgstr ""
"デバッグレベルを設定します。 *debuglevel* が大きくなるほど、 (``sys.stdout`` "
"に) デバッグメッセージがたくさん出力されます。"

#: ../../library/telnetlib.rst:157
msgid "Close the connection."
msgstr "コネクションをクローズします。"

#: ../../library/telnetlib.rst:162
msgid "Return the socket object used internally."
msgstr "内部的に使われているソケットオブジェクトです。"

#: ../../library/telnetlib.rst:167
msgid "Return the file descriptor of the socket object used internally."
msgstr "内部的に使われているソケットオブジェクトのファイル記述子です。"

#: ../../library/telnetlib.rst:172
msgid ""
"Write a string to the socket, doubling any IAC characters. This can block if "
"the connection is blocked.  May raise :exc:`socket.error` if the connection "
"is closed."
msgstr ""
"ソケットに文字列を書き込みます。このとき IAC 文字については 2 度送信します。"
"接続がブロックした場合、書き込みがブロックする可能性があります。接続が閉じら"
"れた場合、 :exc:`socket.error` が送出されるかもしれません。"

#: ../../library/telnetlib.rst:179
msgid "Interaction function, emulates a very dumb Telnet client."
msgstr "非常に低機能の telnet クライアントをエミュレートする対話関数です。"

#: ../../library/telnetlib.rst:184
msgid "Multithreaded version of :meth:`interact`."
msgstr ":meth:`interact` のマルチスレッド版です。"

#: ../../library/telnetlib.rst:189
msgid "Read until one from a list of a regular expressions matches."
msgstr "正規表現のリストのうちどれか一つにマッチするまでデータを読みます。"

#: ../../library/telnetlib.rst:191
msgid ""
"The first argument is a list of regular expressions, either compiled (:class:"
"`regex objects <re-objects>`) or uncompiled (strings). The optional second "
"argument is a timeout, in seconds; the default is to block indefinitely."
msgstr ""
"第一引数は正規表現のリストです。コンパイルされたもの (:class:`regex objects "
"<re-objects>`) でも、コンパイルされていないもの (文字列) でもかまいません。オ"
"プションの第二引数はタイムアウトで、単位は秒です; 標準の値は無期限に設定され"
"ています。"

#: ../../library/telnetlib.rst:195
msgid ""
"Return a tuple of three items: the index in the list of the first regular "
"expression that matches; the match object returned; and the text read up "
"till and including the match."
msgstr ""
"3 つの要素からなるタプル: 最初にマッチした正規表現のインデクス; 返されたマッ"
"チオブジェクト; マッチ部分を含む、マッチするまでに読み込まれたテキストデー"
"タ、を返します。"

#: ../../library/telnetlib.rst:199
msgid ""
"If end of file is found and no text was read, raise :exc:`EOFError`.  "
"Otherwise, when nothing matches, return ``(-1, None, text)`` where *text* is "
"the text received so far (may be the empty string if a timeout happened)."
msgstr ""
"ファイル終了子が見つかり、かつ何もテキストデータが読み込まれなかった場合、 :"
"exc:`EOFError` が送出されます。そうでない場合で何もマッチしなかった場合には "
"``(-1, None, text)`` が返されます。ここで *text* はこれまで受信したテキスト"
"データです (タイムアウトが発生した場合には空の文字列になる場合もあります)。"

#: ../../library/telnetlib.rst:203
msgid ""
"If a regular expression ends with a greedy match (such as ``.*``) or if more "
"than one expression can match the same input, the results are non-"
"deterministic, and may depend on the I/O timing."
msgstr ""
"正規表現の末尾が (``.*`` のような) 貪欲マッチングになっている場合や、入力に対"
"して 1 つ以上の正規表現がマッチする場合には、その結果は決定不能で、I/O のタイ"
"ミングに依存するでしょう。"

#: ../../library/telnetlib.rst:210
msgid ""
"Each time a telnet option is read on the input flow, this *callback* (if "
"set) is called with the following parameters: callback(telnet socket, "
"command (DO/DONT/WILL/WONT), option).  No other action is done afterwards by "
"telnetlib."
msgstr ""
"telnet オプションが入力フローから読み込まれるたびに、 *callback* が (設定され"
"ていれば) 以下の引数形式: callback(telnet socket, command (DO/DONT/WILL/"
"WONT), option) で呼び出されます。その後 telnet オプションに対しては "
"telnetlib は何も行いません。"

#: ../../library/telnetlib.rst:218
msgid "Telnet Example"
msgstr "Telnet Example"

#: ../../library/telnetlib.rst:223
msgid "A simple example illustrating typical use::"
msgstr "典型的な使用例のサンプルコード::"
