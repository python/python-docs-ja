# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Arihiro TAKASE, 2018
# tomo, 2018
# 秘湯 <xwhhsprings@gmail.com>, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2018-11-23 06:09+0000\n"
"Last-Translator: 秘湯 <xwhhsprings@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.utils.rst:2
msgid ":mod:`email.utils`: Miscellaneous utilities"
msgstr ":mod:`email.utils`: 多方面のユーティリティ"

#: ../../library/email.utils.rst:8
msgid ""
"There are several useful utilities provided in the :mod:`email.utils` module:"
msgstr ""
":mod:`email.utils` モジュールではいくつかの便利なユーティリティを提供していま"
"す:"

#: ../../library/email.utils.rst:13
msgid ""
"Return a new string with backslashes in *str* replaced by two backslashes, "
"and double quotes replaced by backslash-double quote."
msgstr ""
"文字列 *str* 内のバックスラッシュをバックスラッシュ2つに置換した新しい文字列"
"を返します。また、ダブルクォートはバックスラッシュ + ダブルクォートに置換され"
"ます。"

#: ../../library/email.utils.rst:19
msgid ""
"Return a new string which is an *unquoted* version of *str*. If *str* ends "
"and begins with double quotes, they are stripped off.  Likewise if *str* "
"ends and begins with angle brackets, they are stripped off."
msgstr ""
"文字列 *str* の *クォートを外した* 新しい文字列を返します。*str* の先頭と末尾"
"がダブルクォートだった場合、それらは取り除かれます。同様に *str* の先頭と末尾"
"が角ブラケット (<、>) だった場合もそれらは取り除かれます。"

#: ../../library/email.utils.rst:26
msgid ""
"Parse address -- which should be the value of some address-containing field "
"such as :mailheader:`To` or :mailheader:`Cc` -- into its constituent "
"*realname* and *email address* parts.  Returns a tuple of that information, "
"unless the parse fails, in which case a 2-tuple of ``('', '')`` is returned."
msgstr ""
":mailheader:`To` や :mailheader:`Cc` のようなフィールドを持つアドレスをパース"
"して、構成要素の *実名* と *電子メールアドレス* を取り出します。 パースに成功"
"した場合、これらの情報持つタプルを返します。失敗した場合は 2 要素のタプル "
"``('', '')`` を返します。"

#: ../../library/email.utils.rst:34
msgid ""
"The inverse of :meth:`parseaddr`, this takes a 2-tuple of the form "
"``(realname, email_address)`` and returns the string value suitable for a :"
"mailheader:`To` or :mailheader:`Cc` header.  If the first element of *pair* "
"is false, then the second element is returned unmodified."
msgstr ""
":meth:`parseaddr` の逆で、2 要素のタプル ``(realname, email_address)`` を取っ"
"て :mailheader:`To` や :mailheader:`Cc` ヘッダに適した文字列を返します。タプ"
"ル *pair* の第1要素が偽である場合、第2要素の値をそのまま返します。"

#: ../../library/email.utils.rst:42
msgid ""
"This method returns a list of 2-tuples of the form returned by "
"``parseaddr()``. *fieldvalues* is a sequence of header field values as might "
"be returned by :meth:`Message.get_all <email.message.Message.get_all>`.  "
"Here's a simple example that gets all the recipients of a message::"
msgstr ""
"このメソッドは ``parseaddr()`` が返す形式の 2 要素タプルのリストを返しま"
"す。\n"
"*fieldvalues* は :meth:`Message.get_all <email.message.Message.get_all>` が返"
"すような一連のヘッダフィールドです。\n"
"以下はメッセージの全ての受信者を得る簡単な例です::"

#: ../../library/email.utils.rst:58
msgid ""
"Attempts to parse a date according to the rules in :rfc:`2822`. however, "
"some mailers don't follow that format as specified, so :func:`parsedate` "
"tries to guess correctly in such cases.  *date* is a string containing an :"
"rfc:`2822` date, such as  ``\"Mon, 20 Nov 1995 19:12:08 -0500\"``.  If it "
"succeeds in parsing the date, :func:`parsedate` returns a 9-tuple that can "
"be passed directly to :func:`time.mktime`; otherwise ``None`` will be "
"returned.  Note that indexes 6, 7, and 8 of the result tuple are not usable."
msgstr ""
":rfc:`2822` の規則に基づいて日付の解析を試みます。\n"
"しかしながらメイラーによっては指定された形式に従っていないものがあるので、そ"
"の場合 :func:`parsedate` は正しく推測しようとします。\n"
"*date* は ``\"Mon, 20 Nov 1995 19:12:08 -0500\"`` のような :rfc:`2822` 形式の"
"日付を含む文字列です。\n"
"日付の解析に成功した場合、 :func:`parsedate` は関数 :func:`time.mktime` に直"
"接渡せる形式の 9 要素からなるタプルを返します。\n"
"失敗した場合は ``None`` を返します。\n"
"返されるタプルの 6、7、8番目の添字は使用不可なので注意してください。"

#: ../../library/email.utils.rst:69
msgid ""
"Performs the same function as :func:`parsedate`, but returns either ``None`` "
"or a 10-tuple; the first 9 elements make up a tuple that can be passed "
"directly to :func:`time.mktime`, and the tenth is the offset of the date's "
"timezone from UTC (which is the official term for Greenwich Mean Time) "
"[#]_.  If the input string has no timezone, the last element of the tuple "
"returned is ``None``.  Note that indexes 6, 7, and 8 of the result tuple are "
"not usable."
msgstr ""
":func:`parsedate` と同様に機能しますが、 ``None`` か 10 要素のタプルを返しま"
"す。\n"
"最初の 9 要素は :func:`time.mktime` に直接渡すことの出来るタプルを成し、10 番"
"目はその日付のタイムゾーンの UTC (グリニッジ標準時の公式用語) からの差です "
"[#]_ 。\n"
"入力文字列にタイムゾーンがない場合、返されるタプルの最後の要素は ``None`` で"
"す。\n"
"返されるタプルの 6、7、8番目の添字は使用不可なので注意してください。"

#: ../../library/email.utils.rst:79
msgid ""
"Turn a 10-tuple as returned by :func:`parsedate_tz` into a UTC timestamp "
"(seconds since the Epoch).  If the timezone item in the tuple is ``None``, "
"assume local time."
msgstr ""
":func:`parsedate_tz` が返す 10 要素のタプルを UTC のタイムスタンプ (エポック"
"からの秒数) に変換します。与えられた時間帯が ``None`` である場合、時間帯とし"
"て現地時間 (localtime) が仮定されます。"

#: ../../library/email.utils.rst:86
msgid "Returns a date string as per :rfc:`2822`, e.g.::"
msgstr "日付を :rfc:`2822` 形式の文字列で返します。例::"

#: ../../library/email.utils.rst:90
msgid ""
"Optional *timeval* if given is a floating point time value as accepted by :"
"func:`time.gmtime` and :func:`time.localtime`, otherwise the current time is "
"used."
msgstr ""
"与えられた場合、オプションの *timeval* は :func:`time.gmtime` や :func:`time."
"localtime` に渡すことの出来る浮動小数の時刻です。\n"
"それ以外の場合、現在時刻が使われます。"

#: ../../library/email.utils.rst:94
msgid ""
"Optional *localtime* is a flag that when ``True``, interprets *timeval*, and "
"returns a date relative to the local timezone instead of UTC, properly "
"taking daylight savings time into account. The default is ``False`` meaning "
"UTC is used."
msgstr ""
"オプション引数 *localtime* はフラグです。``True`` の場合、この関数は "
"*timeval* を解析して UTC の代わりに現地のタイムゾーンに対する日付を返します。"
"おそらく夏時間も考慮するでしょう。デフォルトは ``False`` で、UTC が使われま"
"す。"

#: ../../library/email.utils.rst:99
msgid ""
"Optional *usegmt* is a flag that when ``True``, outputs a  date string with "
"the timezone as an ascii string ``GMT``, rather than a numeric ``-0000``. "
"This is needed for some protocols (such as HTTP). This only applies when "
"*localtime* is ``False``.  The default is ``False``."
msgstr ""
"オプション引数 *usegmt* はフラグです。``True`` の場合、この関数はタイムゾーン"
"を数値の ``-0000`` ではなく ascii 文字列 ``GMT`` として日付を出力します。これ"
"はプロトコルによっては (例えば HTTP) 必要です。これは *localtime* が "
"``False`` のときのみ適用されます。デフォルトは ``False`` です。"

#: ../../library/email.utils.rst:109
msgid ""
"Returns a string suitable for an :rfc:`2822`\\ -compliant :mailheader:"
"`Message-ID` header.  Optional *idstring* if given, is a string used to "
"strengthen the uniqueness of the message id."
msgstr ""
":rfc:`2822` 準拠形式の :mailheader:`Message-ID` ヘッダに適した文字列を返しま"
"す。オプション引数 *idstring* が文字列として与えられた場合、これはメッセージ "
"ID の一意性を高めるのに利用されます。"

#: ../../library/email.utils.rst:116
msgid "Decode the string *s* according to :rfc:`2231`."
msgstr ":rfc:`2231` に従って文字列 *s* をデコードします。"

#: ../../library/email.utils.rst:121
msgid ""
"Encode the string *s* according to :rfc:`2231`.  Optional *charset* and "
"*language*, if given is the character set name and language name to use.  If "
"neither is given, *s* is returned as-is.  If *charset* is given but "
"*language* is not, the string is encoded using the empty string for "
"*language*."
msgstr ""
":rfc:`2231` に従って *s* をエンコードします。オプション引数 *charset* および "
"*language* が与えられた場合、これらは文字セット名と言語名として使われます。も"
"しこれらのどちらも与えられていない場合、 *s* はそのまま返されます。 "
"*charset* は与えられているが *language* が与えられていない場合、文字列 *s* "
"は *language* の空文字列を使ってエンコードされます。"

#: ../../library/email.utils.rst:129
msgid ""
"When a header parameter is encoded in :rfc:`2231` format, :meth:`Message."
"get_param <email.message.Message.get_param>` may return a 3-tuple containing "
"the character set, language, and value.  :func:`collapse_rfc2231_value` "
"turns this into a unicode string.  Optional *errors* is passed to the "
"*errors* argument of the built-in :func:`unicode` function; it defaults to "
"``replace``.  Optional *fallback_charset* specifies the character set to use "
"if the one in the :rfc:`2231` header is not known by Python; it defaults to "
"``us-ascii``."
msgstr ""
"ヘッダのパラメータが :rfc:`2231` 形式でエンコードされている場合、 :meth:"
"`Message.get_param <email.message.Message.get_param>` は 3 要素からなるタプル"
"を返すことがあります。ここには、そのパラメータの文字セット、言語、および値の"
"順に格納されています。 :func:`collapse_rfc2231_value` はこのパラメータをひと"
"つの Unicode 文字列にまとめます。オプション引数 *errors* は built-in である :"
"func:`unicode` 関数の引数 *errors* に渡されます。このデフォルト値は "
"``replace`` となっています。オプション引数 *fallback_charset* は、もし :rfc:"
"`2231` ヘッダの使用している文字セットが Python の知っているものではなかった場"
"合の非常用文字セットとして使われます。デフォルトでは、この値は ``us-ascii`` "
"です。"

#: ../../library/email.utils.rst:138
msgid ""
"For convenience, if the *value* passed to :func:`collapse_rfc2231_value` is "
"not a tuple, it should be a string and it is returned unquoted."
msgstr ""
"便宜上、 :func:`collapse_rfc2231_value` に渡された引数 *value* がタプルでない"
"場合には、これは文字列でなければなりません。その場合にはクォートを除いた文字"
"列を返します。"

#: ../../library/email.utils.rst:144
msgid ""
"Decode parameters list according to :rfc:`2231`.  *params* is a sequence of "
"2-tuples containing elements of the form ``(content-type, string-value)``."
msgstr ""
":rfc:`2231` に従って引数のリストをデコードします。 *params* は ``(content-"
"type, string-value)`` のような形式の 2 要素タプルです。"

#: ../../library/email.utils.rst:147
msgid ""
"The :func:`dump_address_pair` function has been removed; use :func:"
"`formataddr` instead."
msgstr ""
":func:`dump_address_pair` 関数は削除されました。かわりに :func:`formataddr` "
"関数を使ってください。"

#: ../../library/email.utils.rst:151
msgid ""
"The :func:`decode` function has been removed; use the :meth:`Header."
"decode_header <email.header.Header.decode_header>` method instead."
msgstr ""
":func:`decode` 関数は削除されました。かわりに :meth:`Header.decode_header "
"<email.header.Header.decode_header>` メソッドを使ってください。"

#: ../../library/email.utils.rst:156
msgid ""
"The :func:`encode` function has been removed; use the :meth:`Header.encode "
"<email.header.Header.encode>` method instead."
msgstr ""
":func:`encode` 関数は削除されました。かわりに :meth:`Header.encode <email."
"header.Header.encode>` メソッドを使ってください。"

#: ../../library/email.utils.rst:161
msgid "Footnotes"
msgstr "脚注"

#: ../../library/email.utils.rst:162
msgid ""
"Note that the sign of the timezone offset is the opposite of the sign of the "
"``time.timezone`` variable for the same timezone; the latter variable "
"follows the POSIX standard while this module follows :rfc:`2822`."
msgstr ""
"注意: この時間帯のオフセット値は ``time.timezone`` の値と符号が逆です。これ"
"は ``time.timezone`` が POSIX 標準に準拠しているのに対して、こちらは :rfc:"
"`2822` に準拠しているからです。"
