# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/operator.rst:2
msgid ":mod:`operator` --- Standard operators as functions"
msgstr ":mod:`operator` --- 関数形式の標準演算子"

#: ../../library/operator.rst:9
msgid "**Source code:** :source:`Lib/operator.py`"
msgstr "**ソースコード:** :source:`Lib/operator.py`"

#: ../../library/operator.rst:18
msgid ""
"The :mod:`operator` module exports a set of efficient functions "
"corresponding to the intrinsic operators of Python.  For example, ``operator."
"add(x, y)`` is equivalent to the expression ``x+y``. Many function names are "
"those used for special methods, without the double underscores.  For "
"backward compatibility, many of these have a variant with the double "
"underscores kept. The variants without the double underscores are preferred "
"for clarity."
msgstr ""
":mod:`operator` モジュールは、Python の組み込み演算子に対応する効率的な関数群"
"を提供します。\n"
"例えば、 ``operator.add(x, y)`` は式 ``x+y`` と等価です。\n"
"多くの関数名は、特殊メソッドに使われている名前から前後の二重アンダースコアを"
"除いたものと同じです。\n"
"後方互換性のため、ほとんどの関数に二重アンダースコアを付けたままのバージョン"
"があります。\n"
"簡潔さのために、二重アンダースコアが無いバージョンの方が好まれます。"

#: ../../library/operator.rst:25
msgid ""
"The functions fall into categories that perform object comparisons, logical "
"operations, mathematical operations and sequence operations."
msgstr ""
"これらの関数は、オブジェクト比較、論理演算、数学演算、シーケンス演算をするも"
"のに分類されます。"

#: ../../library/operator.rst:28
msgid ""
"The object comparison functions are useful for all objects, and are named "
"after the rich comparison operators they support:"
msgstr ""
"オブジェクト比較関数は全てのオブジェクトで有効で、関数の名前はサポートする拡"
"張比較演算子からとられています:"

#: ../../library/operator.rst:45
msgid ""
"Perform \"rich comparisons\" between *a* and *b*. Specifically, ``lt(a, b)`` "
"is equivalent to ``a < b``, ``le(a, b)`` is equivalent to ``a <= b``, "
"``eq(a, b)`` is equivalent to ``a == b``, ``ne(a, b)`` is equivalent to ``a !"
"= b``, ``gt(a, b)`` is equivalent to ``a > b`` and ``ge(a, b)`` is "
"equivalent to ``a >= b``.  Note that these functions can return any value, "
"which may or may not be interpretable as a Boolean value.  See :ref:"
"`comparisons` for more information about rich comparisons."
msgstr ""
"*a* と *b* の \"拡張比較 (rich comparisons)\" を行います。具体的には、 "
"``lt(a, b)`` は ``a < b`` 、 ``le(a, b)`` は ``a <= b`` 、 ``eq(a, b)`` は "
"``a == b`` 、 ``ne(a, b)`` は ``a != b`` 、 ``gt(a, b)`` は ``a > b`` 、そし"
"て ``ge(a, b)`` は ``a >= b`` と等価です。これらの関数はどのような値を返して"
"もよく、ブール値として解釈できてもできなくてもかまいません。拡張比較の詳細に"
"ついては :ref:`comparisons` を参照してください。"

#: ../../library/operator.rst:54
msgid ""
"The logical operations are also generally applicable to all objects, and "
"support truth tests, identity tests, and boolean operations:"
msgstr ""
"論理演算もまた全てのオブジェクトに対して適用でき、真理値判定、同一性判定およ"
"びブール演算をサポートします:"

#: ../../library/operator.rst:61
msgid ""
"Return the outcome of :keyword:`not` *obj*.  (Note that there is no :meth:"
"`__not__` method for object instances; only the interpreter core defines "
"this operation.  The result is affected by the :meth:`__bool__` and :meth:"
"`__len__` methods.)"
msgstr ""
":keyword:`not` *obj* の結果を返します。(オブジェクトインスタンスには :meth:"
"`__not__` メソッドは無いので注意してください; インタプリタコアがこの演算を定"
"義しているだけです。結果は :meth:`__bool__` および :meth:`__len__` メソッドに"
"影響されます。)"

#: ../../library/operator.rst:69
msgid ""
"Return :const:`True` if *obj* is true, and :const:`False` otherwise.  This "
"is equivalent to using the :class:`bool` constructor."
msgstr ""
"*obj* が真の場合 :const:`True`  を返し、そうでない場合 :const:`False` を返し"
"ます。この関数は :class:`bool` のコンストラクタ呼び出しと同等です。"

#: ../../library/operator.rst:75
msgid "Return ``a is b``.  Tests object identity."
msgstr "``a is b`` を返します。オブジェクトの同一性を判定します。"

#: ../../library/operator.rst:80
msgid "Return ``a is not b``.  Tests object identity."
msgstr "``a is not b`` を返します。オブジェクトの同一性を判定します。"

#: ../../library/operator.rst:83
msgid "The mathematical and bitwise operations are the most numerous:"
msgstr "演算子で最も多いのは数学演算およびビット単位の演算です:"

#: ../../library/operator.rst:89
msgid "Return the absolute value of *obj*."
msgstr "*obj* の絶対値を返します。"

#: ../../library/operator.rst:95
msgid "Return ``a + b``, for *a* and *b* numbers."
msgstr "数値 *a* および *b* について ``a + b`` を返します。"

#: ../../library/operator.rst:101
msgid "Return the bitwise and of *a* and *b*."
msgstr "*a* と *b* のビット単位論理積を返します。"

#: ../../library/operator.rst:107
msgid "Return ``a // b``."
msgstr "``a // b`` を返します。"

#: ../../library/operator.rst:113
msgid "Return *a* converted to an integer.  Equivalent to ``a.__index__()``."
msgstr "整数に変換された *a* を返します。``a.__index__()`` と同等です。"

#: ../../library/operator.rst:115
msgid ""
"The result always has exact type :class:`int`.  Previously, the result could "
"have been an instance of a subclass of ``int``."
msgstr ""
"結果は常に厳密な :class:`int` 型です。\n"
"以前は、結果は ``int`` のサブクラスのインスタンスのこともありました。"

#: ../../library/operator.rst:125
msgid ""
"Return the bitwise inverse of the number *obj*.  This is equivalent to "
"``~obj``."
msgstr "*obj* のビット単位反転を返します。``~obj`` と同じです。"

#: ../../library/operator.rst:131
msgid "Return *a* shifted left by *b*."
msgstr "*a* の *b* ビット左シフトを返します。"

#: ../../library/operator.rst:137
msgid "Return ``a % b``."
msgstr "``a % b`` を返します。"

#: ../../library/operator.rst:143
msgid "Return ``a * b``, for *a* and *b* numbers."
msgstr "数値 *a* および *b* について ``a * b`` を返します。"

#: ../../library/operator.rst:149
msgid "Return ``a @ b``."
msgstr "``a @ b`` を返します。"

#: ../../library/operator.rst:157
msgid "Return *obj* negated (``-obj``)."
msgstr "負の *obj* (``-obj``) を返します。"

#: ../../library/operator.rst:163
msgid "Return the bitwise or of *a* and *b*."
msgstr "*a* と *b* のビット単位論理和を返します。"

#: ../../library/operator.rst:169
msgid "Return *obj* positive (``+obj``)."
msgstr "正の *obj* (``+obj``) を返します。"

#: ../../library/operator.rst:175
msgid "Return ``a ** b``, for *a* and *b* numbers."
msgstr "数値 *a* および *b* について ``a ** b`` を返します。"

#: ../../library/operator.rst:181
msgid "Return *a* shifted right by *b*."
msgstr "*a* の *b* ビット右シフトを返します。"

#: ../../library/operator.rst:187
msgid "Return ``a - b``."
msgstr "``a - b`` を返します。"

#: ../../library/operator.rst:193
msgid ""
"Return ``a / b`` where 2/3 is .66 rather than 0.  This is also known as "
"\"true\" division."
msgstr ""
"2/3 が 0 ではなく 0.66 となるような ``a / b``  を返します。\n"
"\"真の\" 除算としても知られています。"

#: ../../library/operator.rst:200
msgid "Return the bitwise exclusive or of *a* and *b*."
msgstr "*a* および *b* のビット単位排他的論理和を返します。"

#: ../../library/operator.rst:203
msgid ""
"Operations which work with sequences (some of them with mappings too) "
"include:"
msgstr ""
"シーケンスを扱う演算子（いくつかの演算子はマッピングも扱います）には以下のよ"
"うなものがあります:"

#: ../../library/operator.rst:208
msgid "Return ``a + b`` for *a* and *b* sequences."
msgstr "シーケンス *a* および *b* について ``a + b`` を返します。"

#: ../../library/operator.rst:214
msgid "Return the outcome of the test ``b in a``. Note the reversed operands."
msgstr ""
"``b in a`` の判定結果を返します。被演算子が左右反転しているので注意してくださ"
"い。"

#: ../../library/operator.rst:219
msgid "Return the number of occurrences of *b* in *a*."
msgstr "*a* の中に *b* が出現する回数を返します。"

#: ../../library/operator.rst:225
msgid "Remove the value of *a* at index *b*."
msgstr "*a* でインデクスが *b* の値を削除します。"

#: ../../library/operator.rst:231
msgid "Return the value of *a* at index *b*."
msgstr "*a* でインデクスが *b* の値を返します。"

#: ../../library/operator.rst:236
msgid "Return the index of the first of occurrence of *b* in *a*."
msgstr "*a* で最初に *b* が出現する場所のインデクスを返します。"

#: ../../library/operator.rst:242
msgid "Set the value of *a* at index *b* to *c*."
msgstr "*a* でインデクスが *b* の値を *c* に設定します。"

#: ../../library/operator.rst:247
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`object.__length_hint__`, and "
"finally return the default value."
msgstr ""
"オブジェクト *o* の概算の長さを返します。最初に実際の長さを、次に :meth:"
"`object.__length_hint__` を使って概算の長さを、そして最後にデフォルトの値を返"
"そうとします。"

#: ../../library/operator.rst:253
msgid ""
"The :mod:`operator` module also defines tools for generalized attribute and "
"item lookups.  These are useful for making fast field extractors as "
"arguments for :func:`map`, :func:`sorted`, :meth:`itertools.groupby`, or "
"other functions that expect a function argument."
msgstr ""
":mod:`operator` モジュールは属性とアイテムの汎用的な検索のための道具も定義し"
"ています。 :func:`map`, :func:`sorted`, :meth:`itertools.groupby`,  や関数を"
"引数に取るその他の関数に対して高速にフィールドを抽出する際に引数として使うと"
"便利です。"

#: ../../library/operator.rst:262
msgid ""
"Return a callable object that fetches *attr* from its operand. If more than "
"one attribute is requested, returns a tuple of attributes. The attribute "
"names can also contain dots. For example:"
msgstr ""
"演算対象から *attr* を取得する呼び出し可能なオブジェクトを返します。二つ以上"
"の属性を要求された場合には、属性のタプルを返します。属性名はドットを含むこと"
"もできます。例えば:"

#: ../../library/operator.rst:266
msgid "After ``f = attrgetter('name')``, the call ``f(b)`` returns ``b.name``."
msgstr ""
"``f = attrgetter('name')`` とした後で、``f(b)`` を呼び出すと ``b.name`` を返"
"します。"

#: ../../library/operator.rst:268
msgid ""
"After ``f = attrgetter('name', 'date')``, the call ``f(b)`` returns ``(b."
"name, b.date)``."
msgstr ""
"``f = attrgetter('name', 'date')`` とした後で、``f(b)`` を呼び出すと ``(b."
"name, b.date)`` を返します。"

#: ../../library/operator.rst:271
msgid ""
"After ``f = attrgetter('name.first', 'name.last')``, the call ``f(b)`` "
"returns ``(b.name.first, b.name.last)``."
msgstr ""
"``f = attrgetter('name.first', 'name.last')`` とした後で、``f(b)`` を呼び出す"
"と ``(b.name.first, b.name.last)`` を返します。"

#: ../../library/operator.rst:274 ../../library/operator.rst:306
#: ../../library/operator.rst:354
msgid "Equivalent to::"
msgstr "次と等価です::"

#: ../../library/operator.rst:297
msgid ""
"Return a callable object that fetches *item* from its operand using the "
"operand's :meth:`__getitem__` method.  If multiple items are specified, "
"returns a tuple of lookup values.  For example:"
msgstr ""
"演算対象からその :meth:`__getitem__` メソッドを使って *item* を取得する呼び出"
"し可能なオブジェクトを返します。 二つ以上のアイテムを要求された場合には、アイ"
"テムのタプルを返します。例えば:"

#: ../../library/operator.rst:301
msgid "After ``f = itemgetter(2)``, the call ``f(r)`` returns ``r[2]``."
msgstr ""
"``f = itemgetter(2)`` とした後で、``f(r)`` を呼び出すと ``r[2]`` を返します。"

#: ../../library/operator.rst:303
msgid ""
"After ``g = itemgetter(2, 5, 3)``, the call ``g(r)`` returns ``(r[2], r[5], "
"r[3])``."
msgstr ""
"``g = itemgetter(2, 5, 3)`` とした後で、``g(r)`` を呼び出すと ``(r[2], r[5], "
"r[3])`` を返します。"

#: ../../library/operator.rst:318
msgid ""
"The items can be any type accepted by the operand's :meth:`__getitem__` "
"method.  Dictionaries accept any hashable value.  Lists, tuples, and strings "
"accept an index or a slice:"
msgstr ""
"アイテムは被演算子の :meth:`__getitem__` メソッドが受け付けるどんな型でも構い"
"ません。辞書ならば任意のハッシュ可能な値を受け付けます。リスト、タプル、文字"
"列などはインデクスかスライスを受け付けます:"

#: ../../library/operator.rst:332
msgid ""
"Example of using :func:`itemgetter` to retrieve specific fields from a tuple "
"record:"
msgstr ""
":func:`itemgetter` を使って特定のフィールドをタプルレコードから取り出す例:"

#: ../../library/operator.rst:345
msgid ""
"Return a callable object that calls the method *name* on its operand.  If "
"additional arguments and/or keyword arguments are given, they will be given "
"to the method as well.  For example:"
msgstr ""
"引数の *name* メソッドを呼び出す呼び出し可能オブジェクトを返します。追加の引"
"数および/またはキーワード引数が与えられると、これらもそのメソッドに引き渡され"
"ます。例えば:"

#: ../../library/operator.rst:349
msgid ""
"After ``f = methodcaller('name')``, the call ``f(b)`` returns ``b.name()``."
msgstr ""
"``f = methodcaller('name')`` とした後で、``f(b)`` を呼び出すと ``b.name()`` "
"を返します。"

#: ../../library/operator.rst:351
msgid ""
"After ``f = methodcaller('name', 'foo', bar=1)``, the call ``f(b)`` returns "
"``b.name('foo', bar=1)``."
msgstr ""
"``f = methodcaller('name', 'foo', bar=1)`` とした後で、``f(b)`` を呼び出すと "
"``b.name('foo', bar=1)`` を返します。"

#: ../../library/operator.rst:365
msgid "Mapping Operators to Functions"
msgstr "演算子から関数への対応表"

#: ../../library/operator.rst:367
msgid ""
"This table shows how abstract operations correspond to operator symbols in "
"the Python syntax and the functions in the :mod:`operator` module."
msgstr ""
"下のテーブルでは、個々の抽象的な操作が、どのように Python 構文上の各演算子"
"や :mod:`operator` モジュールの関数に対応しているかを示しています。"

#: ../../library/operator.rst:371
msgid "Operation"
msgstr "演算"

#: ../../library/operator.rst:371
msgid "Syntax"
msgstr "操作"

#: ../../library/operator.rst:371
msgid "Function"
msgstr "関数"

#: ../../library/operator.rst:373
msgid "Addition"
msgstr "加算"

#: ../../library/operator.rst:373
msgid "``a + b``"
msgstr "``a + b``"

#: ../../library/operator.rst:373
msgid "``add(a, b)``"
msgstr "``add(a, b)``"

#: ../../library/operator.rst:375
msgid "Concatenation"
msgstr "結合"

#: ../../library/operator.rst:375
msgid "``seq1 + seq2``"
msgstr "``seq1 + seq2``"

#: ../../library/operator.rst:375
msgid "``concat(seq1, seq2)``"
msgstr "``concat(seq1, seq2)``"

#: ../../library/operator.rst:377
msgid "Containment Test"
msgstr "包含判定"

#: ../../library/operator.rst:377
msgid "``obj in seq``"
msgstr "``obj in seq``"

#: ../../library/operator.rst:377
msgid "``contains(seq, obj)``"
msgstr "``contains(seq, obj)``"

#: ../../library/operator.rst:379 ../../library/operator.rst:381
msgid "Division"
msgstr "除算"

#: ../../library/operator.rst:379
msgid "``a / b``"
msgstr "``a / b``"

#: ../../library/operator.rst:379
msgid "``truediv(a, b)``"
msgstr "``truediv(a, b)``"

#: ../../library/operator.rst:381
msgid "``a // b``"
msgstr "``a // b``"

#: ../../library/operator.rst:381
msgid "``floordiv(a, b)``"
msgstr "``floordiv(a, b)``"

#: ../../library/operator.rst:383
msgid "Bitwise And"
msgstr "ビット単位論理積"

#: ../../library/operator.rst:383
msgid "``a & b``"
msgstr "``a & b``"

#: ../../library/operator.rst:383
msgid "``and_(a, b)``"
msgstr "``and_(a, b)``"

#: ../../library/operator.rst:385
msgid "Bitwise Exclusive Or"
msgstr "ビット単位排他的論理和"

#: ../../library/operator.rst:385
msgid "``a ^ b``"
msgstr "``a ^ b``"

#: ../../library/operator.rst:385
msgid "``xor(a, b)``"
msgstr "``xor(a, b)``"

#: ../../library/operator.rst:387
msgid "Bitwise Inversion"
msgstr "ビット単位反転"

#: ../../library/operator.rst:387
msgid "``~ a``"
msgstr "``~ a``"

#: ../../library/operator.rst:387
msgid "``invert(a)``"
msgstr "``invert(a)``"

#: ../../library/operator.rst:389
msgid "Bitwise Or"
msgstr "ビット単位論理和"

#: ../../library/operator.rst:389
msgid "``a | b``"
msgstr "``a | b``"

#: ../../library/operator.rst:389
msgid "``or_(a, b)``"
msgstr "``or_(a, b)``"

#: ../../library/operator.rst:391
msgid "Exponentiation"
msgstr "冪乗"

#: ../../library/operator.rst:391
msgid "``a ** b``"
msgstr "``a ** b``"

#: ../../library/operator.rst:391
msgid "``pow(a, b)``"
msgstr "``pow(a, b)``"

#: ../../library/operator.rst:393 ../../library/operator.rst:395
msgid "Identity"
msgstr "同一性"

#: ../../library/operator.rst:393
msgid "``a is b``"
msgstr "``a is b``"

#: ../../library/operator.rst:393
msgid "``is_(a, b)``"
msgstr "``is_(a, b)``"

#: ../../library/operator.rst:395
msgid "``a is not b``"
msgstr "``a is not b``"

#: ../../library/operator.rst:395
msgid "``is_not(a, b)``"
msgstr "``is_not(a, b)``"

#: ../../library/operator.rst:397
msgid "Indexed Assignment"
msgstr "インデクス指定の代入"

#: ../../library/operator.rst:397
msgid "``obj[k] = v``"
msgstr "``obj[k] = v``"

#: ../../library/operator.rst:397
msgid "``setitem(obj, k, v)``"
msgstr "``setitem(obj, k, v)``"

#: ../../library/operator.rst:399
msgid "Indexed Deletion"
msgstr "インデクス指定の削除"

#: ../../library/operator.rst:399
msgid "``del obj[k]``"
msgstr "``del obj[k]``"

#: ../../library/operator.rst:399
msgid "``delitem(obj, k)``"
msgstr "``delitem(obj, k)``"

#: ../../library/operator.rst:401
msgid "Indexing"
msgstr "インデクス指定"

#: ../../library/operator.rst:401
msgid "``obj[k]``"
msgstr "``obj[k]``"

#: ../../library/operator.rst:401
msgid "``getitem(obj, k)``"
msgstr "``getitem(obj, k)``"

#: ../../library/operator.rst:403
msgid "Left Shift"
msgstr "左シフト"

#: ../../library/operator.rst:403
msgid "``a << b``"
msgstr "``a << b``"

#: ../../library/operator.rst:403
msgid "``lshift(a, b)``"
msgstr "``lshift(a, b)``"

#: ../../library/operator.rst:405
msgid "Modulo"
msgstr "剰余"

#: ../../library/operator.rst:405
msgid "``a % b``"
msgstr "``a % b``"

#: ../../library/operator.rst:405
msgid "``mod(a, b)``"
msgstr "``mod(a, b)``"

#: ../../library/operator.rst:407
msgid "Multiplication"
msgstr "乗算"

#: ../../library/operator.rst:407
msgid "``a * b``"
msgstr "``a * b``"

#: ../../library/operator.rst:407
msgid "``mul(a, b)``"
msgstr "``mul(a, b)``"

#: ../../library/operator.rst:409
msgid "Matrix Multiplication"
msgstr "行列の乗算"

#: ../../library/operator.rst:409
msgid "``a @ b``"
msgstr "``a @ b``"

#: ../../library/operator.rst:409
msgid "``matmul(a, b)``"
msgstr "``matmul(a, b)``"

#: ../../library/operator.rst:411
msgid "Negation (Arithmetic)"
msgstr "(算術) 負"

#: ../../library/operator.rst:411
msgid "``- a``"
msgstr "``- a``"

#: ../../library/operator.rst:411
msgid "``neg(a)``"
msgstr "``neg(a)``"

#: ../../library/operator.rst:413
msgid "Negation (Logical)"
msgstr "(論理) 否"

#: ../../library/operator.rst:413
msgid "``not a``"
msgstr "``not a``"

#: ../../library/operator.rst:413
msgid "``not_(a)``"
msgstr "``not_(a)``"

#: ../../library/operator.rst:415
msgid "Positive"
msgstr "正"

#: ../../library/operator.rst:415
msgid "``+ a``"
msgstr "``+ a``"

#: ../../library/operator.rst:415
msgid "``pos(a)``"
msgstr "``pos(a)``"

#: ../../library/operator.rst:417
msgid "Right Shift"
msgstr "右シフト"

#: ../../library/operator.rst:417
msgid "``a >> b``"
msgstr "``a >> b``"

#: ../../library/operator.rst:417
msgid "``rshift(a, b)``"
msgstr "``rshift(a, b)``"

#: ../../library/operator.rst:419
msgid "Slice Assignment"
msgstr "スライス指定の代入"

#: ../../library/operator.rst:419
msgid "``seq[i:j] = values``"
msgstr "``seq[i:j] = values``"

#: ../../library/operator.rst:419
msgid "``setitem(seq, slice(i, j), values)``"
msgstr "``setitem(seq, slice(i, j), values)``"

#: ../../library/operator.rst:421
msgid "Slice Deletion"
msgstr "スライス指定の削除"

#: ../../library/operator.rst:421
msgid "``del seq[i:j]``"
msgstr "``del seq[i:j]``"

#: ../../library/operator.rst:421
msgid "``delitem(seq, slice(i, j))``"
msgstr "``delitem(seq, slice(i, j))``"

#: ../../library/operator.rst:423
msgid "Slicing"
msgstr "スライス指定"

#: ../../library/operator.rst:423
msgid "``seq[i:j]``"
msgstr "``seq[i:j]``"

#: ../../library/operator.rst:423
msgid "``getitem(seq, slice(i, j))``"
msgstr "``getitem(seq, slice(i, j))``"

#: ../../library/operator.rst:425
msgid "String Formatting"
msgstr "文字列書式化"

#: ../../library/operator.rst:425
msgid "``s % obj``"
msgstr "``s % obj``"

#: ../../library/operator.rst:425
msgid "``mod(s, obj)``"
msgstr "``mod(s, obj)``"

#: ../../library/operator.rst:427
msgid "Subtraction"
msgstr "減算"

#: ../../library/operator.rst:427
msgid "``a - b``"
msgstr "``a - b``"

#: ../../library/operator.rst:427
msgid "``sub(a, b)``"
msgstr "``sub(a, b)``"

#: ../../library/operator.rst:429
msgid "Truth Test"
msgstr "真理値判定"

#: ../../library/operator.rst:429
msgid "``obj``"
msgstr "``obj``"

#: ../../library/operator.rst:429
msgid "``truth(obj)``"
msgstr "``truth(obj)``"

#: ../../library/operator.rst:431 ../../library/operator.rst:433
#: ../../library/operator.rst:439 ../../library/operator.rst:441
msgid "Ordering"
msgstr "順序付け"

#: ../../library/operator.rst:431
msgid "``a < b``"
msgstr "``a < b``"

#: ../../library/operator.rst:431
msgid "``lt(a, b)``"
msgstr "``lt(a, b)``"

#: ../../library/operator.rst:433
msgid "``a <= b``"
msgstr "``a <= b``"

#: ../../library/operator.rst:433
msgid "``le(a, b)``"
msgstr "``le(a, b)``"

#: ../../library/operator.rst:435
msgid "Equality"
msgstr "等価性"

#: ../../library/operator.rst:435
msgid "``a == b``"
msgstr "``a == b``"

#: ../../library/operator.rst:435
msgid "``eq(a, b)``"
msgstr "``eq(a, b)``"

#: ../../library/operator.rst:437
msgid "Difference"
msgstr "不等性"

#: ../../library/operator.rst:437
msgid "``a != b``"
msgstr "``a != b``"

#: ../../library/operator.rst:437
msgid "``ne(a, b)``"
msgstr "``ne(a, b)``"

#: ../../library/operator.rst:439
msgid "``a >= b``"
msgstr "``a >= b``"

#: ../../library/operator.rst:439
msgid "``ge(a, b)``"
msgstr "``ge(a, b)``"

#: ../../library/operator.rst:441
msgid "``a > b``"
msgstr "``a > b``"

#: ../../library/operator.rst:441
msgid "``gt(a, b)``"
msgstr "``gt(a, b)``"

#: ../../library/operator.rst:445
msgid "In-place Operators"
msgstr "インプレース (in-place) 演算子"

#: ../../library/operator.rst:447
msgid ""
"Many operations have an \"in-place\" version.  Listed below are functions "
"providing a more primitive access to in-place operators than the usual "
"syntax does; for example, the :term:`statement` ``x += y`` is equivalent to "
"``x = operator.iadd(x, y)``.  Another way to put it is to say that ``z = "
"operator.iadd(x, y)`` is equivalent to the compound statement ``z = x; z += "
"y``."
msgstr ""
"多くの演算に「インプレース」版があります。 以下の関数はそうした演算子の通常の"
"文法に比べてより素朴な呼び出し方を提供します。たとえば、 :term:`文 "
"<statement>` ``x += y`` は ``x = operator.iadd(x, y)`` と等価です。別の言い方"
"をすると、 ``z = operator.iadd(x, y)`` は複合文 ``z = x; z += y`` と等価で"
"す。"

#: ../../library/operator.rst:454
msgid ""
"In those examples, note that when an in-place method is called, the "
"computation and assignment are performed in two separate steps.  The in-"
"place functions listed below only do the first step, calling the in-place "
"method.  The second step, assignment, is not handled."
msgstr ""
"なお、これらの例では、インプレースメソッドが呼び出されたとき、計算と代入は二"
"段階に分けて行われます。以下に挙げるインプレース関数は、インプレースメソッド"
"を呼び出してその第一段階だけを行います。第二段階の代入は扱われません。"

#: ../../library/operator.rst:459
msgid ""
"For immutable targets such as strings, numbers, and tuples, the updated "
"value is computed, but not assigned back to the input variable:"
msgstr ""
"文字列、数、タプルのようなイミュータブルなターゲットでは、更新された値が計算"
"されますが、入力変数に代入し返されはしません。"

#: ../../library/operator.rst:468
msgid ""
"For mutable targets such as lists and dictionaries, the in-place method will "
"perform the update, so no subsequent assignment is necessary:"
msgstr ""
"リストや辞書のようなミュータブルなターゲットでは、インプレースメソッドは更新"
"を行うので、その後に代入をする必要はありません。"

#: ../../library/operator.rst:480
msgid "``a = iadd(a, b)`` is equivalent to ``a += b``."
msgstr "``a = iadd(a, b)`` は ``a += b`` と等価です。"

#: ../../library/operator.rst:486
msgid "``a = iand(a, b)`` is equivalent to ``a &= b``."
msgstr "``a = iand(a, b)`` は ``a &= b`` と等価です。"

#: ../../library/operator.rst:492
msgid ""
"``a = iconcat(a, b)`` is equivalent to ``a += b`` for *a* and *b* sequences."
msgstr ""
"``a = iconcat(a, b)`` は二つのシーケンス *a* と *b* に対し ``a += b`` と等価"
"です。"

#: ../../library/operator.rst:498
msgid "``a = ifloordiv(a, b)`` is equivalent to ``a //= b``."
msgstr "``a = ifloordiv(a, b)`` は ``a //= b`` と等価です。"

#: ../../library/operator.rst:504
msgid "``a = ilshift(a, b)`` is equivalent to ``a <<= b``."
msgstr "``a = ilshift(a, b)`` は ``a <<= b`` と等価です。"

#: ../../library/operator.rst:510
msgid "``a = imod(a, b)`` is equivalent to ``a %= b``."
msgstr "``a = imod(a, b)`` は ``a %= b`` と等価です。"

#: ../../library/operator.rst:516
msgid "``a = imul(a, b)`` is equivalent to ``a *= b``."
msgstr "``a = imul(a, b)`` は ``a *= b`` と等価です。"

#: ../../library/operator.rst:522
msgid "``a = imatmul(a, b)`` is equivalent to ``a @= b``."
msgstr "``a = imatmul(a, b)`` は ``a @= b`` と等価です。"

#: ../../library/operator.rst:530
msgid "``a = ior(a, b)`` is equivalent to ``a |= b``."
msgstr "``a = ior(a, b)`` は ``a |= b`` と等価です。"

#: ../../library/operator.rst:536
msgid "``a = ipow(a, b)`` is equivalent to ``a **= b``."
msgstr "``a = ipow(a, b)`` は ``a **= b`` と等価です。"

#: ../../library/operator.rst:542
msgid "``a = irshift(a, b)`` is equivalent to ``a >>= b``."
msgstr "``a = irshift(a, b)`` は ``a >>= b`` と等価です。"

#: ../../library/operator.rst:548
msgid "``a = isub(a, b)`` is equivalent to ``a -= b``."
msgstr "``a = isub(a, b)`` は ``a -= b`` と等価です。"

#: ../../library/operator.rst:554
msgid "``a = itruediv(a, b)`` is equivalent to ``a /= b``."
msgstr "``a = itruediv(a, b)`` は ``a /= b`` と等価です。"

#: ../../library/operator.rst:560
msgid "``a = ixor(a, b)`` is equivalent to ``a ^= b``."
msgstr "``a = ixor(a, b)`` は ``a ^= b`` と等価です。"
