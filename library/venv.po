# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nozomu Kaneko <nozom.kaneko@gmail.com>, 2017
# Ikuru K <kanumaiku@gmail.com>, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2017
# Arihiro TAKASE, 2017
# Yusuke Miyazaki <miyazaki.dev@gmail.com>, 2017
# E. Kawashima, 2017
# Osamu NAKAMURA, 2017
# Inada Naoki <songofacandy@gmail.com>, 2019
# tomo, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-03 13:23+0000\n"
"PO-Revision-Date: 2017-02-16 23:34+0000\n"
"Last-Translator: tomo, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ":mod:`venv` --- 仮想環境の作成"

#: ../../library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr "**ソースコード:** :source:`Lib/venv/`"

#: ../../library/venv.rst:18
msgid ""
"The :mod:`venv` module provides support for creating lightweight \"virtual "
"environments\" with their own site directories, optionally isolated from "
"system site directories.  Each virtual environment has its own Python binary"
" (which matches the version of the binary that was used to create this "
"environment) and can have its own independent set of installed Python "
"packages in its site directories."
msgstr ""
":mod:`venv` モジュールは、軽量な \"仮想環境\" の作成のサポートを提供します。仮想環境には、仮想環境ごとの site "
"ディレクトリがあり、これはシステムの site ディレクトリから分離させることができます。それぞれの仮想環境には、それ自身に "
"(この仮想環境を作成するのに使ったバイナリのバージョンに合った) Python バイナリがあり、仮想環境ごとの site ディレクトリに独立した "
"Python パッケージ群をインストールできます。"

#: ../../library/venv.rst:25
msgid "See :pep:`405` for more information about Python virtual environments."
msgstr "Python仮想環境に関してより詳しくは :pep:`405` を参照してください。"

#: ../../library/venv.rst:29
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"
msgstr ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"

#: ../../library/venv.rst:34
msgid "Creating virtual environments"
msgstr "仮想環境の作成"

#: ../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr ":ref:`仮想環境 <venv-def>` を作成するには ``venv`` コマンドを実行します::"

#: ../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it"
" with a ``home`` key pointing to the Python installation from which the "
"command was run (a common name for the target directory is ``.venv``).  It "
"also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory containing a"
" copy/symlink of the Python binary/binaries (as appropriate for the platform"
" or arguments used at environment creation time). It also creates an "
"(initially empty) ``lib/pythonX.Y/site-packages`` subdirectory (on Windows, "
"this is ``Lib\\site-packages``). If an existing directory is specified, it "
"will be re-used."
msgstr ""
"このコマンドを実行すると、ターゲットディレクトリ (および必要なだけの親ディレクトリ) が作成され、その中に ``pyvenv.cfg`` ファイルが置かれます。\n"
"そのファイルの ``home`` キーはこのコマンドを呼び出した Python のインストール場所を指します (よく使われるターゲットディレクトリの名前は ``.venv`` です)。\n"
"このコマンドはまた、 Python バイナリのコピーまたはシンボリックリンク (のプラットフォームあるいは仮想環境作成時に使われた引数に対して適切な方) を含む ``bin``  (Windows では ``Scripts``) サブディレクトリを作成します。\n"
"さらに、 ``lib/pythonX.Y/site-packages`` (Windows では ``Lib\\site-packages``) サブディレクトリも (最初は空の状態で) 作成します。指定したディレクトリが存在している場合は、それが再利用されます。"

#: ../../using/venv-create.inc:17
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is `deprecated in Python 3.6 "
"<https://docs.python.org/dev/whatsnew/3.6.html#deprecated-features>`_."
msgstr ""
"Python 3.3 と 3.4 では、仮想環境の作成に推奨していたツールは ``pyvenv`` でしたが、`Python 3.6では非推奨です "
"<https://docs.python.org/dev/whatsnew/3.6.html#deprecated-features>`_。"

#: ../../using/venv-create.inc:22
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr "仮想環境の作成には、 ``venv`` の使用をお勧めします。"

#: ../../using/venv-create.inc:27
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr "Windows では、 ``venv`` コマンドは次のように実行します::"

#: ../../using/venv-create.inc:31
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""
"あるいは、 :ref:`インストールされている Python <using-on-windows>` のために ``PATH`` 変数や "
"``PATHEXT`` 変数が設定してある場合は次のコマンドでも実行できます::"

#: ../../using/venv-create.inc:36
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "このコマンドを ``-h`` をつけて実行すると利用できるオプションが表示されます::"

#: ../../using/venv-create.inc:68
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "デフォルトで pip をインストールします。``--without-pip`` と ``--copies`` オプションを追加しました。"

#: ../../using/venv-create.inc:72
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr ""
"以前のバージョンでは、対象となるディレクトリが既に存在していた場合は、 ``--clear`` オプションや ``--upgrade`` "
"オプションを付けない限りはエラーを送出していました。"

#: ../../using/venv-create.inc:77
msgid ""
"While symlinks are supported on Windows, they are not recommended. Of "
"particular note is that double-clicking ``python.exe`` in File Explorer will"
" resolve the symlink eagerly and ignore the virtual environment."
msgstr ""
"Windows でもシンボリックリンクはサポートされていますが、シンボリックリンクを使うのは推奨されません。\n"
"特に注目すべきなのは、ファイルエクスプローラ上で ``python.exe`` をダブルクリックすると、シンボリックリンクを貪欲に解決し仮想環境を無視するということです。"

#: ../../using/venv-create.inc:82
msgid ""
"On Microsoft Windows, it may be required to enable the ``Activate.ps1`` "
"script by setting the execution policy for the user. You can do this by "
"issuing the following PowerShell command:"
msgstr ""

#: ../../using/venv-create.inc:86
msgid ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope "
"CurrentUser"
msgstr ""

#: ../../using/venv-create.inc:88
msgid ""
"See `About Execution Policies "
"<ttps:/go.microsoft.com/fwlink/?LinkID=135170>`_ for more information."
msgstr ""

#: ../../using/venv-create.inc:92
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""
"作成された ``pyvenv.cfg`` ファイルには、``include-system-site-packages`` キーも含まれます。これは "
"``venv`` が ``--system-site-packages`` オプションをつけて実行されたなら ``true`` で、そうでなければ "
"``false`` です。"

#: ../../using/venv-create.inc:96
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""
"``--without-pip`` オプションが与えられない限り、``pip`` を仮想環境でブートするために :mod:`ensurepip` "
"が呼ばれます。"

#: ../../using/venv-create.inc:99
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr "``venv`` には複数のパスを渡すことができ、その場合はそれぞれのパスに同一の仮想環境が作成されます。"

#: ../../using/venv-create.inc:103
msgid ""
"Once a virtual environment has been created, it can be \"activated\" using a"
" script in the virtual environment's binary directory. The invocation of the"
" script is platform-specific (`<venv>` must be replaced by the path of the "
"directory containing the virtual environment):"
msgstr ""
"仮想環境の作成が完了すれば、その仮想環境のバイナリディレクトリにあるスクリプトで \"有効化\" できます。\n"
"スクリプトの呼び出し方はプラットフォーム固有です (`<venv>` の部分は、仮想環境があるディレクトリのパスに置き換える必要があります):"

#: ../../using/venv-create.inc:109
msgid "Platform"
msgstr "プラットフォーム"

#: ../../using/venv-create.inc:109
msgid "Shell"
msgstr "シェル"

#: ../../using/venv-create.inc:109
msgid "Command to activate virtual environment"
msgstr "仮想環境を有効化するためのコマンド"

#: ../../using/venv-create.inc:111
msgid "POSIX"
msgstr "POSIX"

#: ../../using/venv-create.inc:111
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../using/venv-create.inc:111
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../../using/venv-create.inc:113
msgid "fish"
msgstr "fish"

#: ../../using/venv-create.inc:113
msgid "$ . <venv>/bin/activate.fish"
msgstr "$ . <venv>/bin/activate.fish"

#: ../../using/venv-create.inc:115
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../using/venv-create.inc:115
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../../using/venv-create.inc:117
msgid "PowerShell Core"
msgstr "PowerShell Core"

#: ../../using/venv-create.inc:117
msgid "$ <venv>/bin/Activate.ps1"
msgstr "$ <venv>/bin/Activate.ps1"

#: ../../using/venv-create.inc:119
msgid "Windows"
msgstr "Windows"

#: ../../using/venv-create.inc:119
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../using/venv-create.inc:119
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"

#: ../../using/venv-create.inc:121
msgid "PowerShell"
msgstr "PowerShell"

#: ../../using/venv-create.inc:121
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"

#: ../../using/venv-create.inc:124
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the virtual environment's binary directory to your path, so that "
"\"python\" invokes the virtual environment's Python interpreter and you can "
"run installed scripts without having to use their full path. However, all "
"scripts installed in a virtual environment should be runnable without "
"activating it, and run with the virtual environment's Python automatically."
msgstr ""
"環境を有効化するのに特別な指定は *必要* ありません;\n"
"有効化は仮想環境のバイナリディレクトリをパスの最初に加えて、 \"python\" で仮想環境の Python インタプリタが呼び出されるようにし、フルパスを入力せずにインストールされたスクリプトを実行できるようにするだけです。\n"
"しかし、インストールされたすべてのスクリプトは有効化しなくても実行可能で、仮想環境の Python で自動的に実行されなければなりません。"

#: ../../using/venv-create.inc:131
msgid ""
"You can deactivate a virtual environment by typing \"deactivate\" in your "
"shell. The exact mechanism is platform-specific and is an internal "
"implementation detail (typically a script or shell function will be used)."
msgstr ""
"シェルで \"deactivate\" と入力することで仮想環境を無効化できます。\n"
"厳密な仕組みはプラットフォーム固有であり、内部の実装詳細です (たいていはスクリプトかシェル関数が使われます)。"

#: ../../using/venv-create.inc:135
msgid "``fish`` and ``csh`` activation scripts."
msgstr "``fish`` および ``csh`` の有効化スクリプト。"

#: ../../using/venv-create.inc:138
msgid ""
"PowerShell activation scripts installed under POSIX for PowerShell Core "
"support."
msgstr "PowerShell Core のサポートのために POSIX 環境にインストールされた、PowerShell 有効化スクリプト。"

#: ../../library/venv.rst:41
msgid ""
"A virtual environment is a Python environment such that the Python "
"interpreter, libraries and scripts installed into it are isolated from those"
" installed in other virtual environments, and (by default) any libraries "
"installed in a \"system\" Python, i.e., one which is installed as part of "
"your operating system."
msgstr ""
"仮想環境とは、その中にインストールされた Python "
"インタープリタ、ライブラリ、そしてスクリプトが、他の仮想環境にインストールされたものから隔離されている Python 環境です。そして "
"(デフォルトでは) 仮想環境は \"システム\" の Python、すなわち OS の一部としてインストールされた Python "
"にインストールされている全てのライブラリからも隔離されています。"

#: ../../library/venv.rst:47
msgid ""
"A virtual environment is a directory tree which contains Python executable "
"files and other files which indicate that it is a virtual environment."
msgstr "仮想環境は、 Python 実行ファイルと、それが仮想環境であることを示す幾つかのファイルを含んだディレクトリツリーです。"

#: ../../library/venv.rst:50
msgid ""
"Common installation tools such as setuptools_ and pip_ work as expected with"
" virtual environments. In other words, when a virtual environment is active,"
" they install Python packages into the virtual environment without needing "
"to be told to do so explicitly."
msgstr ""
"setuptools_ や pip_ などの一般的なインストールツールは期待通りに仮想環境と連係します。\n"
"言い換えると、仮想環境が有効なときには、 Python パッケージを仮想環境へインストールするのに、インストールツールへの明示的な指示は必要ありません。"

#: ../../library/venv.rst:55
msgid ""
"When a virtual environment is active (i.e., the virtual environment's Python"
" interpreter is running), the attributes :attr:`sys.prefix` and "
":attr:`sys.exec_prefix` point to the base directory of the virtual "
"environment, whereas :attr:`sys.base_prefix` and "
":attr:`sys.base_exec_prefix` point to the non-virtual environment Python "
"installation which was used to create the virtual environment. If a virtual "
"environment is not active, then :attr:`sys.prefix` is the same as "
":attr:`sys.base_prefix` and :attr:`sys.exec_prefix` is the same as "
":attr:`sys.base_exec_prefix` (they all point to a non-virtual environment "
"Python installation)."
msgstr ""
"仮想環境が有効な場合 (すなわち、仮想環境の Python インタープリタを実行しているとき)、 :attr:`sys.prefix` と :attr:`sys.exec_prefix` は仮想環境のベースディレクトリを示します。\n"
"代わりに :attr:`sys.base_prefix` と :attr:`sys.base_exec_prefix` が仮想環境を作るときに使った、仮想環境ではない環境の Python がインストールされている場所を示します。\n"
"仮想環境が無効の時は、 :attr:`sys.prefix` は :attr:`sys.base_prefix` と、 :attr:`sys.exec_prefix` は :attr:`sys.base_exec_prefix` と同じになります (全て仮想環境ではない環境の Python のインストール場所を示します)。"

#: ../../library/venv.rst:66
msgid ""
"When a virtual environment is active, any options that change the "
"installation path will be ignored from all :mod:`distutils` configuration "
"files to prevent projects being inadvertently installed outside of the "
"virtual environment."
msgstr ""
"仮想環境が有効なときに、不注意で仮想環境の外にプロジェクトがインストールされることを避けるために、インストールパスを変更するあらゆるオプションは "
":mod:`distutils` の全ての設定ファイルによって無視されます。"

#: ../../library/venv.rst:71
msgid ""
"When working in a command shell, users can make a virtual environment active"
" by running an ``activate`` script in the virtual environment's executables "
"directory (the precise filename and command to use the file is shell-"
"dependent), which prepends the virtual environment's directory for "
"executables to the ``PATH`` environment variable for the running shell. "
"There should be no need in other circumstances to activate a virtual "
"environment; scripts installed into virtual environments have a \"shebang\" "
"line which points to the virtual environment's Python interpreter. This "
"means that the script will run with that interpreter regardless of the value"
" of ``PATH``. On Windows, \"shebang\" line processing is supported if you "
"have the Python Launcher for Windows installed (this was added to Python in "
"3.3 - see :pep:`397` for more details). Thus, double-clicking an installed "
"script in a Windows Explorer window should run the script with the correct "
"interpreter without there needing to be any reference to its virtual "
"environment in ``PATH``."
msgstr ""
"コマンドシェルで作業をしているとき、仮想環境の実行可能ファイルディレクトリにある ``activate`` スクリプト (正確なファイル名とそのファイルを使うコマンドはシェル依存です) を実行して、仮想環境を有効化できます。\n"
"このスクリプトは仮想環境の実行可能ファイルのディレクトリを、実行中のシェルの ``PATH`` 環境変数の先頭に差し込みます。\n"
"それ以外の状況では、仮想環境を有効化するための作業は必要無いはずです。仮想環境にインストールされたスクリプトには、仮想環境の Python インタプリタを指す \"shebang\" 行があります。\n"
"これはつまり、スクリプトは ``PATH`` の値に関係無く、仮想環境のインタプリタで実行されるということです。\n"
"Windows では、 Windows 用の Python ランチャがインストールされている場合は \"shebang\" 行の処理がサポートされています (この機能はバージョン 3.3 で Python に追加されました - 詳細は :pep:`397` を参照してください)。\n"
"従って、インストールされたスクリプトを Windows のエクスプローラのウィンドウからダブルクリックすると、 ``PATH`` にその仮想環境への参照を持たせる必要無く、そのスクリプトが正しいインタープリタで実行されるはずです。"

#: ../../library/venv.rst:91
msgid "API"
msgstr "API"

#: ../../library/venv.rst:95
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the "
":class:`EnvBuilder` class."
msgstr ""
"上述の高水準のメソッドは、サードパーティの仮想環境の作成者が環境の作成を必要に応じてカスタマイズするための機構を提供する簡素な API "
"を利用します。それが :class:`EnvBuilder` クラスです。"

#: ../../library/venv.rst:103
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ":class:`EnvBuilder` クラスを実体化するときに、以下のキーワード引数を受け取ります:"

#: ../../library/venv.rst:106
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""
"``system_site_packages`` -- 真偽値で、システムの Python の site-packages "
"を仮想環境から利用できるかどうかを示します (デフォルト: ``False``)。"

#: ../../library/venv.rst:109
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any"
" existing target directory, before creating the environment."
msgstr "``clear`` -- 真偽値で、真の場合環境を作成する前に既存の対象ディレクトリの中身を削除します。"

#: ../../library/venv.rst:112
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the"
" Python binary rather than copying."
msgstr "``symlinks`` -- 真偽値で、Python のバイナリをコピーせずにシンボリックの作成を試みるかどうかを示します。"

#: ../../library/venv.rst:115
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""
"``upgrade`` -- 真偽値で、真の場合実行中の Python で既存の環境をアップグレードします。その Python "
"がインプレースでアップグレードされたときに用います。デフォルトは ``False`` です。"

#: ../../library/venv.rst:119
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""
"``with_pip`` -- 真偽値で、真の場合仮想環境に pip がインストールされていることを保証します。``--default-pip`` "
"オプションで  :mod:`ensurepip` を使用します。"

#: ../../library/venv.rst:123
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be"
" used)."
msgstr ""
"``prompt`` -- 仮想環境が有効になっているときに使われる文字列 (デフォルトは ``None`` "
"で、その環境のディレクトリ名が使われることになります)。"

#: ../../library/venv.rst:127 ../../library/venv.rst:245
msgid "Added the ``with_pip`` parameter"
msgstr "``with_pip`` 引数が追加されました。"

#: ../../library/venv.rst:130 ../../library/venv.rst:248
msgid "Added the ``prompt`` parameter"
msgstr "``prompt`` 引数が追加されました。"

#: ../../library/venv.rst:133
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided :class:`EnvBuilder` class as a base class."
msgstr "サードパーティーの仮想環境ツールの作成者は、 :class:`EnvBuilder` を継承して使うことができます。"

#: ../../library/venv.rst:136
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "返される env-builder オブジェクトには ``create`` というメソッドがあります:"

#: ../../library/venv.rst:140
msgid ""
"Create a virtual environment by specifying the target directory (absolute or"
" relative to the current directory) which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr ""
"仮想環境を持つことになるターゲットディレクトリ (絶対パスあるいは現在のディレクトリからの相対パス) を指定し、仮想環境を作成します。\n"
"``create`` メソッドは、指定されたディレクトリに仮想環境を構築するか、適切な例外を送出します。"

#: ../../library/venv.rst:146
msgid ""
"The ``create`` method of the :class:`EnvBuilder` class illustrates the hooks"
" available for subclass customization::"
msgstr ":class:`EnvBuilder` クラスの ``create`` メソッドは、サブクラスのカスタマイズに使えるフックを説明します::"

#: ../../library/venv.rst:161
msgid ""
"Each of the methods :meth:`ensure_directories`, "
":meth:`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` "
"and :meth:`post_setup` can be overridden."
msgstr ""
"メソッド :meth:`ensure_directories`, :meth:`create_configuration`, "
":meth:`setup_python`, :meth:`setup_scripts`, :meth:`post_setup` "
"はそれぞれオーバーライドできます。"

#: ../../library/venv.rst:167
msgid ""
"Creates the environment directory and all necessary directories, and returns"
" a context object.  This is just a holder for attributes (such as paths), "
"for use by the other methods. The directories are allowed to exist already, "
"as long as either ``clear`` or ``upgrade`` were specified to allow operating"
" on an existing environment directory."
msgstr ""
"仮想環境のディレクトリと全ての必要なディレクトリを作成し、コンテキストオブジェクトを返します。\n"
"これは (パスなどの) 属性を保持しているだけのオブジェクトで、他のメソッドから使うためのものです。\n"
"既存の仮想環境ディレクトリ上での操作を許可するために ``clear`` や ``upgrade`` が指定されている場合に限り、作成されるディレクトリは既に存在していても構いません。"

#: ../../library/venv.rst:175
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr "仮想環境に ``pyvenv.cfg`` 設定ファイルを作成します。"

#: ../../library/venv.rst:179
msgid ""
"Creates a copy or symlink to the Python executable in the environment. On "
"POSIX systems, if a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""
"Python 実行ファイルのコピーまたはシンボリックリンクを仮想環境に作成します。\n"
"POSIX システムで、特定の ``python3.x`` 実行ファイルが使われている場合、同じ名前のファイルが既に存在していない限り、 ``python`` および ``python3`` へのシンボリックリンクがその実行ファイルを指すように作成されます。"

#: ../../library/venv.rst:186
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr "プラットフォームに対応した有効化スクリプトを仮想環境にインストールします。"

#: ../../library/venv.rst:191
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr ""
"サードパーティーライブラリがオーバーライドするための空のメソッドです。このメソッドをオーバーライドして、仮想環境構築後にパッケージのプリインストールなどのステップを実装できます。"

#: ../../library/venv.rst:195
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of copying"
" the actual binaries. In 3.7.2 only :meth:`setup_python` does nothing unless"
" running from a build in the source tree."
msgstr ""
"Windows では、バイナリそのものをコピーするのではなく、``python[w].exe`` にリダイレクトを行うスクリプトを使うようになりました。\n"
"3.7.2 でのみ、ソース群でビルドを実行しているのでなければ  :meth:`setup_python` だけは何もしません。"

#: ../../library/venv.rst:200
msgid ""
"Windows copies the redirector scripts as part of :meth:`setup_python` "
"instead of :meth:`setup_scripts`. This was not the case in 3.7.2. When using"
" symlinks, the original executables will be linked."
msgstr ""
"Windows では、 :meth:`setup_scripts` の代わりに :meth:`setup_python` の一部としてリダイレクトを行うスクリプトをコピーします。\n"
"これは 3.7.2 には当てはまりません。\n"
"シンボリックリンクを使ったときは、オリジナルの実行ファイルをコピーします。"

#: ../../library/venv.rst:205
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""
"これらに加えて、 :class:`EnvBuilder` は :meth:`setup_scripts` やサブクラスの "
":meth:`post_setup` が仮想環境にスクリプトをインストールするためのユーティリティーメソッドを提供しています。"

#: ../../library/venv.rst:211
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""
"*path* は \"common\", \"posix\", \"nt\" "
"ディレクトリを格納したディレクトリへのパスです。各サブディレクトリには仮想環境の bin ディレクトリにインストールするスクリプトを格納します。 "
"\"common\" の中身と、 :data:`os.name` に一致するディレクトリの中身を、以下の置換処理を行いながらコピーします:"

#: ../../library/venv.rst:217
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr "``__VENV_DIR__`` は仮想環境ディレクトリの絶対パスに置換されます。"

#: ../../library/venv.rst:220
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr "``__VENV_NAME__`` は仮想環境の名前 (仮想環境ディレクトリのパスの最後の部分) に置換されます。"

#: ../../library/venv.rst:223
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr "``__VENV_PROMPT__`` はプロンプトに置換されます (括弧で囲まれ空白が続く環境名)。"

#: ../../library/venv.rst:226
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either"
" ``bin`` or ``Scripts``)."
msgstr "``__VENV_BIN_NAME__`` は bin ディレクトリ名 (``bin`` か ``Scripts``) に置換されます。"

#: ../../library/venv.rst:229
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr "``__VENV_PYTHON__`` は仮想環境の Python 実行ファイルの絶対パスに置換されます。"

#: ../../library/venv.rst:232
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr "(既存環境のアップグレード中は) ディレクトリは存在しても構いません。"

#: ../../library/venv.rst:235
msgid "There is also a module-level convenience function:"
msgstr "モジュールレベルの簡易関数もあります:"

#: ../../library/venv.rst:240
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call its"
" :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""
":class:`EnvBuilder` を指定されたキーワード引数を使って作成し、その :meth:`~EnvBuilder.create` メソッドに"
" *env_dir* 引数を渡して実行します。"

#: ../../library/venv.rst:252
msgid "An example of extending ``EnvBuilder``"
msgstr "``EnvBuilder`` を拡張する例"

#: ../../library/venv.rst:254
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing"
" a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr ""
"次のスクリプトで、作成された仮想環境に setuptools と pip をインストールするサブクラスを実装して :class:`EnvBuilder`"
" を拡張する方法を示します::"

#: ../../library/venv.rst:473
msgid ""
"This script is also available for download `online "
"<https://gist.github.com/vsajip/4673395>`_."
msgstr ""
"このスクリプトは `オンライン <https://gist.github.com/vsajip/4673395>`_ "
"よりダウンロードすることも可能です。"
