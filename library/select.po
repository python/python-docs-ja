# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/select.rst:2
msgid ":mod:`select` --- Waiting for I/O completion"
msgstr ":mod:`select` --- I/O 処理の完了を待機する"

#: ../../library/select.rst:9
msgid ""
"This module provides access to the :c:func:`select` and :c:func:`poll` "
"functions available in most operating systems, :c:func:`devpoll` available "
"on Solaris and derivatives, :c:func:`epoll` available on Linux 2.5+ and :c:"
"func:`kqueue` available on most BSD. Note that on Windows, it only works for "
"sockets; on other operating systems, it also works for other file types (in "
"particular, on Unix, it works on pipes). It cannot be used on regular files "
"to determine whether a file has grown since it was last read."
msgstr ""
"このモジュールでは、ほとんどのオペレーティングシステムで利用可能な :c:func:"
"`select` および :c:func:`poll` 関数、Solaris やその派生で利用可能な :c:func:"
"`devpoll` 、Linux 2.5+ で利用可能な :c:func:`epoll` 、多くのBSDで利用可能な :"
"c:func:`kqueue` 関数に対するアクセスを提供しています。 Windows 上ではソケット"
"に対してしか動作しないので注意してください; その他のオペレーティングシステム"
"では、他のファイル形式でも (特に Unixではパイプにも) 動作します。通常のファイ"
"ルに対して適用し、最後にファイルを読み出した時から内容が増えているかを決定す"
"るために使うことはできません。"

#: ../../library/select.rst:20
msgid ""
"The :mod:`selectors` module allows high-level and efficient I/O "
"multiplexing, built upon the :mod:`select` module primitives. Users are "
"encouraged to use the :mod:`selectors` module instead, unless they want "
"precise control over the OS-level primitives used."
msgstr ""
":mod:`selectors` モジュールにより、:mod:`select` モジュールプリミティブに基づ"
"く高水準かつ効率的な I/O の多重化が行うことが出来ます。\n"
"OS レベルプリミティブを使用した正確な制御を求めない限り、代わりに :mod:"
"`selectors` を使用することが推奨されます。"

#: ../../library/select.rst:26
msgid "The module defines the following:"
msgstr "このモジュールは以下を定義します:"

#: ../../library/select.rst:31
msgid "A deprecated alias of :exc:`OSError`."
msgstr ":exc:`OSError` の非推奨のエイリアスです。"

#: ../../library/select.rst:33
msgid "Following :pep:`3151`, this class was made an alias of :exc:`OSError`."
msgstr ""
":pep:`3151` に基づき、このクラスは :exc:`OSError` のエイリアスになりました。"

#: ../../library/select.rst:39
msgid ""
"(Only supported on Solaris and derivatives.)  Returns a ``/dev/poll`` "
"polling object; see section :ref:`devpoll-objects` below for the methods "
"supported by devpoll objects."
msgstr ""
"(Solaris およびその派生でのみサポートされています)\n"
"``/dev/poll`` ポーリングオブジェクトを返します。\n"
"ポーリングオブジェクトが提供しているメソッドについては :ref:`poll-objects` 節"
"を参照してください。"

#: ../../library/select.rst:43
msgid ""
":c:func:`devpoll` objects are linked to the number of file descriptors "
"allowed at the time of instantiation. If your program reduces this value, :c:"
"func:`devpoll` will fail. If your program increases this value, :c:func:"
"`devpoll` may return an incomplete list of active file descriptors."
msgstr ""
":c:func:`devpoll` オブジェクトはインスタンス化時に許されるファイル記述子の数"
"にリンクされます。\n"
"プログラムがこの値を減らす場合 :c:func:`devpoll` は失敗します。\n"
"プログラムがこの値を増やす場合 :c:func:`devpoll` は有効なファイル記述子の不完"
"全なリストを返すことがあります。"

#: ../../library/select.rst:49 ../../library/select.rst:78
#: ../../library/select.rst:105
msgid "The new file descriptor is :ref:`non-inheritable <fd_inheritance>`."
msgstr "新しいファイル記述子は :ref:`継承不可 <fd_inheritance>` です。"

#: ../../library/select.rst:53 ../../library/select.rst:107
msgid "The new file descriptor is now non-inheritable."
msgstr "新しいファイル記述子が継承不可になりました。"

#: ../../library/select.rst:58
msgid ""
"(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, "
"which can be used as Edge or Level Triggered interface for I/O events."
msgstr ""
"(Linux 2.5.44 以降でのみサポート) エッジポーリング (edge polling) オブジェク"
"トを返します。\n"
"このオブジェクトは、 I/O イベントのエッジトリガもしくはレベルトリガインター"
"フェースとして使えます。"

#: ../../library/select.rst:62
msgid ""
"*sizehint* informs epoll about the expected number of events to be "
"registered.  It must be positive, or ``-1`` to use the default. It is only "
"used on older systems where :c:func:`epoll_create1` is not available; "
"otherwise it has no effect (though its value is still checked)."
msgstr ""

#: ../../library/select.rst:67
msgid ""
"*flags* is deprecated and completely ignored.  However, when supplied, its "
"value must be ``0`` or ``select.EPOLL_CLOEXEC``, otherwise ``OSError`` is "
"raised."
msgstr ""

#: ../../library/select.rst:71
msgid ""
"See the :ref:`epoll-objects` section below for the methods supported by "
"epolling objects."
msgstr ""
"エッジポーリングオブジェクトが提供しているメソッドについては :ref:`epoll-"
"objects` 節を参照してください。"

#: ../../library/select.rst:74
msgid ""
"``epoll`` objects support the context management protocol: when used in a :"
"keyword:`with` statement, the new file descriptor is automatically closed at "
"the end of the block."
msgstr ""
"``epoll`` オブジェクトはコンテキストマネジメントプロトコルをサポートしていま"
"す。\n"
":keyword:`with` 文内で使用された場合、新たなファイル記述子はブロックの最後で"
"自動的に閉じられます。"

#: ../../library/select.rst:80
msgid "Added the *flags* parameter."
msgstr "*flags* 引数が追加されました。"

#: ../../library/select.rst:83
msgid ""
"Support for the :keyword:`with` statement was added. The new file descriptor "
"is now non-inheritable."
msgstr ""
":keyword:`with` 文のサポートが追加されました。新しいファイル記述子が継承不可"
"になりました。"

#: ../../library/select.rst:87
msgid ""
"The *flags* parameter.  ``select.EPOLL_CLOEXEC`` is used by default now. "
"Use :func:`os.set_inheritable` to make the file descriptor inheritable."
msgstr ""
"*flags* パラメータ。\n"
"現在ではデフォルトで ``select.EPOLL_CLOEXEC`` が使われます。\n"
"ファイルディスクリプタを継承可能にするには :func:`os.set_inheritable` を使っ"
"てください。"

#: ../../library/select.rst:94
msgid ""
"(Not supported by all operating systems.)  Returns a polling object, which "
"supports registering and unregistering file descriptors, and then polling "
"them for I/O events; see section :ref:`poll-objects` below for the methods "
"supported by polling objects."
msgstr ""
"(全てのオペレーティングシステムでサポートされているわけではありません) ポーリ"
"ングオブジェクトを返します。このオブジェクトはファイル記述子を登録したり登録"
"解除したりすることができ、ファイル記述子に対する I/O イベント発生をポーリング"
"することができます; ポーリングオブジェクトが提供しているメソッドについては :"
"ref:`poll-objects` 節を参照してください。"

#: ../../library/select.rst:102
msgid ""
"(Only supported on BSD.)  Returns a kernel queue object; see section :ref:"
"`kqueue-objects` below for the methods supported by kqueue objects."
msgstr ""
"(BSD でのみサポート) カーネルキュー(kernel queue)オブジェクトを返します。カー"
"ネルキューオブジェクトが提供しているメソッドについては、 :ref:`kqueue-"
"objects` 節を参照してください。"

#: ../../library/select.rst:113
msgid ""
"(Only supported on BSD.)  Returns a kernel event object; see section :ref:"
"`kevent-objects` below for the methods supported by kevent objects."
msgstr ""
"(BSD でのみサポート) カーネルイベント(kernel event)オブジェクトを返します。"
"カーネルイベントオブジェクトが提供しているメソッドについては、 :ref:`kevent-"
"objects` 節を参照してください。"

#: ../../library/select.rst:119
msgid ""
"This is a straightforward interface to the Unix :c:func:`select` system "
"call. The first three arguments are iterables of 'waitable objects': either "
"integers representing file descriptors or objects with a parameterless "
"method named :meth:`~io.IOBase.fileno` returning such an integer:"
msgstr ""
"Unix の :c:func:`select` システムコールに対する直接的なインターフェースです。"
"最初の 3 つの引数は '待機可能オブジェクト' からなるイテラブルです: 待機可能オ"
"ブジェクトとは、ファイル記述子を表す整数値か、そのような整数を返す引数なしメ"
"ソッド :meth:`~io.IOBase.fileno` を持つオブジェクトです。"

#: ../../library/select.rst:124
msgid "*rlist*: wait until ready for reading"
msgstr "*rlist*: 読み込み可能になるまで待機"

#: ../../library/select.rst:125
msgid "*wlist*: wait until ready for writing"
msgstr "*wlist*: 書き込み可能になるまで待機"

#: ../../library/select.rst:126
msgid ""
"*xlist*: wait for an \"exceptional condition\" (see the manual page for what "
"your system considers such a condition)"
msgstr ""
"*xlist*: \"例外状態 (exceptional condition)\" になるまで待機 (\"例外状態\" に"
"ついては、システムのマニュアルページを参照してください)"

#: ../../library/select.rst:129
msgid ""
"Empty iterables are allowed, but acceptance of three empty iterables is "
"platform-dependent. (It is known to work on Unix but not on Windows.)  The "
"optional *timeout* argument specifies a time-out as a floating point number "
"in seconds.  When the *timeout* argument is omitted the function blocks "
"until at least one file descriptor is ready.  A time-out value of zero "
"specifies a poll and never blocks."
msgstr ""
"引数に空のイテラブルを指定してもかまいませんが、3 つの引数全てを空のイテラブ"
"ルにしてもよいかどうかはプラットフォームに依存します (Unix では動作し、"
"Windows では動作しないことが知られています)。オプションの *timeout* 引数には"
"タイムアウトまでの秒数を浮動小数点数で指定します。*timeout* 引数が省略された"
"場合、関数は少なくとも一つのファイル記述子が何らかの準備完了状態になるまでブ"
"ロックします。*timeout* に 0 を指定した場合は、ポーリングを行いブロックしない"
"ことを示します。"

#: ../../library/select.rst:136
msgid ""
"The return value is a triple of lists of objects that are ready: subsets of "
"the first three arguments.  When the time-out is reached without a file "
"descriptor becoming ready, three empty lists are returned."
msgstr ""
"戻り値は準備完了状態のオブジェクトからなる 3 つのリストです: したがってこのリ"
"ストはそれぞれ関数の最初の 3 つの引数のサブセットになります。ファイル記述子の"
"いずれも準備完了にならないままタイムアウトした場合、3 つの空のリストが返され"
"ます。"

#: ../../library/select.rst:144
msgid ""
"Among the acceptable object types in the iterables are Python :term:`file "
"objects <file object>` (e.g. ``sys.stdin``, or objects returned by :func:"
"`open` or :func:`os.popen`), socket objects returned by :func:`socket."
"socket`.  You may also define a :dfn:`wrapper` class yourself, as long as it "
"has an appropriate :meth:`~io.IOBase.fileno` method (that really returns a "
"file descriptor, not just a random integer)."
msgstr ""
"イテラブルの中に含めることのできるオブジェクトは Python :term:`ファイルオブ"
"ジェクト <file object>` (例えば ``sys.stdin`` や、 :func:`open` または :func:"
"`os.popen` が返すオブジェクト)、 :func:`socket.socket` が返すソケットオブジェ"
"クトです。 :dfn:`ラッパー <wrapper>` クラスを自分で定義することもできます。こ"
"の場合、適切な (まったくデタラメな数ではなく本物のファイル記述子を返す) :"
"meth:`~io.IOBase.fileno` メソッドを持つ必要があります。"

#: ../../library/select.rst:155
msgid ""
"File objects on Windows are not acceptable, but sockets are.  On Windows, "
"the underlying :c:func:`select` function is provided by the WinSock library, "
"and does not handle file descriptors that don't originate from WinSock."
msgstr ""
":func:`select` は Windows のファイルオブジェクトを受理しませんが、ソケットは"
"受理します。 Windows では、背後の :c:func:`select` 関数は WinSock ライブラリ"
"で提供されており、 WinSock によって生成されたものではないファイル記述子を扱う"
"ことができないのです。"

#: ../../library/select.rst:160 ../../library/select.rst:266
#: ../../library/select.rst:366 ../../library/select.rst:454
#: ../../library/select.rst:495
msgid ""
"The function is now retried with a recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception (see :pep:`475` for "
"the rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"この関数は、シグナルによって中断された時に、 :exc:`InterruptedError` を上げる"
"代わりに再計算されたタイムアウトによってリトライするようになりました。ただ"
"し、シグナルハンドラが例外を起こした場合を除きます (この論理的根拠について"
"は :pep:`475` を見てください)。"

#: ../../library/select.rst:169
msgid ""
"The minimum number of bytes which can be written without blocking to a pipe "
"when the pipe has been reported as ready for writing by :func:`~select."
"select`, :func:`poll` or another interface in this module.  This doesn't "
"apply to other kind of file-like objects such as sockets."
msgstr ""
":func:`~select.select`, :func:`poll` またはこのモジュールの別のインターフェー"
"スによってパイプが書き込む準備ができていると報告された時に、ブロックせずにパ"
"イプに書き込むことのできる最小のバイト数。これはソケットなどの他の種類の "
"file-like オブジェクトには適用されません。"

#: ../../library/select.rst:174
msgid "This value is guaranteed by POSIX to be at least 512."
msgstr "この値は POSIX により少なくとも512であることが保証されています。"

#: ../../library/select.rst:177
msgid ":ref:`Availability <availability>`: Unix"
msgstr ":ref:`利用可能な環境 <availability>`: Unix"

#: ../../library/select.rst:184
msgid "``/dev/poll`` Polling Objects"
msgstr "``/dev/poll`` ポーリングオブジェクト"

#: ../../library/select.rst:186
msgid ""
"Solaris and derivatives have ``/dev/poll``. While :c:func:`select` is "
"O(highest file descriptor) and :c:func:`poll` is O(number of file "
"descriptors), ``/dev/poll`` is O(active file descriptors)."
msgstr ""
"Solaris とその派生は、``/dev/poll`` を持っています。 :c:func:`select` が O(最"
"大のファイル記述子) 、 :c:func:`poll` が O(ファイル記述子の数) である一方、 "
"``/dev/poll`` は O(アクティブなファイル記述子) です。"

#: ../../library/select.rst:190
msgid ""
"``/dev/poll`` behaviour is very close to the standard :c:func:`poll` object."
msgstr ""
"``/dev/poll`` の挙動は標準的な :c:func:`poll` オブジェクトに非常に近いです。"

#: ../../library/select.rst:196
msgid "Close the file descriptor of the polling object."
msgstr "ポーリングオブジェクトのファイル記述子を閉じます。"

#: ../../library/select.rst:203
msgid "``True`` if the polling object is closed."
msgstr "ポーリングオブジェクトが閉じている場合 ``True`` です。"

#: ../../library/select.rst:210
msgid "Return the file descriptor number of the polling object."
msgstr "ポーリングオブジェクトのファイル記述子番号を返します。"

#: ../../library/select.rst:217 ../../library/select.rst:389
msgid ""
"Register a file descriptor with the polling object.  Future calls to the :"
"meth:`poll` method will then check whether the file descriptor has any "
"pending I/O events.  *fd* can be either an integer, or an object with a :"
"meth:`~io.IOBase.fileno` method that returns an integer.  File objects "
"implement :meth:`!fileno`, so they can also be used as the argument."
msgstr ""
"ファイル記述子をポーリングオブジェクトに登録します。これ以降の :meth:`poll` "
"メソッド呼び出しでは、そのファイル記述子に処理待ち中の I/O イベントがあるかど"
"うかを監視します。 *fd* は整数か、整数値を返す :meth:`~io.IOBase.fileno` メ"
"ソッドを持つオブジェクトを取ります。ファイルオブジェクトも :meth:`!fileno` を"
"実装しているので、引数として使うことができます。"

#: ../../library/select.rst:223
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for. The constants are the same that with :c:func:`poll` object. The "
"default value is a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`."
msgstr ""
"*eventmask* はオプションのビットマスクで、どの種類の I/O イベントを監視したい"
"かを記述します。 :c:func:`poll` オブジェクトと同じ定数が使われます。デフォル"
"ト値は定数 :const:`POLLIN` 、 :const:`POLLPRI` 、および :const:`POLLOUT` の組"
"み合わせです。"

#: ../../library/select.rst:230
msgid ""
"Registering a file descriptor that's already registered is not an error, but "
"the result is undefined. The appropriate action is to unregister or modify "
"it first. This is an important difference compared with :c:func:`poll`."
msgstr ""
"登録済みのファイル記述子を登録してもエラーにはなりませんが、結果は未定義で"
"す。適切なアクションは、最初に unregister するか modify することです。これ"
"は :c:func:`poll` と比較した場合の重要な違いです。"

#: ../../library/select.rst:238
msgid ""
"This method does an :meth:`unregister` followed by a :meth:`register`. It is "
"(a bit) more efficient that doing the same explicitly."
msgstr ""
"このメソッドは :meth:`unregister` に続いて :meth:`register` を行います。\n"
"同じことを明示的に行うよりも (少し) 効率的です。"

#: ../../library/select.rst:245 ../../library/select.rst:433
msgid ""
"Remove a file descriptor being tracked by a polling object.  Just like the :"
"meth:`register` method, *fd* can be an integer or an object with a :meth:"
"`~io.IOBase.fileno` method that returns an integer."
msgstr ""
"ポーリングオブジェクトによって追跡中のファイル記述子を登録解除します。 :meth:"
"`register` メソッドと同様に、 *fd* は整数か、整数値を返す :meth:`~io.IOBase."
"fileno` メソッドを持つオブジェクトを取ります。"

#: ../../library/select.rst:249
msgid ""
"Attempting to remove a file descriptor that was never registered is safely "
"ignored."
msgstr "登録されていないファイル記述子の削除を試みるのは安全に無視されます。"

#: ../../library/select.rst:255
msgid ""
"Polls the set of registered file descriptors, and returns a possibly empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, -1, or :const:`None`, "
"the call will block until there is an event for this poll object."
msgstr ""
"登録されたファイル記述子に対してポーリングを行い、報告すべき I/O イベントまた"
"はエラーの発生したファイル記述子毎に 2 要素のタプル ``(fd, event)`` からなる"
"リストを返します。リストは空になることもあります。 *fd* はファイル記述子で、 "
"*event* は該当するファイル記述子について報告されたイベントを表すビットマスク"
"です --- 例えば :const:`POLLIN` は入力待ちを示し、 :const:`POLLOUT` はファイ"
"ル記述子に対する書き込みが可能を示す、などです。空のリストは呼び出しがタイム"
"アウトしたか、報告すべきイベントがどのファイル記述子でも発生しなかったことを"
"示します。 *timeout* が与えられた場合、処理を戻すまで待機する時間の長さをミリ"
"秒単位で指定します。 *timeout* が省略されたり、 -1 であったり、あるいは :"
"const:`None` の場合、そのポーリングオブジェクトが監視している何らかのイベント"
"が発生するまでブロックします。"

#: ../../library/select.rst:276
msgid "Edge and Level Trigger Polling (epoll) Objects"
msgstr "エッジおよびレベルトリガポーリング (epoll) オブジェクト"

#: ../../library/select.rst:278
msgid "https://linux.die.net/man/4/epoll"
msgstr "https://linux.die.net/man/4/epoll"

#: ../../library/select.rst:280
msgid "*eventmask*"
msgstr "*eventmask*"

#: ../../library/select.rst:283 ../../library/select.rst:401
#: ../../library/select.rst:521 ../../library/select.rst:550
#: ../../library/select.rst:581 ../../library/select.rst:589
#: ../../library/select.rst:609 ../../library/select.rst:632
msgid "Constant"
msgstr "定数"

#: ../../library/select.rst:283 ../../library/select.rst:401
#: ../../library/select.rst:521 ../../library/select.rst:550
#: ../../library/select.rst:581 ../../library/select.rst:589
#: ../../library/select.rst:609 ../../library/select.rst:632
msgid "Meaning"
msgstr "意味"

#: ../../library/select.rst:285
msgid ":const:`EPOLLIN`"
msgstr ":const:`EPOLLIN`"

#: ../../library/select.rst:285
msgid "Available for read"
msgstr "読み込み可能"

#: ../../library/select.rst:287
msgid ":const:`EPOLLOUT`"
msgstr ":const:`EPOLLOUT`"

#: ../../library/select.rst:287
msgid "Available for write"
msgstr "書き込み可能"

#: ../../library/select.rst:289
msgid ":const:`EPOLLPRI`"
msgstr ":const:`EPOLLPRI`"

#: ../../library/select.rst:289
msgid "Urgent data for read"
msgstr "緊急の読み出しデータ"

#: ../../library/select.rst:291
msgid ":const:`EPOLLERR`"
msgstr ":const:`EPOLLERR`"

#: ../../library/select.rst:291
msgid "Error condition happened on the assoc. fd"
msgstr "設定された fd にエラー状態が発生した"

#: ../../library/select.rst:293
msgid ":const:`EPOLLHUP`"
msgstr ":const:`EPOLLHUP`"

#: ../../library/select.rst:293
msgid "Hang up happened on the assoc. fd"
msgstr "設定された fd がハングアップした"

#: ../../library/select.rst:295
msgid ":const:`EPOLLET`"
msgstr ":const:`EPOLLET`"

#: ../../library/select.rst:295
msgid "Set Edge Trigger behavior, the default is Level Trigger behavior"
msgstr "エッジトリガ動作に設定する。デフォルトではレベルトリガ動作"

#: ../../library/select.rst:298
msgid ":const:`EPOLLONESHOT`"
msgstr ":const:`EPOLLONESHOT`"

#: ../../library/select.rst:298
msgid ""
"Set one-shot behavior. After one event is pulled out, the fd is internally "
"disabled"
msgstr ""
"1ショット動作に設定する。1回イベントが取り出されたら、その fd が内部で無効に"
"なる"

#: ../../library/select.rst:301
msgid ":const:`EPOLLEXCLUSIVE`"
msgstr ":const:`EPOLLEXCLUSIVE`"

#: ../../library/select.rst:301
msgid ""
"Wake only one epoll object when the associated fd has an event. The default "
"(if this flag is not set) is to wake all epoll objects polling on a fd."
msgstr ""
"関連づけられた fd にイベントがある場合、1 つの epoll オブジェクトのみを起こし"
"ます。デフォルトでは (このフラグが設定されていない場合には)、fd に対してポー"
"リングするすべての epoll オブジェクトを起こします。 "

#: ../../library/select.rst:306
msgid ":const:`EPOLLRDHUP`"
msgstr ":const:`EPOLLRDHUP`"

#: ../../library/select.rst:306
msgid ""
"Stream socket peer closed connection or shut down writing half of connection."
msgstr ""
"ストリームソケットの他端が接続を切断したか、接続の書き込み側のシャットダウン"
"を行った。"

#: ../../library/select.rst:309
msgid ":const:`EPOLLRDNORM`"
msgstr ":const:`EPOLLRDNORM`"

#: ../../library/select.rst:309
msgid "Equivalent to :const:`EPOLLIN`"
msgstr ":const:`EPOLLIN` と同じ"

#: ../../library/select.rst:311
msgid ":const:`EPOLLRDBAND`"
msgstr ":const:`EPOLLRDBAND`"

#: ../../library/select.rst:311
msgid "Priority data band can be read."
msgstr "優先データバンドを読み込める。"

#: ../../library/select.rst:313
msgid ":const:`EPOLLWRNORM`"
msgstr ":const:`EPOLLWRNORM`"

#: ../../library/select.rst:313
msgid "Equivalent to :const:`EPOLLOUT`"
msgstr ":const:`EPOLLOUT` と同じ"

#: ../../library/select.rst:315
msgid ":const:`EPOLLWRBAND`"
msgstr ":const:`EPOLLWRBAND`"

#: ../../library/select.rst:315
msgid "Priority data may be written."
msgstr "優先データに書き込みできる。"

#: ../../library/select.rst:317
msgid ":const:`EPOLLMSG`"
msgstr ":const:`EPOLLMSG`"

#: ../../library/select.rst:317
msgid "Ignored."
msgstr "無視される。"

#: ../../library/select.rst:320
msgid ""
":const:`EPOLLEXCLUSIVE` was added.  It's only supported by Linux Kernel 4.5 "
"or later."
msgstr ""

#: ../../library/select.rst:326
msgid "Close the control file descriptor of the epoll object."
msgstr "epoll オブジェクトの制御用ファイル記述子を閉じます。"

#: ../../library/select.rst:331
msgid "``True`` if the epoll object is closed."
msgstr "epoll オブジェクトが閉じている場合 True です。"

#: ../../library/select.rst:336 ../../library/select.rst:478
msgid "Return the file descriptor number of the control fd."
msgstr "制御用ファイル記述子の番号を返します。"

#: ../../library/select.rst:341
msgid "Create an epoll object from a given file descriptor."
msgstr "*fd* から epoll オブジェクトを作成します。"

#: ../../library/select.rst:346
msgid "Register a fd descriptor with the epoll object."
msgstr "epoll オブジェクトにファイル記述子 *fd* を登録します。"

#: ../../library/select.rst:351
msgid "Modify a registered file descriptor."
msgstr "登録されたファイル記述子変更します。"

#: ../../library/select.rst:356
msgid "Remove a registered file descriptor from the epoll object."
msgstr "epoll オブジェクトから登録されたファイル記述子 *fd* を削除します。"

#: ../../library/select.rst:358
msgid "The method no longer ignores the :data:`~errno.EBADF` error."
msgstr ""

#: ../../library/select.rst:364
msgid "Wait for events. timeout in seconds (float)"
msgstr ""
"イベントを待機します。*timeout* はタイムアウト時間で、単位は秒 (float型) で"
"す。"

#: ../../library/select.rst:376
msgid "Polling Objects"
msgstr "ポーリングオブジェクト"

#: ../../library/select.rst:378
msgid ""
"The :c:func:`poll` system call, supported on most Unix systems, provides "
"better scalability for network servers that service many, many clients at "
"the same time. :c:func:`poll` scales better because the system call only "
"requires listing the file descriptors of interest, while :c:func:`select` "
"builds a bitmap, turns on bits for the fds of interest, and then afterward "
"the whole bitmap has to be linearly scanned again. :c:func:`select` is "
"O(highest file descriptor), while :c:func:`poll` is O(number of file "
"descriptors)."
msgstr ""
":c:func:`poll` システムコールはほとんどの Unix システムでサポートされており、"
"非常に多数のクライアントに同時にサービスを提供するようなネットワークサーバが"
"高いスケーラビリティを持てるようにしています。 :c:func:`poll` は対象のファイ"
"ル記述子を列挙するだけでよいため、良くスケールします。一方、 :c:func:"
"`select` はビット対応表を構築し、対象ファイルの記述子に対応するビットを立て、"
"その後全ての対応表の全てのビットを線形探索します。 :c:func:`select` は O(最大"
"のファイル記述子番号) なのに対し、 :c:func:`poll` は O(対象とするファイル記述"
"子の数) で済みます。"

#: ../../library/select.rst:395
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for, and can be a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`, described in the table below.  If not "
"specified, the default value used will check for all 3 types of events."
msgstr ""
"*eventmask* はオプションのビットマスクで、どの種類の I/O イベントを監視したい"
"かを記述します。この値は以下の表で述べる定数 :const:`POLLIN` 、 :const:"
"`POLLPRI` 、および :const:`POLLOUT` の組み合わせにすることができます。ビット"
"マスクを指定しない場合、標準の値が使われ、 3 種類のイベント全てに対して監視が"
"行われます。"

#: ../../library/select.rst:403
msgid ":const:`POLLIN`"
msgstr ":const:`POLLIN`"

#: ../../library/select.rst:403
msgid "There is data to read"
msgstr "読み出し可能なデータが存在する"

#: ../../library/select.rst:405
msgid ":const:`POLLPRI`"
msgstr ":const:`POLLPRI`"

#: ../../library/select.rst:405
msgid "There is urgent data to read"
msgstr "緊急の読み出し可能なデータが存在する"

#: ../../library/select.rst:407
msgid ":const:`POLLOUT`"
msgstr ":const:`POLLOUT`"

#: ../../library/select.rst:407
msgid "Ready for output: writing will not block"
msgstr "書き出しの準備ができている: 書き出し処理がブロックしない"

#: ../../library/select.rst:409
msgid ":const:`POLLERR`"
msgstr ":const:`POLLERR`"

#: ../../library/select.rst:409
msgid "Error condition of some sort"
msgstr "何らかのエラー状態"

#: ../../library/select.rst:411
msgid ":const:`POLLHUP`"
msgstr ":const:`POLLHUP`"

#: ../../library/select.rst:411
msgid "Hung up"
msgstr "ハングアップ"

#: ../../library/select.rst:413
msgid ":const:`POLLRDHUP`"
msgstr ":const:`POLLRDHUP`"

#: ../../library/select.rst:413
msgid ""
"Stream socket peer closed connection, or shut down writing half of connection"
msgstr ""
"ストリームソケットの他端が接続を切断したか、接続の書き込み側のシャットダウン"
"を行った。"

#: ../../library/select.rst:416
msgid ":const:`POLLNVAL`"
msgstr ":const:`POLLNVAL`"

#: ../../library/select.rst:416
msgid "Invalid request: descriptor not open"
msgstr "無効な要求: 記述子が開かれていない"

#: ../../library/select.rst:419
msgid ""
"Registering a file descriptor that's already registered is not an error, and "
"has the same effect as registering the descriptor exactly once."
msgstr ""
"登録済みのファイル記述子を登録してもエラーにはならず、一度だけ登録した場合と"
"同じ効果になります。"

#: ../../library/select.rst:425
msgid ""
"Modifies an already registered fd. This has the same effect as "
"``register(fd, eventmask)``.  Attempting to modify a file descriptor that "
"was never registered causes an :exc:`OSError` exception with errno :const:"
"`ENOENT` to be raised."
msgstr ""
"登録されているファイル記述子 *fd* を変更する。これは、 ``register(fd, "
"eventmask)`` と同じ効果を持ちます。登録されていないファイル記述子に対してこの"
"メソッドを呼び出すと、 errno :const:`ENOENT` で :exc:`OSError` 例外が発生しま"
"す。"

#: ../../library/select.rst:437
msgid ""
"Attempting to remove a file descriptor that was never registered causes a :"
"exc:`KeyError` exception to be raised."
msgstr ""
"登録されていないファイル記述子を登録解除しようとすると :exc:`KeyError` 例外が"
"送出されます。"

#: ../../library/select.rst:443
msgid ""
"Polls the set of registered file descriptors, and returns a possibly empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, negative, or :const:"
"`None`, the call will block until there is an event for this poll object."
msgstr ""
"登録されたファイル記述子に対してポーリングを行い、報告すべき I/O イベントまた"
"はエラーの発生したファイル記述子毎に 2 要素のタプル ``(fd, event)`` からなる"
"リストを返します。リストは空になることもあります。 *fd* はファイル記述子で、 "
"*event* は該当するファイル記述子について報告されたイベントを表すビットマスク"
"です --- 例えば :const:`POLLIN` は入力待ちを示し、 :const:`POLLOUT` はファイ"
"ル記述子に対する書き込みが可能を示す、などです。空のリストは呼び出しがタイム"
"アウトしたか、報告すべきイベントがどのファイル記述子でも発生しなかったことを"
"示します。 *timeout* が与えられた場合、処理を戻すまで待機する時間の長さをミリ"
"秒単位で指定します。 *timeout* が省略されたり、負の値であったり、あるいは :"
"const:`None` の場合、そのポーリングオブジェクトが監視している何らかのイベント"
"が発生するまでブロックします。"

#: ../../library/select.rst:464
msgid "Kqueue Objects"
msgstr "kqueue オブジェクト"

#: ../../library/select.rst:468
msgid "Close the control file descriptor of the kqueue object."
msgstr "kqueue オブジェクトの制御用ファイル記述子を閉じる。"

#: ../../library/select.rst:473
msgid "``True`` if the kqueue object is closed."
msgstr "kqueue オブジェクトが閉じている場合 ``True`` です。"

#: ../../library/select.rst:483
msgid "Create a kqueue object from a given file descriptor."
msgstr "与えられたファイル記述子から、kqueue オブジェクトを作成する。"

#: ../../library/select.rst:488
msgid "Low level interface to kevent"
msgstr "kevent に対する低水準のインターフェース"

#: ../../library/select.rst:490
msgid "changelist must be an iterable of kevent objects or ``None``"
msgstr "*changelist* は kevent オブジェクトのイテラブルまたは ``None``"

#: ../../library/select.rst:491
msgid "max_events must be 0 or a positive integer"
msgstr "*max_events* は 0 または正の整数"

#: ../../library/select.rst:492
msgid ""
"timeout in seconds (floats possible); the default is ``None``, to wait "
"forever"
msgstr ""

#: ../../library/select.rst:505
msgid "Kevent Objects"
msgstr "kevent オブジェクト"

#: ../../library/select.rst:507
msgid "https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2"
msgstr "https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2"

#: ../../library/select.rst:511
msgid ""
"Value used to identify the event. The interpretation depends on the filter "
"but it's usually the file descriptor. In the constructor ident can either be "
"an int or an object with a :meth:`~io.IOBase.fileno` method. kevent stores "
"the integer internally."
msgstr ""
"イベントを特定するための値。この値は、フィルタにもよりますが、大抵の場合は"
"ファイル記述子です。コンストラクタでは、 ident として、整数値か :meth:`~io."
"IOBase.fileno` メソッドを持ったオブジェクトを渡せます。 kevent は内部で整数値"
"を保存します。"

#: ../../library/select.rst:518
msgid "Name of the kernel filter."
msgstr "カーネルフィルタの名前。"

#: ../../library/select.rst:523
msgid ":const:`KQ_FILTER_READ`"
msgstr ":const:`KQ_FILTER_READ`"

#: ../../library/select.rst:523
msgid "Takes a descriptor and returns whenever there is data available to read"
msgstr "記述子を受け取り、読み込めるデータが存在する時に戻る"

#: ../../library/select.rst:526
msgid ":const:`KQ_FILTER_WRITE`"
msgstr ":const:`KQ_FILTER_WRITE`"

#: ../../library/select.rst:526
msgid ""
"Takes a descriptor and returns whenever there is data available to write"
msgstr "記述子を受け取り、書き込み可能な時に戻る"

#: ../../library/select.rst:529
msgid ":const:`KQ_FILTER_AIO`"
msgstr ":const:`KQ_FILTER_AIO`"

#: ../../library/select.rst:529
msgid "AIO requests"
msgstr "AIO リクエスト"

#: ../../library/select.rst:531
msgid ":const:`KQ_FILTER_VNODE`"
msgstr ":const:`KQ_FILTER_VNODE`"

#: ../../library/select.rst:531
msgid ""
"Returns when one or more of the requested events watched in *fflag* occurs"
msgstr "*fflag* で監視されたイベントが1つ以上発生したときに戻る"

#: ../../library/select.rst:534
msgid ":const:`KQ_FILTER_PROC`"
msgstr ":const:`KQ_FILTER_PROC`"

#: ../../library/select.rst:534
msgid "Watch for events on a process id"
msgstr "プロセスID上のイベントを監視する"

#: ../../library/select.rst:536
msgid ":const:`KQ_FILTER_NETDEV`"
msgstr ":const:`KQ_FILTER_NETDEV`"

#: ../../library/select.rst:536
msgid "Watch for events on a network device [not available on macOS]"
msgstr "ネットワークデバイス上のイベントを監視する (macOS では利用不可)"

#: ../../library/select.rst:539
msgid ":const:`KQ_FILTER_SIGNAL`"
msgstr ":const:`KQ_FILTER_SIGNAL`"

#: ../../library/select.rst:539
msgid "Returns whenever the watched signal is delivered to the process"
msgstr "監視しているシグナルがプロセスに届いたときに戻る"

#: ../../library/select.rst:542
msgid ":const:`KQ_FILTER_TIMER`"
msgstr ":const:`KQ_FILTER_TIMER`"

#: ../../library/select.rst:542
msgid "Establishes an arbitrary timer"
msgstr "任意のタイマを設定する"

#: ../../library/select.rst:547
msgid "Filter action."
msgstr "フィルタアクション。"

#: ../../library/select.rst:552
msgid ":const:`KQ_EV_ADD`"
msgstr ":const:`KQ_EV_ADD`"

#: ../../library/select.rst:552
msgid "Adds or modifies an event"
msgstr "イベントを追加または修正する"

#: ../../library/select.rst:554
msgid ":const:`KQ_EV_DELETE`"
msgstr ":const:`KQ_EV_DELETE`"

#: ../../library/select.rst:554
msgid "Removes an event from the queue"
msgstr "キューからイベントを取り除く"

#: ../../library/select.rst:556
msgid ":const:`KQ_EV_ENABLE`"
msgstr ":const:`KQ_EV_ENABLE`"

#: ../../library/select.rst:556
msgid "Permitscontrol() to returns the event"
msgstr "control() がイベントを返すのを許可する"

#: ../../library/select.rst:558
msgid ":const:`KQ_EV_DISABLE`"
msgstr ":const:`KQ_EV_DISABLE`"

#: ../../library/select.rst:558
msgid "Disablesevent"
msgstr "イベントを無効にする"

#: ../../library/select.rst:560
msgid ":const:`KQ_EV_ONESHOT`"
msgstr ":const:`KQ_EV_ONESHOT`"

#: ../../library/select.rst:560
msgid "Removes event after first occurrence"
msgstr "イベントを最初の発生後無効にする"

#: ../../library/select.rst:562
msgid ":const:`KQ_EV_CLEAR`"
msgstr ":const:`KQ_EV_CLEAR`"

#: ../../library/select.rst:562
msgid "Reset the state after an event is retrieved"
msgstr "イベントを受け取った後で状態をリセットする"

#: ../../library/select.rst:564
msgid ":const:`KQ_EV_SYSFLAGS`"
msgstr ":const:`KQ_EV_SYSFLAGS`"

#: ../../library/select.rst:564 ../../library/select.rst:566
msgid "internal event"
msgstr "内部イベント"

#: ../../library/select.rst:566
msgid ":const:`KQ_EV_FLAG1`"
msgstr ":const:`KQ_EV_FLAG1`"

#: ../../library/select.rst:568
msgid ":const:`KQ_EV_EOF`"
msgstr ":const:`KQ_EV_EOF`"

#: ../../library/select.rst:568
msgid "Filter specific EOF condition"
msgstr "フィルタ依存のEOF状態"

#: ../../library/select.rst:570
msgid ":const:`KQ_EV_ERROR`"
msgstr ":const:`KQ_EV_ERROR`"

#: ../../library/select.rst:570
msgid "See return values"
msgstr "戻り値を参照"

#: ../../library/select.rst:576
msgid "Filter specific flags."
msgstr "フィルタ依存のフラグ。"

#: ../../library/select.rst:578
msgid ":const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags:"
msgstr ":const:`KQ_FILTER_READ` と :const:`KQ_FILTER_WRITE` フィルタのフラグ:"

#: ../../library/select.rst:583
msgid ":const:`KQ_NOTE_LOWAT`"
msgstr ":const:`KQ_NOTE_LOWAT`"

#: ../../library/select.rst:583
msgid "low water mark of a socket buffer"
msgstr "ソケットバッファの最低基準値"

#: ../../library/select.rst:586
msgid ":const:`KQ_FILTER_VNODE` filter flags:"
msgstr ":const:`KQ_FILTER_VNODE` フィルタのフラグ:"

#: ../../library/select.rst:591
msgid ":const:`KQ_NOTE_DELETE`"
msgstr ":const:`KQ_NOTE_DELETE`"

#: ../../library/select.rst:591
msgid "*unlink()* was called"
msgstr "*unlink()* が呼ばれた"

#: ../../library/select.rst:593
msgid ":const:`KQ_NOTE_WRITE`"
msgstr ":const:`KQ_NOTE_WRITE`"

#: ../../library/select.rst:593
msgid "a write occurred"
msgstr "書き込みが発生した"

#: ../../library/select.rst:595
msgid ":const:`KQ_NOTE_EXTEND`"
msgstr ":const:`KQ_NOTE_EXTEND`"

#: ../../library/select.rst:595
msgid "the file was extended"
msgstr "ファイルのサイズが拡張された"

#: ../../library/select.rst:597
msgid ":const:`KQ_NOTE_ATTRIB`"
msgstr ":const:`KQ_NOTE_ATTRIB`"

#: ../../library/select.rst:597
msgid "an attribute was changed"
msgstr "属性が変更された"

#: ../../library/select.rst:599
msgid ":const:`KQ_NOTE_LINK`"
msgstr ":const:`KQ_NOTE_LINK`"

#: ../../library/select.rst:599
msgid "the link count has changed"
msgstr "リンクカウントが変更された"

#: ../../library/select.rst:601
msgid ":const:`KQ_NOTE_RENAME`"
msgstr ":const:`KQ_NOTE_RENAME`"

#: ../../library/select.rst:601
msgid "the file was renamed"
msgstr "ファイル名が変更された"

#: ../../library/select.rst:603
msgid ":const:`KQ_NOTE_REVOKE`"
msgstr ":const:`KQ_NOTE_REVOKE`"

#: ../../library/select.rst:603
msgid "access to the file was revoked"
msgstr "ファイルアクセスが破棄された"

#: ../../library/select.rst:606
msgid ":const:`KQ_FILTER_PROC` filter flags:"
msgstr ":const:`KQ_FILTER_PROC` フィルタフラグ:"

#: ../../library/select.rst:611
msgid ":const:`KQ_NOTE_EXIT`"
msgstr ":const:`KQ_NOTE_EXIT`"

#: ../../library/select.rst:611
msgid "the process has exited"
msgstr "プロセスが終了した"

#: ../../library/select.rst:613
msgid ":const:`KQ_NOTE_FORK`"
msgstr ":const:`KQ_NOTE_FORK`"

#: ../../library/select.rst:613
msgid "the process has called *fork()*"
msgstr "プロセスが *fork()* を呼び出した"

#: ../../library/select.rst:615
msgid ":const:`KQ_NOTE_EXEC`"
msgstr ":const:`KQ_NOTE_EXEC`"

#: ../../library/select.rst:615
msgid "the process has executed a new process"
msgstr "プロセスが新しいプロセスを実行した"

#: ../../library/select.rst:617
msgid ":const:`KQ_NOTE_PCTRLMASK`"
msgstr ":const:`KQ_NOTE_PCTRLMASK`"

#: ../../library/select.rst:617 ../../library/select.rst:619
msgid "internal filter flag"
msgstr "内部フィルタフラグ"

#: ../../library/select.rst:619
msgid ":const:`KQ_NOTE_PDATAMASK`"
msgstr ":const:`KQ_NOTE_PDATAMASK`"

#: ../../library/select.rst:621
msgid ":const:`KQ_NOTE_TRACK`"
msgstr ":const:`KQ_NOTE_TRACK`"

#: ../../library/select.rst:621
msgid "follow a process across *fork()*"
msgstr "*fork()* の呼び出しを超えてプロセスを監視する"

#: ../../library/select.rst:623
msgid ":const:`KQ_NOTE_CHILD`"
msgstr ":const:`KQ_NOTE_CHILD`"

#: ../../library/select.rst:623
msgid "returned on the child process for *NOTE_TRACK*"
msgstr "*NOTE_TRACK* に対して子プロセスに渡される"

#: ../../library/select.rst:626
msgid ":const:`KQ_NOTE_TRACKERR`"
msgstr ":const:`KQ_NOTE_TRACKERR`"

#: ../../library/select.rst:626
msgid "unable to attach to a child"
msgstr "子プロセスにアタッチできなかった"

#: ../../library/select.rst:629
msgid ":const:`KQ_FILTER_NETDEV` filter flags (not available on macOS):"
msgstr ":const:`KQ_FILTER_NETDEV` フィルタフラグ (macOS では利用不可):"

#: ../../library/select.rst:634
msgid ":const:`KQ_NOTE_LINKUP`"
msgstr ":const:`KQ_NOTE_LINKUP`"

#: ../../library/select.rst:634
msgid "link is up"
msgstr "リンクアップしている"

#: ../../library/select.rst:636
msgid ":const:`KQ_NOTE_LINKDOWN`"
msgstr ":const:`KQ_NOTE_LINKDOWN`"

#: ../../library/select.rst:636
msgid "link is down"
msgstr "リンクダウンしている"

#: ../../library/select.rst:638
msgid ":const:`KQ_NOTE_LINKINV`"
msgstr ":const:`KQ_NOTE_LINKINV`"

#: ../../library/select.rst:638
msgid "link state is invalid"
msgstr "リンク状態が不正"

#: ../../library/select.rst:644
msgid "Filter specific data."
msgstr "フィルタ固有のデータ。"

#: ../../library/select.rst:649
msgid "User defined value."
msgstr "ユーザー定義値。"
