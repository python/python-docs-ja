# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2024
# 石井明久, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-04 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:54+0000\n"
"Last-Translator: 石井明久, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/__future__.rst:2
msgid ":mod:`!__future__` --- Future statement definitions"
msgstr ":mod:`!__future__` --- future 文の定義"

#: ../../library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr "**ソースコード:** :source:`Lib/__future__.py`"

#: ../../library/__future__.rst:11
msgid ""
"Imports of the form ``from __future__ import feature`` are called :ref:"
"`future statements <future>`. These are special-cased by the Python compiler "
"to allow the use of new Python features in modules containing the future "
"statement before the release in which the feature becomes standard."
msgstr ""
"``from __future__ import feature`` の形式でのインポートは :ref:`future 文 "
"<future>` の定義と呼ばれています。これらは特殊なケースで、 Python の新機能が"
"標準になるリリースの前に Python コンパイラーが future 文を含むモジュールで "
"Python の新機能を使用できるようにします。"

#: ../../library/__future__.rst:16
msgid ""
"While these future statements are given additional special meaning by the "
"Python compiler, they are still executed like any other import statement and "
"the :mod:`__future__` exists and is handled by the import system the same "
"way any other Python module would be. This design serves three purposes:"
msgstr ""
"これらの future 文が Python コンパイラーによって追加の特殊な意味を与えられる"
"一方で、それらは依然として他のインポート文のように実行され、 :mod:"
"`__future__` は存在し、他の Python モジュールと同じようにインポートシステムに"
"よって処理されます。この設計は3つの目的にかなっています:"

#: ../../library/__future__.rst:21
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr ""
"import 文を解析する既存のツールを混乱させることを避け、インポートしようとして"
"いるモジュールを見つけられるようにするため。"

#: ../../library/__future__.rst:24
msgid ""
"To document when incompatible changes were introduced, and when they will be "
"--- or were --- made mandatory.  This is a form of executable documentation, "
"and can be inspected programmatically via importing :mod:`__future__` and "
"examining its contents."
msgstr ""
"互換性のない変化がいつ言語に導入され、いつ言語の一部になる --- あるいは、なっ"
"た --- のかを文書化するため。これは実行できる形式で書かれたドキュメントなの"
"で、 :mod:`__future__` をインポートしてその中身を調べることでプログラムから調"
"査することができます。"

#: ../../library/__future__.rst:29
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to "
"Python 2.1 at least yield runtime exceptions (the import of :mod:"
"`__future__` will fail, because there was no module of that name prior to "
"2.1)."
msgstr ""
"Python 2.1 以前のリリースで :ref:`future 文 <future>` が実行された場合に、最"
"低でもランタイム例外を投げるようにするため (:mod:`__future__` のインポートは"
"失敗します。なぜなら、 2.1 以前にはそういう名前のモジュールはなかったからで"
"す)。"

#: ../../library/__future__.rst:34
msgid "Module Contents"
msgstr "モジュールコンテンツ"

#: ../../library/__future__.rst:36
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""
"機能の記述が :mod:`__future__` から削除されたことはまだありません。 Python "
"2.1 で future 文が導入されて以来、この仕組みを使って以下の機能が言語に導入さ"
"れてきました:"

#: ../../library/__future__.rst:41
msgid "feature"
msgstr "feature"

#: ../../library/__future__.rst:41
msgid "optional in"
msgstr "optional in"

#: ../../library/__future__.rst:41
msgid "mandatory in"
msgstr "mandatory in"

#: ../../library/__future__.rst:41
msgid "effect"
msgstr "effect"

#: ../../library/__future__.rst:43
msgid "nested_scopes"
msgstr "nested_scopes"

#: ../../library/__future__.rst:43
msgid "2.1.0b1"
msgstr "2.1.0b1"

#: ../../library/__future__.rst:43
msgid "2.2"
msgstr "2.2"

#: ../../library/__future__.rst:43
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ":pep:`227`: *Statically Nested Scopes*"

#: ../../library/__future__.rst:46
msgid "generators"
msgstr "generators"

#: ../../library/__future__.rst:46
msgid "2.2.0a1"
msgstr "2.2.0a1"

#: ../../library/__future__.rst:46
msgid "2.3"
msgstr "2.3"

#: ../../library/__future__.rst:46
msgid ":pep:`255`: *Simple Generators*"
msgstr ":pep:`255`: *Simple Generators*"

#: ../../library/__future__.rst:49
msgid "division"
msgstr "division"

#: ../../library/__future__.rst:49
msgid "2.2.0a2"
msgstr "2.2.0a2"

#: ../../library/__future__.rst:49 ../../library/__future__.rst:52
#: ../../library/__future__.rst:58 ../../library/__future__.rst:61
msgid "3.0"
msgstr "3.0"

#: ../../library/__future__.rst:49
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ":pep:`238`: *Changing the Division Operator*"

#: ../../library/__future__.rst:52
msgid "absolute_import"
msgstr "absolute_import"

#: ../../library/__future__.rst:52 ../../library/__future__.rst:55
msgid "2.5.0a1"
msgstr "2.5.0a1"

#: ../../library/__future__.rst:52
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"

#: ../../library/__future__.rst:55
msgid "with_statement"
msgstr "with_statement"

#: ../../library/__future__.rst:55
msgid "2.6"
msgstr "2.6"

#: ../../library/__future__.rst:55
msgid ":pep:`343`: *The \"with\" Statement*"
msgstr ":pep:`343`: *The \"with\" Statement*"

#: ../../library/__future__.rst:58
msgid "print_function"
msgstr "print_function"

#: ../../library/__future__.rst:58 ../../library/__future__.rst:61
msgid "2.6.0a2"
msgstr "2.6.0a2"

#: ../../library/__future__.rst:58
msgid ":pep:`3105`: *Make print a function*"
msgstr ":pep:`3105`: *Make print a function*"

#: ../../library/__future__.rst:61
msgid "unicode_literals"
msgstr "unicode_literals"

#: ../../library/__future__.rst:61
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ":pep:`3112`: *Bytes literals in Python 3000*"

#: ../../library/__future__.rst:64
msgid "generator_stop"
msgstr "generator_stop"

#: ../../library/__future__.rst:64
msgid "3.5.0b1"
msgstr "3.5.0b1"

#: ../../library/__future__.rst:64
msgid "3.7"
msgstr "3.7"

#: ../../library/__future__.rst:64
msgid ":pep:`479`: *StopIteration handling inside generators*"
msgstr ":pep:`479`: *StopIteration handling inside generators*"

#: ../../library/__future__.rst:67
msgid "annotations"
msgstr "annotations"

#: ../../library/__future__.rst:67
msgid "3.7.0b1"
msgstr "3.7.0b1"

#: ../../library/__future__.rst:67
msgid "TBD [1]_"
msgstr "TBD [1]_"

#: ../../library/__future__.rst:67
msgid ":pep:`563`: *Postponed evaluation of annotations*"
msgstr ":pep:`563`: *Postponed evaluation of annotations*"

#: ../../library/__future__.rst:77
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr ":file:`__future__.py` のそれぞれの文は次のような形式をしています::"

#: ../../library/__future__.rst:79
msgid ""
"FeatureName = _Feature(OptionalRelease, MandatoryRelease,\n"
"                       CompilerFlag)"
msgstr ""

#: ../../library/__future__.rst:82
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both "
"are 5-tuples of the same form as :data:`sys.version_info`::"
msgstr ""
"ここで、普通は、 *OptionalRelease* は *MandatoryRelease* より小さく、2つと"
"も :data:`sys.version_info` と同じフォーマットの5つのタプルからなります::"

#: ../../library/__future__.rst:85
msgid ""
"(PY_MAJOR_VERSION, # the 2 in 2.1.0a3; an int\n"
" PY_MINOR_VERSION, # the 1; an int\n"
" PY_MICRO_VERSION, # the 0; an int\n"
" PY_RELEASE_LEVEL, # \"alpha\", \"beta\", \"candidate\" or \"final\"; "
"string\n"
" PY_RELEASE_SERIAL # the 3; an int\n"
")"
msgstr ""

#: ../../library/__future__.rst:94
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr "*OptionalRelease* はその機能が導入された最初のリリースを記録します。"

#: ../../library/__future__.rst:98
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""
"まだ時期が来ていない *MandatoryRelease* の場合、*MandatoryRelease* はその機能"
"が言語の一部となるリリースを記します。"

#: ../../library/__future__.rst:102
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""
"その他の場合、*MandatoryRelease* はその機能がいつ言語の一部になったのかを記録"
"します。そのリリースから、あるいはそれ以降のリリースでは、この機能を使う際に "
"future 文は必要ではありませんが、future 文を使い続けても構いません。"

#: ../../library/__future__.rst:106
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped or that it is not yet decided."
msgstr ""
"*MandatoryRelease* は ``None`` になるかもしれません。つまり、予定された機能が"
"破棄されたか、まだ決定されていないということです。"

#: ../../library/__future__.rst:111
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`_Feature."
"compiler_flag` attribute on :class:`_Feature` instances."
msgstr ""
"*CompilerFlag* は、動的にコンパイルされるコードでその機能を有効にするために、"
"組み込み関数 :func:`compile` の第4引数に渡す(ビットフィールド)フラグです。こ"
"のフラグは :class:`_Feature` インスタンスの :attr:`_Feature.compiler_flag` 属"
"性に保存されています。"

#: ../../library/__future__.rst:117
msgid ""
"``from __future__ import annotations`` was previously scheduled to become "
"mandatory in Python 3.10, but the Python Steering Council twice decided to "
"delay the change (`announcement for Python 3.10 <https://mail.python.org/"
"archives/list/python-dev@python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/"
">`__; `announcement for Python 3.11 <https://mail.python.org/archives/list/"
"python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__). No "
"final decision has been made yet. See also :pep:`563` and :pep:`649`."
msgstr ""
"``from __future__ import annotations`` は以前は Python 3.10 で必須となる予定"
"でしたが、 Python 運営評議会はこの変更を延期することを2度決定しました "
"(`Python 3.10 での発表 <https://mail.python.org/archives/list/python-"
"dev@python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/>`__; `Python 3.11 で"
"の発表 <https://mail.python.org/archives/list/python-dev@python.org/message/"
"VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__) 。最終決定はまだ下されていません。 :"
"pep:`563` と :pep:`649` も参照してください。"

#: ../../library/__future__.rst:127
msgid ":ref:`future`"
msgstr ":ref:`future`"

#: ../../library/__future__.rst:128
msgid "How the compiler treats future imports."
msgstr "コンパイラがどのように future インポートを扱うか。"

#: ../../library/__future__.rst:130
msgid ":pep:`236` - Back to the __future__"
msgstr ":pep:`236` - Back to the __future__"

#: ../../library/__future__.rst:131
msgid "The original proposal for the __future__ mechanism."
msgstr "__future__ 機構の原案"
