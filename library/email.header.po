# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.header.rst:2
msgid ":mod:`email.header`: Internationalized headers"
msgstr ":mod:`email.header`: 国際化されたヘッダ"

#: ../../library/email.header.rst:8
msgid ""
":rfc:`2822` is the base standard that describes the format of email "
"messages. It derives from the older :rfc:`822` standard which came into "
"widespread use at a time when most email was composed of ASCII characters "
"only.  :rfc:`2822` is a specification written assuming email contains only 7-"
"bit ASCII characters."
msgstr ""
":rfc:`2822` は電子メールメッセージの形式を規定する基本規格です。これはほとん"
"どの電子メールが ASCII 文字のみで構成されていたころ普及した :rfc:`822` 標準か"
"ら発展したものです。 :rfc:`2822` は電子メールがすべて 7-bit ASCII 文字のみか"
"ら構成されていると仮定して作られた仕様です。"

#: ../../library/email.header.rst:13
msgid ""
"Of course, as email has been deployed worldwide, it has become "
"internationalized, such that language specific character sets can now be "
"used in email messages.  The base standard still requires email messages to "
"be transferred using only 7-bit ASCII characters, so a slew of RFCs have "
"been written describing how to encode email containing non-ASCII characters "
"into :rfc:`2822`\\ -compliant format. These RFCs include :rfc:`2045`, :rfc:"
"`2046`, :rfc:`2047`, and :rfc:`2231`. The :mod:`email` package supports "
"these standards in its :mod:`email.header` and :mod:`email.charset` modules."
msgstr ""
"もちろん、電子メールが世界的に普及するにつれ、この仕様は国際化されてきまし"
"た。今では電子メールに言語依存の文字セットを使うことができます。基本規格で"
"は、まだ電子メールメッセージを 7-bit ASCII 文字のみを\\ 使って転送するよう要"
"求していますので、多くの RFC でどうやって非ASCII の電子メールを :rfc:`2822` "
"準拠な形式にエンコードするかが\\ 記述されています。これらの RFC は以下のもの"
"を含みます: :rfc:`2045` 、 :rfc:`2046` 、 :rfc:`2047` 、および :rfc:"
"`2231` 。 :mod:`email` パッケージは、 :mod:`email.header` および :mod:`email."
"charset` モジュールでこれらの規格をサポートしています。"

#: ../../library/email.header.rst:22
msgid ""
"If you want to include non-ASCII characters in your email headers, say in "
"the :mailheader:`Subject` or :mailheader:`To` fields, you should use the :"
"class:`Header` class and assign the field in the :class:`~email.message."
"Message` object to an instance of :class:`Header` instead of using a string "
"for the header value.  Import the :class:`Header` class from the :mod:`email."
"header` module. For example::"
msgstr ""
"ご自分の電子メールヘッダ、たとえば :mailheader:`Subject` や :mailheader:`To` "
"などのフィールドに非ASCII文字を入れたい場合、 :class:`Header` クラスを使う必"
"要があります。 :class:`~email.message.Message` オブジェクトの該当フィールドに"
"文字列ではなく、 :class:`Header` インスタンスを使うのです。 :class:`Header` "
"クラスは :mod:`email.header` モジュールからインポートしてください。たとえば::"

#: ../../library/email.header.rst:39
msgid ""
"Notice here how we wanted the :mailheader:`Subject` field to contain a non-"
"ASCII character?  We did this by creating a :class:`Header` instance and "
"passing in the character set that the byte string was encoded in.  When the "
"subsequent :class:`~email.message.Message` instance was flattened, the :"
"mailheader:`Subject` field was properly :rfc:`2047` encoded.  MIME-aware "
"mail readers would show this header using the embedded ISO-8859-1 character."
msgstr ""
":mailheader:`Subject` フィールドに非ASCII文字をふくめていることに注目してくだ"
"さい。ここでは、含めたいバイト列がエンコードされている文字セットを指定して :"
"class:`Header` インスタンスを作成することによって実現しています。のちにこの :"
"class:`~email.message.Message` インスタンスからフラットなテキストを生成するさ"
"いに、この :mailheader:`Subject` フィールドは :rfc:`2047` 準拠の適切な形式に"
"エンコードされます。MIME 機能のついているメーラなら、このヘッダに埋めこまれ"
"た ISO-8859-1 文字をただしく表示するでしょう。"

#: ../../library/email.header.rst:48
msgid "Here is the :class:`Header` class description:"
msgstr "以下は :class:`Header` クラスの説明です:"

#: ../../library/email.header.rst:53
msgid ""
"Create a MIME-compliant header that can contain strings in different "
"character sets."
msgstr "別の文字セットの文字列をふくむ MIME準拠なヘッダを作成します。"

#: ../../library/email.header.rst:56
msgid ""
"Optional *s* is the initial header value.  If ``None`` (the default), the "
"initial header value is not set.  You can later append to the header with :"
"meth:`append` method calls.  *s* may be a byte string or a Unicode string, "
"but see the :meth:`append` documentation for semantics."
msgstr ""
"オプション引数 *s* はヘッダの値の初期値です。これが ``None`` の場合 (デフォル"
"ト)、ヘッダの初期値は設定されません。この値はあとから :meth:`append` メソッド"
"を呼びだすことによって追加することができます。 *s* はバイト文字列か、あるい"
"は Unicode 文字列でもかまいませんが、この意味については :meth:`append` の項を"
"参照してください。"

#: ../../library/email.header.rst:61
msgid ""
"Optional *charset* serves two purposes: it has the same meaning as the "
"*charset* argument to the :meth:`append` method.  It also sets the default "
"character set for all subsequent :meth:`append` calls that omit the "
"*charset* argument.  If *charset* is not provided in the constructor (the "
"default), the ``us-ascii`` character set is used both as *s*'s initial "
"charset and as the default for subsequent :meth:`append` calls."
msgstr ""
"オプション引数 *charset* には 2つの目的があります。ひとつは :meth:`append` メ"
"ソッドにおける *charset* 引数と同じものです。もうひとつの目的は、これ以降 "
"*charset* 引数を省略した :meth:`append` メソッド呼び出しすべてにおける、デ"
"フォルト文字セットを決定するものです。コンストラクタに *charset* が与えられな"
"い場合 (デフォルト)、初期値の *s* および以後の :meth:`append` 呼び出しにおけ"
"る文字セットとして ``us-ascii`` が使われます。"

#: ../../library/email.header.rst:68
msgid ""
"The maximum line length can be specified explicitly via *maxlinelen*.  For "
"splitting the first line to a shorter value (to account for the field header "
"which isn't included in *s*, e.g. :mailheader:`Subject`) pass in the name of "
"the field in *header_name*.  The default *maxlinelen* is 76, and the default "
"value for *header_name* is ``None``, meaning it is not taken into account "
"for the first line of a long, split header."
msgstr ""
"行の最大長は *maxlinelen* によって明示的に指定できます。最初の行を (:"
"mailheader:`Subject` などの *s* に含まれないフィールドヘッダの責任をとるた"
"め) 短く切りとる場合、 *header_name* にそのフィールド名を指定してください。 "
"*maxlinelen* のデフォルト値は 76 であり、 *header_name* のデフォルト値は "
"``None`` です。これはその最初の行を長い、切りとられたヘッダとして扱わないこと"
"を意味します。"

#: ../../library/email.header.rst:75
msgid ""
"Optional *continuation_ws* must be :rfc:`2822`\\ -compliant folding "
"whitespace, and is usually either a space or a hard tab character. This "
"character will be prepended to continuation lines.  *continuation_ws* "
"defaults to a single space character (\" \")."
msgstr ""
"オプション引数 *continuation_ws* は :rfc:`2822` 準拠の折り返し用余白文字で、"
"ふつうこれは空白か、ハードタブ文字 (hard tab) である必要があります。ここで指"
"定された文字は複数にわたる行の行頭に挿入されます。 *continuation_ws* のデフォ"
"ルト値は 1 つのスペース文字です (\" \")。"

#: ../../library/email.header.rst:80
msgid ""
"Optional *errors* is passed straight through to the :meth:`append` method."
msgstr ""
"オプション引数 *errors* は、 :meth:`append` メソッドにそのまま渡されます。"

#: ../../library/email.header.rst:85
msgid "Append the string *s* to the MIME header."
msgstr "この MIME ヘッダに文字列 *s* を追加します。"

#: ../../library/email.header.rst:87
msgid ""
"Optional *charset*, if given, should be a :class:`~email.charset.Charset` "
"instance (see :mod:`email.charset`) or the name of a character set, which "
"will be converted to a :class:`~email.charset.Charset` instance.  A value of "
"``None`` (the default) means that the *charset* given in the constructor is "
"used."
msgstr ""
"オプション引数 *charset* がもし与えられた場合、これは :class:`~email.charset."
"Charset` インスタンス (:mod:`email.charset` を参照) か、あるいは文字セットの"
"名前でなければなりません。この場合は :class:`~email.charset.Charset` インスタ"
"ンスに変換されます。この値が ``None`` の場合 (デフォルト)、コンストラクタで与"
"えられた *charset* が使われます。"

#: ../../library/email.header.rst:93
msgid ""
"*s* may be a byte string or a Unicode string.  If it is a byte string (i.e.  "
"``isinstance(s, str)`` is true), then *charset* is the encoding of that byte "
"string, and a :exc:`UnicodeError` will be raised if the string cannot be "
"decoded with that character set."
msgstr ""
"*s* はバイト文字列か、Unicode 文字列です。これがバイト文字列 "
"(``isinstance(s, str)`` が真) の場合、 *charset* はその文字列のエンコーディン"
"グであり、これが与えられた文字セットでうまくデコードできないときは :exc:"
"`UnicodeError` が発生します。"

#: ../../library/email.header.rst:98
msgid ""
"If *s* is a Unicode string, then *charset* is a hint specifying the "
"character set of the characters in the string.  In this case, when producing "
"an :rfc:`2822`\\ -compliant header using :rfc:`2047` rules, the Unicode "
"string will be encoded using the following charsets in order: ``us-ascii``, "
"the *charset* hint, ``utf-8``.  The first character set to not provoke a :"
"exc:`UnicodeError` is used."
msgstr ""
"一方 *s* が Unicode 文字列の場合、 *charset* はその文字列の文字セットを決定す"
"るためのヒントとして使われます。この場合、 :rfc:`2822` 準拠のヘッダを :rfc:"
"`2047` の規則を用いて生成する際、 Unicode 文字列は以下の文字セットを (この優"
"先順位で) 適用してエンコードされます: ``us-ascii`` 、 *charset* で与えられた"
"ヒント、それもなければ ``utf-8`` 。最初の文字セットは :exc:`UnicodeError` を"
"なるべく防ぐために使われます。"

#: ../../library/email.header.rst:105
msgid ""
"Optional *errors* is passed through to any :func:`unicode` or :meth:`unicode."
"encode` call, and defaults to \"strict\"."
msgstr ""
"オプション引数 *errors* は :func:`unicode` または :func:`unicode.encode` の呼"
"び出し時に使用し、デフォルト値は \"strict\" です。"

#: ../../library/email.header.rst:111
msgid ""
"Encode a message header into an RFC-compliant format, possibly wrapping long "
"lines and encapsulating non-ASCII parts in base64 or quoted-printable "
"encodings.  Optional *splitchars* is a string containing characters to split "
"long ASCII lines on, in rough support of :rfc:`2822`'s *highest level "
"syntactic breaks*.  This doesn't affect :rfc:`2047` encoded lines."
msgstr ""
"メッセージヘッダを RFC に沿ったやり方でエンコードします。おそらく長い行は折り"
"返され、非 ASCII 部分は base64 または quoted-printable エンコーディングで包含"
"されるでしょう。オプション引数 *splitchars* には長い ASCII 行を分割する区切り"
"文字群を文字列として指定し、 :rfc:`2822` の *highest level syntactic breaks* "
"の大まかなサポートの為に使用します。この引数は :rfc:`2047` でエンコードされた"
"行には影響しません。"

#: ../../library/email.header.rst:117
msgid ""
"The :class:`Header` class also provides a number of methods to support "
"standard operators and built-in functions."
msgstr ""
":class:`Header` クラスは、標準の演算子や組み込み関数をサポートするためのメ"
"ソッドもいくつか提供しています。"

#: ../../library/email.header.rst:123
msgid "A synonym for :meth:`Header.encode`.  Useful for ``str(aHeader)``."
msgstr ""
":meth:`Header.encode` と同じです。 ``str(aHeader)`` などとすると有用でしょ"
"う。"

#: ../../library/email.header.rst:128
msgid ""
"A helper for the built-in :func:`unicode` function.  Returns the header as a "
"Unicode string."
msgstr ""
"組み込みの :func:`unicode` 関数の補助です。ヘッダを Unicode 文字列として返し"
"ます。"

#: ../../library/email.header.rst:134
msgid ""
"This method allows you to compare two :class:`Header` instances for equality."
msgstr ""
"このメソッドは、ふたつの :class:`Header` インスタンスどうしが等しいかどうか判"
"定するのに使えます。"

#: ../../library/email.header.rst:140
msgid ""
"This method allows you to compare two :class:`Header` instances for "
"inequality."
msgstr ""
"このメソッドは、ふたつの :class:`Header` インスタンスどうしが異なっているかど"
"うかを判定するのに使えます。"

#: ../../library/email.header.rst:143
msgid ""
"The :mod:`email.header` module also provides the following convenient "
"functions."
msgstr ""
"さらに、 :mod:`email.header` モジュールは以下のような便宜的な関数も提供してい"
"ます。"

#: ../../library/email.header.rst:148
msgid ""
"Decode a message header value without converting the character set. The "
"header value is in *header*."
msgstr ""
"文字セットを変換することなしに、メッセージのヘッダをデコードします。ヘッダの"
"値は *header* に渡します。"

#: ../../library/email.header.rst:151
msgid ""
"This function returns a list of ``(decoded_string, charset)`` pairs "
"containing each of the decoded parts of the header.  *charset* is ``None`` "
"for non-encoded parts of the header, otherwise a lower case string "
"containing the name of the character set specified in the encoded string."
msgstr ""
"この関数はヘッダのそれぞれのデコードされた部分ごとに、``(decoded_string, "
"charset)`` という形式の 2要素タプルからなるリストを返します。*charset* はヘッ"
"ダのエンコードされていない部分に対しては ``None`` を、それ以外の場合はエン"
"コードされた文字列が指定している文字セットの名前を小文字からなる文字列で返し"
"ます。"

#: ../../library/email.header.rst:156
msgid "Here's an example::"
msgstr "以下はこの使用例です::"

#: ../../library/email.header.rst:165
msgid ""
"Create a :class:`Header` instance from a sequence of pairs as returned by :"
"func:`decode_header`."
msgstr ""
":func:`decode_header` によって返される 2要素タプルのリストから :class:"
"`Header` インスタンスを作成します。"

#: ../../library/email.header.rst:168
msgid ""
":func:`decode_header` takes a header value string and returns a sequence of "
"pairs of the format ``(decoded_string, charset)`` where *charset* is the "
"name of the character set."
msgstr ""
":func:`decode_header` はヘッダの値をとってきて、 ``(decoded_string, "
"charset)`` という形式の 2要素タプルからなるリストを返します。ここで "
"*decoded_string* はデコードされた文字列、 *charset* はその文字セットです。"

#: ../../library/email.header.rst:172
msgid ""
"This function takes one of those sequence of pairs and returns a :class:"
"`Header` instance.  Optional *maxlinelen*, *header_name*, and "
"*continuation_ws* are as in the :class:`Header` constructor."
msgstr ""
"この関数はこれらのリストの項目から、 :class:`Header` インスタンスを返します。"
"オプション引数 *maxlinelen* 、 *header_name* および *continuation_ws* は :"
"class:`Header` コンストラクタに与えるものと同じです。"
