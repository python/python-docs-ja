# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:48+0900\n"
"PO-Revision-Date: 2018-06-29 17:27+0000\n"
"Last-Translator: tomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pathlib.rst:3
msgid ":mod:`pathlib` --- Object-oriented filesystem paths"
msgstr ":mod:`pathlib` --- オブジェクト指向のファイルシステムパス"

#: ../../library/pathlib.rst:10
msgid "**Source code:** :source:`Lib/pathlib.py`"
msgstr "**ソースコード:** :source:`Lib/pathlib.py`"

#: ../../library/pathlib.rst:16
msgid ""
"This module offers classes representing filesystem paths with semantics "
"appropriate for different operating systems.  Path classes are divided "
"between :ref:`pure paths <pure-paths>`, which provide purely computational "
"operations without I/O, and :ref:`concrete paths <concrete-paths>`, which "
"inherit from pure paths but also provide I/O operations."
msgstr ""
"このモジュールはファイルシステムのパスを表すクラスを提供していて、様々なオペ"
"レーティングシステムについての適切な意味論をそれらのクラスに持たせていま"
"す。\n"
"Path クラスは :ref:`純粋パス <pure-paths>` と :ref:`具象パス <concrete-"
"paths>` からなります。\n"
"純粋パスは I/O を伴わない純粋な計算操作を提供します。\n"
"具象パスは純粋パスを継承していますが、 I/O 操作も提供しています。"

#: ../../library/pathlib.rst:25
msgid ""
"If you've never used this module before or just aren't sure which class is "
"right for your task, :class:`Path` is most likely what you need. It "
"instantiates a :ref:`concrete path <concrete-paths>` for the platform the "
"code is running on."
msgstr ""
"あなたが今までこのモジュールを使用したことがない場合や、タスクに適しているの"
"がどのクラスかわからない場合は、 :class:`Path` はきっとあなたに必要なもので"
"しょう。\n"
":class:`Path` はコードが実行されているプラットフォーム用の :ref:`具象パス "
"<concrete-paths>` のインスタンスを作成します。"

#: ../../library/pathlib.rst:29
msgid "Pure paths are useful in some special cases; for example:"
msgstr "純粋パスは、以下のようないくつかの特殊なケースで有用です:"

#: ../../library/pathlib.rst:31
msgid ""
"If you want to manipulate Windows paths on a Unix machine (or vice versa). "
"You cannot instantiate a :class:`WindowsPath` when running on Unix, but you "
"can instantiate :class:`PureWindowsPath`."
msgstr ""
"Unix マシン上で Windows のパスを扱いたいとき (またはその逆)。Unix 上で実行し"
"ているときに :class:`WindowsPath` のインスタンスを作成することはできません"
"が、:class:`PureWindowsPath` なら可能になります。"

#: ../../library/pathlib.rst:34
msgid ""
"You want to make sure that your code only manipulates paths without actually "
"accessing the OS. In this case, instantiating one of the pure classes may be "
"useful since those simply don't have any OS-accessing operations."
msgstr ""
"実際に OS にアクセスすることなしにパスを操作するだけのコードを確認したいと"
"き。この場合、純粋クラスのインスタンスを一つ作成すれば、それが OS にアクセス"
"することはないので便利です。"

#: ../../library/pathlib.rst:39
msgid ":pep:`428`: The pathlib module -- object-oriented filesystem paths."
msgstr ""
":pep:`428`: The pathlib module -- オブジェクト指向のファイルシステムパス。"

#: ../../library/pathlib.rst:42
msgid ""
"For low-level path manipulation on strings, you can also use the :mod:`os."
"path` module."
msgstr "文字列による低水準のパス操作の場合は :mod:`os.path` も使用できます。"

#: ../../library/pathlib.rst:47
msgid "Basic use"
msgstr "基本的な使い方"

#: ../../library/pathlib.rst:49
msgid "Importing the main class::"
msgstr "メインクラスをインポートします::"

#: ../../library/pathlib.rst:53
msgid "Listing subdirectories::"
msgstr "サブディレクトリの一覧を取得します::"

#: ../../library/pathlib.rst:60
msgid "Listing Python source files in this directory tree::"
msgstr "このディレクトリツリー内の Python ソースファイルの一覧を取得します::"

#: ../../library/pathlib.rst:67
msgid "Navigating inside a directory tree::"
msgstr "ディレクトリツリー内を移動します::"

#: ../../library/pathlib.rst:76
msgid "Querying path properties::"
msgstr "パスのプロパティを問い合わせます::"

#: ../../library/pathlib.rst:83
msgid "Opening a file::"
msgstr "ファイルを開きます::"

#: ../../library/pathlib.rst:93
msgid "Pure paths"
msgstr "純粋パス"

#: ../../library/pathlib.rst:95
msgid ""
"Pure path objects provide path-handling operations which don't actually "
"access a filesystem.  There are three ways to access these classes, which we "
"also call *flavours*:"
msgstr ""
"純粋パスオブジェクトは実際にファイルシステムにアクセスしないパス操作処理を提"
"供します。これらのクラスにアクセスするには 3 つの方法があり、それらを *フレー"
"バー* と呼んでいます:"

#: ../../library/pathlib.rst:101
msgid ""
"A generic class that represents the system's path flavour (instantiating it "
"creates either a :class:`PurePosixPath` or a :class:`PureWindowsPath`)::"
msgstr ""
"システムのパスのフレーバーを表すジェネリッククラスです (インスタンスを作成す"
"ることで :class:`PurePosixPath` または :class:`PureWindowsPath` のどちらかが"
"作成されます)::"

#: ../../library/pathlib.rst:107
msgid ""
"Each element of *pathsegments* can be either a string representing a path "
"segment, an object implementing the :class:`os.PathLike` interface which "
"returns a string, or another path object::"
msgstr ""
"*pathsegments* の各要素は、部分パスの文字列表現か、文字列を返す :class:`os."
"PathLike` インターフェイスを実装しているオブジェクトか、その他の path オブ"
"ジェクトです。"

#: ../../library/pathlib.rst:116
msgid "When *pathsegments* is empty, the current directory is assumed::"
msgstr "*pathsegments* が空のとき、現在のディレクトリとみなされます::"

#: ../../library/pathlib.rst:121
msgid ""
"When several absolute paths are given, the last is taken as an anchor "
"(mimicking :func:`os.path.join`'s behaviour)::"
msgstr ""
"絶対パスが複数与えられた場合、最後の要素がアンカーとして取られます (:func:"
"`os.path.join` の挙動を真似ています)::"

#: ../../library/pathlib.rst:129
msgid ""
"However, in a Windows path, changing the local root doesn't discard the "
"previous drive setting::"
msgstr ""
"ただし、Windows のパスでは、ローカルルートを変更してもそれまでのドライブ設定"
"は破棄されません::"

#: ../../library/pathlib.rst:135
msgid ""
"Spurious slashes and single dots are collapsed, but double dots (``'..'``) "
"are not, since this would change the meaning of a path in the face of "
"symbolic links::"
msgstr ""
"誤ったスラッシュおよび単一ドットは無視されますが、2 個のドット (``'..'``) "
"は、シンボリックリンクのときにパスの意味の変更を意味するため受け付けれられま"
"す::"

#: ../../library/pathlib.rst:146
msgid ""
"(a naïve approach would make ``PurePosixPath('foo/../bar')`` equivalent to "
"``PurePosixPath('bar')``, which is wrong if ``foo`` is a symbolic link to "
"another directory)"
msgstr ""
"(通常 ``PurePosixPath('foo/../bar')`` は ``PurePosixPath('bar')`` と等価にな"
"りますが、``foo`` が他のディレクトリへのシンボリックリンクの場合は等価になり"
"ません)"

#: ../../library/pathlib.rst:150
msgid ""
"Pure path objects implement the :class:`os.PathLike` interface, allowing "
"them to be used anywhere the interface is accepted."
msgstr ""
"純粋パスオブジェクトは :class:`os.PathLike` インターフェースを実装しており、"
"そのインタフェースを受理する箇所ならどこでも使用することができます。"

#: ../../library/pathlib.rst:153
msgid "Added support for the :class:`os.PathLike` interface."
msgstr ":class:`os.PathLike` インターフェースがサポートされました。"

#: ../../library/pathlib.rst:158
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents non-Windows "
"filesystem paths::"
msgstr ""
":class:`PurePath` のサブクラスです。このパスフレーバーは非 Windows パスを表し"
"ます::"

#: ../../library/pathlib.rst:164 ../../library/pathlib.rst:174
#: ../../library/pathlib.rst:591 ../../library/pathlib.rst:601
#: ../../library/pathlib.rst:611
msgid "*pathsegments* is specified similarly to :class:`PurePath`."
msgstr "*pathsegments* の指定は :class:`PurePath` と同じです。"

#: ../../library/pathlib.rst:168
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents Windows "
"filesystem paths::"
msgstr ""
":class:`PurePath` のサブクラスです。このパスフレーバーは Windows ファイルシス"
"テムパスを表します::"

#: ../../library/pathlib.rst:176
msgid ""
"Regardless of the system you're running on, you can instantiate all of these "
"classes, since they don't provide any operation that does system calls."
msgstr ""
"これらクラスはあらゆるシステムコールを行わないため、起動しているシステムにか"
"かわらずインスタンスを作成できます。"

#: ../../library/pathlib.rst:181
msgid "General properties"
msgstr "全般的な性質"

#: ../../library/pathlib.rst:183
msgid ""
"Paths are immutable and hashable.  Paths of a same flavour are comparable "
"and orderable.  These properties respect the flavour's case-folding "
"semantics::"
msgstr ""
"パスオブジェクトはイミュータブルでハッシュ可能です。\n"
"同じフレーバーのパスオブジェクトは比較ならびに順序付け可能です。\n"
"これらのプロパティは、フレーバーのケースフォールディング (訳注: 比較のために"
"正規化すること、例えば全て大文字にする) のセマンティクスに従います。"

#: ../../library/pathlib.rst:196
msgid "Paths of a different flavour compare unequal and cannot be ordered::"
msgstr ""
"異なるフレーバーのパスオブジェクト同士の比較は等価になることはなく、順序付け"
"もできません::"

#: ../../library/pathlib.rst:207
msgid "Operators"
msgstr "演算子"

#: ../../library/pathlib.rst:209
msgid ""
"The slash operator helps create child paths, similarly to :func:`os.path."
"join`::"
msgstr ""
"演算子スラッシュ \"/\" はパスの追加を行います。:func:`os.path.join` と似てい"
"ます::"

#: ../../library/pathlib.rst:220
msgid ""
"A path object can be used anywhere an object implementing :class:`os."
"PathLike` is accepted::"
msgstr ""
":class:`os.PathLike` を実装したオブジェクトが受理できる箇所ならどこでも、パス"
"オブジェクトが使用できます::"

#: ../../library/pathlib.rst:228
msgid ""
"The string representation of a path is the raw filesystem path itself (in "
"native form, e.g. with backslashes under Windows), which you can pass to any "
"function taking a file path as a string::"
msgstr ""
"パスオブジェクトの文字列表現はそのシステム自身の Raw ファイルシステムパス (ネ"
"イティブの形式、例えば Windows では区切り文字がバックスラッシュ) になり、文字"
"列としてファイルパスを取るあらゆる関数に渡すことができます::"

#: ../../library/pathlib.rst:239
msgid ""
"Similarly, calling :class:`bytes` on a path gives the raw filesystem path as "
"a bytes object, as encoded by :func:`os.fsencode`::"
msgstr ""
"同様に、パスオブジェクトを :class:`bytes` で呼び出すと、Raw ファイルシステム"
"パスを :func:`os.fsencode` でエンコードされたバイト列オブジェクトで返します::"

#: ../../library/pathlib.rst:246
msgid ""
"Calling :class:`bytes` is only recommended under Unix.  Under Windows, the "
"unicode form is the canonical representation of filesystem paths."
msgstr ""
":class:`bytes` での呼び出しは Unix 上での使用のみ推奨します。Windows では "
"Unicode 形式が標準的なファイルシステムパス表現になります。"

#: ../../library/pathlib.rst:251
msgid "Accessing individual parts"
msgstr "個別の構成要素へのアクセス"

#: ../../library/pathlib.rst:253
msgid ""
"To access the individual \"parts\" (components) of a path, use the following "
"property:"
msgstr ""
"パスの個別の \"構成要素\" へアクセスするには、以下のプロパティを使用します:"

#: ../../library/pathlib.rst:258
msgid "A tuple giving access to the path's various components::"
msgstr "パスのさまざまな構成要素へのアクセス手段を提供するタプルになります::"

#: ../../library/pathlib.rst:268
msgid "(note how the drive and local root are regrouped in a single part)"
msgstr "(ドライブ名とローカルルートは単一要素にまとめられます)"

#: ../../library/pathlib.rst:272
msgid "Methods and properties"
msgstr "メソッドとプロパティ"

#: ../../library/pathlib.rst:274
msgid "Pure paths provide the following methods and properties:"
msgstr "純粋パスは以下のメソッドとプロパティを提供します:"

#: ../../library/pathlib.rst:278
msgid "A string representing the drive letter or name, if any::"
msgstr "ドライブ文字または名前を表す文字列があればそれになります::"

#: ../../library/pathlib.rst:287
msgid "UNC shares are also considered drives::"
msgstr "UNC 共有名もドライブとみなされます::"

#: ../../library/pathlib.rst:294
msgid "A string representing the (local or global) root, if any::"
msgstr "ローカルまたはグローバルルートを表す文字列があればそれになります::"

#: ../../library/pathlib.rst:303
msgid "UNC shares always have a root::"
msgstr "UNC 共有名は常にルートを持ちます::"

#: ../../library/pathlib.rst:310
msgid "The concatenation of the drive and root::"
msgstr "ドライブとルートを結合した文字列になります::"

#: ../../library/pathlib.rst:324
msgid ""
"An immutable sequence providing access to the logical ancestors of the path::"
msgstr ""
"パスの論理的な上位パスにアクセスできるイミュータブルなシーケンスになります::"

#: ../../library/pathlib.rst:338
msgid "The logical parent of the path::"
msgstr "パスの論理的な上位パスになります::"

#: ../../library/pathlib.rst:344
msgid "You cannot go past an anchor, or empty path::"
msgstr "アンカーの位置を超えることや空のパスになる位置には対応していません::"

#: ../../library/pathlib.rst:354
msgid "This is a purely lexical operation, hence the following behaviour::"
msgstr "これは純粋な字句操作であるため、以下のような挙動になります::"

#: ../../library/pathlib.rst:360
msgid ""
"If you want to walk an arbitrary filesystem path upwards, it is recommended "
"to first call :meth:`Path.resolve` so as to resolve symlinks and eliminate "
"`\"..\"` components."
msgstr ""
"任意のファイルシステムパスを上位方向に移動したい場合、シンボリックリンクの解"
"決や `\"..\"` 要素の除去のため、最初に :meth:`Path.resolve` を呼ぶことを推奨"
"します。"

#: ../../library/pathlib.rst:367
msgid ""
"A string representing the final path component, excluding the drive and "
"root, if any::"
msgstr ""
"パス要素の末尾を表す文字列があればそれになります。ドライブやルートは含まれま"
"せん::"

#: ../../library/pathlib.rst:373
msgid "UNC drive names are not considered::"
msgstr "UNC ドライブ名は考慮されません::"

#: ../../library/pathlib.rst:383
msgid "The file extension of the final component, if any::"
msgstr "末尾の要素に拡張子があればそれになります::"

#: ../../library/pathlib.rst:395
msgid "A list of the path's file extensions::"
msgstr "パスのファイル拡張子のリストになります::"

#: ../../library/pathlib.rst:407
msgid "The final path component, without its suffix::"
msgstr "パス要素の末尾から拡張子を除いたものになります::"

#: ../../library/pathlib.rst:419
msgid ""
"Return a string representation of the path with forward slashes (``/``)::"
msgstr "フォワードスラッシュ (``/``) を使用したパスを表す文字列を返します::"

#: ../../library/pathlib.rst:430
msgid ""
"Represent the path as a ``file`` URI.  :exc:`ValueError` is raised if the "
"path isn't absolute."
msgstr ""
"``file`` URI で表したパスを返します。絶対パスではない場合に :exc:"
"`ValueError` を送出します。"

#: ../../library/pathlib.rst:443
msgid ""
"Return whether the path is absolute or not.  A path is considered absolute "
"if it has both a root and (if the flavour allows) a drive::"
msgstr ""
"パスが絶対パスかどうかを返します。パスが絶対パスとみなされるのは、ルートと "
"(フレーバーが許す場合) ドライブとの両方が含まれる場合です::"

#: ../../library/pathlib.rst:463
msgid ""
"With :class:`PureWindowsPath`, return ``True`` if the path is considered "
"reserved under Windows, ``False`` otherwise.  With :class:`PurePosixPath`, "
"``False`` is always returned."
msgstr ""
":class:`PureWindowsPath` の場合はパスが Windows 上で予約されていれば "
"``True`` を返し、そうでなければ ``False`` を返します。:class:`PurePosixPath` "
"の場合は常に ``False`` を返します。"

#: ../../library/pathlib.rst:472
msgid ""
"File system calls on reserved paths can fail mysteriously or have unintended "
"effects."
msgstr ""
"ファイルシステムで予約されたパスを呼び出すと、原因不明で失敗したり、予期せぬ"
"結果になります。"

#: ../../library/pathlib.rst:478
msgid ""
"Calling this method is equivalent to combining the path with each of the "
"*other* arguments in turn::"
msgstr ""
"このメソッドの呼び出しは引数 *other* を順々に繋げることと等価になります::"

#: ../../library/pathlib.rst:493
msgid ""
"Match this path against the provided glob-style pattern.  Return ``True`` if "
"matching is successful, ``False`` otherwise."
msgstr ""
"現在のパスが glob 形式で与えられたパターンと一致したら ``True`` を、一致しな"
"ければ ``False`` を返します。"

#: ../../library/pathlib.rst:496
msgid ""
"If *pattern* is relative, the path can be either relative or absolute, and "
"matching is done from the right::"
msgstr ""
"*pattern* が相対表記であればパスは相対および絶対パスを取ることができ、右から"
"一致を調べます::"

#: ../../library/pathlib.rst:506
msgid ""
"If *pattern* is absolute, the path must be absolute, and the whole path must "
"match::"
msgstr ""
"*pattern* が絶対表記であれば、パスは絶対パスでなければならず、パス全体が一致"
"しなければなりません::"

#: ../../library/pathlib.rst:514
msgid "As with other methods, case-sensitivity is observed::"
msgstr "他のメソッドと同様に、大文字小文字の区別はフレーバーに依存します::"

#: ../../library/pathlib.rst:522
msgid ""
"Compute a version of this path relative to the path represented by *other*.  "
"If it's impossible, ValueError is raised::"
msgstr ""
"*other* で表されたパスから現在のパスへの相対パスを返します。それが不可能だっ"
"た場合は ValueError が送出されます::"

#: ../../library/pathlib.rst:540
msgid ""
"Return a new path with the :attr:`name` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"現在のパスの :attr:`name` 部分を変更したパスを返します。オリジナルパスに :"
"attr:`name` 部分がない場合は ValueError が送出されます::"

#: ../../library/pathlib.rst:557
msgid ""
"Return a new path with the :attr:`suffix` changed.  If the original path "
"doesn't have a suffix, the new *suffix* is appended instead.  If the "
"*suffix* is an empty string, the original suffix is removed::"
msgstr ""
":attr:`suffix` を変更した新しいパスを返します。\n"
"元のパスに suffix が無かった場合、代わりに新しい *suffix* が追加されます。\n"
"*suffix* が空文字列だった場合、元の suffix は除去されます::"

#: ../../library/pathlib.rst:576
msgid "Concrete paths"
msgstr "具象パス"

#: ../../library/pathlib.rst:578
msgid ""
"Concrete paths are subclasses of the pure path classes.  In addition to "
"operations provided by the latter, they also provide methods to do system "
"calls on path objects.  There are three ways to instantiate concrete paths:"
msgstr ""
"具象パスは純粋パスクラスのサブクラスです。純粋パスが提供する操作に加え、パス"
"オブジェクト上でシステムコールを呼ぶメソッドも提供しています。具象パスのイン"
"スタンスを作成するには 3 つの方法があります:"

#: ../../library/pathlib.rst:584
msgid ""
"A subclass of :class:`PurePath`, this class represents concrete paths of the "
"system's path flavour (instantiating it creates either a :class:`PosixPath` "
"or a :class:`WindowsPath`)::"
msgstr ""
":class:`PurePath` のサブクラスであり、システムのパスフレーバーの具象パスを表"
"します (このインスタンスの作成で :class:`PosixPath` か :class:`WindowsPath` "
"のどちらかが作成されます)::"

#: ../../library/pathlib.rst:595
msgid ""
"A subclass of :class:`Path` and :class:`PurePosixPath`, this class "
"represents concrete non-Windows filesystem paths::"
msgstr ""
":class:`Path` および :class:`PurePosixPath` のサブクラスで、非 Windows ファイ"
"ルシステムの具象パスを表します::"

#: ../../library/pathlib.rst:605
msgid ""
"A subclass of :class:`Path` and :class:`PureWindowsPath`, this class "
"represents concrete Windows filesystem paths::"
msgstr ""
":class:`Path` および :class:`PureWindowsPath` のサブクラスで、Windows ファイ"
"ルシステムの具象パスを表します::"

#: ../../library/pathlib.rst:613
msgid ""
"You can only instantiate the class flavour that corresponds to your system "
"(allowing system calls on non-compatible path flavours could lead to bugs or "
"failures in your application)::"
msgstr ""
"インスタンスを作成できるのはシステムと一致するフレーバーのみです (互換性のな"
"いパスフレーバーでのシステムコールの許可はバグやアプリケーションの異常終了の"
"原因になります)::"

#: ../../library/pathlib.rst:633
msgid "Methods"
msgstr "メソッド"

#: ../../library/pathlib.rst:635
msgid ""
"Concrete paths provide the following methods in addition to pure paths "
"methods.  Many of these methods can raise an :exc:`OSError` if a system call "
"fails (for example because the path doesn't exist):"
msgstr ""
"具象パスは純粋パスに加え、以下のメソッドを提供します。これらメソッドの多くは"
"システムコールが失敗すると :exc:`OSError` を送出します (例えばパスが存在しな"
"い場合):"

#: ../../library/pathlib.rst:641
msgid ""
"Return a new path object representing the current directory (as returned by :"
"func:`os.getcwd`)::"
msgstr ""
"(:func:`os.getcwd` が返す) 現在のディレクトリを表す新しいパスオブジェクトを返"
"します::"

#: ../../library/pathlib.rst:650
msgid ""
"Return a new path object representing the user's home directory (as returned "
"by :func:`os.path.expanduser` with ``~`` construct)::"
msgstr ""
"ユーザーのホームディレクトリ (:func:`os.path.expanduser` での ``~`` の返り"
"値) を表す新しいパスオブジェクトを返します::"

#: ../../library/pathlib.rst:661
msgid ""
"Return information about this path (similarly to :func:`os.stat`). The "
"result is looked up at each call to this method."
msgstr ""
"(:func:`os.stat` と同様の) 現在のパスに関する情報を返します。値はそれぞれのメ"
"ソッドを呼び出した時点のものになります。"

#: ../../library/pathlib.rst:673
msgid "Change the file mode and permissions, like :func:`os.chmod`::"
msgstr ":func:`os.chmod` のようにファイルのモードとアクセス権限を変更します::"

#: ../../library/pathlib.rst:685
msgid "Whether the path points to an existing file or directory::"
msgstr "パスが既存のファイルかディレクトリを指しているかどうかを返します::"

#: ../../library/pathlib.rst:697
msgid ""
"If the path points to a symlink, :meth:`exists` returns whether the symlink "
"*points to* an existing file or directory."
msgstr ""
"パスがシンボリックリンクを指している場合、:meth:`exists` はシンボリックリンク"
"が既存のファイルかディレクトリを指しているかどうかを返します。"

#: ../../library/pathlib.rst:703
msgid ""
"Return a new path with expanded ``~`` and ``~user`` constructs, as returned "
"by :meth:`os.path.expanduser`::"
msgstr ""
"パス要素 ``~`` および ``~user`` を :meth:`os.path.expanduser` が返すように展"
"開した新しいパスオブジェクトを返します::"

#: ../../library/pathlib.rst:715
msgid ""
"Glob the given *pattern* in the directory represented by this path, yielding "
"all matching files (of any kind)::"
msgstr ""
"現在のパスが表すディレクトリ内で *pattern* に一致する (あらゆる種類の) すべて"
"のファイルを yield します::"

#: ../../library/pathlib.rst:723
msgid ""
"The \"``**``\" pattern means \"this directory and all subdirectories, "
"recursively\".  In other words, it enables recursive globbing::"
msgstr ""
"パターン \"``**``\" は \"このディレクトリおよびすべてのサブディレクトリを再帰"
"的に走査\" を意味します。言い換えれば、再帰的な Glob 走査が可能という意味で"
"す::"

#: ../../library/pathlib.rst:734
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""
"パターン \"``**``\" を大きなディレクトリツリーで使用するととてつもなく時間が"
"かかるかもしれません。"

#: ../../library/pathlib.rst:740
msgid ""
"Return the name of the group owning the file.  :exc:`KeyError` is raised if "
"the file's gid isn't found in the system database."
msgstr ""
"ファイルを所有するグループ名を返します。ファイルの GID がシステムのデータベー"
"スに見つからなかった場合は :exc:`KeyError` が送出されます。"

#: ../../library/pathlib.rst:746
msgid ""
"Return ``True`` if the path points to a directory (or a symbolic link "
"pointing to a directory), ``False`` if it points to another kind of file."
msgstr ""
"パスがディレクトリ (またはディレクトリへのシンボリックリンク) を指していた場"
"合 ``True`` を返し、その他の種類のファイルだった場合 ``False`` を返します。"

#: ../../library/pathlib.rst:749 ../../library/pathlib.rst:758
#: ../../library/pathlib.rst:775 ../../library/pathlib.rst:784
#: ../../library/pathlib.rst:793 ../../library/pathlib.rst:802
msgid ""
"``False`` is also returned if the path doesn't exist or is a broken symlink; "
"other errors (such as permission errors) are propagated."
msgstr ""
"パスが存在しないか壊れたシンボリックリンクだった場合にも ``False`` が返されま"
"す; (パーミッションエラーのような) その他のエラーは伝搬されます。"

#: ../../library/pathlib.rst:755
msgid ""
"Return ``True`` if the path points to a regular file (or a symbolic link "
"pointing to a regular file), ``False`` if it points to another kind of file."
msgstr ""
"パスが一般ファイル (または一般ファイルへのシンボリックリンク) を指していた場"
"合 ``True`` を返します。その他の種類のファイルを指していた場合 ``False`` を返"
"します。"

#: ../../library/pathlib.rst:764
msgid ""
"Return ``True`` if the path points to a symbolic link, ``False`` otherwise."
msgstr ""
"パスがシンボリックリンクを指していた場合 ``True`` を返し、その他の場合は "
"``False`` を返します。"

#: ../../library/pathlib.rst:766
msgid ""
"``False`` is also returned if the path doesn't exist; other errors (such as "
"permission errors) are propagated."
msgstr ""
"パスが存在しない場合も ``False`` を返します; (パーミッションエラーのような) "
"その他のエラーは伝搬されます。"

#: ../../library/pathlib.rst:772
msgid ""
"Return ``True`` if the path points to a Unix socket (or a symbolic link "
"pointing to a Unix socket), ``False`` if it points to another kind of file."
msgstr ""
"パスが Unix ソケット (または Unix ソケットへのシンボリックリンク) を指してい"
"た場合 ``True`` を返します。その他の種類のファイルの場合 ``False`` を返しま"
"す。"

#: ../../library/pathlib.rst:781
msgid ""
"Return ``True`` if the path points to a FIFO (or a symbolic link pointing to "
"a FIFO), ``False`` if it points to another kind of file."
msgstr ""
"パスが FIFO (または FIFO へのシンボリックリンク) を指していた場合 ``True`` を"
"返します。その他の種類のファイルの場合は ``False`` を返します。"

#: ../../library/pathlib.rst:790
msgid ""
"Return ``True`` if the path points to a block device (or a symbolic link "
"pointing to a block device), ``False`` if it points to another kind of file."
msgstr ""
"パスがブロックデバイス (またはブロックデバイスへのシンボリックリンク) を指し"
"ていた場合 ``True`` を返します。その他の種類のファイルの場合は ``False`` を返"
"します。"

#: ../../library/pathlib.rst:799
msgid ""
"Return ``True`` if the path points to a character device (or a symbolic link "
"pointing to a character device), ``False`` if it points to another kind of "
"file."
msgstr ""
"パスがキャラクターデバイス (またはキャラクターデバイスへのシンボリックリン"
"ク) を指していた場合、``True`` を返します。その他の種類のファイルの場合 "
"``False`` を返します。"

#: ../../library/pathlib.rst:808
msgid ""
"When the path points to a directory, yield path objects of the directory "
"contents::"
msgstr ""
"パスがディレクトリを指していた場合、ディレクトリの内容のパスオブジェクトを "
"yield します::"

#: ../../library/pathlib.rst:824
msgid ""
"Like :meth:`Path.chmod` but, if the path points to a symbolic link, the "
"symbolic link's mode is changed rather than its target's."
msgstr ""
":meth:`Path.chmod` のように振る舞いますが、パスがシンボリックリンクを指してい"
"た場合、リンク先ではなくシンボリックリンク自身のモードが変更されます。"

#: ../../library/pathlib.rst:830
msgid ""
"Like :meth:`Path.stat` but, if the path points to a symbolic link, return "
"the symbolic link's information rather than its target's."
msgstr ""
":meth:`Path.stat` のように振る舞いますが、パスがシンボリックリンクを指してい"
"た場合、リンク先ではなくシンボリックリンク自身の情報を返します。"

#: ../../library/pathlib.rst:836
msgid ""
"Create a new directory at this given path.  If *mode* is given, it is "
"combined with the process' ``umask`` value to determine the file mode and "
"access flags.  If the path already exists, :exc:`FileExistsError` is raised."
msgstr ""
"与えられたパスに新しくディレクトリを作成します。*mode* が与えられていた場合、"
"プロセスの ``umask`` 値と組み合わせてファイルのモードとアクセスフラグを決定し"
"ます。パスがすでに存在していた場合 :exc:`FileExistsError` が送出されます。"

#: ../../library/pathlib.rst:841
msgid ""
"If *parents* is true, any missing parents of this path are created as "
"needed; they are created with the default permissions without taking *mode* "
"into account (mimicking the POSIX ``mkdir -p`` command)."
msgstr ""
"*parents* の値が真の場合、このパスの親ディレクトリを必要に応じて作成します; "
"それらのアクセス制限はデフォルト値が取られ、*mode* は使用されません (POSIX "
"の ``mkdir -p`` コマンドを真似ています)。"

#: ../../library/pathlib.rst:845
msgid ""
"If *parents* is false (the default), a missing parent raises :exc:"
"`FileNotFoundError`."
msgstr ""
"*parents* の値が偽の場合 (デフォルト)、親ディレクトリがないと :exc:"
"`FileNotFoundError` を送出します。"

#: ../../library/pathlib.rst:848
msgid ""
"If *exist_ok* is false (the default), :exc:`FileExistsError` is raised if "
"the target directory already exists."
msgstr ""
"*exist_ok* の値が (デフォルトの) 偽の場合、対象のディレクトリがすでに存在する"
"と :exc:`FileExistsError` を送出します。"

#: ../../library/pathlib.rst:851
msgid ""
"If *exist_ok* is true, :exc:`FileExistsError` exceptions will be ignored "
"(same behavior as the POSIX ``mkdir -p`` command), but only if the last path "
"component is not an existing non-directory file."
msgstr ""
"*exist_ok* の値が真の場合、パス要素の末尾がすでに存在するがディレクトリではな"
"いときは :exc:`FileExistsError` 例外を送出しますが、ディレクトリであれば送出"
"しません (POSIX の ``mkdir -p`` コマンドの挙動と同じ)。"

#: ../../library/pathlib.rst:855
msgid "The *exist_ok* parameter was added."
msgstr "*exist_ok* 引数が追加されました。"

#: ../../library/pathlib.rst:861
msgid ""
"Open the file pointed to by the path, like the built-in :func:`open` "
"function does::"
msgstr "組み込み関数 :func:`open` のようにパスが指しているファイルを開きます::"

#: ../../library/pathlib.rst:873
msgid ""
"Return the name of the user owning the file.  :exc:`KeyError` is raised if "
"the file's uid isn't found in the system database."
msgstr ""
"ファイルの所有者のユーザー名を返します。ファイルの UID がシステムのデータベー"
"スに見つからない場合 :exc:`KeyError` が送出されます。"

#: ../../library/pathlib.rst:879
msgid "Return the binary contents of the pointed-to file as a bytes object::"
msgstr "指定されたファイルの内容をバイナリオブジェクトで返します::"

#: ../../library/pathlib.rst:892
msgid "Return the decoded contents of the pointed-to file as a string::"
msgstr "指定されたファイルの内容を文字列としてデコードして返します::"

#: ../../library/pathlib.rst:900
msgid ""
"The file is opened and then closed. The optional parameters have the same "
"meaning as in :func:`open`."
msgstr ""
"ファイルを開いた後に閉じます。\n"
"オプションのパラメーターの意味は :func:`open` と同じです。"

#: ../../library/pathlib.rst:908
msgid ""
"Rename this file or directory to the given *target*.  On Unix, if *target* "
"exists and is a file, it will be replaced silently if the user has "
"permission.  *target* can be either a string or another path object::"
msgstr ""
"このファイルかディレクトリを与えられた *target* にリネームします。\n"
"Unix では *target* が存在するファイルの場合、ユーザにパーミッションがあれば静"
"かに置換されます。\n"
"*target* は文字列か別のパスオブジェクトです::"

#: ../../library/pathlib.rst:923
msgid ""
"Rename this file or directory to the given *target*.  If *target* points to "
"an existing file or directory, it will be unconditionally replaced."
msgstr ""
"現在のファイルまたはディレクトリの名前を *target* に変更します。*target* が既"
"存のファイルかディレクトリを指していた場合、無条件に置き換えられます。"

#: ../../library/pathlib.rst:929
msgid ""
"Make the path absolute, resolving any symlinks.  A new path object is "
"returned::"
msgstr ""
"パスを絶対パスにし、あらゆるシンボリックリンクを解決します。新しいパスオブ"
"ジェクトが返されます::"

#: ../../library/pathlib.rst:938
msgid ""
"\"``..``\" components are also eliminated (this is the only method to do "
"so)::"
msgstr ""
"\"``..``\" 要素は除去されます (このような挙動を示すのはこのメソッドだけで"
"す)::"

#: ../../library/pathlib.rst:944
msgid ""
"If the path doesn't exist and *strict* is ``True``, :exc:`FileNotFoundError` "
"is raised.  If *strict* is ``False``, the path is resolved as far as "
"possible and any remainder is appended without checking whether it exists.  "
"If an infinite loop is encountered along the resolution path, :exc:"
"`RuntimeError` is raised."
msgstr ""
"パスが存在せず *strict* が ``True`` の場合、 :exc:`FileNotFoundError` が送出"
"されます。\n"
"*strict* が ``False`` の場合は、パスは可能な限り解決され、残りの部分は存在す"
"るかのチェックをせずに追加されます。\n"
"もしパスの解決にあたって無限ループする場合は、:exc:`RuntimeError` が送出され"
"ます。"

#: ../../library/pathlib.rst:950
msgid "The *strict* argument."
msgstr "*strict* 引数"

#: ../../library/pathlib.rst:955
msgid ""
"This is like calling :meth:`Path.glob` with \"``**``\" added in front of the "
"given *pattern*:"
msgstr ""
"これは :meth:`Path.glob` を *pattern* の先頭に \"``**``\" を追加して呼び出し"
"た場合と似ています:"

#: ../../library/pathlib.rst:968
msgid "Remove this directory.  The directory must be empty."
msgstr "現在のディレクトリを削除します。ディレクトリは空でなければなりません。"

#: ../../library/pathlib.rst:973
msgid ""
"Return whether this path points to the same file as *other_path*, which can "
"be either a Path object, or a string.  The semantics are similar to :func:"
"`os.path.samefile` and :func:`os.path.samestat`."
msgstr ""
"このパスが参照するファイルが *other_path* (Path オブジェクトか文字列) と同じ"
"であれば ``True`` を、異なるファイルであれば ``False`` を返します。意味的に"
"は :func:`os.path.samefile` および :func:`os.path.samestat` と同じです。"

#: ../../library/pathlib.rst:977
msgid ""
"An :exc:`OSError` can be raised if either file cannot be accessed for some "
"reason."
msgstr ""
"なんらかの理由でどちらかのファイルにアクセスできない場合は :exc:`OSError` が"
"送出されます。"

#: ../../library/pathlib.rst:992
msgid ""
"Make this path a symbolic link to *target*.  Under Windows, "
"*target_is_directory* must be true (default ``False``) if the link's target "
"is a directory.  Under POSIX, *target_is_directory*'s value is ignored."
msgstr ""
"現在のパスに *target* へのシンボリックリンクを作成します。Windows では、リン"
"ク対象がディレクトリの場合 *target_is_directory* が真でなければなりません (デ"
"フォルトは ``False``)。POSIX では、*target_is_directory* の値は無視されます。"

#: ../../library/pathlib.rst:1006
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.symlink`'s."
msgstr "引数の並び (link, target) は :func:`os.symlink` とは逆です。"

#: ../../library/pathlib.rst:1012
msgid ""
"Create a file at this given path.  If *mode* is given, it is combined with "
"the process' ``umask`` value to determine the file mode and access flags.  "
"If the file already exists, the function succeeds if *exist_ok* is true (and "
"its modification time is updated to the current time), otherwise :exc:"
"`FileExistsError` is raised."
msgstr ""
"与えられたパスにファイルを作成します。*mode* が与えられた場合、プロセスの "
"``umask`` 値と組み合わせてファイルのモードとアクセスフラグが決定されます。"
"ファイルがすでに存在した場合、*exist_ok* が真ならばこの関数は正常に終了しま"
"す (そしてファイルの更新日付が現在の日時に変更されます)。その他の場合は :exc:"
"`FileExistsError` が送出されます。"

#: ../../library/pathlib.rst:1021
msgid ""
"Remove this file or symbolic link.  If the path points to a directory, use :"
"func:`Path.rmdir` instead."
msgstr ""
"このファイルまたはシンボリックリンクを削除します。パスがディレクトリを指して"
"いる場合は :func:`Path.rmdir` を使用してください。"

#: ../../library/pathlib.rst:1027
msgid ""
"Open the file pointed to in bytes mode, write *data* to it, and close the "
"file::"
msgstr ""
"指定されたファイルをバイトモードで開き、*data* を書き込み、ファイルを閉じま"
"す::"

#: ../../library/pathlib.rst:1036
msgid "An existing file of the same name is overwritten."
msgstr "同じ名前のファイルがすでにあれば上書きされます。"

#: ../../library/pathlib.rst:1043
msgid ""
"Open the file pointed to in text mode, write *data* to it, and close the "
"file::"
msgstr ""
"指定されたファイルをテキストモードで開き、*data* を書き込み、ファイルを閉じま"
"す::"
