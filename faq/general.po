# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: Hiroyuki Kurosawa <kh99mail@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../faq/general.rst:5
msgid "General Python FAQ"
msgstr "一般 Python FAQ"

#: ../../faq/general.rst:8
msgid "Contents"
msgstr "内容"

#: ../../faq/general.rst:13
msgid "General Information"
msgstr "一般情報"

#: ../../faq/general.rst:16
msgid "What is Python?"
msgstr "Python とは何ですか？"

#: ../../faq/general.rst:18
msgid ""
"Python is an interpreted, interactive, object-oriented programming "
"language.  It incorporates modules, exceptions, dynamic typing, very high "
"level dynamic data types, and classes.  Python combines remarkable power "
"with very clear syntax. It has interfaces to many system calls and "
"libraries, as well as to various window systems, and is extensible in C or C+"
"+.  It is also usable as an extension language for applications that need a "
"programmable interface. Finally, Python is portable: it runs on many Unix "
"variants, on the Mac, and on PCs under MS-DOS, Windows, Windows NT, and OS/2."
msgstr ""
"Python は、インタプリタ形式の、対話的な、オブジェクト指向プログラミング言語で"
"す。この言語には、モジュール、例外、動的な型付け、超高水準の動的なデータ型、"
"およびクラスが取り入れられています。 Python は驚くべきパワーと非常に分かりや"
"すい文法を持ち合わせています。そして、多くのシステムコールやライブラリへだけ"
"でなく、様々なウィンドウシステムへのインタフェースがあり、 C や C++ で拡張す"
"ることもできます。また、プログラム可能なインタフェースが必要なアプリケーショ"
"ンのための拡張言語としても利用できます。最後に、Python はポータブルです。多く"
"の Unix バリアント、 Mac、そして MS-DOS、Windows、Windows NT、OS/2 上の PC で"
"動かすことができます。"

#: ../../faq/general.rst:27
msgid ""
"To find out more, start with :ref:`tutorial-index`.  The `Beginner's Guide "
"to Python <https://wiki.python.org/moin/BeginnersGuide>`_ links to other "
"introductory tutorials and resources for learning Python."
msgstr ""
"さらに知りたければ、 :ref:`tutorial-index` から始めましょう。他にも、 "
"`Beginner's Guide to Python <https://wiki.python.org/moin/BeginnersGuide>`_ "
"から、Python 学習のための入門用チュートリアルやリソースを参照できます。。"

#: ../../faq/general.rst:33
msgid "What is the Python Software Foundation?"
msgstr "Python Software Foundation とは何ですか？"

#: ../../faq/general.rst:35
msgid ""
"The Python Software Foundation is an independent non-profit organization "
"that holds the copyright on Python versions 2.1 and newer.  The PSF's "
"mission is to advance open source technology related to the Python "
"programming language and to publicize the use of Python.  The PSF's home "
"page is at https://www.python.org/psf/."
msgstr ""
"Python Software Foundation は、Python バージョン 2.1 以降の著作権を保持する独"
"立の非営利組織です。PSF の任務は、Python プログラミング言語に関するオープン"
"ソース技術を進め、Python の使用を広めることです。PSF のホームページが "
"https://www.python.org/psf/ にあります。"

#: ../../faq/general.rst:41
msgid ""
"Donations to the PSF are tax-exempt in the US.  If you use Python and find "
"it helpful, please contribute via `the PSF donation page <https://www.python."
"org/psf/donations/>`_."
msgstr ""
"PSF への寄付は米国で免税されています。Python を利用して役立ったと感じたら、"
"`the PSF donation page <https://www.python.org/psf/donations/>`_ で貢献をお願"
"いします。"

#: ../../faq/general.rst:47
msgid "Are there copyright restrictions on the use of Python?"
msgstr "Python を使うのに著作権の制限はありますか？"

#: ../../faq/general.rst:49
msgid ""
"You can do anything you want with the source, as long as you leave the "
"copyrights in and display those copyrights in any documentation about Python "
"that you produce.  If you honor the copyright rules, it's OK to use Python "
"for commercial use, to sell copies of Python in source or binary form "
"(modified or unmodified), or to sell products that incorporate Python in "
"some form.  We would still like to know about all commercial use of Python, "
"of course."
msgstr ""
"あなたが作成する Python に関するドキュメントのすべてに著作権を残し、それらの"
"著作権を表示する限り、ソースコードをどのように扱ってもかまいません。この著作"
"権規則を尊重する限り、商用に Python を利用しても、ソースあるいはバイナリ形式"
"で(変更の有無にかかわらず) Python のコピーを販売しても、Python が何らかの形で"
"組み込まれた製品を販売してかまいません。もちろん、Python のあらゆる商業用途に"
"ついても同様です。"

#: ../../faq/general.rst:56
msgid ""
"See `the PSF license page <https://www.python.org/psf/license/>`_ to find "
"further explanations and a link to the full text of the license."
msgstr ""
"ライセンスのより詳しい説明と全文へのリンクは `the PSF license page <https://"
"www.python.org/psf/license/>`_ を参照してください。"

#: ../../faq/general.rst:59
msgid ""
"The Python logo is trademarked, and in certain cases permission is required "
"to use it.  Consult `the Trademark Usage Policy <https://www.python.org/psf/"
"trademarks/>`__ for more information."
msgstr ""
"Python のロゴは商標登録されていて、使用に許可が必要な場合があります。詳しい情"
"報は `the Trademark Usage Policy <https://www.python.org/psf/trademarks/>`__ "
"を参照してください。"

#: ../../faq/general.rst:65
msgid "Why was Python created in the first place?"
msgstr "Python が誕生したきっかけは何ですか？"

#: ../../faq/general.rst:67
msgid ""
"Here's a *very* brief summary of what started it all, written by Guido van "
"Rossum:"
msgstr ""
"Guido van Rossum による、すべてのきっかけの *非常に* 簡潔な概要は以下のとおり"
"です:"

#: ../../faq/general.rst:70
msgid ""
"I had extensive experience with implementing an interpreted language in the "
"ABC group at CWI, and from working with this group I had learned a lot about "
"language design.  This is the origin of many Python features, including the "
"use of indentation for statement grouping and the inclusion of very-high-"
"level data types (although the details are all different in Python)."
msgstr ""
"私は CWI の ABC グループでインタプリタ言語を実装する幅広い経験をしていて、そ"
"こで共に働くことで言語設計に関して大いに学びました。これが文のグループ化への"
"インデントの使用や超高水準のデータ型の包含など、(詳細は Python では全く異なり"
"ますが) Python の多くの特徴のもととなっています。"

#: ../../faq/general.rst:77
msgid ""
"I had a number of gripes about the ABC language, but also liked many of its "
"features.  It was impossible to extend the ABC language (or its "
"implementation) to remedy my complaints -- in fact its lack of extensibility "
"was one of its biggest problems.  I had some experience with using Modula-2+ "
"and talked with the designers of Modula-3 and read the Modula-3 report. "
"Modula-3 is the origin of the syntax and semantics used for exceptions, and "
"some other Python features."
msgstr ""
"私は ABC 言語に対して多くの不満を持っていましたが、同時に特徴の多くが好きでも"
"ありました。ABC 言語 (やその実装)を拡張して私の不満を解消することは不可能でし"
"た (実際、拡張性の欠如は大きな問題だったのです)。私は Modula-2+ を使用するこ"
"とでいくらかの経験を積み、Modula-3 のデザイナーと話して Modula-3 のレポートを"
"読みました。Modula-3 は例外処理に使う構文や語義、その他いくつかの Python の特"
"徴の起源です。"

#: ../../faq/general.rst:85
msgid ""
"I was working in the Amoeba distributed operating system group at CWI.  We "
"needed a better way to do system administration than by writing either C "
"programs or Bourne shell scripts, since Amoeba had its own system call "
"interface which wasn't easily accessible from the Bourne shell.  My "
"experience with error handling in Amoeba made me acutely aware of the "
"importance of exceptions as a programming language feature."
msgstr ""
"私は CWI で Amoeba 分散オペレーティングシステムのグループで働いていました。"
"Amoeba のシステムコールインタフェースには Bourne シェルからアクセスしにくかっ"
"たので、C プログラムや Bourne シェルスクリプトを書くよりも良いシステム管理の"
"方法が必要でした。Amoeba のエラー処理の経験から、プログラミング言語の機能とし"
"ての例外の重要さを強く意識するようになりました。"

#: ../../faq/general.rst:92
msgid ""
"It occurred to me that a scripting language with a syntax like ABC but with "
"access to the Amoeba system calls would fill the need.  I realized that it "
"would be foolish to write an Amoeba-specific language, so I decided that I "
"needed a language that was generally extensible."
msgstr ""
"ABC のような構文と Amoeba のようなシステムコールを合わせ持ったスクリプト言語"
"が必要だろうと思いつきました。Amoeba 専用の言語を書くのは愚かであるだろうと気"
"づき、一般に拡張できるような言語を求めることに決めました。"

#: ../../faq/general.rst:97
msgid ""
"During the 1989 Christmas holidays, I had a lot of time on my hand, so I "
"decided to give it a try.  During the next year, while still mostly working "
"on it in my own time, Python was used in the Amoeba project with increasing "
"success, and the feedback from colleagues made me add many early "
"improvements."
msgstr ""
"1989 年のクリスマス休暇の間、自由な時間がたくさんできたので、その言語を実際に"
"作ってみることにしました。翌年の間、勤務時間以外はほとんどその開発に費やし、"
"Python は Amoeba プロジェクトのなかで成果を重ね、同僚からのフィードバックは私"
"の開発を大いに加速させてくれました。"

#: ../../faq/general.rst:103
msgid ""
"In February 1991, after just over a year of development, I decided to post "
"to USENET.  The rest is in the ``Misc/HISTORY`` file."
msgstr ""
"1991 年 2 月、1 年間と少しの開発を経て、USENET に投稿することにしました。それ"
"は ``Misc/HISTORY`` ファイルに残っています。"

#: ../../faq/general.rst:108
msgid "What is Python good for?"
msgstr "Python は何をするのに向いていますか？"

#: ../../faq/general.rst:110
msgid ""
"Python is a high-level general-purpose programming language that can be "
"applied to many different classes of problems."
msgstr ""
"Python は、多岐にわたる問題に適用できる高水準な汎用プログラム言語です。"

#: ../../faq/general.rst:113
msgid ""
"The language comes with a large standard library that covers areas such as "
"string processing (regular expressions, Unicode, calculating differences "
"between files), Internet protocols (HTTP, FTP, SMTP, XML-RPC, POP, IMAP, CGI "
"programming), software engineering (unit testing, logging, profiling, "
"parsing Python code), and operating system interfaces (system calls, "
"filesystems, TCP/IP sockets).  Look at the table of contents for :ref:"
"`library-index` to get an idea of what's available.  A wide variety of third-"
"party extensions are also available.  Consult `the Python Package Index "
"<https://pypi.org>`_ to find packages of interest to you."
msgstr ""
"この言語は、文字列処理(正規表現、Unicode、ファイル間の差分の計算)、インター"
"ネットプロトコル(HTTP、FTP、SMTP、XML-RPC、POP、IMAP、 CGI プログラミング)、"
"ソフトウェアエンジニアリング(Python コードのユニットテスト、ロギング、プロ"
"ファイリング、解析)、オペレーティングシステムインタフェース(システムコール、"
"ファイルシステム、 TCP/IP ソケット) のような領域をカバーする大規模な標準ライ"
"ブラリから成り立っています。何ができるかを知るには :ref:`library-index` の一"
"覧を参照してください。また、様々なサードパーティの拡張も使えます。 `the "
"Python Package Index <https://pypi.org>`_ から興味のあるパッケージを探してみ"
"ましょう。"

#: ../../faq/general.rst:125
msgid "How does the Python version numbering scheme work?"
msgstr "Python のバージョン番号の仕組みはどうなっているのですか？"

#: ../../faq/general.rst:127
msgid ""
"Python versions are numbered A.B.C or A.B.  A is the major version number -- "
"it is only incremented for really major changes in the language.  B is the "
"minor version number, incremented for less earth-shattering changes.  C is "
"the micro-level -- it is incremented for each bugfix release.  See :pep:`6` "
"for more information about bugfix releases."
msgstr ""
"Python のバージョン番号は A.B.C や A.B のように付けられています。 A はメ"
"ジャーバージョン番号で、言語の本当に重要な変更の時のみ増やされます。 B はマイ"
"ナーバージョン番号で、そこまでは大きくない変更の時に増やされます。 C はマイク"
"ロレベルで、バグフィックスリリースの度に増やされます。バグフィックスリリース"
"に関する詳細は :pep:`6` を参照してください。"

#: ../../faq/general.rst:133
msgid ""
"Not all releases are bugfix releases.  In the run-up to a new major release, "
"a series of development releases are made, denoted as alpha, beta, or "
"release candidate.  Alphas are early releases in which interfaces aren't yet "
"finalized; it's not unexpected to see an interface change between two alpha "
"releases. Betas are more stable, preserving existing interfaces but possibly "
"adding new modules, and release candidates are frozen, making no changes "
"except as needed to fix critical bugs."
msgstr ""
"すべてのリリースがバグフィックスリリースであるというわけではありません。メ"
"ジャーリリースへの準備段階では、一連の開発リリースが作られ、アルファ版、ベー"
"タ版、またはリリース候補と名付けられます。アルファ版はインタフェースが確定さ"
"れないうちにリリースされる早期リリースで、２つのアルファリリース間でインタ"
"フェースが変わるかもしれません。ベータ版はもっと安定していて、現存のインタ"
"フェースは保存されますが新しいモジュールが追加されるかもしれません。リリース"
"候補は固まったもので、致命的なバグを直すのでなければ変更されません。"

#: ../../faq/general.rst:141
msgid ""
"Alpha, beta and release candidate versions have an additional suffix.  The "
"suffix for an alpha version is \"aN\" for some small number N, the suffix "
"for a beta version is \"bN\" for some small number N, and the suffix for a "
"release candidate version is \"cN\" for some small number N.  In other "
"words, all versions labeled 2.0aN precede the versions labeled 2.0bN, which "
"precede versions labeled 2.0cN, and *those* precede 2.0."
msgstr ""
"アルファ、ベータ、リリース候補の各バージョンには接尾語が追加されます。 N をな"
"にか小さい番号として、アルファ版の接尾語は \"aN\" 、ベータ版の接尾語は "
"\"bN\" 、リリース候補の接尾語は \"cN\" です。つまり、バージョン 2.0aN、バー"
"ジョン 2.0bN、バージョン 2.0cN、バージョン 2.0 の順にリリースされることになり"
"ます。"

#: ../../faq/general.rst:148
msgid ""
"You may also find version numbers with a \"+\" suffix, e.g. \"2.2+\".  These "
"are unreleased versions, built directly from the CPython development "
"repository.  In practice, after a final minor release is made, the version "
"is incremented to the next minor version, which becomes the \"a0\" version, "
"e.g. \"2.4a0\"."
msgstr ""
"また、\"2.2+\" のように \"+\" 接尾語が付いたバージョン番号もあります。これは"
"未発表のバージョンで、 CPython 開発リポジトリから直接ビルドされています。実"
"際、最後のマイナーリリースが行われた後、バージョンは \"2.4a0\" のように "
"\"a0\" がつく次のマイナーバージョンになります。"

#: ../../faq/general.rst:153
msgid ""
"See also the documentation for :data:`sys.version`, :data:`sys.hexversion`, "
"and :data:`sys.version_info`."
msgstr ""
":data:`sys.version`, :data:`sys.hexversion`,  :data:`sys.version_info` につい"
"てのドキュメントも参照してください。"

#: ../../faq/general.rst:158
msgid "How do I obtain a copy of the Python source?"
msgstr "Python のソースのコピーはどこで手に入りますか？"

#: ../../faq/general.rst:160
msgid ""
"The latest Python source distribution is always available from python.org, "
"at https://www.python.org/downloads/.  The latest development sources can be "
"obtained at https://github.com/python/cpython/."
msgstr ""
"最新の Python ソースは python.org (https://www.python.org/downloads/) からい"
"つでも手に入れることができます。最新の開発版ソースは https://github.python."
"org/cpython  にアクセスして手に入れることができます。"

#: ../../faq/general.rst:164
msgid ""
"The source distribution is a gzipped tar file containing the complete C "
"source, Sphinx-formatted documentation, Python library modules, example "
"programs, and several useful pieces of freely distributable software.  The "
"source will compile and run out of the box on most UNIX platforms."
msgstr ""
"ソースは gzip された tar ファイルで配布され、完全な C のソース、Sphinx により"
"フォーマットされたドキュメント、Python ライブラリモジュール、サンプルプログラ"
"ム、そしていくつかの役立つ配布自由なソフトウェアを含んでいます。このソースは"
"ほとんどの UNIX プラットフォームでそのままコンパイルして動かせます。"

#: ../../faq/general.rst:169
msgid ""
"Consult the `Getting Started section of the Python Developer's Guide "
"<https://docs.python.org/devguide/setup.html>`__ for more information on "
"getting the source code and compiling it."
msgstr ""
"ソースコードを手に入れてコンパイルすることの詳しい情報は `Getting Started "
"section of the Python Developer's Guide <https://docs.python.org/devguide/"
"setup.html>`__ を参照してください。"

#: ../../faq/general.rst:175
msgid "How do I get documentation on Python?"
msgstr "Python のドキュメントはどこで手に入りますか？"

#: ../../faq/general.rst:179
msgid ""
"The standard documentation for the current stable version of Python is "
"available at https://docs.python.org/3/.  PDF, plain text, and downloadable "
"HTML versions are also available at https://docs.python.org/3/download.html."
msgstr ""
"Python の現行の安定バージョンの標準ドキュメントは https://docs.python.org/3/ "
"から利用できます。また、PDF、プレーンテキスト、ダウンロードできる HTML 版も "
"http://docss.python.org/3/download.html から利用できます。"

#: ../../faq/general.rst:183
msgid ""
"The documentation is written in reStructuredText and processed by `the "
"Sphinx documentation tool <http://sphinx-doc.org/>`__.  The reStructuredText "
"source for the documentation is part of the Python source distribution."
msgstr ""
"このドキュメントは reStructuredText で書かれ、`the Sphinx documentation tool "
"<http://sphinx-doc.org/>`__ で構成されました。このドキュメントに使われた "
"reStructuredText のソースは Python のソース配布に含まれます。"

#: ../../faq/general.rst:189
msgid "I've never programmed before. Is there a Python tutorial?"
msgstr ""
"プログラミングをしたことがないのですが、Python のチュートリアルはありますか？"

#: ../../faq/general.rst:191
msgid ""
"There are numerous tutorials and books available.  The standard "
"documentation includes :ref:`tutorial-index`."
msgstr ""
"膨大な量の役に立つチュートリアルや書籍があります。標準のドキュメントには :"
"ref:`tutorial-index` などがあります。"

#: ../../faq/general.rst:194
msgid ""
"Consult `the Beginner's Guide <https://wiki.python.org/moin/"
"BeginnersGuide>`_ to find information for beginning Python programmers, "
"including lists of tutorials."
msgstr ""
"Python プログラム初心者のための情報のチュートリアルのリストは `the "
"Beginner's Guide <https://wiki.python.org/moin/BeginnersGuide>`_ を参照してく"
"ださい。"

#: ../../faq/general.rst:199
msgid "Is there a newsgroup or mailing list devoted to Python?"
msgstr "Python のためのニュースグループやメーリングリストはありますか？"

#: ../../faq/general.rst:201
msgid ""
"There is a newsgroup, :newsgroup:`comp.lang.python`, and a mailing list, "
"`python-list <https://mail.python.org/mailman/listinfo/python-list>`_.  The "
"newsgroup and mailing list are gatewayed into each other -- if you can read "
"news it's unnecessary to subscribe to the mailing list. :newsgroup:`comp."
"lang.python` is high-traffic, receiving hundreds of postings every day, and "
"Usenet readers are often more able to cope with this volume."
msgstr ""
"ニュースグループ :newsgroup:`comp.lang.python` やメーリングリスト `python-"
"list <https://mail.python.org/mailman/listinfo/python-list>`_ があります。"
"ニュースグループとメーリングリストは互いに接続されていて、ニュースを購読すれ"
"ばメーリングリストに参加する必要はありません。 :newsgroup:`comp.lang.python` "
"は一日に数百のポスティングを受ける高いトラフィックで、USENET 読者は多くの場"
"合、このボリュームに応えることができます。"

#: ../../faq/general.rst:208
msgid ""
"Announcements of new software releases and events can be found in comp.lang."
"python.announce, a low-traffic moderated list that receives about five "
"postings per day.  It's available as `the python-announce mailing list "
"<https://mail.python.org/mailman/listinfo/python-announce-list>`_."
msgstr ""
"新しいソフトウェアリリースとイベントの告知は comp.lang.python.announce で見つ"
"けられます。これは一日に 5 ポスティング程度を受ける低トラフィックの手頃なメー"
"リングリストです。`the python-announce mailing list <https://mail.python.org/"
"mailman/listinfo/python-announce-list>`_ から利用可能です。"

#: ../../faq/general.rst:213
msgid ""
"More info about other mailing lists and newsgroups can be found at https://"
"www.python.org/community/lists/."
msgstr ""
"その他のメーリングリストやニュースグループについての詳しい情報は https://www."
"python.org/community/lists/ にあります。"

#: ../../faq/general.rst:218
msgid "How do I get a beta test version of Python?"
msgstr "Python のベータテスト版はどこで手に入りますか？"

#: ../../faq/general.rst:220
msgid ""
"Alpha and beta releases are available from https://www.python.org/"
"downloads/.  All releases are announced on the comp.lang.python and comp."
"lang.python.announce newsgroups and on the Python home page at https://www."
"python.org/; an RSS feed of news is available."
msgstr ""
"アルファ/ベータリリースは https://www.python.org/downloads/ で手に入ります。"
"リリースはすべて comp.lang.python や comp.lang.python.announce のニュースグ"
"ループと Python ホームページ https://www.python.org/ で告知され、RSS ニュース"
"フィードが利用できます。"

#: ../../faq/general.rst:225
msgid ""
"You can also access the development version of Python through Git.  See `The "
"Python Developer's Guide <https://docs.python.org/devguide/>`_ for details."
msgstr ""
"Git から開発版を手に入れることもできます。詳細は `The Python Developer's "
"guide <https://docs.python.org/devguide/>`_ を参照してください。"

#: ../../faq/general.rst:230
msgid "How do I submit bug reports and patches for Python?"
msgstr "Python のバグ報告やパッチを上げるにはどうしたら良いですか？"

#: ../../faq/general.rst:232
msgid ""
"To report a bug or submit a patch, please use the Roundup installation at "
"https://bugs.python.org/."
msgstr ""
"バグの報告やパッチの投稿には、https://bugs.python.org/ から Roundup "
"installation を利用してください。"

#: ../../faq/general.rst:235
msgid ""
"You must have a Roundup account to report bugs; this makes it possible for "
"us to contact you if we have follow-up questions.  It will also enable "
"Roundup to send you updates as we act on your bug. If you had previously "
"used SourceForge to report bugs to Python, you can obtain your Roundup "
"password through Roundup's `password reset procedure <https://bugs.python."
"org/user?@template=forgotten>`_."
msgstr ""
"バグ報告には Roundup アカウントが必要です (こちらから関連する質問をさせて頂く"
"ため、またバグを解決したときにアップデート版を送るため)。以前バグ報告に "
"SourceForge を使っていたことがあるなら、Roundup の `password reset procedure "
"<https://bugs.python.org/user?@template=forgotten>`_ から Roundup のパスワー"
"ドを取得することができます。"

#: ../../faq/general.rst:241
msgid ""
"For more information on how Python is developed, consult `the Python "
"Developer's Guide <https://docs.python.org/devguide/>`_."
msgstr ""
"Python 開発の工程について、詳しくは `the Python Developer's Guide <https://"
"docs.python.org/devguide/>`_ を参照してください。"

#: ../../faq/general.rst:246
msgid "Are there any published articles about Python that I can reference?"
msgstr "Python について発行された記事を何か参照できますか？"

#: ../../faq/general.rst:248
msgid "It's probably best to cite your favorite book about Python."
msgstr "Python に関するあなたの愛読書を引用するのが一番でしょう。"

#: ../../faq/general.rst:250
msgid ""
"The very first article about Python was written in 1991 and is now quite "
"outdated."
msgstr "Python に関する一番初めの記事はとても古く、1991年に書かれています。"

#: ../../faq/general.rst:253
msgid ""
"Guido van Rossum and Jelke de Boer, \"Interactively Testing Remote Servers "
"Using the Python Programming Language\", CWI Quarterly, Volume 4, Issue 4 "
"(December 1991), Amsterdam, pp 283--303."
msgstr ""
"Guido van Rossum and Jelke de Boer, \"Interactively Testing Remote Servers "
"Using the Python Programming Language\", CWI Quarterly, Volume 4, Issue 4 "
"(December 1991), Amsterdam, pp 283--303."

#: ../../faq/general.rst:259
msgid "Are there any books on Python?"
msgstr "Python の本はありますか？"

#: ../../faq/general.rst:261
msgid ""
"Yes, there are many, and more are being published.  See the python.org wiki "
"at https://wiki.python.org/moin/PythonBooks for a list."
msgstr ""
"はい、たくさんあり、そのほとんどは現在も出版されています。リストは python."
"org wiki https://wiki.python.org/moin/PythonBooks にあります。"

#: ../../faq/general.rst:264
msgid ""
"You can also search online bookstores for \"Python\" and filter out the "
"Monty Python references; or perhaps search for \"Python\" and \"language\"."
msgstr ""
"また、オンライン書店で \"Python\" で検索し、Monty Python をフィルタで除外して"
"もいいです (または、\"Python\" と \"言語\" で検索してください)。"

#: ../../faq/general.rst:269
msgid "Where in the world is www.python.org located?"
msgstr "www.python.org は世界のどこにあるのですか？"

#: ../../faq/general.rst:271
msgid ""
"The Python project's infrastructure is located all over the world and is "
"managed by the Python Infrastructure Team. Details `here <http://infra.psf."
"io>`__."
msgstr ""
"Pythonプロジェクトのインフラは世界中にあり、Pythonインフラストラクチャチーム"
"によって管理されています。詳細は `こちら <http://infra.psf.io>`__."

#: ../../faq/general.rst:276
msgid "Why is it called Python?"
msgstr "なぜ Python という名前なのですか？"

#: ../../faq/general.rst:278
msgid ""
"When he began implementing Python, Guido van Rossum was also reading the "
"published scripts from `\"Monty Python's Flying Circus\" <https://en."
"wikipedia.org/wiki/Monty_Python>`__, a BBC comedy series from the 1970s.  "
"Van Rossum thought he needed a name that was short, unique, and slightly "
"mysterious, so he decided to call the language Python."
msgstr ""
"Python の開発が始まった頃、Guido van Rossum は 1970 年代に始まった BBC のコメ"
"ディシリーズ `\"Monty Python's Flying Circus\" <https://en.wikipedia.org/"
"wiki/Monty_Python>`__ の台本を読んでいました。Van Rossum は、短くて、ユニーク"
"で、少しミステリアスな名前が欲しかったので、この言語の名前を Python と呼ぶこ"
"とにしたのです。"

#: ../../faq/general.rst:286
msgid "Do I have to like \"Monty Python's Flying Circus\"?"
msgstr "『空飛ぶモンティ・パイソン』を好きでなくてはいけませんか？"

#: ../../faq/general.rst:288
msgid "No, but it helps.  :)"
msgstr "いいえ。でも、好きになってくれるといいな。: ）"

#: ../../faq/general.rst:292
msgid "Python in the real world"
msgstr "現実世界での Python"

#: ../../faq/general.rst:295
msgid "How stable is Python?"
msgstr "Python はどれくらい安定していますか？"

#: ../../faq/general.rst:297
msgid ""
"Very stable.  New, stable releases have been coming out roughly every 6 to "
"18 months since 1991, and this seems likely to continue.  Currently there "
"are usually around 18 months between major releases."
msgstr ""
"とても安定しています。1991 年以来新しい安定リリースはおよそ 6 から 8 ヶ月毎に"
"出されていて、このペースが続きそうです。現在、主要なリリースはたいてい約 18 "
"ヶ月毎に出されています。"

#: ../../faq/general.rst:301
msgid ""
"The developers issue \"bugfix\" releases of older versions, so the stability "
"of existing releases gradually improves.  Bugfix releases, indicated by a "
"third component of the version number (e.g. 3.5.3, 3.6.2), are managed for "
"stability; only fixes for known problems are included in a bugfix release, "
"and it's guaranteed that interfaces will remain the same throughout a series "
"of bugfix releases."
msgstr ""
"開発者が旧バージョンの \"bugfix\" リリースを公開するので、既存リリースの安定"
"性は徐々に向上していきます。バグフィックスリリースは、バージョン番号の 3 番目"
"の要素によって示され(例: 3.5.3、3.6.2)、安定性のために管理されています。バグ"
"フィックスリリースには既知の問題への修正だけが含まれ、一連のバグフィックスリ"
"リースで同じインタフェースが保たれることが保証されているのです。"

#: ../../faq/general.rst:308
msgid ""
"The latest stable releases can always be found on the `Python download page "
"<https://www.python.org/downloads/>`_.  There are two production-ready "
"versions of Python: 2.x and 3.x. The recommended version is 3.x, which is "
"supported by most widely used libraries.  Although 2.x is still widely used, "
"`it will not be maintained after January 1, 2020 <https://www.python.org/dev/"
"peps/pep-0373/>`_."
msgstr ""
"最新の安定版リリースは常に `Python download page <https://www.python.org/"
"downloads/>`_ にあります。Pythonには2.xと3.xという、製品に利用可能な2つのバー"
"ジョンがあります。推奨のバージョンは3.xで、これは広く利用されているライブラリ"
"のほとんどでサポートされています。2.xも依然として広く利用されていあすが、"
"`2020年1月1日以降はメンテナンスされない予定です<https://www.python.org/dev/"
"peps/pep-0373/>`_ 。"

#: ../../faq/general.rst:315
msgid "How many people are using Python?"
msgstr "どれくらいの人が Python を使っていますか？"

#: ../../faq/general.rst:317
msgid ""
"There are probably tens of thousands of users, though it's difficult to "
"obtain an exact count."
msgstr ""
"正確な人数を調べるのは難しいですが、おそらく数万人のユーザーがいるでしょう。"

#: ../../faq/general.rst:320
msgid ""
"Python is available for free download, so there are no sales figures, and "
"it's available from many different sites and packaged with many Linux "
"distributions, so download statistics don't tell the whole story either."
msgstr ""
"Python は自由にダウンロード可能なので、売上高がなく、多数のサイトから利用で"
"き、多くの Linux ディストーションに同梱されているので、ダウンロード統計から全"
"体の状況を知ることはできません。"

#: ../../faq/general.rst:324
msgid ""
"The comp.lang.python newsgroup is very active, but not all Python users post "
"to the group or even read it."
msgstr ""
"comp.lang.python ニュースグループはとても活発ですが、すべての Python ユーザー"
"が投稿するわけではなく、読みすらしない人もいます。"

#: ../../faq/general.rst:329
msgid "Have any significant projects been done in Python?"
msgstr "Python で行われた大きなプロジェクトはありますか？"

#: ../../faq/general.rst:331
msgid ""
"See https://www.python.org/about/success for a list of projects that use "
"Python. Consulting the proceedings for `past Python conferences <https://www."
"python.org/community/workshops/>`_ will reveal contributions from many "
"different companies and organizations."
msgstr ""
"Python を利用しているプロジェクトのリストは https://python.org/about/success "
"を参照してください。`past Python conferences <https://www.python.org/"
"community/workshops/>`_ から議事録を参照すると、多くの会社や組織の貢献がわか"
"るでしょう。"

#: ../../faq/general.rst:336
msgid ""
"High-profile Python projects include `the Mailman mailing list manager "
"<http://www.list.org>`_ and `the Zope application server <http://www.zope."
"org>`_.  Several Linux distributions, most notably `Red Hat <https://www."
"redhat.com>`_, have written part or all of their installer and system "
"administration software in Python.  Companies that use Python internally "
"include Google, Yahoo, and Lucasfilm Ltd."
msgstr ""
"注目されている Python のプロジェクトは `the Mailman mailing list manager "
"<http://www.list.org>`_ や `the Zope application server <http://www.zope."
"org>`_ などです。`Red Hat <https://www.redhat.com>`_ をはじめとするいくつか"
"の Linux ディストーションのインストーラやシステムアドミニストレーションソフト"
"ウェアは、一部や全部が Python で書かれています。内部で Python を利用している"
"企業には、Google、Yahoo、Lucasfilm Ltd. などがあります。"

#: ../../faq/general.rst:345
msgid "What new developments are expected for Python in the future?"
msgstr "将来 Python にどのような新しい開発が期待されますか？"

#: ../../faq/general.rst:347
msgid ""
"See https://www.python.org/dev/peps/ for the Python Enhancement Proposals "
"(PEPs). PEPs are design documents describing a suggested new feature for "
"Python, providing a concise technical specification and a rationale.  Look "
"for a PEP titled \"Python X.Y Release Schedule\", where X.Y is a version "
"that hasn't been publicly released yet."
msgstr ""
"Python Enhancement Proposals (PEP) https://www.python.org/dev/peps/ を参照し"
"てください。PEP は Python に提案された新機能について書かれた設計書で、簡潔な"
"技術仕様と原理が提供されています。\"Python X.Y Release Schedule\" (X.Y はまだ"
"リリースされていないバージョン) を探してください。"

#: ../../faq/general.rst:353
msgid ""
"New development is discussed on `the python-dev mailing list <https://mail."
"python.org/mailman/listinfo/python-dev/>`_."
msgstr ""
"新しい開発については `the python-dev mailing list <https://mail.python.org/"
"mailman/listinfo/python-dev/>`_ で議論されています。"

#: ../../faq/general.rst:358
msgid "Is it reasonable to propose incompatible changes to Python?"
msgstr "Python の互換性を無くすような提案をしてもいいのですか？"

#: ../../faq/general.rst:360
msgid ""
"In general, no.  There are already millions of lines of Python code around "
"the world, so any change in the language that invalidates more than a very "
"small fraction of existing programs has to be frowned upon.  Even if you can "
"provide a conversion program, there's still the problem of updating all "
"documentation; many books have been written about Python, and we don't want "
"to invalidate them all at a single stroke."
msgstr ""
"一般的には、してはいけません。世界中にすでに何百万行もの Python コードがある"
"ので、既存のプログラムのどんなに僅かな部分でも無効にしてしまうような言語仕様"
"の変更も認められてはなりません。コンバートするプログラムが出来てさえ、すべて"
"のドキュメントをアップデートしなければならないという問題があります。 Python "
"に関する多くの本が出版されているので、それらを一発で不適切にするようなことは"
"したくないです。"

#: ../../faq/general.rst:367
msgid ""
"Providing a gradual upgrade path is necessary if a feature has to be "
"changed. :pep:`5` describes the procedure followed for introducing backward-"
"incompatible changes while minimizing disruption for users."
msgstr ""
"仕様を変えなければならないのなら、緩やかなアップグレード計画が組まれなくては"
"なりません。 :pep:`5` で、ユーザーの受ける分裂を最小限にしながら後方互換性の"
"ない変更を行うために従うべき手順について説明しています。"

#: ../../faq/general.rst:373
msgid "Is Python a good language for beginning programmers?"
msgstr "Python は初心者プログラマに向いている言語ですか？"

#: ../../faq/general.rst:375
msgid "Yes."
msgstr "はい。"

#: ../../faq/general.rst:377
msgid ""
"It is still common to start students with a procedural and statically typed "
"language such as Pascal, C, or a subset of C++ or Java.  Students may be "
"better served by learning Python as their first language.  Python has a very "
"simple and consistent syntax and a large standard library and, most "
"importantly, using Python in a beginning programming course lets students "
"concentrate on important programming skills such as problem decomposition "
"and data type design.  With Python, students can be quickly introduced to "
"basic concepts such as loops and procedures.  They can probably even work "
"with user-defined objects in their very first course."
msgstr ""
"未だにプログラミング初学者にとって一般的なのは、Pascal、C、C++ のサブセッ"
"ト、 Java など、手続き型の静的型付けの言語です。生徒にとっては、第一の言語と"
"して Python を学ぶのが役に立つでしょう。Python には非常に簡潔で一貫した構文と"
"大きな標準ライブラリがあります。そして一番重要なことに、初心者プログラミング"
"のコースで Python を学ぶことで、生徒は問題の分析やデータ型の設計など、重要な"
"プログラミングスキルに集中することができるのです。 Python なら、生徒はループ"
"や手続きなどの基本概念をすぐに取り入れられます。最初の課程でいきなりユーザ定"
"義のオブジェクトを操ることさえできるでしょう。"

#: ../../faq/general.rst:387
msgid ""
"For a student who has never programmed before, using a statically typed "
"language seems unnatural.  It presents additional complexity that the "
"student must master and slows the pace of the course.  The students are "
"trying to learn to think like a computer, decompose problems, design "
"consistent interfaces, and encapsulate data.  While learning to use a "
"statically typed language is important in the long term, it is not "
"necessarily the best topic to address in the students' first programming "
"course."
msgstr ""
"プログラミングをしたことがない初心者にとって、静的型付け言語を使うのは不自然"
"に思われます。習得すべき内容はより複雑になり、学習のペースが遅くなってしまい"
"ます。生徒は、コンピュータのように思考し、問題を分析し、一貫したインタフェー"
"スを設計して、データをカプセル化することを学ぶことになります。長期的に見れば"
"静的型付け言語を学ぶことは重要ですが、それが最初のプログラミングの授業で学ぶ"
"べき最高の話題とは限りません。"

#: ../../faq/general.rst:395
msgid ""
"Many other aspects of Python make it a good first language.  Like Java, "
"Python has a large standard library so that students can be assigned "
"programming projects very early in the course that *do* something.  "
"Assignments aren't restricted to the standard four-function calculator and "
"check balancing programs.  By using the standard library, students can gain "
"the satisfaction of working on realistic applications as they learn the "
"fundamentals of programming. Using the standard library also teaches "
"students about code reuse.  Third-party modules such as PyGame are also "
"helpful in extending the students' reach."
msgstr ""
"Python の良いところは他にもたくさんあります。Python には、Java のように大きな"
"標準ライブラリがあり、生徒が何かを *する* 段階で非常に早くプログラミングプロ"
"ジェクトに参加できるようになります。宿題は標準の四則演算機や平均を求めるプロ"
"グラムに限定されません。標準ライブラリを使用することで、生徒はプログラミング"
"の原理を学びながら現実的なアプリケーションに取り組む満足感を得ることができま"
"す。また、標準ライブラリの使用からコードの再利用を学ぶことができます。 "
"PyGame などのサードパーティモジュールもまた手が届く範囲を広げるのに役立ちま"
"す。"

#: ../../faq/general.rst:404
msgid ""
"Python's interactive interpreter enables students to test language features "
"while they're programming.  They can keep a window with the interpreter "
"running while they enter their program's source in another window.  If they "
"can't remember the methods for a list, they can do something like this::"
msgstr ""
"Python のインタラクティブインタプリタによって、プログラミングをしながら、言語"
"機能を確認することができます。別のウィンドウでプログラムのソースに入っている"
"間、ウィンドウでインタプリタを起動させたままにしておくことができます。リスト"
"のメソッドを思い出せないときは、例えばこのようにできます::"

#: ../../faq/general.rst:430
msgid ""
"With the interpreter, documentation is never far from the student as he's "
"programming."
msgstr ""
"インタプリタがあれば、プログラミングをしている間にドキュメントは生徒のそばを"
"離れません。"

#: ../../faq/general.rst:433
msgid ""
"There are also good IDEs for Python.  IDLE is a cross-platform IDE for "
"Python that is written in Python using Tkinter.  PythonWin is a Windows-"
"specific IDE. Emacs users will be happy to know that there is a very good "
"Python mode for Emacs.  All of these programming environments provide syntax "
"highlighting, auto-indenting, and access to the interactive interpreter "
"while coding.  Consult `the Python wiki <https://wiki.python.org/moin/"
"PythonEditors>`_ for a full list of Python editing environments."
msgstr ""
"Python のための良い IDE もあります。IDLE は Python で Tkinter を使って書かれ"
"たクロスプラットフォーム IDE です。PythonWin は Windows 専用の IDE です。"
"Emacs には、ユーザにとって幸運なことに、素晴らしい Python モードがあります。"
"これらすべてのプログラミング環境から、シンタックスハイライト、オートインデン"
"ト、コーディング中のインタラクティブインタプリタへのアクセスが使えます。`the "
"Python wiki <https://wiki.python.org/moin/PythonEditors>`_ から Python 編集環"
"境の一覧を参照してください。"

#: ../../faq/general.rst:441
msgid ""
"If you want to discuss Python's use in education, you may be interested in "
"joining `the edu-sig mailing list <https://www.python.org/community/sigs/"
"current/edu-sig>`_."
msgstr ""
"Python の教育における利用についての議論がしたいなら、`the edu-sig mailing "
"list <https://www.python.org/community/sigs/current/edu-sig>`_ に参加するとよ"
"いでしょう。"

#: ../../faq/general.rst:447
msgid "Upgrading Python"
msgstr "Python のアップグレード"

#: ../../faq/general.rst:450
msgid "What is this bsddb185 module my application keeps complaining about?"
msgstr ""
"私のアプリケーションに使われている bsddb185 モジュールは何が問題とされていま"
"すか？"

#: ../../faq/general.rst:454
msgid ""
"Starting with Python2.3, the distribution includes the `PyBSDDB package "
"<http://pybsddb.sf.net/>` as a replacement for the old bsddb module.  It "
"includes functions which provide backward compatibility at the API level, "
"but requires a newer version of the underlying `Berkeley DB <http://www."
"sleepycat.com>`_ library.  Files created with the older bsddb module can't "
"be opened directly using the new module."
msgstr ""
"Python2.3 から、配布時に古い bsddb モジュールの代わりに `PyBSDDB package "
"<http://pybsddb.sf.net/>`_ が含まれるようになりました。このモジュールは API "
"レベルでは後方互換性を保っていますが、基本となる `Berkeley DB <http://www."
"sleepycat.com>`_ ライブラリは新しいものが必要となります。古い bsddb モジュー"
"ルで作られたファイルは新しいモジュールで直接開くことができません。"

#: ../../faq/general.rst:461
msgid ""
"Using your old version of Python and a pair of scripts which are part of "
"Python 2.3 (db2pickle.py and pickle2db.py, in the Tools/scripts directory) "
"you can convert your old database files to the new format.  Using your old "
"Python version, run the db2pickle.py script to convert it to a pickle, e.g.::"
msgstr ""
"古いバージョンの Python と Python 2.3 の一部である２つのスクリプト (Tools/"
"scripts ディレクトリの db2pickle.py と pickle2db.py) を使用して、古いデータ"
"ベースファイルを新しいフォーマットにコンバートすることができます。古いバー"
"ジョンの Python を使って、スクリプトを pickle に変換するために db2pickle.py "
"スクリプトを起動してください。例えば::"

#: ../../faq/general.rst:468
msgid "Rename your database file::"
msgstr "データベースファイルを改名してください::"

#: ../../faq/general.rst:472
msgid "Now convert the pickle file to a new format database::"
msgstr ""
"そして、 pickle ファイルを新しいフォーマットのデータベースに変換してくださ"
"い::"

#: ../../faq/general.rst:476
msgid ""
"The precise commands you use will vary depending on the particulars of your "
"installation.  For full details about operation of these two scripts check "
"the doc string at the start of each one."
msgstr ""
"入力すべき正確なコマンドは、あなたのインストールの詳細によって変わります。こ"
"れら 2 つのスクリプトの命令の詳細は、それぞれの最初にある doc string を確認し"
"てください。"
