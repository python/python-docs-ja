# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../tutorial/stdlib.rst:5
msgid "Brief Tour of the Standard Library"
msgstr "標準ライブラリミニツアー"

#: ../../tutorial/stdlib.rst:11
msgid "Operating System Interface"
msgstr "OSへのインターフェース"

#: ../../tutorial/stdlib.rst:13
msgid ""
"The :mod:`os` module provides dozens of functions for interacting with the "
"operating system::"
msgstr ""
":mod:`os` モジュールは、オペレーティングシステムと対話するための多くの関数を"
"提供しています::"

#: ../../tutorial/stdlib.rst:23
msgid ""
"Be sure to use the ``import os`` style instead of ``from os import *``.  "
"This will keep :func:`os.open` from shadowing the built-in :func:`open` "
"function which operates much differently."
msgstr ""
"``from os import *`` ではなく、 ``import os`` 形式を使うようにしてください。"
"そうすることで、動作が大きく異なる組み込み関数 :func:`open` が :func:`os."
"open` で遮蔽されるのを避けられます。"

#: ../../tutorial/stdlib.rst:29
msgid ""
"The built-in :func:`dir` and :func:`help` functions are useful as "
"interactive aids for working with large modules like :mod:`os`::"
msgstr ""
"組み込み関数 :func:`dir` および :func:`help` は、 :mod:`os` のような大規模な"
"モジュールで作業をするときに、対話的な操作上の助けになります::"

#: ../../tutorial/stdlib.rst:38
msgid ""
"For daily file and directory management tasks, the :mod:`shutil` module "
"provides a higher level interface that is easier to use::"
msgstr ""
"ファイルやディレクトリの日常的な管理作業のために、より簡単に使える高水準のイ"
"ンターフェースが :mod:`shutil` モジュールで提供されています::"

#: ../../tutorial/stdlib.rst:51
msgid "File Wildcards"
msgstr "ファイルのワイルドカード表記"

#: ../../tutorial/stdlib.rst:53
msgid ""
"The :mod:`glob` module provides a function for making file lists from "
"directory wildcard searches::"
msgstr ""
":mod:`glob` モジュールでは、ディレクトリのワイルドカード検索からファイルのリ"
"ストを生成するための関数を提供しています::"

#: ../../tutorial/stdlib.rst:64
msgid "Command Line Arguments"
msgstr "コマンドライン引数"

#: ../../tutorial/stdlib.rst:66
msgid ""
"Common utility scripts often need to process command line arguments. These "
"arguments are stored in the :mod:`sys` module's *argv* attribute as a list.  "
"For instance the following output results from running ``python demo.py one "
"two three`` at the command line::"
msgstr ""
"一般的なユーティリティスクリプトでは、よくコマンドライン引数を扱う必要があり"
"ます。コマンドライン引数は :mod:`sys` モジュールの *argv*  属性にリストとして"
"保存されています。例えば、以下の出力は、 ``python demo.py one two three`` と"
"コマンドライン上で起動した時に得られるものです::"

#: ../../tutorial/stdlib.rst:75
msgid ""
"The :mod:`argparse` module provides a more sophisticated mechanism to "
"process command line arguments.  The following script extracts one or more "
"filenames and an optional number of lines to be displayed::"
msgstr ""
":mod:`argparse` モジュールは、コマンドライン引数を処理するための更に洗練され"
"た仕組みを提供します。次のスクリプトは1つ以上のファイル名を抽出し、オプション"
"で行数を表示します。"

#: ../../tutorial/stdlib.rst:89
msgid ""
"When run at the command line with ``python top.py --lines=5 alpha.txt beta."
"txt``, the script sets ``args.lines`` to ``5`` and ``args.filenames`` to "
"``['alpha.txt', 'beta.txt']``."
msgstr ""
"コマンドラインで ``python top.py --lines=5 alpha.txt beta.txt`` を実行する"
"と、上のスクリプトは ``args.lines`` を ``5`` 、 ``args.filenames`` を "
"``['alpha.txt', 'beta.txt']`` に設定します。"

#: ../../tutorial/stdlib.rst:97
msgid "Error Output Redirection and Program Termination"
msgstr "エラー出力のリダイレクトとプログラムの終了"

#: ../../tutorial/stdlib.rst:99
msgid ""
"The :mod:`sys` module also has attributes for *stdin*, *stdout*, and "
"*stderr*. The latter is useful for emitting warnings and error messages to "
"make them visible even when *stdout* has been redirected::"
msgstr ""
":mod:`sys` モジュールには、 *stdin*, *stdout*, *stderr* を表す属性も存在しま"
"す。 *stderr* は、警告やエラーメッセージを出力して、 *stdout* がリダイレクト"
"された場合でも読めるようにするために便利です::"

#: ../../tutorial/stdlib.rst:106
msgid "The most direct way to terminate a script is to use ``sys.exit()``."
msgstr "``sys.exit()`` は、スクリプトを終了させるもっとも直接的な方法です。"

#: ../../tutorial/stdlib.rst:112
msgid "String Pattern Matching"
msgstr "文字列のパターンマッチング"

#: ../../tutorial/stdlib.rst:114
msgid ""
"The :mod:`re` module provides regular expression tools for advanced string "
"processing. For complex matching and manipulation, regular expressions offer "
"succinct, optimized solutions::"
msgstr ""
":mod:`re` モジュールでは、より高度な文字列処理のための正規表現を提供していま"
"す。正規表現は複雑な一致検索や操作に対して簡潔で最適化された解決策を提供しま"
"す::"

#: ../../tutorial/stdlib.rst:124
msgid ""
"When only simple capabilities are needed, string methods are preferred "
"because they are easier to read and debug::"
msgstr ""
"最小限の機能だけが必要なら、読みやすくデバッグしやすい文字列メソッドの方がお"
"勧めです::"

#: ../../tutorial/stdlib.rst:134
msgid "Mathematics"
msgstr "数学"

#: ../../tutorial/stdlib.rst:136
msgid ""
"The :mod:`math` module gives access to the underlying C library functions "
"for floating point math::"
msgstr ""
":mod:`math` モジュールは、浮動小数点演算のための C 言語ライブラリ関数にアクセ"
"スする手段を提供しています::"

#: ../../tutorial/stdlib.rst:145
msgid "The :mod:`random` module provides tools for making random selections::"
msgstr ""
":mod:`random` モジュールは、乱数に基づいた要素選択のためのツールを提供してい"
"ます::"

#: ../../tutorial/stdlib.rst:157
msgid ""
"The :mod:`statistics` module calculates basic statistical properties (the "
"mean, median, variance, etc.) of numeric data::"
msgstr ""
":mod:`statistics` モジュールは数値データの基礎的な統計的特性（平均、中央値、"
"分散等）を計算します::"

#: ../../tutorial/stdlib.rst:169
msgid ""
"The SciPy project <https://scipy.org> has many other modules for numerical "
"computations."
msgstr ""
"SciPy プロジェクト <https://scipy.org> は数値処理のための多くのモジュールを提"
"供しています。"

#: ../../tutorial/stdlib.rst:175
msgid "Internet Access"
msgstr "インターネットへのアクセス"

#: ../../tutorial/stdlib.rst:177
msgid ""
"There are a number of modules for accessing the internet and processing "
"internet protocols. Two of the simplest are :mod:`urllib.request` for "
"retrieving data from URLs and :mod:`smtplib` for sending mail::"
msgstr ""
"インターネットにアクセスしたりインターネットプロトコルを処理したりするための"
"多くのモジュールがあります。最も単純な2つのモジュールは、 URL からデータを取"
"得するための :mod:`urllib.request` と、メールを送るための :mod:`smtplib` で"
"す::"

#: ../../tutorial/stdlib.rst:200
msgid "(Note that the second example needs a mailserver running on localhost.)"
msgstr ""
"(2つ目の例は localhost でメールサーバーが動いている必要があることに注意してく"
"ださい。)"

#: ../../tutorial/stdlib.rst:206
msgid "Dates and Times"
msgstr "日付と時刻"

#: ../../tutorial/stdlib.rst:208
msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times "
"in both simple and complex ways. While date and time arithmetic is "
"supported, the focus of the implementation is on efficient member extraction "
"for output formatting and manipulation.  The module also supports objects "
"that are timezone aware. ::"
msgstr ""
":mod:`datetime` モジュールは、日付や時刻を操作するためのクラスを、単純な方法"
"と複雑な方法の両方で提供しています。日付や時刻に対する算術がサポートされてい"
"る一方、実装では出力のフォーマットや操作のための効率的なデータメンバ抽出に重"
"点を置いています。このモジュールでは、タイムゾーンに対応したオブジェクトもサ"
"ポートしています。 ::"

#: ../../tutorial/stdlib.rst:232
msgid "Data Compression"
msgstr "データ圧縮"

#: ../../tutorial/stdlib.rst:234
msgid ""
"Common data archiving and compression formats are directly supported by "
"modules including: :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:`lzma`, :mod:"
"`zipfile` and :mod:`tarfile`. ::"
msgstr ""
"一般的なデータアーカイブと圧縮形式は、以下のようなモジュールによって直接的に"
"サポートされます: :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:`lzma`, :mod:"
"`zipfile`, :mod:`tarfile`。 ::"

#: ../../tutorial/stdlib.rst:254
msgid "Performance Measurement"
msgstr "パフォーマンスの計測"

#: ../../tutorial/stdlib.rst:256
msgid ""
"Some Python users develop a deep interest in knowing the relative "
"performance of different approaches to the same problem. Python provides a "
"measurement tool that answers those questions immediately."
msgstr ""
"Python ユーザの中には、同じ問題を異なったアプローチで解いた際の相対的なパ"
"フォーマンスについて知りたいという深い興味を持っている人がいます。Python は、"
"そういった疑問に即座に答える計測ツールを提供しています。"

#: ../../tutorial/stdlib.rst:260
msgid ""
"For example, it may be tempting to use the tuple packing and unpacking "
"feature instead of the traditional approach to swapping arguments. The :mod:"
"`timeit` module quickly demonstrates a modest performance advantage::"
msgstr ""
"例えば、引数の入れ替え操作に対して、伝統的なアプローチの代わりにタプルのパッ"
"クやアンパックを使ってみたいと思うかもしれません。 :mod:`timeit` モジュールを"
"使えば、パフォーマンスがほんの少し良いことがすぐに分かります::"

#: ../../tutorial/stdlib.rst:270
msgid ""
"In contrast to :mod:`timeit`'s fine level of granularity, the :mod:`profile` "
"and :mod:`pstats` modules provide tools for identifying time critical "
"sections in larger blocks of code."
msgstr ""
":mod:`timeit` では小さい粒度を提供しているのに対し、 :mod:`profile` や :mod:"
"`pstats` モジュールではより大きなコードブロックにおいて律速となる部分を判定す"
"るためのツールを提供しています。"

#: ../../tutorial/stdlib.rst:278
msgid "Quality Control"
msgstr "品質管理"

#: ../../tutorial/stdlib.rst:280
msgid ""
"One approach for developing high quality software is to write tests for each "
"function as it is developed and to run those tests frequently during the "
"development process."
msgstr ""
"高い品質のソフトウェアを開発するための一つのアプローチは、各関数に対して開発"
"と同時にテストを書き、開発の過程で頻繁にテストを走らせるというものです。"

#: ../../tutorial/stdlib.rst:284
msgid ""
"The :mod:`doctest` module provides a tool for scanning a module and "
"validating tests embedded in a program's docstrings.  Test construction is "
"as simple as cutting-and-pasting a typical call along with its results into "
"the docstring. This improves the documentation by providing the user with an "
"example and it allows the doctest module to make sure the code remains true "
"to the documentation::"
msgstr ""
":mod:`doctest` モジュールでは、モジュールを検索してプログラムの docstring に"
"埋め込まれたテストの評価を行うためのツールを提供しています。テストの作り方は"
"単純で、典型的な呼び出し例とその結果を docstring にカット&ペーストするだけで"
"す。この作業は、ユーザに使用例を与えるという意味でドキュメントの情報を増やす"
"と同時に、ドキュメントに書かれているコードが正しい事を確認できるようになりま"
"す::"

#: ../../tutorial/stdlib.rst:302
msgid ""
"The :mod:`unittest` module is not as effortless as the :mod:`doctest` "
"module, but it allows a more comprehensive set of tests to be maintained in "
"a separate file::"
msgstr ""
":mod:`unittest` モジュールは :mod:`doctest` モジュールほど気楽に使えるもので"
"はありませんが、より網羅的なテストセットを別のファイルで管理することができま"
"す::"

#: ../../tutorial/stdlib.rst:324
msgid "Batteries Included"
msgstr "バッテリー同梱"

#: ../../tutorial/stdlib.rst:326
msgid ""
"Python has a \"batteries included\" philosophy.  This is best seen through "
"the sophisticated and robust capabilities of its larger packages. For "
"example:"
msgstr ""
"Python には \"バッテリー同梱 (batteries included)\" 哲学があります。この哲学"
"は、洗練され、安定した機能を持つ Python の膨大なパッケージ群に如実に表れてい"
"ます。例えば:"

#: ../../tutorial/stdlib.rst:329
msgid ""
"The :mod:`xmlrpc.client` and :mod:`xmlrpc.server` modules make implementing "
"remote procedure calls into an almost trivial task.  Despite the modules' "
"names, no direct knowledge or handling of XML is needed."
msgstr ""

#: ../../tutorial/stdlib.rst:333
msgid ""
"The :mod:`email` package is a library for managing email messages, including "
"MIME and other :rfc:`2822`-based message documents. Unlike :mod:`smtplib` "
"and :mod:`poplib` which actually send and receive messages, the email "
"package has a complete toolset for building or decoding complex message "
"structures (including attachments) and for implementing internet encoding "
"and header protocols."
msgstr ""
":mod:`email` パッケージは、MIME やその他の :rfc:`2822` に基づくメッセージ文書"
"を含む電子メールメッセージを管理するためのライブラリです。実際にメッセージを"
"送信したり受信したりする :mod:`smtplib` や :mod:`poplib` と違って、email パッ"
"ケージには (添付文書を含む) 複雑なメッセージ構造の構築やデコードを行ったり、"
"インターネット標準のエンコードやヘッダプロトコルの実装を行ったりするための完"
"全なツールセットを備えています。"

#: ../../tutorial/stdlib.rst:340
msgid ""
"The :mod:`json` package provides robust support for parsing this popular "
"data interchange format.  The :mod:`csv` module supports direct reading and "
"writing of files in Comma-Separated Value format, commonly supported by "
"databases and spreadsheets.  XML processing is supported by the :mod:`xml."
"etree.ElementTree`, :mod:`xml.dom` and :mod:`xml.sax` packages. Together, "
"these modules and packages greatly simplify data interchange between Python "
"applications and other tools."
msgstr ""
":mod:`json` パッケージはこの一般的なデータ交換形式のパースをロバストにサポー"
"トしています。:mod:`csv` モジュールはデータベースや表計算で一般的にサポートさ"
"れている CSV ファイルを直接読み書きするのをサポートしています。:mod:`xml."
"etree.ElementTree`、:mod:`xml.dom` ならびに :mod:`xml.sax` パッケージは XML "
"の処理をサポートしています。総合すると、これらのモジュールによって Python ア"
"プリケーションと他のツールの間でとても簡単にデータを受け渡すことが出来ます。"

#: ../../tutorial/stdlib.rst:349
msgid ""
"The :mod:`sqlite3` module is a wrapper for the SQLite database library, "
"providing a persistent database that can be updated and accessed using "
"slightly nonstandard SQL syntax."
msgstr ""
":mod:`sqlite3` モジュールは SQLite データベースライブラリのラッパーです。若干"
"非標準の SQL シンタックスを用いて更新や接続出来る永続的なデータベースを提供し"
"ます。"

#: ../../tutorial/stdlib.rst:353
msgid ""
"Internationalization is supported by a number of modules including :mod:"
"`gettext`, :mod:`locale`, and the :mod:`codecs` package."
msgstr ""
"国際化に関する機能は、 :mod:`gettext`, :mod:`locale`, :mod:`codecs` パッケー"
"ジといったモジュール群でサポートされています。"
