# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2018
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:48+0900\n"
"PO-Revision-Date: 2018-06-29 17:45+0000\n"
"Last-Translator: tomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../howto/argparse.rst:3
msgid "Argparse Tutorial"
msgstr "Argparse チュートリアル"

#: ../../howto/argparse.rst:0
msgid "author"
msgstr "author"

#: ../../howto/argparse.rst:5
msgid "Tshepang Lekhonkhobe"
msgstr "Tshepang Lekhonkhobe"

#: ../../howto/argparse.rst:9
msgid ""
"This tutorial is intended to be a gentle introduction to :mod:`argparse`, "
"the recommended command-line parsing module in the Python standard library."
msgstr ""
"このチュートリアルでは、:mod:`argparse` を丁寧に説明します。:mod:`argparse` "
"は、Python 標準ライブラリの一部であり、おすすめのコマンドライン引数の解析モ"
"ジュールです。"

#: ../../howto/argparse.rst:14
msgid ""
"There are two other modules that fulfill the same task, namely :mod:`getopt` "
"(an equivalent for :c:func:`getopt` from the C language) and the deprecated :"
"mod:`optparse`. Note also that :mod:`argparse` is based on :mod:`optparse`, "
"and therefore very similar in terms of usage."
msgstr ""
"同じタスクを満足するモジュールとして、 :mod:`getopt` (C言語の :c:func:"
"`getopt` と同等) と廃止予定の :mod:`optparse` と呼ばれる二つのモジュールがあ"
"ります。 :mod:`argparse` は :mod:`optparse` をベースにしているので、使用方法"
"がよく似ています。"

#: ../../howto/argparse.rst:22
msgid "Concepts"
msgstr "コンセプト"

#: ../../howto/argparse.rst:24
msgid ""
"Let's show the sort of functionality that we are going to explore in this "
"introductory tutorial by making use of the :command:`ls` command:"
msgstr ""
":command:`ls` コマンドを使って、このチュートリアルで私たちが学ぶ機能をいくつ"
"か見てみましょう:"

#: ../../howto/argparse.rst:46
msgid "A few concepts we can learn from the four commands:"
msgstr "上の４つの実行結果から、以下のことが分かります:"

#: ../../howto/argparse.rst:48
msgid ""
"The :command:`ls` command is useful when run without any options at all. It "
"defaults to displaying the contents of the current directory."
msgstr ""
":command:`ls` コマンドは、まったくオプションを指定せずに実行したとしても役に"
"立ちます。デフォルトの動作は、カレントディレクトリの内容を表示することです。"

#: ../../howto/argparse.rst:51
msgid ""
"If we want beyond what it provides by default, we tell it a bit more. In "
"this case, we want it to display a different directory, ``pypy``. What we "
"did is specify what is known as a positional argument. It's named so because "
"the program should know what to do with the value, solely based on where it "
"appears on the command line. This concept is more relevant to a command "
"like :command:`cp`, whose most basic usage is ``cp SRC DEST``. The first "
"position is *what you want copied,* and the second position is *where you "
"want it copied to*."
msgstr ""
"デフォルトの動作で提供される以上のことをしたい場合、すこしだけオプションを指"
"定する必要があります。別のディレクトリ ``pypy`` を表示したい場合、私たちがし"
"たことは、位置引数として知られる引数を指定することです。これは、引数がコマン"
"ドラインのどの位置に現れたかということだけを基に、プログラムがその値について"
"何をするのか分かるべきなので、このように名づけられています。このコンセプト"
"は :command:`cp` のようなコマンドで重要な意味があります。 :command:`cp` コマ"
"ンドのもっとも基本的な使い方は、 ``cp SRC DEST`` です。最初の引数は *何をコ"
"ピーしたいか* であり、二つ目の引数は *どこにコピーしたいか* を意味します。"

#: ../../howto/argparse.rst:60
msgid ""
"Now, say we want to change behaviour of the program. In our example, we "
"display more info for each file instead of just showing the file names. The "
"``-l`` in that case is known as an optional argument."
msgstr ""
"プログラムの振る舞いを変えましょう。例では、単にファイル名を表示する代わりに"
"それぞれのファイルに関する多くの情報を表示します。このケースでは、``-l`` は"
"optional引数として知られます。"

#: ../../howto/argparse.rst:64
msgid ""
"That's a snippet of the help text. It's very useful in that you can come "
"across a program you have never used before, and can figure out how it works "
"simply by reading its help text."
msgstr ""
"ヘルプテキストの抜粋です。この実行の仕方は、まだ使用したことがないプログラム"
"にたいして行うと有用で、ヘルプテキストを読むことで、プログラムがどのように動"
"作するかわかります。"

#: ../../howto/argparse.rst:70
msgid "The basics"
msgstr "基礎"

#: ../../howto/argparse.rst:72
msgid "Let us start with a very simple example which does (almost) nothing::"
msgstr "（ほとんど）何もしない、とても簡単な例から始めましょう::"

#: ../../howto/argparse.rst:78 ../../howto/argparse.rst:186
#: ../../howto/argparse.rst:207
msgid "Following is a result of running the code:"
msgstr "下記がこのコードを実行した結果です:"

#: ../../howto/argparse.rst:95 ../../howto/argparse.rst:252
#: ../../howto/argparse.rst:296
msgid "Here is what is happening:"
msgstr "こんなことが起こりました:"

#: ../../howto/argparse.rst:97
msgid ""
"Running the script without any options results in nothing displayed to "
"stdout. Not so useful."
msgstr ""
"オプションなしでスクリプトを実行した結果、なにも標準出力に表示されませんでし"
"た。それほど便利ではありませんね。"

#: ../../howto/argparse.rst:100
msgid ""
"The second one starts to display the usefulness of the :mod:`argparse` "
"module. We have done almost nothing, but already we get a nice help message."
msgstr ""
"二つ目の実行結果から :mod:`argparse` モジュールの有用性がわかります。ほとんど"
"何もしていないのに、すてきなヘルプメッセージが手に入りました。"

#: ../../howto/argparse.rst:103
msgid ""
"The ``--help`` option, which can also be shortened to ``-h``, is the only "
"option we get for free (i.e. no need to specify it). Specifying anything "
"else results in an error. But even then, we do get a useful usage message, "
"also for free."
msgstr ""
"``--help`` （これは ``-h`` と短縮できます）だけが無料のオプションです（つまり"
"プログラムで指示する必要はありません）。他のオプションを指定するとエラーにな"
"ります。エラー時の有用な用法メッセージも、プログラムで指示することなく出力で"
"きます。"

#: ../../howto/argparse.rst:110
msgid "Introducing Positional arguments"
msgstr "位置引数の入門"

#: ../../howto/argparse.rst:112
msgid "An example::"
msgstr "以下に例を示します::"

#: ../../howto/argparse.rst:120
msgid "And running the code:"
msgstr "このコードを実行してみましょう:"

#: ../../howto/argparse.rst:138
msgid "Here is what's happening:"
msgstr "こんなことが起こりました:"

#: ../../howto/argparse.rst:140
msgid ""
"We've added the :meth:`add_argument` method, which is what we use to specify "
"which command-line options the program is willing to accept. In this case, "
"I've named it ``echo`` so that it's in line with its function."
msgstr ""
":meth:`add_argument` メソッドを追加しました。このメソッドはプログラムがどんな"
"コマンドラインオプションを受け付けるか指定するためのものです。このケースでは"
"オプションにその機能と合うように ``echo`` と名付けました。"

#: ../../howto/argparse.rst:144
msgid "Calling our program now requires us to specify an option."
msgstr "プログラムを実行すると、オプションを指定するように要求されます。"

#: ../../howto/argparse.rst:146
msgid ""
"The :meth:`parse_args` method actually returns some data from the options "
"specified, in this case, ``echo``."
msgstr ""
":meth:`parse_args` メソッドは指定されたオプションのデータを返します。このケー"
"スでは ``echo`` です。"

#: ../../howto/argparse.rst:149
msgid ""
"The variable is some form of 'magic' that :mod:`argparse` performs for free "
"(i.e. no need to specify which variable that value is stored in). You will "
"also notice that its name matches the string argument given to the method, "
"``echo``."
msgstr ""
"この変数は :mod:`argparse` が自動的に行うある種の魔法です（つまり、値を格納す"
"る変数を指定する必要がありません）。変数の名前がメソッドに与えた文字列引数 "
"``echo`` と同じことに気付いたでしょう。"

#: ../../howto/argparse.rst:154
msgid ""
"Note however that, although the help display looks nice and all, it "
"currently is not as helpful as it can be. For example we see that we got "
"``echo`` as a positional argument, but we don't know what it does, other "
"than by guessing or by reading the source code. So, let's make it a bit more "
"useful::"
msgstr ""
"ヘルプメッセージは十分なように見えますが、それほど分かりやすくもありません。"
"たとえば、``echo`` は位置引数であることがわかりますが、それが何であるかを知る"
"ためには推測するかソースコードを見なけれなりません。もうすこしヘルプメッセー"
"ジ分かりやすくしてみましょう::"

#: ../../howto/argparse.rst:165
msgid "And we get:"
msgstr "修正した結果は以下のようになります:"

#: ../../howto/argparse.rst:178
msgid "Now, how about doing something even more useful::"
msgstr "次は、もっと有益なことをしてみませんか？::"

#: ../../howto/argparse.rst:196
msgid ""
"That didn't go so well. That's because :mod:`argparse` treats the options we "
"give it as strings, unless we tell it otherwise. So, let's tell :mod:"
"`argparse` to treat that input as an integer::"
msgstr ""
"上手くいきませんでした。 何も伝えなければ、:mod:`argparse` は与えられたオプ"
"ションを文字列として扱います。 :mod:`argparse` にオプションの値を整数として扱"
"うように伝えましょう::"

#: ../../howto/argparse.rst:217
msgid ""
"That went well. The program now even helpfully quits on bad illegal input "
"before proceeding."
msgstr ""
"今度は上手くいきました。このプログラムは不正な入力が与えられるとそれを処理せ"
"ずに、より親切なメッセージを表示して実行を終了します。"

#: ../../howto/argparse.rst:222
msgid "Introducing Optional arguments"
msgstr "Optional引数の導入"

#: ../../howto/argparse.rst:224
msgid ""
"So far we have been playing with positional arguments. Let us have a look on "
"how to add optional ones::"
msgstr ""
"ここまで位置引数を扱ってきました。optional引数を追加する方法についても見てい"
"きましょう::"

#: ../../howto/argparse.rst:234 ../../howto/argparse.rst:280
#: ../../howto/argparse.rst:396 ../../howto/argparse.rst:430
msgid "And the output:"
msgstr "実行してみましょう:"

#: ../../howto/argparse.rst:254
msgid ""
"The program is written so as to display something when ``--verbosity`` is "
"specified and display nothing when not."
msgstr ""
"プログラムは、``--verbosity`` が指定された場合はなにかしらを表示し、指定され"
"なければ何も表示をしないように書かれています。"

#: ../../howto/argparse.rst:257
msgid ""
"To show that the option is actually optional, there is no error when running "
"the program without it. Note that by default, if an optional argument isn't "
"used, the relevant variable, in this case :attr:`args.verbosity`, is given "
"``None`` as a value, which is the reason it fails the truth test of the :"
"keyword:`if` statement."
msgstr ""
"optional 引数を指定せずにプログラムを実行したときにエラーにならないことから、"
"このオプションの指定が任意（optional)であることがわかります。注意すべき点とし"
"て、デフォルトでは、optional 引数が使用されないときは、関連する変数（このケー"
"スでは、 :attr:`args.verbosity`) の値に ``None`` が設定されることです。こうす"
"る理由は :keyword:`if` 文の真偽判定が偽を返すようにするためです。"

#: ../../howto/argparse.rst:263
msgid "The help message is a bit different."
msgstr "ヘルプメッセージが少し変わりました。"

#: ../../howto/argparse.rst:265
msgid ""
"When using the ``--verbosity`` option, one must also specify some value, any "
"value."
msgstr ""
"``--verbosity`` オプションを使うには、そのオプションにひとつの値を指定しなけ"
"ればなりません。"

#: ../../howto/argparse.rst:268
msgid ""
"The above example accepts arbitrary integer values for ``--verbosity``, but "
"for our simple program, only two values are actually useful, ``True`` or "
"``False``. Let's modify the code accordingly::"
msgstr ""
"上記の例では、``--verbosity`` に任意の整数を取れます。この簡単なプログラムで"
"は、実際には ``True`` または ``False`` の二つの値だけが有効です。そうなるよう"
"にコードを修正してみましょう::"

#: ../../howto/argparse.rst:298
msgid ""
"The option is now more of a flag than something that requires a value. We "
"even changed the name of the option to match that idea. Note that we now "
"specify a new keyword, ``action``, and give it the value ``\"store_true\"``. "
"This means that, if the option is specified, assign the value ``True`` to :"
"data:`args.verbose`. Not specifying it implies ``False``."
msgstr ""
"いまや、このオプションは値をとるオプションというよりは、フラグになりました。"
"オプションの名前をその意図に合うように変更しました。新しいキーワード引数 "
"``action`` に ``\"store_true\"`` を値として渡していることに注意してください。"
"これはオプションが指定されると :data:`args.verbose` に ``True`` を代入するこ"
"とを意味しています。もしオプションが指定されなければ代入される値は ``False`` "
"になります。"

#: ../../howto/argparse.rst:305
msgid ""
"It complains when you specify a value, in true spirit of what flags actually "
"are."
msgstr ""
"フラグは値を取るべきではないので、値を指定するとプログラムはエラーになりま"
"す。"

#: ../../howto/argparse.rst:308
msgid "Notice the different help text."
msgstr "ヘルプテキストが変わっています。"

#: ../../howto/argparse.rst:312
msgid "Short options"
msgstr "短いオプション"

#: ../../howto/argparse.rst:314
msgid ""
"If you are familiar with command line usage, you will notice that I haven't "
"yet touched on the topic of short versions of the options. It's quite "
"simple::"
msgstr ""
"コマンドラインになれていれば、オプションの短いバージョンの話題に触れていない"
"ことに気付いたでしょう。それはとても簡単です::"

#: ../../howto/argparse.rst:326
msgid "And here goes:"
msgstr "上記のプログラムを実行するとこうなります:"

#: ../../howto/argparse.rst:339
msgid "Note that the new ability is also reflected in the help text."
msgstr "新しい機能がヘルプテキストにも反映されている点に気付いたでしょう。"

#: ../../howto/argparse.rst:343
msgid "Combining Positional and Optional arguments"
msgstr "位置引数とOptional引数の併用"

#: ../../howto/argparse.rst:345
msgid "Our program keeps growing in complexity::"
msgstr "プログラムが複雑になってきました::"

#: ../../howto/argparse.rst:360
msgid "And now the output:"
msgstr "出力は以下のようになります:"

#: ../../howto/argparse.rst:374
msgid "We've brought back a positional argument, hence the complaint."
msgstr "位置引数を元に戻したので、引数を指定しないとエラーになりました。"

#: ../../howto/argparse.rst:376
msgid "Note that the order does not matter."
msgstr "２つのオプションの順序を考慮しないことに注意してください。"

#: ../../howto/argparse.rst:378
msgid ""
"How about we give this program of ours back the ability to have multiple "
"verbosity values, and actually get to use them::"
msgstr ""
"複数の詳細レベルを値にとれるようにプログラムを元に戻して、指定された値を使っ"
"てみましょう::"

#: ../../howto/argparse.rst:412
msgid ""
"These all look good except the last one, which exposes a bug in our program. "
"Let's fix it by restricting the values the ``--verbosity`` option can "
"accept::"
msgstr ""
"プログラムのバグである最後の結果を除いて、上手く行っているようです。このバグ"
"を、``--verbosity`` オプションが取れる値を制限することで修正しましょう::"

#: ../../howto/argparse.rst:448
msgid ""
"Note that the change also reflects both in the error message as well as the "
"help string."
msgstr ""
"変更がエラーメッセージとヘルプメッセージの両方に反映されていることに注意して"
"ください。"

#: ../../howto/argparse.rst:451
msgid ""
"Now, let's use a different approach of playing with verbosity, which is "
"pretty common. It also matches the way the CPython executable handles its "
"own verbosity argument (check the output of ``python --help``)::"
msgstr ""
"詳細レベルついて、違ったアプローチを試してみましょう。これは CPython 実行可能"
"ファイルがその詳細レベル引数を扱う方法と同じです。（ ``python --help`` の出力"
"を確認してください）::"

#: ../../howto/argparse.rst:470
msgid ""
"We have introduced another action, \"count\", to count the number of "
"occurrences of a specific optional arguments:"
msgstr ""
"もう一つの action である \"count\" を紹介します。これは指定されたオプションの"
"出現回数をカウントします:"

#: ../../howto/argparse.rst:498
msgid ""
"Yes, it's now more of a flag (similar to ``action=\"store_true\"``) in the "
"previous version of our script. That should explain the complaint."
msgstr ""
"前のバージョンのスクリプトのようにフラグ (``action=\"store_true\"`` に似てい"
"ます）になりました。エラーとなる理由がわかります。（訳注: ５つ目の例では ``-"
"v`` オプションに引数を与えたため、エラーとなっています。）"

#: ../../howto/argparse.rst:501
msgid "It also behaves similar to \"store_true\" action."
msgstr "これは\"store_true\" アクションによく似た動作をします。"

#: ../../howto/argparse.rst:503
msgid ""
"Now here's a demonstration of what the \"count\" action gives. You've "
"probably seen this sort of usage before."
msgstr ""
"では \"count\" アクションが何をもたらすかデモンストレーションをします。おそら"
"くこのような使用方法を前に見たことがあるでしょう。"

#: ../../howto/argparse.rst:506
msgid ""
"And if you don't specify the ``-v`` flag, that flag is considered to have "
"``None`` value."
msgstr "``-v`` フラグを指定しなければ、フラグの値は ``None`` とみなされます。"

#: ../../howto/argparse.rst:509
msgid ""
"As should be expected, specifying the long form of the flag, we should get "
"the same output."
msgstr "期待通り、長い形式のフラグを指定しても同じ結果になります。"

#: ../../howto/argparse.rst:512
msgid ""
"Sadly, our help output isn't very informative on the new ability our script "
"has acquired, but that can always be fixed by improving the documentation "
"for our script (e.g. via the ``help`` keyword argument)."
msgstr ""
"残念ながら、このヘルプ出力はプログラムが新しく得た機能についてそこまで有益で"
"はありません。しかし、スクリプトのドキュメンテーションを改善することでいつで"
"も修正することができます（例えば、``help`` キーワード引数を使用することで）。"

#: ../../howto/argparse.rst:516
msgid "That last output exposes a bug in our program."
msgstr "最後の出力はプログラムにバグがあることを示します。"

#: ../../howto/argparse.rst:519
msgid "Let's fix::"
msgstr "修正しましょう::"

#: ../../howto/argparse.rst:538
msgid "And this is what it gives:"
msgstr "これが結果です:"

#: ../../howto/argparse.rst:553
msgid ""
"First output went well, and fixes the bug we had before. That is, we want "
"any value >= 2 to be as verbose as possible."
msgstr ""
"最初の出力は上手くいっていますし、以前のバグが修正されています。最も詳細な出"
"力を得るには、2 以上の値が必要です。"

#: ../../howto/argparse.rst:556
msgid "Third output not so good."
msgstr "三番目の結果は、よくありません。"

#: ../../howto/argparse.rst:558
msgid "Let's fix that bug::"
msgstr "このバグを修正しましょう::"

#: ../../howto/argparse.rst:575
msgid ""
"We've just introduced yet another keyword, ``default``. We've set it to "
"``0`` in order to make it comparable to the other int values. Remember that "
"by default, if an optional argument isn't specified, it gets the ``None`` "
"value, and that cannot be compared to an int value (hence the :exc:"
"`TypeError` exception)."
msgstr ""
"もう一つのキーワード引数である ``default`` を導入しました。整数値と比較できる"
"ように、その値に ``0`` を設定しました。デフォルトでは、optional 引数が指定さ"
"れていない場合 ``None`` となること、``None`` が整数値と比較できない（よって :"
"exc:`TypeError` 例外となる）ことを思い出してください。"

#: ../../howto/argparse.rst:582
msgid "And:"
msgstr "こうなりました:"

#: ../../howto/argparse.rst:589
msgid ""
"You can go quite far just with what we've learned so far, and we have only "
"scratched the surface. The :mod:`argparse` module is very powerful, and "
"we'll explore a bit more of it before we end this tutorial."
msgstr ""
"ここまで学んできたことだけで、さまざまな事が実現できます。しかしまだ表面をな"
"ぞっただけです。 :mod:`argparse` モジュールはとても強力ですので、チュートリア"
"ルを終える前にもう少しだけ探検してみましょう."

#: ../../howto/argparse.rst:596
msgid "Getting a little more advanced"
msgstr "もうちょっとだけ学ぶ"

#: ../../howto/argparse.rst:598
msgid ""
"What if we wanted to expand our tiny program to perform other powers, not "
"just squares::"
msgstr ""
"もし、この小さなプログラムを二乗以外の累乗が行えるように拡張するとどうなるで"
"しょうか::"

#: ../../howto/argparse.rst:615 ../../howto/argparse.rst:653
msgid "Output:"
msgstr "出力:"

#: ../../howto/argparse.rst:636
msgid ""
"Notice that so far we've been using verbosity level to *change* the text "
"that gets displayed. The following example instead uses verbosity level to "
"display *more* text instead::"
msgstr ""
"これまで、出力されるテキストを *変更する* ために詳細レベルを使ってきました。"
"かわりに下記の例では、*追加の* テキストを出力するのに詳細レベルを使用します::"

#: ../../howto/argparse.rst:667
msgid "Conflicting options"
msgstr "競合するオプション"

#: ../../howto/argparse.rst:669
msgid ""
"So far, we have been working with two methods of an :class:`argparse."
"ArgumentParser` instance. Let's introduce a third one, :meth:"
"`add_mutually_exclusive_group`. It allows for us to specify options that "
"conflict with each other. Let's also change the rest of the program so that "
"the new functionality makes more sense: we'll introduce the ``--quiet`` "
"option, which will be the opposite of the ``--verbose`` one::"
msgstr ""
"ここまでで、 :class:`argparse.ArgumentParser` インスタンスの二つのメソッドに"
"ついて学んできました。では三つ目のメソッド :meth:"
"`add_mutually_exclusive_group` を紹介しましょう。このメソッドでは、互いに競合"
"するオプションを指定することができます。新しい機能がより意味をなすようにプロ"
"グラムを変更しましょう:  ``--verbose`` オプションと反対の ``--quiet`` オプ"
"ションを導入します::"

#: ../../howto/argparse.rst:695
msgid ""
"Our program is now simpler, and we've lost some functionality for the sake "
"of demonstration. Anyways, here's the output:"
msgstr ""
"プログラムはより簡潔になりましたが、デモのための機能が失われました。ともかく"
"下記が実行結果です:"

#: ../../howto/argparse.rst:713
msgid ""
"That should be easy to follow. I've added that last output so you can see "
"the sort of flexibility you get, i.e. mixing long form options with short "
"form ones."
msgstr ""
"これは分かりやすいでしょう。ここで得たちょっとした柔軟性を示すために最後の出"
"力を追加しました、つまり長い形式のオプションと短い形式のオプションの混在で"
"す。"

#: ../../howto/argparse.rst:717
msgid ""
"Before we conclude, you probably want to tell your users the main purpose of "
"your program, just in case they don't know::"
msgstr ""
"結びの前に、恐らくあなたはプログラムの主な目的をユーザに伝えたいでしょう。万"
"が一、彼らがそれを知らないときに備えて::"

#: ../../howto/argparse.rst:738
msgid ""
"Note that slight difference in the usage text. Note the ``[-v | -q]``, which "
"tells us that we can either use ``-v`` or ``-q``, but not both at the same "
"time:"
msgstr ""
"使用方法のテキストが少し変化しました。``[-v | -q]`` は ``-v`` または ``-q`` "
"のどちらかを使用できるが、同時に両方を使用できないことを意味します:"

#: ../../howto/argparse.rst:760
msgid "Conclusion"
msgstr "結び"

#: ../../howto/argparse.rst:762
msgid ""
"The :mod:`argparse` module offers a lot more than shown here. Its docs are "
"quite detailed and thorough, and full of examples. Having gone through this "
"tutorial, you should easily digest them without feeling overwhelmed."
msgstr ""
":mod:`argparse` モジュールはここで学んだことより多くの機能を提供します。モ"
"ジュールのドキュメントはとても詳細で、綿密で、そしてたくさんの例があります。"
"このチュートリアルの体験したことで、気がめいることなくそれらの他の機能を会得"
"できるに違いありません。"
