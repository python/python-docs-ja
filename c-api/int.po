# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/int.rst:6
msgid "Plain Integer Objects"
msgstr "(通常)整数型オブジェクト (plain integer object)"

#: ../../c-api/int.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python integer object."
msgstr "この :c:type:`PyObject` のサブタイプは整数型を表現します。"

#: ../../c-api/int.rst:20
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python plain integer "
"type. This is the same object as ``int`` and ``types.IntType``."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python の (長整数でない)整数型を"
"表現します。これは Python レイヤにおける :class:`int` や ``types.IntType`` と"
"同じオブジェクトです。"

#: ../../c-api/int.rst:26
msgid ""
"Return true if *o* is of type :c:data:`PyInt_Type` or a subtype of :c:data:"
"`PyInt_Type`."
msgstr ""
"*o* が :c:data:`PyInt_Type` 型か :c:data:`PyInt_Type` 型のサブタイプであると"
"きに真を返します。"

#: ../../c-api/int.rst:29
msgid "Allowed subtypes to be accepted."
msgstr "サブタイプを引数にとれるようになりました."

#: ../../c-api/int.rst:35
msgid ""
"Return true if *o* is of type :c:data:`PyInt_Type`, but not a subtype of :c:"
"data:`PyInt_Type`."
msgstr ""
"*o* が :c:data:`PyInt_Type` 型で、かつ :c:data:`PyInt_Type` 型のサブタイプで"
"ないときに真を返します。"

#: ../../c-api/int.rst:43
msgid ""
"Return a new :c:type:`PyIntObject` or :c:type:`PyLongObject` based on the "
"string value in *str*, which is interpreted according to the radix in "
"*base*.  If *pend* is non-*NULL*, ``*pend`` will point to the first "
"character in *str* which follows the representation of the number.  If "
"*base* is ``0``, the radix will be determined based on the leading "
"characters of *str*: if *str* starts with ``'0x'`` or ``'0X'``, radix 16 "
"will be used; if *str* starts with ``'0'``, radix 8 will be used; otherwise "
"radix 10 will be used.  If *base* is not ``0``, it must be between ``2`` and "
"``36``, inclusive.  Leading spaces are ignored.  If there are no digits, :"
"exc:`ValueError` will be raised.  If the string represents a number too "
"large to be contained within the machine's :c:type:`long int` type and "
"overflow warnings are being suppressed, a :c:type:`PyLongObject` will be "
"returned.  If overflow warnings are not being suppressed, *NULL* will be "
"returned in this case."
msgstr ""
"*str* の文字列値に基づいて、新たな :c:type:`PyIntObject` または :c:type:"
"`PyLongObject` を返します。このとき *base* を基数として文字列を解釈します。 "
"*pend* が *NULL* でなければ、 ``*pend`` は *str* 中で数が表現されている部分以"
"後の先頭の文字のアドレスを指しています。 *base* が ``0`` ならば、 *str* の先"
"頭の文字列に基づいて基数を決定します: もし *str* が ``'0x'`` または ``'0X'`` "
"で始まっていれば、基数に 16 を使います; *str* が ``'0'`` で始まっていれば、基"
"数に 8 を使います; その他の場合には基数に 10 を使います。 *base* が ``0`` で"
"なければ、 *base* は ``2`` 以上 ``36`` 以下の数でなければなりません。先頭に空"
"白がある場合は無視されます。数字が全くない場合、 :exc:`ValueError` が送出され"
"ます。使用しているマシンの :c:type:`long int` 型で表現し切れないくらい大きな"
"数が文字列に入っており、オーバフロー警告が抑制されていれば、 :c:type:"
"`PyLongObject` を返します。オーバフロー警告が抑制されていなければ、 *NULL* を"
"返します。"

#: ../../c-api/int.rst:60
msgid "Create a new integer object with a value of *ival*."
msgstr "*ival* の値を使って新たな整数オブジェクトを生成します。"

#: ../../c-api/int.rst:62
msgid ""
"The current implementation keeps an array of integer objects for all "
"integers between ``-5`` and ``256``, when you create an int in that range "
"you actually just get back a reference to the existing object. So it should "
"be possible to change the value of ``1``.  I suspect the behaviour of Python "
"in this case is undefined. :-)"
msgstr ""
"現在の実装では、``-5`` から ``256`` までの全ての整数に対する整数オブジェクト"
"の配列を保持するようにしており、この範囲の数を生成すると、実際には既存のオブ"
"ジェクトに対する参照が返るようになっています。従って、``1`` の値を変えること"
"すら可能です。変えてしまった場合の Python の挙動は未定義です :-)"

#: ../../c-api/int.rst:71
msgid ""
"Create a new integer object with a value of *ival*. If the value is larger "
"than ``LONG_MAX`` or smaller than ``LONG_MIN``, a long integer object is "
"returned."
msgstr ""
"*ival* の値を使って新たな整数オブジェクトを生成します。値が ``LONG_MAX`` より"
"大きいか ``LONG_MIN`` より小さい場合、長整数オブジェクトを返します。"

#: ../../c-api/int.rst:80
msgid ""
"Create a new integer object with a value of *ival*. If the value exceeds "
"``LONG_MAX``, a long integer object is returned."
msgstr ""
"*ival* の値を使って新たな整数オブジェクトを生成します。値が ``LONG_MAX`` を超"
"えている場合、長整数オブジェクトを返します。"

#: ../../c-api/int.rst:88
msgid ""
"Will first attempt to cast the object to a :c:type:`PyIntObject`, if it is "
"not already one, and then return its value. If there is an error, ``-1`` is "
"returned, and the caller should check ``PyErr_Occurred()`` to find out "
"whether there was an error, or whether the value just happened to be ``-1``."
msgstr ""
"オブジェクトがまだ :c:type:`PyIntObject` でなければまず型キャストを試み、次に"
"その値を返します。エラーが発生した場合、 ``-1`` が返されます。その時呼び出し"
"側は、 ``PyErr_Occurred()`` を使って、エラーが発生したのか、単に値が ``-1`` "
"だったのかを判断するべきです。"

#: ../../c-api/int.rst:96
msgid "Return the value of the object *io*.  No error checking is performed."
msgstr "オブジェクト *io* の値を返します。エラーチェックを行いません。"

#: ../../c-api/int.rst:101
msgid ""
"Will first attempt to cast the object to a :c:type:`PyIntObject` or :c:type:"
"`PyLongObject`, if it is not already one, and then return its value as "
"unsigned long.  This function does not check for overflow."
msgstr ""
"オブジェクトがまだ :c:type:`PyIntObject` または :c:type:`PyLongObject` でなけ"
"ればまず型キャストを試み、次にその値を :c:type:`unsigned long` 型で返します。"
"この関数はオーバフローをチェックしません。"

#: ../../c-api/int.rst:110
msgid ""
"Will first attempt to cast the object to a :c:type:`PyIntObject` or :c:type:"
"`PyLongObject`, if it is not already one, and then return its value as "
"unsigned long long, without checking for overflow."
msgstr ""
"オブジェクトがまだ :c:type:`PyIntObject` または :c:type:`PyLongObject` でなけ"
"ればまず型キャストを試み、次にその値を :c:type:`unsigned long long` 型で返し"
"ます。オーバフローをチェックしません。"

#: ../../c-api/int.rst:119
msgid ""
"Will first attempt to cast the object to a :c:type:`PyIntObject` or :c:type:"
"`PyLongObject`, if it is not already one, and then return its value as :c:"
"type:`Py_ssize_t`."
msgstr ""
"オブジェクトがまだ :c:type:`PyIntObject` または :c:type:`PyLongObject` でなけ"
"ればまず型キャストを試み、次にその値を :c:type:`Py_ssize_t` 型で返します。"

#: ../../c-api/int.rst:130
msgid ""
"Return the system's idea of the largest integer it can handle (:const:"
"`LONG_MAX`, as defined in the system header files)."
msgstr ""
"システムの知識に基づく、扱える最大の整数値 (システムのヘッダファイルに定義さ"
"れている :const:`LONG_MAX`) を返します。"

#: ../../c-api/int.rst:136
msgid ""
"Clear the integer free list. Return the number of items that could not be "
"freed."
msgstr "整数の free list をクリアします。解放できなかった要素の数を返します。"
