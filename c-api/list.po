# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "リストオブジェクト"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr ""
"この :c:type:`PyObject` のサブタイプは Python のリストオブジェクトを表現しま"
"す。"

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python のリスト型を表現します。"
"これは Python レイヤにおける :class:`list` と同じオブジェクトです。"

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type.  This function always succeeds."
msgstr ""
"*p* がリストオブジェクトかリスト型のサブタイプのインスタンスである場合に真を"
"返します。この関数は常に成功します。"

#: ../../c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type.  This function always succeeds."
msgstr ""
"*p* がリストオブジェクトだがリスト型のサブタイプのインスタンスでない場合に真"
"を返します。この関数は常に成功します。"

#: ../../c-api/list.rst:36
msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr ""
"サイズが *len* 新たなリストオブジェクトを返します。\n"
"失敗すると ``NULL`` を返します。"

#: ../../c-api/list.rst:40
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``.  Thus you cannot use abstract API functions such as :c:func:"
"`PySequence_SetItem`  or expose the object to Python code before setting all "
"items to a real object with :c:func:`PyList_SetItem`."
msgstr ""
"*len* が0より大きいとき、返されるリストオブジェクトの要素には ``NULL`` がセッ"
"トされています。なので、 :c:func:`PyList_SetItem` で本当にオブジェクトをセッ"
"トするまでは、Pythonコードにこのオブジェクトを渡したり、 :c:func:"
"`PySequence_SetItem` のような抽象APIを利用してはいけません。"

#: ../../c-api/list.rst:50
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr ""
"リストオブジェクト *list* の長さを返します; リストオブジェクトにおける "
"``len(list)`` と同じです。"

#: ../../c-api/list.rst:56
msgid "Macro form of :c:func:`PyList_Size` without error checking."
msgstr ""
"マクロ形式でできた :c:func:`PyList_Size` で、エラーチェックをしません。"

#: ../../c-api/list.rst:61
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (<0 or >=len(list)), return ``NULL`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"*list* の指すリストオブジェクト内の、位置 *index* にあるオブジェクトを返しま"
"す。\n"
"位置は非負である必要があり、リスト終端からのインデックスはサポートされていま"
"せん。\n"
"*index* が範囲を超えている場合、 ``NULL`` を返して :exc:`IndexError` 例外を"
"セットします。"

#: ../../c-api/list.rst:69
msgid "Macro form of :c:func:`PyList_GetItem` without error checking."
msgstr ""
"マクロ形式でできた :c:func:`PyList_GetItem` で、エラーチェックをしません。"

#: ../../c-api/list.rst:74
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"リストオブジェクト内の位置 *index* に、オブジェクト *item* を挿入します。\n"
"成功した場合には ``0`` を返します。\n"
"*index* が範囲を越えている場合、 ``-1`` を返して :exc:`IndexError` をセットし"
"ます。"

#: ../../c-api/list.rst:80
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"この関数は *item* への参照を \"盗み取り\" ます。また、変更先のインデクスにす"
"でに別の要素が入っている場合、その要素に対する参照を放棄します。"

#: ../../c-api/list.rst:86
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
":c:func:`PyList_SetItem` をマクロによる実装で、エラーチェックを行いません。こ"
"のマクロは、新たなリストのまだ要素を入れたことのない位置に要素を入れるときに"
"のみ使います。"

#: ../../c-api/list.rst:91
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike :c:func:"
"`PyList_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in *list* at position *i* will be leaked."
msgstr ""
"このマクロは *item* への参照を \"盗み取り\" ます。また、 :c:func:"
"`PyList_SetItem` と違って、要素の置き換えが生じても置き換えられるオブジェクト"
"への参照を放棄 *しません* ; その結果、 *list* 中の位置 *i* で参照されていたオ"
"ブジェクトがメモリリークを引き起こします。"

#: ../../c-api/list.rst:99
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"要素 *item* をリスト *list* のインデックス *index* の前に挿入します。成功する"
"と ``0`` を返します。失敗すると ``-1`` を返し、例外をセットします。``list."
"insert(index, item)`` に類似した機能です。"

#: ../../c-api/list.rst:106
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"オブジェクト *item* を *list* の末尾に追加します。成功すると ``0`` を返しま"
"す; 失敗すると ``-1`` を返し、例外をセットします。``list.append(item)``  に類"
"似した機能です。"

#: ../../c-api/list.rst:113
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"*list* 内の、*low* から *high* *までの* オブジェクトからなるリストを返しま"
"す。\n"
"失敗すると ``NULL`` を返し、例外をセットします。\n"
"``list[low:high]`` に類似した機能です。\n"
"ただし、リストの末尾からのインデックスはサポートされていません。"

#: ../../c-api/list.rst:120
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"*low* から *high* までの *list* のスライスを、 *itemlist* の内容にします。\n"
"``list[low:high] = itemlist`` と類似の機能です。\n"
"*itemlist* は ``NULL`` でもよく、空リストの代入 (指定スライスの削除) になりま"
"す。\n"
"成功した場合には ``0`` を、失敗した場合には ``-1`` を返します。\n"
"ただし、リストの末尾からのインデックスはサポートされていません。"

#: ../../c-api/list.rst:129
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"*list* の内容をインプレースでソートします。成功した場合には ``0`` を、失敗し"
"た場合には ``-1`` を返します。``list.sort()`` と同じです。"

#: ../../c-api/list.rst:135
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"*list* の要素をインプレースで反転します。成功した場合には ``0`` を、失敗した"
"場合には ``-1`` を返します。``list.reverse()`` と同じです。"

#: ../../c-api/list.rst:143
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"*list* の内容が入った新たなタプルオブジェクトを返します; ``tuple(list)`` と同"
"じです。"
