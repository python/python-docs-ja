# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# tomo, 2017
# tomo, 2018
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/unicode.rst:6
msgid "Unicode Objects and Codecs"
msgstr "Unicode オブジェクトと codec"

#: ../../c-api/unicode.rst:11
msgid "Unicode Objects"
msgstr "Unicode オブジェクト"

#: ../../c-api/unicode.rst:15
msgid "Unicode Type"
msgstr "Unicode 型"

#: ../../c-api/unicode.rst:17
msgid ""
"These are the basic Unicode object types used for the Unicode implementation "
"in Python:"
msgstr ""
"以下は Python の Unicode 実装に用いられている基本 Unicode オブジェクト型です:"

#: ../../c-api/unicode.rst:23
msgid ""
"This type represents the storage type which is used by Python internally as "
"basis for holding Unicode ordinals.  Python's default builds use a 16-bit "
"type for :c:type:`Py_UNICODE` and store Unicode values internally as UCS2. "
"It is also possible to build a UCS4 version of Python (most recent Linux "
"distributions come with UCS4 builds of Python). These builds then use a 32-"
"bit type for :c:type:`Py_UNICODE` and store Unicode data internally as UCS4. "
"On platforms where :c:type:`wchar_t` is available and compatible with the "
"chosen Python Unicode build variant, :c:type:`Py_UNICODE` is a typedef alias "
"for :c:type:`wchar_t` to enhance native platform compatibility. On all other "
"platforms, :c:type:`Py_UNICODE` is a typedef alias for either :c:type:"
"`unsigned short` (UCS2) or :c:type:`unsigned long` (UCS4)."
msgstr ""
"この型は Unicode 序数 (Unicode ordinal) を保持するための基礎単位として、 "
"Python が内部的に使います。 Python のデフォルトのビルドでは、 :c:type:"
"`Py_UNICODE` として 16-bit 型を利用し、 Unicode の値を内部では UCS-2 で保持し"
"ます。 UCS4 版の Python をビルドすることもできます。(最近の多くの Linux ディ"
"ストリビューションでは UCS4 版の Python がついてきます) UCS4 版ビルドでは :c:"
"type:`Py_UNICODE` に 32-bit 型を利用し、内部では Unicode データを UCS4 で保持"
"します。 :c:type:`wchar_t` が利用できて、 Python の Unicode に関するビルドオ"
"プションと一致するときは、 :c:type:`Py_UNICODE` は :c:type:`wchar_t` を "
"typedef でエイリアスされ、ネイティブプラットフォームに対する互換性を高めま"
"す。それ以外のすべてのプラットフォームでは、 :c:type:`Py_UNICODE` は :c:type:"
"`unsigned short` (UCS2) か :c:type:`unsigned long` (UCS4) の typedef によるエ"
"イリアスになります。"

#: ../../c-api/unicode.rst:35
msgid ""
"Note that UCS2 and UCS4 Python builds are not binary compatible. Please keep "
"this in mind when writing extensions or interfaces."
msgstr ""
"UCS2 と UCS4 の Python ビルドの間にはバイナリ互換性がないことに注意してくださ"
"い。拡張やインタフェースを書くときには、このことを覚えておいてください。"

#: ../../c-api/unicode.rst:41
msgid "This subtype of :c:type:`PyObject` represents a Python Unicode object."
msgstr ""
"この :c:type:`PyObject` のサブタイプは Unicode オブジェクトを表します。"

#: ../../c-api/unicode.rst:46
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python Unicode type.  "
"It is exposed to Python code as ``unicode`` and ``types.UnicodeType``."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python の Unicode 型を表しま"
"す。 Python レイヤにおける ``unicode`` や ``types.UnicodeType`` と同じオブ"
"ジェクトです。"

#: ../../c-api/unicode.rst:49
msgid ""
"The following APIs are really C macros and can be used to do fast checks and "
"to access internal read-only data of Unicode objects:"
msgstr ""
"以下の API は実際には C マクロで、Unicode オブジェクト内部の読み出し専用デー"
"タに対するチェックやアクセスを高速に行います:"

#: ../../c-api/unicode.rst:55
msgid ""
"Return true if the object *o* is a Unicode object or an instance of a "
"Unicode subtype."
msgstr ""
"*o* が Unicode 文字列型か Unicode 文字列型のサブタイプであるときに真を返しま"
"す。"

#: ../../c-api/unicode.rst:58
msgid "Allowed subtypes to be accepted."
msgstr "サブタイプを引数にとれるようになりました."

#: ../../c-api/unicode.rst:64
msgid ""
"Return true if the object *o* is a Unicode object, but not an instance of a "
"subtype."
msgstr ""
"*o* が Unicode 文字列型で、かつ Unicode 文字列型のサブタイプでないときに真を"
"返します。"

#: ../../c-api/unicode.rst:72
msgid ""
"Return the size of the object.  *o* has to be a :c:type:`PyUnicodeObject` "
"(not checked)."
msgstr ""
"オブジェクトのサイズを返します。 *o* は :c:type:`PyUnicodeObject` でなければ"
"なりません (チェックはしません)。"

#: ../../c-api/unicode.rst:75 ../../c-api/unicode.rst:85
#: ../../c-api/unicode.rst:343
msgid ""
"This function returned an :c:type:`int` type. This might require changes in "
"your code for properly supporting 64-bit systems."
msgstr ""
"この関数は以前は :c:type:`int` を返していました。この変更により、 64 bit シス"
"テムを正しくサポートするには修正が必要になります。"

#: ../../c-api/unicode.rst:82
msgid ""
"Return the size of the object's internal buffer in bytes.  *o* has to be a :"
"c:type:`PyUnicodeObject` (not checked)."
msgstr ""
"オブジェクトの内部バッファのサイズをバイト数で返します。 *o* は :c:type:"
"`PyUnicodeObject` でなければなりません (チェックはしません)。"

#: ../../c-api/unicode.rst:92
msgid ""
"Return a pointer to the internal :c:type:`Py_UNICODE` buffer of the object.  "
"*o* has to be a :c:type:`PyUnicodeObject` (not checked)."
msgstr ""
"オブジェクト内部の :c:type:`Py_UNICODE` バッファへのポインタを返します。 *o* "
"は :c:type:`PyUnicodeObject` でなければなりません (チェックはしません)。"

#: ../../c-api/unicode.rst:98
msgid ""
"Return a pointer to the internal buffer of the object. *o* has to be a :c:"
"type:`PyUnicodeObject` (not checked)."
msgstr ""
"オブジェクト内部バッファへのポインタを返します。 *o* は :c:type:"
"`PyUnicodeObject` でなければなりません (チェックはしません)。"

#: ../../c-api/unicode.rst:104
msgid "Clear the free list. Return the total number of freed items."
msgstr "フリーリストをクリアします。解放された要素数を返します。"

#: ../../c-api/unicode.rst:110
msgid "Unicode Character Properties"
msgstr "Unicode 文字プロパティ"

#: ../../c-api/unicode.rst:112
msgid ""
"Unicode provides many different character properties. The most often needed "
"ones are available through these macros which are mapped to C functions "
"depending on the Python configuration."
msgstr ""
"Unicode は数多くの異なる文字プロパティ (character property) を提供していま"
"す。よく使われる文字プロパティは、以下のマクロで利用できます。これらのマクロ"
"は Python の設定に応じて、各々 C の関数に対応付けられています。"

#: ../../c-api/unicode.rst:119
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a whitespace character."
msgstr "*ch* が空白文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:124
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a lowercase character."
msgstr "*ch* が小文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:129
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is an uppercase character."
msgstr "*ch* が大文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:134
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a titlecase character."
msgstr ""
"*ch* がタイトルケース文字 (titlecase character) かどうかに応じて ``1`` また"
"は ``0`` を返します。"

#: ../../c-api/unicode.rst:139
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a linebreak character."
msgstr "*ch* が改行文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:144
msgid "Return ``1`` or ``0`` depending on whether *ch* is a decimal character."
msgstr "*ch* が decimal 文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:149
msgid "Return ``1`` or ``0`` depending on whether *ch* is a digit character."
msgstr "*ch* が digit 文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:154
msgid "Return ``1`` or ``0`` depending on whether *ch* is a numeric character."
msgstr ""
"*ch* が数字 (numeric) 文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:159
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is an alphabetic character."
msgstr ""
"*ch* がアルファベット文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:164
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is an alphanumeric character."
msgstr "*ch* が英数文字かどうかに応じて ``1`` または ``0`` を返します。"

#: ../../c-api/unicode.rst:166
msgid "These APIs can be used for fast direct character conversions:"
msgstr "以下の API は、高速に直接文字変換を行うために使われます:"

#: ../../c-api/unicode.rst:171
msgid "Return the character *ch* converted to lower case."
msgstr "*ch* を小文字に変換したものを返します。"

#: ../../c-api/unicode.rst:176
msgid "Return the character *ch* converted to upper case."
msgstr "*ch* を大文字に変換したものを返します。"

#: ../../c-api/unicode.rst:181
msgid "Return the character *ch* converted to title case."
msgstr "*ch* をタイトルケース文字に変換したものを返します。"

#: ../../c-api/unicode.rst:186
msgid ""
"Return the character *ch* converted to a decimal positive integer.  Return "
"``-1`` if this is not possible.  This macro does not raise exceptions."
msgstr ""
"*ch* を 10 進の正の整数に変換したものを返します。不可能ならば ``-1`` を返しま"
"す。このマクロは例外を送出しません。"

#: ../../c-api/unicode.rst:192
msgid ""
"Return the character *ch* converted to a single digit integer. Return ``-1`` "
"if this is not possible.  This macro does not raise exceptions."
msgstr ""
"*ch* を一桁の 2 進整数に変換したものを返します。不可能ならば ``-1`` を返しま"
"す。このマクロは例外を送出しません。"

#: ../../c-api/unicode.rst:198
msgid ""
"Return the character *ch* converted to a double. Return ``-1.0`` if this is "
"not possible.  This macro does not raise exceptions."
msgstr ""
"*ch* を :c:type:`double` に変換したものを返します。不可能ならば ``-1.0`` を返"
"します。このマクロは例外を送出しません。"

#: ../../c-api/unicode.rst:203
msgid "Plain Py_UNICODE"
msgstr "Plain Py_UNICODE"

#: ../../c-api/unicode.rst:205
msgid ""
"To create Unicode objects and access their basic sequence properties, use "
"these APIs:"
msgstr ""
"Unicode オブジェクトを生成したり、Unicode のシーケンスとしての基本的なプロパ"
"ティにアクセスしたりするには、以下の API を使ってください:"

#: ../../c-api/unicode.rst:211
msgid ""
"Create a Unicode object from the Py_UNICODE buffer *u* of the given size. "
"*u* may be *NULL* which causes the contents to be undefined. It is the "
"user's responsibility to fill in the needed data.  The buffer is copied into "
"the new object. If the buffer is not *NULL*, the return value might be a "
"shared object. Therefore, modification of the resulting Unicode object is "
"only allowed when *u* is *NULL*."
msgstr ""
"*size* で指定された長さを持つ Py_UNICODE 型バッファ *u* から Unicode オブジェ"
"クトを生成します。 *u* を *NULL* にしてもよく、その場合オブジェクトの内容は未"
"定義です。バッファに必要な情報を埋めるのはユーザの責任です。バッファの内容は"
"新たなオブジェクトにコピーされます。バッファが *NULL* でない場合、戻り値は共"
"有されたオブジェクトになることがあります。従って、この関数が返す Unicode オブ"
"ジェクトを変更してよいのは *u* が *NULL* のときだけです。"

#: ../../c-api/unicode.rst:218 ../../c-api/unicode.rst:386
#: ../../c-api/unicode.rst:449 ../../c-api/unicode.rst:462
#: ../../c-api/unicode.rst:487 ../../c-api/unicode.rst:501
#: ../../c-api/unicode.rst:511 ../../c-api/unicode.rst:631
#: ../../c-api/unicode.rst:670 ../../c-api/unicode.rst:725
#: ../../c-api/unicode.rst:736 ../../c-api/unicode.rst:759
#: ../../c-api/unicode.rst:770 ../../c-api/unicode.rst:794
#: ../../c-api/unicode.rst:804 ../../c-api/unicode.rst:828
#: ../../c-api/unicode.rst:838 ../../c-api/unicode.rst:888
#: ../../c-api/unicode.rst:899 ../../c-api/unicode.rst:926
#: ../../c-api/unicode.rst:945 ../../c-api/unicode.rst:965
msgid ""
"This function used an :c:type:`int` type for *size*. This might require "
"changes in your code for properly supporting 64-bit systems."
msgstr ""
"この関数は以前は *size* の型に :c:type:`int` を利用していました。この変更によ"
"り、 64bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/unicode.rst:225
msgid ""
"Create a Unicode object from the char buffer *u*.  The bytes will be "
"interpreted as being UTF-8 encoded.  *u* may also be *NULL* which causes the "
"contents to be undefined. It is the user's responsibility to fill in the "
"needed data.  The buffer is copied into the new object. If the buffer is not "
"*NULL*, the return value might be a shared object. Therefore, modification "
"of the resulting Unicode object is only allowed when *u* is *NULL*."
msgstr ""
"char 型バッファ *u* から Unicode オブジェクトを生成します。 *u* の内容は "
"UTF-8 エンコードされているものとします。 *u* を *NULL* にしてもよく、その場合"
"オブジェクトの内容は未定義で、バッファに必要な情報を埋めるのはユーザの責任で"
"す。バッファの内容は新たなオブジェクトにコピーされます。バッファが *NULL* で"
"ない場合、戻り値は共有されたオブジェクトになることがあります。従って、この関"
"数が返す Unicode オブジェクトを変更してよいのは *u* が *NULL* のときだけで"
"す。"

#: ../../c-api/unicode.rst:237
msgid ""
"Create a Unicode object from a UTF-8 encoded null-terminated char buffer *u*."
msgstr ""
"UTF-8 エンコードされたnull終端のchar 型バッファ *u* から Unicode オブジェクト"
"を生成します。"

#: ../../c-api/unicode.rst:245
msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number of "
"arguments, calculate the size of the resulting Python unicode string and "
"return a string with the values formatted into it.  The variable arguments "
"must be C types and must correspond exactly to the format characters in the "
"*format* string.  The following format characters are allowed:"
msgstr ""
":c:func:`printf` スタイルの *format* 文字列と可変長引数を受け取り、結果の "
"unicode 文字の長さを計算し、フォーマットされた文字列を含む unicode オブジェク"
"トを返します。可変長引数は C の型を持っていて、 *format* 文字列で指定された書"
"式指定文字に完全に従う必要があります。以下の書式指定文字が利用できます:"

#: ../../c-api/unicode.rst:258
msgid "Format Characters"
msgstr "書式指定文字"

#: ../../c-api/unicode.rst:258
msgid "Type"
msgstr "型"

#: ../../c-api/unicode.rst:258
msgid "Comment"
msgstr "備考"

#: ../../c-api/unicode.rst:260
msgid ":attr:`%%`"
msgstr ":attr:`%%`"

#: ../../c-api/unicode.rst:260
msgid "*n/a*"
msgstr "*n/a*"

#: ../../c-api/unicode.rst:260
msgid "The literal % character."
msgstr "リテラルの % 文字"

#: ../../c-api/unicode.rst:262
msgid ":attr:`%c`"
msgstr ":attr:`%c`"

#: ../../c-api/unicode.rst:262 ../../c-api/unicode.rst:265
#: ../../c-api/unicode.rst:283 ../../c-api/unicode.rst:286
msgid "int"
msgstr "int"

#: ../../c-api/unicode.rst:262
msgid "A single character, represented as a C int."
msgstr "C の整数型で表現される単一の文字。"

#: ../../c-api/unicode.rst:265
msgid ":attr:`%d`"
msgstr ":attr:`%d`"

#: ../../c-api/unicode.rst:265
msgid "Exactly equivalent to ``printf(\"%d\")``."
msgstr "C の ``printf(\"%d\")`` と全く同じ"

#: ../../c-api/unicode.rst:268
msgid ":attr:`%u`"
msgstr ":attr:`%u`"

#: ../../c-api/unicode.rst:268
msgid "unsigned int"
msgstr "unsigned int"

#: ../../c-api/unicode.rst:268
msgid "Exactly equivalent to ``printf(\"%u\")``."
msgstr "C の ``printf(\"%u\")`` と全く同じ"

#: ../../c-api/unicode.rst:271
msgid ":attr:`%ld`"
msgstr ":attr:`%ld`"

#: ../../c-api/unicode.rst:271
msgid "long"
msgstr "long"

#: ../../c-api/unicode.rst:271
msgid "Exactly equivalent to ``printf(\"%ld\")``."
msgstr "C の ``printf(\"%ld\")`` と全く同じ"

#: ../../c-api/unicode.rst:274
msgid ":attr:`%lu`"
msgstr ":attr:`%lu`"

#: ../../c-api/unicode.rst:274
msgid "unsigned long"
msgstr "unsigned long"

#: ../../c-api/unicode.rst:274
msgid "Exactly equivalent to ``printf(\"%lu\")``."
msgstr "C の ``printf(\"%lu\")`` と全く同じ"

#: ../../c-api/unicode.rst:277
msgid ":attr:`%zd`"
msgstr ":attr:`%zd`"

#: ../../c-api/unicode.rst:277
msgid "Py_ssize_t"
msgstr "Py_ssize_t"

#: ../../c-api/unicode.rst:277
msgid "Exactly equivalent to ``printf(\"%zd\")``."
msgstr "C の ``printf(\"%zd\")`` と全く同じ"

#: ../../c-api/unicode.rst:280
msgid ":attr:`%zu`"
msgstr ":attr:`%zu`"

#: ../../c-api/unicode.rst:280
msgid "size_t"
msgstr "size_t"

#: ../../c-api/unicode.rst:280
msgid "Exactly equivalent to ``printf(\"%zu\")``."
msgstr "C の ``printf(\"%zu\")`` と全く同じ"

#: ../../c-api/unicode.rst:283
msgid ":attr:`%i`"
msgstr ":attr:`%i`"

#: ../../c-api/unicode.rst:283
msgid "Exactly equivalent to ``printf(\"%i\")``."
msgstr "C の ``printf(\"%i\")`` と全く同じ"

#: ../../c-api/unicode.rst:286
msgid ":attr:`%x`"
msgstr ":attr:`%x`"

#: ../../c-api/unicode.rst:286
msgid "Exactly equivalent to ``printf(\"%x\")``."
msgstr "C の ``printf(\"%x\")`` と全く同じ"

#: ../../c-api/unicode.rst:289
msgid ":attr:`%s`"
msgstr ":attr:`%s`"

#: ../../c-api/unicode.rst:289
msgid "char\\*"
msgstr "char\\*"

#: ../../c-api/unicode.rst:289
msgid "A null-terminated C character array."
msgstr "null で終端された C の文字列。"

#: ../../c-api/unicode.rst:292
msgid ":attr:`%p`"
msgstr ":attr:`%p`"

#: ../../c-api/unicode.rst:292
msgid "void\\*"
msgstr "void\\*"

#: ../../c-api/unicode.rst:292
msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal "
"``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""
"C ポインタの 16 進表記。``printf(\"%p\")`` とほとんど同じですが、プラット"
"フォームにおける ``printf`` の定義に関わりなく先頭にリテラル ``0x`` が付きま"
"す。"

#: ../../c-api/unicode.rst:300
msgid ":attr:`%U`"
msgstr ":attr:`%U`"

#: ../../c-api/unicode.rst:300 ../../c-api/unicode.rst:309
#: ../../c-api/unicode.rst:312
msgid "PyObject\\*"
msgstr "PyObject\\*"

#: ../../c-api/unicode.rst:300
msgid "A unicode object."
msgstr "unicode オブジェクト。"

#: ../../c-api/unicode.rst:302
msgid ":attr:`%V`"
msgstr ":attr:`%V`"

#: ../../c-api/unicode.rst:302
msgid "PyObject\\*, char \\*"
msgstr "PyObject\\*, char \\*"

#: ../../c-api/unicode.rst:302
msgid ""
"A unicode object (which may be *NULL*) and a null-terminated C character "
"array as a second parameter (which will be used, if the first parameter is "
"*NULL*)."
msgstr ""
"unicode オブジェクト(*NULL* でも良い)と、 2つめの引数として NUL 終端の C 文字"
"列 (2つめの引数は1つめの引数が *NULL* だった時にのみ利用されます)。"

#: ../../c-api/unicode.rst:309
msgid ":attr:`%S`"
msgstr ":attr:`%S`"

#: ../../c-api/unicode.rst:309
msgid "The result of calling :func:`PyObject_Unicode`."
msgstr ":func:`PyObject_Unicode` の戻り値"

#: ../../c-api/unicode.rst:312
msgid ":attr:`%R`"
msgstr ":attr:`%R`"

#: ../../c-api/unicode.rst:312
msgid "The result of calling :func:`PyObject_Repr`."
msgstr ":func:`PyObject_Repr` の戻り値"

#: ../../c-api/unicode.rst:316
msgid ""
"An unrecognized format character causes all the rest of the format string to "
"be copied as-is to the result string, and any extra arguments discarded."
msgstr ""
"識別できない書式指定文字があった場合、残りの書式文字列はそのまま出力文字列に"
"コピーされ、残りの引数は無視されます。"

#: ../../c-api/unicode.rst:324
msgid ""
"Identical to :func:`PyUnicode_FromFormat` except that it takes exactly two "
"arguments."
msgstr "2引数であることを除いて :c:func:`PyUnicode_FromFormat` と同じです。"

#: ../../c-api/unicode.rst:332
msgid ""
"Return a read-only pointer to the Unicode object's internal :c:type:"
"`Py_UNICODE` buffer, *NULL* if *unicode* is not a Unicode object. Note that "
"the resulting :c:type:`Py_UNICODE*` string may contain embedded null "
"characters, which would cause the string to be truncated when used in most C "
"functions."
msgstr ""
"Unicode オブジェクトの内部バッファ :c:type:`Py_UNICODE` に対する読み出し専用"
"のポインタを返します。 *unicode* が Unicode オブジェクトでなければ *NULL* を"
"返します。結果の :c:type:`Py_UNICODE*` 文字列には文字列の途中にも nul 文字が"
"含まれうることに注意してください。これはほとんどの C 関数で文字列を切り捨てて"
"しまう結果になります。"

#: ../../c-api/unicode.rst:341
msgid "Return the length of the Unicode object."
msgstr "Unicode オブジェクトの長さを返します。"

#: ../../c-api/unicode.rst:350
msgid ""
"Coerce an encoded object *obj* to a Unicode object and return a reference "
"with incremented refcount."
msgstr ""
"あるエンコード方式でエンコードされたオブジェクト *obj* を Unicode オブジェク"
"トに型変換して、参照カウントをインクリメントして返します。"

#: ../../c-api/unicode.rst:353
msgid ""
"String and other char buffer compatible objects are decoded according to the "
"given encoding and using the error handling defined by errors.  Both can be "
"*NULL* to have the interface use the default values (see the next section "
"for details)."
msgstr ""
"文字列やその他の char バッファ互換オブジェクトの場合、オブジェクトは "
"*encoding* に従ってデコードされます。このとき *error* で定義されたエラー処理"
"を用います。これら二つの引数は *NULL* にでき、その場合デフォルト値が使われま"
"す (詳細は次の節を参照してください)"

#: ../../c-api/unicode.rst:358
msgid ""
"All other objects, including Unicode objects, cause a :exc:`TypeError` to be "
"set."
msgstr ""
"その他のUnicodeオブジェクトを含むオブジェクトは :exc:`TypeError` 例外を引き起"
"こします。"

#: ../../c-api/unicode.rst:361
msgid ""
"The API returns *NULL* if there was an error.  The caller is responsible for "
"decref'ing the returned objects."
msgstr ""
"この API は、エラーが生じたときには *NULL* を返します。呼び出し側は返されたオ"
"ブジェクトに対し参照カウンタを 1 つ減らす (decref) する責任があります。"

#: ../../c-api/unicode.rst:367
msgid ""
"Shortcut for ``PyUnicode_FromEncodedObject(obj, NULL, \"strict\")`` which is "
"used throughout the interpreter whenever coercion to Unicode is needed."
msgstr ""
"``PyUnicode_FromEncodedObject(obj, NULL, \"strict\")`` を行うショートカット"
"で、インタプリタは Unicode への型強制が必要な際に常にこの関数を使います。"

#: ../../c-api/unicode.rst:370
msgid ""
"If the platform supports :c:type:`wchar_t` and provides a header file wchar."
"h, Python can interface directly to this type using the following functions. "
"Support is optimized if Python's own :c:type:`Py_UNICODE` type is identical "
"to the system's :c:type:`wchar_t`."
msgstr ""
"プラットフォームで :c:type:`wchar_t` がサポートされていて、かつ wchar.h が提"
"供されている場合、Python は以下の関数を使って :c:type:`wchar_t` に対して直接"
"アクセスすることができます。このアクセスは、Python 自体の :c:type:"
"`Py_UNICODE` 型がシステムの :c:type:`wchar_t` と同一の場合に最適化されます。"

#: ../../c-api/unicode.rst:377
msgid "wchar_t Support"
msgstr "wchar_t サポート"

#: ../../c-api/unicode.rst:379
msgid ":c:type:`wchar_t` support for platforms which support it:"
msgstr ":c:type:`wchar_t` をサポートするプラットフォームでの wchar_t サポート:"

#: ../../c-api/unicode.rst:383
msgid ""
"Create a Unicode object from the :c:type:`wchar_t` buffer *w* of the given "
"*size*. Return *NULL* on failure."
msgstr ""
"*size* の :c:type:`wchar_t` バッファ *w* から Unicode オブジェクトを生成しま"
"す。失敗すると *NULL* を返します。"

#: ../../c-api/unicode.rst:393
msgid ""
"Copy the Unicode object contents into the :c:type:`wchar_t` buffer *w*.  At "
"most *size* :c:type:`wchar_t` characters are copied (excluding a possibly "
"trailing 0-termination character).  Return the number of :c:type:`wchar_t` "
"characters copied or ``-1`` in case of an error.  Note that the resulting :c:"
"type:`wchar_t` string may or may not be 0-terminated.  It is the "
"responsibility of the caller to make sure that the :c:type:`wchar_t` string "
"is 0-terminated in case this is required by the application. Also, note that "
"the :c:type:`wchar_t*` string might contain null characters, which would "
"cause the string to be truncated when used with most C functions."
msgstr ""
"Unicode オブジェクトの内容を :c:type:`wchar_t` バッファ *w* にコピーします。"
"最大で *size* 個の :c:type:`wchar_t` 文字を (末尾の 0-終端文字を除いて) コ"
"ピーします。コピーした :c:type:`wchar_t` 文字の個数を返します。エラーの時に"
"は ``-1`` を返します。 :c:type:`wchar_t` 文字列は 0-終端されている場合も、さ"
"れていない場合もあります。関数の呼び出し側の責任で、アプリケーションの必要に"
"応じて :c:type:`wchar_t` 文字列を 0-終端してください。また、結果の :c:type:"
"`wchar_t*` 文字列には文字列の途中にも nul 文字が含まれうることにも注意してく"
"ださい。これはほとんどの C 関数で文字列を切り捨ててしまう結果になります。"

#: ../../c-api/unicode.rst:403
msgid ""
"This function returned an :c:type:`int` type and used an :c:type:`int` type "
"for *size*. This might require changes in your code for properly supporting "
"64-bit systems."
msgstr ""
"この関数は以前は :c:type:`int` を返し、 *size* の型に :c:type:`int` を利用し"
"ていました。この変更により、 64bit システムを正しくサポートするには修正が必要"
"になります。"

#: ../../c-api/unicode.rst:412
msgid "Built-in Codecs"
msgstr "組み込み codec (built-in codec)"

#: ../../c-api/unicode.rst:414
msgid ""
"Python provides a set of built-in codecs which are written in C for speed. "
"All of these codecs are directly usable via the following functions."
msgstr ""
"Python には、処理速度を高めるために C で書かれた codec が揃えてあります。これ"
"ら全ての codec は以下の関数を介して直接利用できます。"

#: ../../c-api/unicode.rst:417
msgid ""
"Many of the following APIs take two arguments encoding and errors, and they "
"have the same semantics as the ones of the built-in :func:`unicode` Unicode "
"object constructor."
msgstr ""
"以下の API の多くが、 *encoding* と *errors* という二つの引数をとります。これ"
"らのパラメータは、組み込みの Unicode オブジェクトコンストラクタである :func:"
"`unicode` における同名のパラメータと同じ意味を持ちます。"

#: ../../c-api/unicode.rst:421
msgid ""
"Setting encoding to *NULL* causes the default encoding to be used which is "
"ASCII.  The file system calls should use :c:data:"
"`Py_FileSystemDefaultEncoding` as the encoding for file names. This variable "
"should be treated as read-only: on some systems, it will be a pointer to a "
"static string, on others, it will change at run-time (such as when the "
"application invokes setlocale)."
msgstr ""
"*encoding* を *NULL* にすると、デフォルトエンコーディングである ASCII を使い"
"ます。ファイルシステムに関する関数の呼び出しでは、ファイル名に対するエンコー"
"ディングとして :c:data:`Py_FileSystemDefaultEncoding` を使わねばなりません。"
"この変数は読み出し専用の変数として扱わねばなりません: この変数は、あるシステ"
"ムによっては静的な文字列に対するポインタであったり、また別のシステムでは、(ア"
"プリケーションが setlocale を読んだときなどに) 変わったりもします。"

#: ../../c-api/unicode.rst:427
msgid ""
"Error handling is set by errors which may also be set to *NULL* meaning to "
"use the default handling defined for the codec.  Default error handling for "
"all built-in codecs is \"strict\" (:exc:`ValueError` is raised)."
msgstr ""
"*errors* で指定するエラー処理もまた、 *NULL* を指定できます。 *NULL* を指定す"
"ると、codec で定義されているデフォルト処理の使用を意味します。全ての組み込み "
"codec で、デフォルトのエラー処理は \"strict\" (:exc:`ValueError` を送出する) "
"になっています。"

#: ../../c-api/unicode.rst:431
msgid ""
"The codecs all use a similar interface.  Only deviation from the following "
"generic ones are documented for simplicity."
msgstr ""
"個々の codec は全て同様のインタフェースを使っています。個別の codec の説明で"
"は、説明を簡単にするために以下の汎用のインタフェースとの違いだけを説明してい"
"ます。"

#: ../../c-api/unicode.rst:436
msgid "Generic Codecs"
msgstr "汎用 codec"

#: ../../c-api/unicode.rst:438
msgid "These are the generic codec APIs:"
msgstr "以下は汎用 codec の API です:"

#: ../../c-api/unicode.rst:443
msgid ""
"Create a Unicode object by decoding *size* bytes of the encoded string *s*. "
"*encoding* and *errors* have the same meaning as the parameters of the same "
"name in the :func:`unicode` built-in function.  The codec to be used is "
"looked up using the Python codec registry.  Return *NULL* if an exception "
"was raised by the codec."
msgstr ""
"何らかのエンコード方式でエンコードされた、 *size* バイトの文字列 *s* をデコー"
"ドして Unicode オブジェクトを生成します。 *encoding* と *errors* は、組み込み"
"関数 unicode() の同名のパラメータと同じ意味を持ちます。使用する codec の検索"
"は、 Python の codec レジストリを使って行います。codec が例外を送出した場合に"
"は *NULL* を返します。"

#: ../../c-api/unicode.rst:456
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer *s* of the given *size* and return a "
"Python string object.  *encoding* and *errors* have the same meaning as the "
"parameters of the same name in the Unicode :meth:`~unicode.encode` method.  "
"The codec to be used is looked up using the Python codec registry.  Return "
"*NULL* if an exception was raised by the codec."
msgstr ""
"*size* で指定されたサイズの :c:type:`Py_UNICODE` バッファ *s* をエンコードし"
"た Python 文字列オブジェクトを返します。 *encoding* および *errors* は "
"Unicode 型の :meth:`~unicode.encode` メソッドに与える同名のパラメータと同じ意"
"味を持ちます。使用する codec の検索は、 Python の codec レジストリを使って行"
"います。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:469
msgid ""
"Encode a Unicode object and return the result as Python string object. "
"*encoding* and *errors* have the same meaning as the parameters of the same "
"name in the Unicode :meth:`encode` method. The codec to be used is looked up "
"using the Python codec registry. Return *NULL* if an exception was raised by "
"the codec."
msgstr ""
"Unicode オブジェクトをエンコードし、その結果を Python 文字列オブジェクトとし"
"て返します。 *encoding* および *errors* は Unicode 型の :meth:`encode` メソッ"
"ドに与える同名のパラメータと同じ意味を持ちます。使用する codec の検索は、 "
"Python の codec レジストリを使って行います。codec が例外を送出した場合には "
"*NULL* を返します。"

#: ../../c-api/unicode.rst:477
msgid "UTF-8 Codecs"
msgstr "UTF-8 Codecs"

#: ../../c-api/unicode.rst:479
msgid "These are the UTF-8 codec APIs:"
msgstr "以下は UTF-8 codec の APIです:"

#: ../../c-api/unicode.rst:484
msgid ""
"Create a Unicode object by decoding *size* bytes of the UTF-8 encoded string "
"*s*. Return *NULL* if an exception was raised by the codec."
msgstr ""
"UTF-8 でエンコードされた *size* バイトの文字列 *s* から Unicode オブジェクト"
"を生成します。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:494
msgid ""
"If *consumed* is *NULL*, behave like :c:func:`PyUnicode_DecodeUTF8`. If "
"*consumed* is not *NULL*, trailing incomplete UTF-8 byte sequences will not "
"be treated as an error. Those bytes will not be decoded and the number of "
"bytes that have been decoded will be stored in *consumed*."
msgstr ""
"*consumed* が *NULL* の場合、 :c:func:`PyUnicode_DecodeUTF8` と同じように動作"
"します。 *consumed* が *NULL* でない場合、 :c:func:"
"`PyUnicode_DecodeUTF8Stateful` は末尾の不完全な UTF-8 バイト列をエラーとみな"
"しません。これらのバイト列はデコードされず、デコードされたバイト数を "
"*consumed* に返します。"

#: ../../c-api/unicode.rst:508
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer *s* of the given *size* using UTF-8 "
"and return a Python string object.  Return *NULL* if an exception was raised "
"by the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファ *s* を UTF-8 で"
"エンコードし、 Python 文字列オブジェクトにして返します。 codec が例外を送出し"
"た場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:518
msgid ""
"Encode a Unicode object using UTF-8 and return the result as Python string "
"object.  Error handling is \"strict\".  Return *NULL* if an exception was "
"raised by the codec."
msgstr ""
"UTF-8 で Unicode オブジェクトをエンコードし、結果を Python 文字列オブジェクト"
"として返します。エラー処理は \"strict\" です。 codec が例外を送出した場合に"
"は *NULL* を返します。"

#: ../../c-api/unicode.rst:524
msgid "UTF-32 Codecs"
msgstr "UTF-32 Codecs"

#: ../../c-api/unicode.rst:526
msgid "These are the UTF-32 codec APIs:"
msgstr "以下は UTF-32 codec API です:"

#: ../../c-api/unicode.rst:531
msgid ""
"Decode *size* bytes from a UTF-32 encoded buffer string and return the "
"corresponding Unicode object.  *errors* (if non-*NULL*) defines the error "
"handling. It defaults to \"strict\"."
msgstr ""
"UTF-32 でエンコードされたバッファ文字列から *size* バイトをデコードし、 "
"Unicodeオブジェクトとして返します。 *errors* は (*NULL* でないなら) エラーハ"
"ンドラを指定します。デフォルトは \"strict\" です。"

#: ../../c-api/unicode.rst:535 ../../c-api/unicode.rst:611
msgid ""
"If *byteorder* is non-*NULL*, the decoder starts decoding using the given "
"byte order::"
msgstr ""
"*byteorder* が *NULL* でない時、デコーダは与えられたバイトオーダーでデコード"
"を開始します。 ::"

#: ../../c-api/unicode.rst:542
msgid ""
"If ``*byteorder`` is zero, and the first four bytes of the input data are a "
"byte order mark (BOM), the decoder switches to this byte order and the BOM "
"is not copied into the resulting Unicode string.  If ``*byteorder`` is "
"``-1`` or ``1``, any byte order mark is copied to the output."
msgstr ""
"``*byteorder`` が 0 で入力データの最初の 4 バイトがバイトオーダーマーク "
"(BOM) だった場合、デコーダーは BOM のバイトオーダーに切り替え、 BOM は結果の "
"unicode 文字列には含まれません。 ``*byteorder`` が ``-1`` か ``1`` だった場"
"合、すべての BOM は出力へコピーされます。"

#: ../../c-api/unicode.rst:547 ../../c-api/unicode.rst:624
msgid ""
"After completion, *\\*byteorder* is set to the current byte order at the end "
"of input data."
msgstr ""
"デコードが完了した後、入力データの終端に来た時点でのバイトオーダーを "
"*\\*byteorder* にセットします。"

#: ../../c-api/unicode.rst:550
msgid ""
"In a narrow build code points outside the BMP will be decoded as surrogate "
"pairs."
msgstr ""
"narrow build の場合、BMP 外のコードポイントはサロゲートペアとしてデコードされ"
"ます。"

#: ../../c-api/unicode.rst:552 ../../c-api/unicode.rst:627
msgid "If *byteorder* is *NULL*, the codec starts in native order mode."
msgstr ""
"*byteorder* が *NULL* のとき、 codec は native order モードで開始します。"

#: ../../c-api/unicode.rst:554 ../../c-api/unicode.rst:585
#: ../../c-api/unicode.rst:629 ../../c-api/unicode.rst:668
msgid "Return *NULL* if an exception was raised by the codec."
msgstr "codec が例外を発生させたときは *NULL* を返します。"

#: ../../c-api/unicode.rst:561
msgid ""
"If *consumed* is *NULL*, behave like :c:func:`PyUnicode_DecodeUTF32`. If "
"*consumed* is not *NULL*, :c:func:`PyUnicode_DecodeUTF32Stateful` will not "
"treat trailing incomplete UTF-32 byte sequences (such as a number of bytes "
"not divisible by four) as an error. Those bytes will not be decoded and the "
"number of bytes that have been decoded will be stored in *consumed*."
msgstr ""
"*consumed* が *NULL* のとき、 :c:func:`PyUnicode_DecodeUTF32` と同じように振"
"る舞います。 *consumed* が *NULL* でないとき、 :c:func:"
"`PyUnicode_DecodeUTF32Stateful` は末尾の不完全な (4 で割り切れない長さのバイ"
"ト列などの) UTF-32 バイト列をエラーとして扱いません。末尾の不完全なバイト列は"
"デコードされず、デコードされたバイト数が *consumed* に格納されます。"

#: ../../c-api/unicode.rst:572
msgid ""
"Return a Python bytes object holding the UTF-32 encoded value of the Unicode "
"data in *s*.  Output is written according to the following byte order::"
msgstr ""
"*s* の Unicode データを UTF-32 にエンコードし、その値を Python の bytes オブ"
"ジェクトに格納して返します。出力は以下のバイトオーダーで従って書かれます。 ::"

#: ../../c-api/unicode.rst:579 ../../c-api/unicode.rst:661
msgid ""
"If byteorder is ``0``, the output string will always start with the Unicode "
"BOM mark (U+FEFF). In the other two modes, no BOM mark is prepended."
msgstr ""
"byteorder が ``0`` のとき、出力文字列は常に Unicode BOM マーク (U+FEFF) で始"
"まります。それ以外の2つのモードでは、先頭に BOM マークは出力されません。"

#: ../../c-api/unicode.rst:582
msgid ""
"If *Py_UNICODE_WIDE* is not defined, surrogate pairs will be output as a "
"single code point."
msgstr ""
"*Py_UNICODE_WIDE* が定義されていない場合は、サロゲートペアを 1 つのコードポイ"
"ントとして出力します。"

#: ../../c-api/unicode.rst:592
msgid ""
"Return a Python string using the UTF-32 encoding in native byte order. The "
"string always starts with a BOM mark.  Error handling is \"strict\".  Return "
"*NULL* if an exception was raised by the codec."
msgstr ""
"ネイティブバイトオーダーで UTF-32 エンコーディングされた Python 文字列を返し"
"ます。文字列は常に BOM マークで始まります。エラーハンドラは \"strict\" で"
"す。 codec が例外を発生させたときは *NULL* を返します。"

#: ../../c-api/unicode.rst:600
msgid "UTF-16 Codecs"
msgstr "UTF-16 Codecs"

#: ../../c-api/unicode.rst:602
msgid "These are the UTF-16 codec APIs:"
msgstr "以下は UTF-16 codec の APIです:"

#: ../../c-api/unicode.rst:607
msgid ""
"Decode *size* bytes from a UTF-16 encoded buffer string and return the "
"corresponding Unicode object.  *errors* (if non-*NULL*) defines the error "
"handling. It defaults to \"strict\"."
msgstr ""
"UTF-16 でエンコードされたバッファ *s* から *size* バイトだけデコードして、結"
"果を Unicode オブジェクトで返します。 *errors* は (*NULL* でない場合) エラー"
"処理方法を定義します。デフォルト値は \"strict\" です。"

#: ../../c-api/unicode.rst:618
msgid ""
"If ``*byteorder`` is zero, and the first two bytes of the input data are a "
"byte order mark (BOM), the decoder switches to this byte order and the BOM "
"is not copied into the resulting Unicode string.  If ``*byteorder`` is "
"``-1`` or ``1``, any byte order mark is copied to the output (where it will "
"result in either a ``\\ufeff`` or a ``\\ufffe`` character)."
msgstr ""
"``*byteorder`` が 0 で、入力データの先頭2バイトがバイトオーダーマーク (BOM) "
"だった場合、デコーダは BOM が示すバイトオーダーに切り替え、そのBOMを結果の "
"Unicode 文字列にコピーしません。 ``*byteorder`` が ``-1`` か ``1`` だった場"
"合、すべてのBOMは出力へコピーされます (出力では ``\\ufeff`` か ``\\ufffe`` の"
"どちらかになるでしょう)。"

#: ../../c-api/unicode.rst:638
msgid ""
"If *consumed* is *NULL*, behave like :c:func:`PyUnicode_DecodeUTF16`. If "
"*consumed* is not *NULL*, :c:func:`PyUnicode_DecodeUTF16Stateful` will not "
"treat trailing incomplete UTF-16 byte sequences (such as an odd number of "
"bytes or a split surrogate pair) as an error. Those bytes will not be "
"decoded and the number of bytes that have been decoded will be stored in "
"*consumed*."
msgstr ""
"*consumed* が *NULL* の場合、 :c:func:`PyUnicode_DecodeUTF16` と同じように動"
"作します。 *consumed* が *NULL* でない場合、 :c:func:"
"`PyUnicode_DecodeUTF16Stateful` は末尾の不完全な UTF-16 バイト列 (奇数長のバ"
"イト列や分割されたサロゲートペア) をエラーとみなしません。これらのバイト列は"
"デコードされず、デコードされたバイト数を *consumed* に返します。"

#: ../../c-api/unicode.rst:646
msgid ""
"This function used an :c:type:`int` type for *size* and an :c:type:`int *` "
"type for *consumed*. This might require changes in your code for properly "
"supporting 64-bit systems."
msgstr ""
"この関数は以前は *size* の型に :c:type:`int` を利用し、 *consumed* の型に :c:"
"type:`int *` を利用していました。この変更により、 64bit システムを正しくサ"
"ポートするには修正が必要になります。"

#: ../../c-api/unicode.rst:654
msgid ""
"Return a Python string object holding the UTF-16 encoded value of the "
"Unicode data in *s*.  Output is written according to the following byte "
"order::"
msgstr ""
"*s* 中の Unicode データを UTF-16 でエンコードした結果が入っている Python 文字"
"列オブジェクトを返します。出力は以下のバイトオーダーに従って書き出されます::"

#: ../../c-api/unicode.rst:664
msgid ""
"If *Py_UNICODE_WIDE* is defined, a single :c:type:`Py_UNICODE` value may get "
"represented as a surrogate pair. If it is not defined, each :c:type:"
"`Py_UNICODE` values is interpreted as a UCS-2 character."
msgstr ""
"*Py_UNICODE_WIDE* が定義されている場合、単一の :c:type:`Py_UNICODE` 値はサロ"
"ゲートペアとして表現されることがあります。 *Py_UNICODE_WIDE* が定義されていな"
"ければ、各 :c:type:`Py_UNICODE` 値は UCS-2 文字として表現されます。"

#: ../../c-api/unicode.rst:677
msgid ""
"Return a Python string using the UTF-16 encoding in native byte order. The "
"string always starts with a BOM mark.  Error handling is \"strict\".  Return "
"*NULL* if an exception was raised by the codec."
msgstr ""
"ネイティブバイトオーダの UTF-16 でエンコードされた Python 文字列を返します。"
"文字列は常に BOM マークから始まります。エラー処理は \"strict\" です。 codec "
"が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:683
msgid "UTF-7 Codecs"
msgstr "UTF-7 Codecs"

#: ../../c-api/unicode.rst:685
msgid "These are the UTF-7 codec APIs:"
msgstr "以下は UTF-7 codec の API です:"

#: ../../c-api/unicode.rst:690
msgid ""
"Create a Unicode object by decoding *size* bytes of the UTF-7 encoded string "
"*s*.  Return *NULL* if an exception was raised by the codec."
msgstr ""
"UTF-7 でエンコードされた *size* バイトの文字列 *s* をデコードして Unicode オ"
"ブジェクトを作成します。 codec が例外を発生させたときは *NULL* を返します。"

#: ../../c-api/unicode.rst:696
msgid ""
"If *consumed* is *NULL*, behave like :c:func:`PyUnicode_DecodeUTF7`.  If "
"*consumed* is not *NULL*, trailing incomplete UTF-7 base-64 sections will "
"not be treated as an error.  Those bytes will not be decoded and the number "
"of bytes that have been decoded will be stored in *consumed*."
msgstr ""
"*consumed* が *NULL* のとき、 :c:func:`PyUnicode_DecodeUTF7` と同じように動作"
"します。 *consumed* が *NULL* でないとき、末尾の不完全な UTF-7 base-64 部分を"
"エラーとしません。不完全な部分のバイト列はデコードせずに、デコードしたバイト"
"数を *consumed* に格納します。"

#: ../../c-api/unicode.rst:704
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given size using UTF-7 and "
"return a Python bytes object.  Return *NULL* if an exception was raised by "
"the codec."
msgstr ""
"与えられたサイズの :c:type:`Py_UNICODE` バッファを UTF-7 でエンコードして、 "
"Python の bytes オブジェクトとして返します。 codec が例外を発生させたときは "
"*NULL* を返します。"

#: ../../c-api/unicode.rst:708
msgid ""
"If *base64SetO* is nonzero, \"Set O\" (punctuation that has no otherwise "
"special meaning) will be encoded in base-64.  If *base64WhiteSpace* is "
"nonzero, whitespace will be encoded in base-64.  Both are set to zero for "
"the Python \"utf-7\" codec."
msgstr ""
"*base64SetO* がゼロでないとき、 \"Set O\" 文字 (他の場合には何も特別な意味を"
"持たない句読点) を base-64 エンコードします。 *base64WhiteSpace* がゼロでない"
"とき、空白文字を base-64 エンコードします。 Python の \"utf-7\" codec では、"
"両方ともゼロに設定されています。"

#: ../../c-api/unicode.rst:715
msgid "Unicode-Escape Codecs"
msgstr "Unicode-Escape Codecs"

#: ../../c-api/unicode.rst:717
msgid "These are the \"Unicode Escape\" codec APIs:"
msgstr "以下は \"Unicode Escape\" codec の API です:"

#: ../../c-api/unicode.rst:722
msgid ""
"Create a Unicode object by decoding *size* bytes of the Unicode-Escape "
"encoded string *s*.  Return *NULL* if an exception was raised by the codec."
msgstr ""
"Unicode-Escape でエンコードされた *size* バイトの文字列 *s* から Unicode オブ"
"ジェクトを生成します。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:732
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given *size* using Unicode-"
"Escape and return a Python string object.  Return *NULL* if an exception was "
"raised by the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファを Unicode-"
"Escape でエンコードし、 Python 文字列オブジェクトにして返します。 codec が例"
"外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:743
msgid ""
"Encode a Unicode object using Unicode-Escape and return the result as Python "
"string object.  Error handling is \"strict\". Return *NULL* if an exception "
"was raised by the codec."
msgstr ""
"Unicode-Escape で Unicode オブジェクトをエンコードし、結果を Python 文字列オ"
"ブジェクトとして返します。エラー処理は \"strict\" です。 codec が例外を送出し"
"た場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:749
msgid "Raw-Unicode-Escape Codecs"
msgstr "Raw-Unicode-Escape Codecs"

#: ../../c-api/unicode.rst:751
msgid "These are the \"Raw Unicode Escape\" codec APIs:"
msgstr "以下は \"Raw Unicode Escape\" codec の APIです:"

#: ../../c-api/unicode.rst:756
msgid ""
"Create a Unicode object by decoding *size* bytes of the Raw-Unicode-Escape "
"encoded string *s*.  Return *NULL* if an exception was raised by the codec."
msgstr ""
"Raw-Unicode-Escape でエンコードされた *size* バイトの文字列 *s* から Unicode "
"オブジェクトを生成します。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:766
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given *size* using Raw-Unicode-"
"Escape and return a Python string object.  Return *NULL* if an exception was "
"raised by the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファを Raw-Unicode-"
"Escape でエンコードし、 Python 文字列オブジェクトにして返します。 codec が例"
"外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:777
msgid ""
"Encode a Unicode object using Raw-Unicode-Escape and return the result as "
"Python string object. Error handling is \"strict\". Return *NULL* if an "
"exception was raised by the codec."
msgstr ""
"Raw-Unicode-Escape で Unicode オブジェクトをエンコードし、結果を Python 文字"
"列オブジェクトとして返します。エラー処理は \"strict\" です。 codec が例外を送"
"出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:783
msgid "Latin-1 Codecs"
msgstr "Latin-1 Codecs"

#: ../../c-api/unicode.rst:785
msgid ""
"These are the Latin-1 codec APIs: Latin-1 corresponds to the first 256 "
"Unicode ordinals and only these are accepted by the codecs during encoding."
msgstr ""
"以下は Latin-1 codec の APIです: Latin-1 は、 Unicode 序数の最初の 256 個に対"
"応し、エンコード時にはこの 256 個だけを受理します。"

#: ../../c-api/unicode.rst:791
msgid ""
"Create a Unicode object by decoding *size* bytes of the Latin-1 encoded "
"string *s*.  Return *NULL* if an exception was raised by the codec."
msgstr ""
"Latin-1 でエンコードされた *size* バイトの文字列 *s* から Unicode オブジェク"
"トを生成します。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:801
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given *size* using Latin-1 and "
"return a Python string object.  Return *NULL* if an exception was raised by "
"the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファを Latin-1 でエ"
"ンコードし、 Python 文字列オブジェクトにして返します。 codec が例外を送出した"
"場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:811
msgid ""
"Encode a Unicode object using Latin-1 and return the result as Python string "
"object.  Error handling is \"strict\".  Return *NULL* if an exception was "
"raised by the codec."
msgstr ""
"Latin-1 で Unicode オブジェクトをエンコードし、結果を Python 文字列オブジェク"
"トとして返します。エラー処理は \"strict\" です。 codec が例外を送出した場合に"
"は *NULL* を返します。"

#: ../../c-api/unicode.rst:817
msgid "ASCII Codecs"
msgstr "ASCII Codecs"

#: ../../c-api/unicode.rst:819
msgid ""
"These are the ASCII codec APIs.  Only 7-bit ASCII data is accepted. All "
"other codes generate errors."
msgstr ""
"以下は ASCII codec の APIです。 7 ビットの ASCII データだけを受理します。その"
"他のコードはエラーになります。"

#: ../../c-api/unicode.rst:825
msgid ""
"Create a Unicode object by decoding *size* bytes of the ASCII encoded string "
"*s*.  Return *NULL* if an exception was raised by the codec."
msgstr ""
"ASCII でエンコードされた *size* バイトの文字列 *s* から Unicode オブジェクト"
"を生成します。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:835
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given *size* using ASCII and "
"return a Python string object.  Return *NULL* if an exception was raised by "
"the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファを ASCII でエン"
"コードし、 Python 文字列オブジェクトにして返します。 codec が例外を送出した場"
"合には *NULL* を返します。"

#: ../../c-api/unicode.rst:845
msgid ""
"Encode a Unicode object using ASCII and return the result as Python string "
"object.  Error handling is \"strict\".  Return *NULL* if an exception was "
"raised by the codec."
msgstr ""
"ASCII で Unicode オブジェクトをエンコードし、結果を Python 文字列オブジェクト"
"として返します。エラー処理は \"strict\" です。 codec が例外を送出した場合に"
"は *NULL* を返します。"

#: ../../c-api/unicode.rst:851
msgid "Character Map Codecs"
msgstr "Character Map Codecs"

#: ../../c-api/unicode.rst:853
msgid ""
"This codec is special in that it can be used to implement many different "
"codecs (and this is in fact what was done to obtain most of the standard "
"codecs included in the :mod:`encodings` package). The codec uses mapping to "
"encode and decode characters."
msgstr ""
"この codec は、多くの様々な codec を実装する際に使われるという点で特殊な "
"codec です (実際、 :mod:`encodings` パッケージに入っている標準 codecs のほと"
"んどは、この codec を使っています)。\n"
"この codec は、文字のエンコードやデコードに対応表を使います。"

#: ../../c-api/unicode.rst:858
msgid ""
"Decoding mappings must map single string characters to single Unicode "
"characters, integers (which are then interpreted as Unicode ordinals) or "
"``None`` (meaning \"undefined mapping\" and causing an error)."
msgstr ""
"デコード用の対応表は、 string 型の文字を Unicode 型の文字、整数 (Unicode 序数"
"として解釈されます)、 ``None`` (\"未定義の対応付け\" を意味し、エラーを引き起"
"こします) のいずれかに対応付けなければなりません。"

#: ../../c-api/unicode.rst:862
msgid ""
"Encoding mappings must map single Unicode characters to single string "
"characters, integers (which are then interpreted as Latin-1 ordinals) or "
"``None`` (meaning \"undefined mapping\" and causing an error)."
msgstr ""
"エンコード用の対応表は、Unicode 型の文字を string 型の文字、整数 (Latin-1 序"
"数として解釈されます)、 ``None`` (\"未定義の対応付け\" を意味し、エラーを引き"
"起こします) のいずれかに対応付けなければなりません。"

#: ../../c-api/unicode.rst:866
msgid ""
"The mapping objects provided must only support the __getitem__ mapping "
"interface."
msgstr ""
"対応表のオブジェクトは、 :meth:`__getitem__` マップ型インタフェースをサポート"
"しなければなりません。"

#: ../../c-api/unicode.rst:869
msgid ""
"If a character lookup fails with a LookupError, the character is copied as-"
"is meaning that its ordinal value will be interpreted as Unicode or Latin-1 "
"ordinal resp. Because of this, mappings only need to contain those mappings "
"which map characters to different code points."
msgstr ""
"ある文字の検索が LookupError によって失敗すると、その文字はそのままコピーされ"
"ます。すなわち、その文字の序数値がそれぞれ Unicode または Latin-1 として解釈"
"されます。このため、codec を実現するマップ型に入れる必要がある対応付け関係"
"は、ある文字を別のコードポイントに対応付けるものだけです。"

#: ../../c-api/unicode.rst:874
msgid "These are the mapping codec APIs:"
msgstr "以下は mapping codec の APIです:"

#: ../../c-api/unicode.rst:878
msgid ""
"Create a Unicode object by decoding *size* bytes of the encoded string *s* "
"using the given *mapping* object.  Return *NULL* if an exception was raised "
"by the codec. If *mapping* is *NULL* latin-1 decoding will be done. Else it "
"can be a dictionary mapping byte or a unicode string, which is treated as a "
"lookup table. Byte values greater that the length of the string and U+FFFE "
"\"characters\" are treated as \"undefined mapping\"."
msgstr ""
"エンコードされた *size* バイトの文字列 *s* から *mapping* に指定されたオブ"
"ジェクトを使って Unicode オブジェクトを生成します。codec が例外を送出した場合"
"には *NULL* を返します。もし、 *mapping* が *NULL* だった場合、latin-1 でデ"
"コードされます。それ以外の場合では、 *mapping* は byte に対する辞書マップ (訳"
"注: s に含まれる文字の unsigned な値を int 型でキーとして、値として変換対象"
"の Unicode 文字を表す Unicode 文字列になっているような辞書) か、ルックアップ"
"テーブルとして扱われる Unicode 文字列です。文字列 (訳注: mapping が Unicode "
"文字列として渡された場合) の長さより大きい byte 値や、(訳注: mappingにした"
"がって変換した結果が) U+FFFE \"characters\" になる Byte値は、\"定義されていな"
"い対応付け (undefined mapping)\" として扱われます。"

#: ../../c-api/unicode.rst:885
msgid "Allowed unicode string as mapping argument."
msgstr "mapping引数としてunicodeが使えるようになりました."

#: ../../c-api/unicode.rst:895
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given *size* using the given "
"*mapping* object and return a Python string object. Return *NULL* if an "
"exception was raised by the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファを *mapping* に"
"指定されたオブジェクトを使ってエンコードし、 Python 文字列オブジェクトにして"
"返します。 codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:906
msgid ""
"Encode a Unicode object using the given *mapping* object and return the "
"result as Python string object.  Error handling is \"strict\".  Return "
"*NULL* if an exception was raised by the codec."
msgstr ""
"Unicode オブジェクトを *mapping* に指定されたオブジェクトを使ってエンコード"
"し、結果を Python 文字列オブジェクトとして返します。エラー処理は \"strict\" "
"です。 codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:910
msgid "The following codec API is special in that maps Unicode to Unicode."
msgstr ""
"以下の codec API は Unicode から Unicode への対応付けを行う特殊なものです。"

#: ../../c-api/unicode.rst:915
msgid ""
"Translate a :c:type:`Py_UNICODE` buffer of the given *size* by applying a "
"character mapping *table* to it and return the resulting Unicode object.  "
"Return *NULL* when an exception was raised by the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` バッファを、文字変換マッ"
"プ *table* を適用して変換し、変換結果を Unicode オブジェクトで返します。 "
"codec が例外を発行した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:919
msgid ""
"The *mapping* table must map Unicode ordinal integers to Unicode ordinal "
"integers or ``None`` (causing deletion of the character)."
msgstr ""
"*mapping* テーブルは、Unicode 序数を表す整数を Unicode 序数を表す整数または "
"``None`` (その文字を削除する) に対応付けなければなりません。"

#: ../../c-api/unicode.rst:922 ../../c-api/unicode.rst:1024
msgid ""
"Mapping tables need only provide the :meth:`__getitem__` interface; "
"dictionaries and sequences work well.  Unmapped character ordinals (ones "
"which cause a :exc:`LookupError`) are left untouched and are copied as-is."
msgstr ""
"対応付けテーブルが提供する必要があるメソッドは :meth:`__getitem__` インタ"
"フェースだけです; 従って、辞書やシーケンス型を使ってもうまく動作します。対応"
"付けを行っていない (:exc:`LookupError` を起こすような) 文字序数に対しては、変"
"換は行わず、そのままコピーします。"

#: ../../c-api/unicode.rst:932
msgid "MBCS codecs for Windows"
msgstr "Windows 用の MBCS codec"

#: ../../c-api/unicode.rst:934
msgid ""
"These are the MBCS codec APIs. They are currently only available on Windows "
"and use the Win32 MBCS converters to implement the conversions.  Note that "
"MBCS (or DBCS) is a class of encodings, not just one.  The target encoding "
"is defined by the user settings on the machine running the codec."
msgstr ""
"以下は MBCS codec の API です。この codec は現在のところ、 Windows 上だけで利"
"用でき、変換の実装には Win32 MBCS 変換機構 (Win32 MBCS converter) を使ってい"
"ます。 MBCS (または DBCS) はエンコード方式の種類 (class) を表す言葉で、単一の"
"エンコード方式を表すわけでなないので注意してください。利用されるエンコード方"
"式 (target encoding) は、 codec を動作させているマシン上のユーザ設定で定義さ"
"れています。"

#: ../../c-api/unicode.rst:942
msgid ""
"Create a Unicode object by decoding *size* bytes of the MBCS encoded string "
"*s*. Return *NULL* if an exception was raised by the codec."
msgstr ""
"MBCS でエンコードされた *size* バイトの文字列 *s* から Unicode オブジェクトを"
"生成します。codec が例外を送出した場合には *NULL* を返します。"

#: ../../c-api/unicode.rst:952
msgid ""
"If *consumed* is *NULL*, behave like :c:func:`PyUnicode_DecodeMBCS`. If "
"*consumed* is not *NULL*, :c:func:`PyUnicode_DecodeMBCSStateful` will not "
"decode trailing lead byte and the number of bytes that have been decoded "
"will be stored in *consumed*."
msgstr ""
"*consumed* が *NULL* のとき、 :c:func:`PyUnicode_DecodeMBCS` と同じ動作をしま"
"す。 *consumed* が *NULL* でないとき、 :c:func:"
"`PyUnicode_DecodeMBCSStateful` は文字列の最後にあるマルチバイト文字の前半バイ"
"トをデコードせず、 *consumed* にデコードしたバイト数を格納します。"

#: ../../c-api/unicode.rst:962
msgid ""
"Encode the :c:type:`Py_UNICODE` buffer of the given *size* using MBCS and "
"return a Python string object.  Return *NULL* if an exception was raised by "
"the codec."
msgstr ""
"*size* で指定された長さを持つ :c:type:`Py_UNICODE` 型バッファを MBCS でエン"
"コードし、 Python 文字列オブジェクトにして返します。 codec が例外を送出した場"
"合には *NULL* を返します。"

#: ../../c-api/unicode.rst:972
msgid ""
"Encode a Unicode object using MBCS and return the result as Python string "
"object.  Error handling is \"strict\".  Return *NULL* if an exception was "
"raised by the codec."
msgstr ""
"MBCS で Unicode オブジェクトをエンコードし、結果を Python 文字列オブジェクト"
"として返します。エラー処理は \"strict\" です。 codec が例外を送出した場合に"
"は *NULL* を返します。"

#: ../../c-api/unicode.rst:978
msgid "Methods & Slots"
msgstr "メソッドとスロット"

#: ../../c-api/unicode.rst:983
msgid "Methods and Slot Functions"
msgstr "メソッドおよびスロット関数 (slot function)"

#: ../../c-api/unicode.rst:985
msgid ""
"The following APIs are capable of handling Unicode objects and strings on "
"input (we refer to them as strings in the descriptions) and return Unicode "
"objects or integers as appropriate."
msgstr ""
"以下の API は Unicode オブジェクトおよび文字列を入力に取り (説明では、どちら"
"も文字列と表記しています)、場合に応じて Unicode オブジェクトか整数を返す機能"
"を持っています。"

#: ../../c-api/unicode.rst:989
msgid "They all return *NULL* or ``-1`` if an exception occurs."
msgstr ""
"これらの関数は全て、例外が発生した場合には *NULL* または ``-1`` を返します。"

#: ../../c-api/unicode.rst:994
msgid "Concat two strings giving a new Unicode string."
msgstr "二つの文字列を結合して、新たな Unicode 文字列を生成します。"

#: ../../c-api/unicode.rst:999
msgid ""
"Split a string giving a list of Unicode strings.  If *sep* is *NULL*, "
"splitting will be done at all whitespace substrings.  Otherwise, splits "
"occur at the given separator.  At most *maxsplit* splits will be done.  If "
"negative, no limit is set.  Separators are not included in the resulting "
"list."
msgstr ""
"Unicode 文字列のリストを分割して、 Unicode 文字列からなるリストを返します。 "
"*sep* が *NULL* の場合、全ての空白文字を使って分割を行います。それ以外の場"
"合、指定された文字を使って分割を行います。最大で *maxsplit* 個までの分割を行"
"います。 *maxsplit* が負ならば分割数に制限を設けません。分割結果のリスト内に"
"は分割文字は含みません。"

#: ../../c-api/unicode.rst:1004
msgid ""
"This function used an :c:type:`int` type for *maxsplit*. This might require "
"changes in your code for properly supporting 64-bit systems."
msgstr ""
"この関数は以前は *maxsplit* の型に :c:type:`int` を利用していました。この変更"
"により、 64bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/unicode.rst:1011
msgid ""
"Split a Unicode string at line breaks, returning a list of Unicode strings. "
"CRLF is considered to be one line break.  If *keepend* is ``0``, the Line "
"break characters are not included in the resulting strings."
msgstr ""
"Unicode 文字列を改行文字で区切り、Unicode 文字列からなるリストを返します。\n"
"CRLF は一個の改行文字とみなします。\n"
"*keepend* が ``0`` の場合、分割結果のリスト内に改行文字を含めません。"

#: ../../c-api/unicode.rst:1018
msgid ""
"Translate a string by applying a character mapping table to it and return "
"the resulting Unicode object."
msgstr ""
"文字列に文字変換マップ *table* を適用して変換し、変換結果を Unicode オブジェ"
"クトで返します。"

#: ../../c-api/unicode.rst:1021
msgid ""
"The mapping table must map Unicode ordinal integers to Unicode ordinal "
"integers or ``None`` (causing deletion of the character)."
msgstr ""
"対応表は、Unicode 序数を表す整数を Unicode 序数を表す整数または ``None`` (そ"
"の文字を削除する) に対応付けなければなりません。"

#: ../../c-api/unicode.rst:1028
msgid ""
"*errors* has the usual meaning for codecs. It may be *NULL* which indicates "
"to use the default error handling."
msgstr ""
"*errors* は codecs で通常使われるのと同じ意味を持ちます。 *errors* は *NULL* "
"にしてもよく、デフォルトエラー処理の使用を意味します。"

#: ../../c-api/unicode.rst:1034
msgid ""
"Join a sequence of strings using the given *separator* and return the "
"resulting Unicode string."
msgstr ""
"指定した *separator* で文字列からなるシーケンスを連結 (join) し、連結結果を "
"Unicode 文字列で返します。"

#: ../../c-api/unicode.rst:1040
msgid ""
"Return ``1`` if *substr* matches ``str[start:end]`` at the given tail end "
"(*direction* == ``-1`` means to do a prefix match, *direction* == ``1`` a "
"suffix match), ``0`` otherwise. Return ``-1`` if an error occurred."
msgstr ""
"*substr* が ``str[start:end]`` の末端 (*direction* == ``-1`` は先頭一致、 "
"*direction* == ``1`` は末尾一致) でとマッチする場合に ``1`` を返し、それ以外"
"の場合には ``0`` を返します。\n"
"エラーが発生した時は ``-1`` を返します。"

#: ../../c-api/unicode.rst:1044 ../../c-api/unicode.rst:1058
msgid ""
"This function used an :c:type:`int` type for *start* and *end*. This might "
"require changes in your code for properly supporting 64-bit systems."
msgstr ""
"この関数は以前は *start*, *end* の型に :c:type:`int` を利用していました。この"
"変更により、 64bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/unicode.rst:1052
msgid ""
"Return the first position of *substr* in ``str[start:end]`` using the given "
"*direction* (*direction* == ``1`` means to do a forward search, *direction* "
"== ``-1`` a backward search).  The return value is the index of the first "
"match; a value of ``-1`` indicates that no match was found, and ``-2`` "
"indicates that an error occurred and an exception has been set."
msgstr ""
"``str[start:end]`` 中に *substr* が最初に出現する場所を返します。\n"
"このとき指定された検索方向 *direction* (*direction* == ``1`` は順方向検索、 "
"*direction* == ``-1`` は逆方向検索) で検索します。\n"
"戻り値は最初にマッチが見つかった場所のインデックスです; 戻り値 ``-1`` はマッ"
"チが見つからなかったことを表し、 ``-2`` はエラーが発生して例外情報が設定され"
"ていることを表します。"

#: ../../c-api/unicode.rst:1066
msgid ""
"Return the number of non-overlapping occurrences of *substr* in ``str[start:"
"end]``.  Return ``-1`` if an error occurred."
msgstr ""
"``str[start:end]`` に *substr* が重複することなく出現する回数を返します。エ"
"ラーが発生した場合には ``-1`` を返します。"

#: ../../c-api/unicode.rst:1069
msgid ""
"This function returned an :c:type:`int` type and used an :c:type:`int` type "
"for *start* and *end*. This might require changes in your code for properly "
"supporting 64-bit systems."
msgstr ""
"この関数は以前は *start*, *end* と戻り値の型に :c:type:`int` を利用していまし"
"た。この変更により、 64bit システムを正しくサポートするには修正が必要になりま"
"す。"

#: ../../c-api/unicode.rst:1077
msgid ""
"Replace at most *maxcount* occurrences of *substr* in *str* with *replstr* "
"and return the resulting Unicode object. *maxcount* == ``-1`` means replace "
"all occurrences."
msgstr ""
"*str* 中に出現する *substr* を最大で *maxcount* 個 *replstr* に置換し、置換結"
"果である Unicode オブジェクトを返します。\n"
"*maxcount* == ``-1`` にすると、文字列中に現れる全ての *substr* を置換します。"

#: ../../c-api/unicode.rst:1081
msgid ""
"This function used an :c:type:`int` type for *maxcount*. This might require "
"changes in your code for properly supporting 64-bit systems."
msgstr ""
"この関数は以前は *maxcount* の型に :c:type:`int` を利用していました。この変更"
"により、 64bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/unicode.rst:1088
msgid ""
"Compare two strings and return ``-1``, ``0``, ``1`` for less than, equal, "
"and greater than, respectively."
msgstr ""
"二つの文字列を比較して、左引数が右引数より小さい場合、左右引数が等価の場合、"
"左引数が右引数より大きい場合に対して、それぞれ ``-1``, ``0``, ``1`` を返しま"
"す。"

#: ../../c-api/unicode.rst:1094
msgid "Rich compare two unicode strings and return one of the following:"
msgstr "二つのunicode文字列を比較して、下のうちの一つを返します:"

#: ../../c-api/unicode.rst:1096
msgid "``NULL`` in case an exception was raised"
msgstr "``NULL`` を、例外が発生したときに返します。"

#: ../../c-api/unicode.rst:1097
msgid ":const:`Py_True` or :const:`Py_False` for successful comparisons"
msgstr ""
":const:`Py_True` もしくは :const:`Py_False` を、正しく比較できた時に返しま"
"す。"

#: ../../c-api/unicode.rst:1098
msgid ":const:`Py_NotImplemented` in case the type combination is unknown"
msgstr ""
":const:`Py_NotImplemented` を、 *left* と *right* のどちらかに対する :c:func:"
"`PyUnicode_FromObject` が失敗したときに返します。(原文: in case the type "
"combination is unknown)"

#: ../../c-api/unicode.rst:1100
msgid ""
"Note that :const:`Py_EQ` and :const:`Py_NE` comparisons can cause a :exc:"
"`UnicodeWarning` in case the conversion of the arguments to Unicode fails "
"with a :exc:`UnicodeDecodeError`."
msgstr ""
":const:`Py_EQ` と :const:`Py_NE` の比較は、引数からUnicodeへの変換が :exc:"
"`UnicodeDecodeError` で失敗した時に、 :exc:`UnicodeWarning` を発生する可能性"
"があることに注意してください。"

#: ../../c-api/unicode.rst:1104
msgid ""
"Possible values for *op* are :const:`Py_GT`, :const:`Py_GE`, :const:"
"`Py_EQ`, :const:`Py_NE`, :const:`Py_LT`, and :const:`Py_LE`."
msgstr ""
"*op* に入れられる値は、 :const:`Py_GT`, :const:`Py_GE`, :const:`Py_EQ`, :"
"const:`Py_NE`, :const:`Py_LT`, and :const:`Py_LE` のどれかです。"

#: ../../c-api/unicode.rst:1110
msgid ""
"Return a new string object from *format* and *args*; this is analogous to "
"``format % args``."
msgstr ""
"新たな文字列オブジェクトを *format* および *args* から生成して返します; この"
"メソッドは ``format % args`` のようなものです。"

#: ../../c-api/unicode.rst:1116
msgid ""
"Check whether *element* is contained in *container* and return true or false "
"accordingly."
msgstr ""
"*element* が *container* 内にあるか調べ、その結果に応じて真または偽を返しま"
"す。"

#: ../../c-api/unicode.rst:1119
msgid ""
"*element* has to coerce to a one element Unicode string. ``-1`` is returned "
"if there was an error."
msgstr ""
"*element* は単要素の Unicode 文字に型強制できなければなりません。エラーが生じ"
"た場合には ``-1`` を返します。"
