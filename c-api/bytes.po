# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Arihiro TAKASE, 2023
# tomo, 2023
# Taichi Haradaguchi, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Taichi Haradaguchi, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/bytes.rst:6
msgid "Bytes Objects"
msgstr "バイトオブジェクト"

#: ../../c-api/bytes.rst:8
msgid ""
"These functions raise :exc:`TypeError` when expecting a bytes parameter and "
"called with a non-bytes parameter."
msgstr ""
"下記の関数は、バイトオブジェクトを期待している引数にバイトオブジェクトでない"
"パラメタを指定して呼び出されると、 :exc:`TypeError` を送出します。"

#: ../../c-api/bytes.rst:16
msgid "This subtype of :c:type:`PyObject` represents a Python bytes object."
msgstr ""
"この :c:type:`PyObject` のサブタイプは、Python バイトオブジェクトを表します。"

#: ../../c-api/bytes.rst:21
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python bytes type; it "
"is the same object as :class:`bytes` in the Python layer."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは、Python バイト型を表します; "
"Pythonレイヤの :class:`bytes` と同じオブジェクトです。"

#: ../../c-api/bytes.rst:27
msgid ""
"Return true if the object *o* is a bytes object or an instance of a subtype "
"of the bytes type.  This function always succeeds."
msgstr ""
"オブジェクト *o* が bytes オブジェクトか bytes 型のサブタイプのインスタンスで"
"ある場合に真を返します。この関数は常に成功します。"

#: ../../c-api/bytes.rst:33
msgid ""
"Return true if the object *o* is a bytes object, but not an instance of a "
"subtype of the bytes type.  This function always succeeds."
msgstr ""
"オブジェクト *o* が bytes オブジェクトだが bytes 型のサブタイプのインスタンス"
"でない場合に真を返します。この関数は常に成功します。"

#: ../../c-api/bytes.rst:39
msgid ""
"Return a new bytes object with a copy of the string *v* as value on success, "
"and ``NULL`` on failure.  The parameter *v* must not be ``NULL``; it will "
"not be checked."
msgstr ""
"成功時に、文字列 *v* のコピーを値とする新しいバイトオブジェクトを返し、失敗時"
"に ``NULL`` を返します。\n"
"引数 *v* は ``NULL`` であってはなりません; そのチェックは行われません。"

#: ../../c-api/bytes.rst:46
msgid ""
"Return a new bytes object with a copy of the string *v* as value and length "
"*len* on success, and ``NULL`` on failure.  If *v* is ``NULL``, the contents "
"of the bytes object are uninitialized."
msgstr ""
"成功時に、文字列 *v* のコピーを値とする長さ *len* の新しいバイトオブジェクト"
"を返し、失敗時に ``NULL`` を返します。\n"
"引数 *v* が ``NULL`` の場合、バイトオブジェクトの中身は初期化されていません。"

#: ../../c-api/bytes.rst:53
msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number of "
"arguments, calculate the size of the resulting Python bytes object and "
"return a bytes object with the values formatted into it.  The variable "
"arguments must be C types and must correspond exactly to the format "
"characters in the *format* string.  The following format characters are "
"allowed:"
msgstr ""
"C 関数の :c:func:`printf` スタイルの *format* 文字列と可変長の引数を取り、結"
"果のPython バイトオブジェクトのサイズを計算し、値を指定した書式にしたがって変"
"換したバイトオブジェクトを返します。可変長の引数は C のデータ型でなければなら"
"ず、 *format* 文字列中のフォーマット文字と厳密に関連付けられていなければなり"
"ません。下記のフォーマット文字が使用できます:"

#: ../../c-api/bytes.rst:65
msgid "Format Characters"
msgstr "書式指定文字"

#: ../../c-api/bytes.rst:65
msgid "Type"
msgstr "型"

#: ../../c-api/bytes.rst:65
msgid "Comment"
msgstr "備考"

#: ../../c-api/bytes.rst:67
msgid "``%%``"
msgstr "``%%``"

#: ../../c-api/bytes.rst:67
msgid "*n/a*"
msgstr "*n/a*"

#: ../../c-api/bytes.rst:67
msgid "The literal % character."
msgstr "リテラルの % 文字"

#: ../../c-api/bytes.rst:69
msgid "``%c``"
msgstr "``%c``"

#: ../../c-api/bytes.rst:69 ../../c-api/bytes.rst:72 ../../c-api/bytes.rst:90
#: ../../c-api/bytes.rst:93
msgid "int"
msgstr "int"

#: ../../c-api/bytes.rst:69
msgid "A single byte, represented as a C int."
msgstr "C の整数型で表現される単一のバイト。"

#: ../../c-api/bytes.rst:72
msgid "``%d``"
msgstr "``%d``"

#: ../../c-api/bytes.rst:72
msgid "Equivalent to ``printf(\"%d\")``. [1]_"
msgstr "``printf(\"%d\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:75
msgid "``%u``"
msgstr "``%u``"

#: ../../c-api/bytes.rst:75
msgid "unsigned int"
msgstr "unsigned int"

#: ../../c-api/bytes.rst:75
msgid "Equivalent to ``printf(\"%u\")``. [1]_"
msgstr "``printf(\"%u\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:78
msgid "``%ld``"
msgstr "``%ld``"

#: ../../c-api/bytes.rst:78
msgid "long"
msgstr "long"

#: ../../c-api/bytes.rst:78
msgid "Equivalent to ``printf(\"%ld\")``. [1]_"
msgstr "``printf(\"%ld\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:81
msgid "``%lu``"
msgstr "``%lu``"

#: ../../c-api/bytes.rst:81
msgid "unsigned long"
msgstr "unsigned long"

#: ../../c-api/bytes.rst:81
msgid "Equivalent to ``printf(\"%lu\")``. [1]_"
msgstr "``printf(\"%lu\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:84
msgid "``%zd``"
msgstr "``%zd``"

#: ../../c-api/bytes.rst:84
msgid ":c:type:`\\ Py_ssize_t`"
msgstr ":c:type:`\\ Py_ssize_t`"

#: ../../c-api/bytes.rst:84
msgid "Equivalent to ``printf(\"%zd\")``. [1]_"
msgstr "``printf(\"%zd\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:87
msgid "``%zu``"
msgstr "``%zu``"

#: ../../c-api/bytes.rst:87
msgid "size_t"
msgstr "size_t"

#: ../../c-api/bytes.rst:87
msgid "Equivalent to ``printf(\"%zu\")``. [1]_"
msgstr "``printf(\"%zu\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:90
msgid "``%i``"
msgstr "``%i``"

#: ../../c-api/bytes.rst:90
msgid "Equivalent to ``printf(\"%i\")``. [1]_"
msgstr "``printf(\"%i\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:93
msgid "``%x``"
msgstr "``%x``"

#: ../../c-api/bytes.rst:93
msgid "Equivalent to ``printf(\"%x\")``. [1]_"
msgstr "``printf(\"%x\")`` と同等。 [1]_"

#: ../../c-api/bytes.rst:96
msgid "``%s``"
msgstr "``%s``"

#: ../../c-api/bytes.rst:96
msgid "const char\\*"
msgstr "const char\\*"

#: ../../c-api/bytes.rst:96
msgid "A null-terminated C character array."
msgstr "null で終端された C の文字列。"

#: ../../c-api/bytes.rst:99
msgid "``%p``"
msgstr "``%p``"

#: ../../c-api/bytes.rst:99
msgid "const void\\*"
msgstr "const void\\*"

#: ../../c-api/bytes.rst:99
msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal "
"``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""
"C ポインタの 16 進表記。``printf(\"%p\")`` とほとんど同じですが、プラット"
"フォームにおける ``printf`` の定義に関わりなく先頭にリテラル ``0x`` が付きま"
"す。"

#: ../../c-api/bytes.rst:108
msgid ""
"An unrecognized format character causes all the rest of the format string to "
"be copied as-is to the result object, and any extra arguments discarded."
msgstr ""
"識別できない書式指定文字があった場合、残りの書式文字列はそのまま結果のオブ"
"ジェクトにコピーされ、残りの引数は無視されます。"

#: ../../c-api/bytes.rst:111
msgid ""
"For integer specifiers (d, u, ld, lu, zd, zu, i, x): the 0-conversion flag "
"has effect even when a precision is given."
msgstr ""
"整数指定子 (d, u, ld, lu, zd, zu, i, x): 精度が与えられていても、0指定子は有"
"効です。"

#: ../../c-api/bytes.rst:117
msgid ""
"Identical to :c:func:`PyBytes_FromFormat` except that it takes exactly two "
"arguments."
msgstr ""
"ちょうど２つの引数を取ることを除いて、 :c:func:`PyBytes_FromFormat` と同じで"
"す。"

#: ../../c-api/bytes.rst:123
msgid ""
"Return the bytes representation of object *o* that implements the buffer "
"protocol."
msgstr "バッファプロトコルを実装するオブジェクト *o* のバイト表現を返します。"

#: ../../c-api/bytes.rst:129
msgid "Return the length of the bytes in bytes object *o*."
msgstr "バイトオブジェクト *o* のバイト単位の長さを返します。"

#: ../../c-api/bytes.rst:134
msgid "Similar to :c:func:`PyBytes_Size`, but without error checking."
msgstr ":c:func:`PyBytes_Size` に似ていますが、エラーチェックを行いません。"

#: ../../c-api/bytes.rst:139
msgid ""
"Return a pointer to the contents of *o*.  The pointer refers to the internal "
"buffer of *o*, which consists of ``len(o) + 1`` bytes.  The last byte in the "
"buffer is always null, regardless of whether there are any other null "
"bytes.  The data must not be modified in any way, unless the object was just "
"created using ``PyBytes_FromStringAndSize(NULL, size)``. It must not be "
"deallocated.  If *o* is not a bytes object at all, :c:func:"
"`PyBytes_AsString` returns ``NULL`` and raises :exc:`TypeError`."
msgstr ""
"*o* の中身へのポインタを返します。\n"
"ポインタは、 ``len(o) + 1`` バイトからなる *o* の内部バッファを参照します。\n"
"他に null のバイトがあるかどうかにかかわらず、バッファの最後のバイトは必ず "
"null になります。\n"
"``PyBytes_FromStringAndSize(NULL, size)`` で生成された場合を除いて、データを"
"修正してはなりません。\n"
"またポインタを解放（deallocated）してはなりません。\n"
"もし、 *o* が bytes オブジェクトでなければ、 :c:func:`PyBytes_AsString` は "
"``NULL`` を返し :exc:`TypeError` を送出します。"

#: ../../c-api/bytes.rst:151
msgid "Similar to :c:func:`PyBytes_AsString`, but without error checking."
msgstr ""
":c:func:`PyBytes_AsString` に似ていますが、エラーチェックを行いません。"

#: ../../c-api/bytes.rst:156
msgid ""
"Return the null-terminated contents of the object *obj* through the output "
"variables *buffer* and *length*. Returns ``0`` on success."
msgstr ""

#: ../../c-api/bytes.rst:160
msgid ""
"If *length* is ``NULL``, the bytes object may not contain embedded null "
"bytes; if it does, the function returns ``-1`` and a :exc:`ValueError` is "
"raised."
msgstr ""
"*length* の値が ``NULL`` の場合、バイトオブジェクトが  null バイトを含まない"
"可能性があります。その場合、関数は ``-1`` を返し、 :exc:`ValueError` を送出し"
"ます。"

#: ../../c-api/bytes.rst:164
msgid ""
"The buffer refers to an internal buffer of *obj*, which includes an "
"additional null byte at the end (not counted in *length*).  The data must "
"not be modified in any way, unless the object was just created using "
"``PyBytes_FromStringAndSize(NULL, size)``.  It must not be deallocated.  If "
"*obj* is not a bytes object at all, :c:func:`PyBytes_AsStringAndSize` "
"returns ``-1`` and raises :exc:`TypeError`."
msgstr ""
"buffer は *obj* の内部バッファを参照していて、これには末尾の null バイトも含"
"んでいます (これは *length* には数えられません)。\n"
"オブジェクトが ``PyBytes_FromStringAndSize(NULL, size)`` で生成された場合を除"
"いて、何があってもデータを改変してはいけません。\n"
"オブジェクトを解放 (deallocate) してもいけません。\n"
"*obj* が bytes オブジェクトでなかった場合は、 :c:func:"
"`PyBytes_AsStringAndSize` は ``-1`` を返し :exc:`TypeError` を送出します。"

#: ../../c-api/bytes.rst:171
msgid ""
"Previously, :exc:`TypeError` was raised when embedded null bytes were "
"encountered in the bytes object."
msgstr ""
"以前は bytes オブジェクトにヌルバイトが埋め込まれていたときに :exc:"
"`TypeError` を送出していました。"

#: ../../c-api/bytes.rst:178
msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*; the caller will own the new reference.  The reference "
"to the old value of *bytes* will be stolen.  If the new object cannot be "
"created, the old reference to *bytes* will still be discarded and the value "
"of *\\*bytes* will be set to ``NULL``; the appropriate exception will be set."
msgstr ""
"*newpart* の内容を *bytes* の後ろに連結した新しいバイトオブジェクトを "
"*\\*bytes* に生成します。呼び出し側は新しい参照を所有します。\n"
"*bytes* の古い値の参照は盗まれます。\n"
"もし新しいオブジェクトが生成できない場合、古い *bytes* の参照は放棄され、 "
"*\\*bytes* の値は ``NULL`` に設定されます; 適切な例外が設定されます。"

#: ../../c-api/bytes.rst:187
msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*.  This version releases the :term:`strong reference` to "
"*newpart* (i.e. decrements its reference count)."
msgstr ""

#: ../../c-api/bytes.rst:194
msgid ""
"Resize a bytes object. *newsize* will be the new length of the bytes object. "
"You can think of it as creating a new bytes object and destroying the old "
"one, only more efficiently. Pass the address of an existing bytes object as "
"an lvalue (it may be written into), and the new size desired.  On success, "
"*\\*bytes* holds the resized bytes object and ``0`` is returned; the address "
"in *\\*bytes* may differ from its input value.  If the reallocation fails, "
"the original bytes object at *\\*bytes* is deallocated, *\\*bytes* is set to "
"``NULL``, :exc:`MemoryError` is set, and ``-1`` is returned."
msgstr ""

#: ../../c-api/bytes.rst:11
msgid "object"
msgstr "object"

#: ../../c-api/bytes.rst:11
msgid "bytes"
msgstr "bytes"
