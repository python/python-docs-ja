# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Arihiro TAKASE, 2017
# tomo, 2020
# Tetsuo Koyama <tkoyama010@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 12:40+0000\n"
"PO-Revision-Date: 2017-02-16 17:37+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/number.rst:6
msgid "Number Protocol"
msgstr "数値型プロトコル (number protocol)"

#: ../../c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr ""
"オブジェクト *o* が数値型プロトコルを提供している場合に ``1`` を返し、そうでないときには偽を返します。この関数呼び出しは常に成功します。"

#: ../../c-api/number.rst:14
msgid "Returns ``1`` if *o* is an index integer."
msgstr "*o* がインデックス整数だった場合、 ``1`` を返します。"

#: ../../c-api/number.rst:20
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  This is"
" the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"成功すると *o1* と *o2* を加算した結果を返し、失敗すると ``NULL`` を返します。Python の式 ``o1 + o2`` "
"と同じです。"

#: ../../c-api/number.rst:26
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr ""
"成功すると *o1* から *o2* を減算した結果を返し、失敗すると ``NULL`` を返します。Python の式 ``o1 - o2`` "
"と同じです。"

#: ../../c-api/number.rst:32
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 * o2``."
msgstr ""
"成功すると *o1* と *o2* を乗算した結果を返し、失敗すると ``NULL`` を返します。Python の式 ``o1 * o2`` "
"と同じです。"

#: ../../c-api/number.rst:38
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on"
" failure.  This is the equivalent of the Python expression ``o1 @ o2``."
msgstr ""
"成功すると *o1* と *o2* を行列乗算した結果を返し、失敗すると ``NULL`` を返します。\n"
"Python の式 ``o1 @ o2`` と同じです。"

#: ../../c-api/number.rst:46
msgid ""
"Return the floor of *o1* divided by *o2*, or ``NULL`` on failure.  This is "
"equivalent to the \"classic\" division of integers."
msgstr ""
"成功すると *o1* を *o2* で除算した切捨て値を返し、失敗すると ``NULL`` を返します。\"旧仕様の\" 整数間での除算と同じです。"

#: ../../c-api/number.rst:52
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided"
" by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to"
" represent all real numbers in base two.  This function can return a "
"floating point value when passed two integers."
msgstr ""
"成功すると、数学的な *o1* の *o2* による除算値に対する妥当な近似 (reasonable approximation) を返し、失敗すると "
"``NULL`` を返します。全ての実数を 2 を基数として表現するのは不可能なため、二進の浮動小数点数は \"近似値\" "
"しか表現できません。このため、戻り値も近似になります。この関数に二つの整数を渡した際、浮動小数点の値を返すことがあります。"

#: ../../c-api/number.rst:61
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 % o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した剰余を返し、失敗すると ``NULL`` を返します。Python の式 ``o1 % o2`` "
"と同じです。"

#: ../../c-api/number.rst:69
msgid ""
"See the built-in function :func:`divmod`. Returns ``NULL`` on failure.  This"
" is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""
"組み込み関数 :func:`divmod` を参照してください。失敗すると ``NULL`` を返します。 Python の式 ``divmod(o1,"
" o2)`` と同じです。"

#: ../../c-api/number.rst:77
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  This is"
" the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing ``NULL`` for *o3* would cause an illegal memory access)."
msgstr ""
"組み込み関数 :func:`pow` を参照してください。失敗すると ``NULL`` を返します。 Python の式 ``pow(o1, o2, "
"o3)`` と同じです。 *o3* はオプションです。 *o3* を無視させたいなら、 :c:data:`Py_None` を入れてください (*o3*"
" に ``NULL`` を渡すと、不正なメモリアクセスを引き起こすことがあります)。"

#: ../../c-api/number.rst:85
msgid ""
"Returns the negation of *o* on success, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr "成功すると *o* の符号反転を返し、失敗すると ``NULL`` を返します。Python の式 ``-o`` と同じです。"

#: ../../c-api/number.rst:91
msgid ""
"Returns *o* on success, or ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``+o``."
msgstr "成功すると *o* を返し、失敗すると ``NULL`` を返します。Python の式 ``+o`` と同じです。"

#: ../../c-api/number.rst:99
msgid ""
"Returns the absolute value of *o*, or ``NULL`` on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr "成功すると *o* の絶対値を返し、失敗すると ``NULL`` を返します。Python の式 ``abs(o)`` と同じです。"

#: ../../c-api/number.rst:105
msgid ""
"Returns the bitwise negation of *o* on success, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``~o``."
msgstr ""
"成功すると *o* のビット単位反転 (bitwise negation) を返し、失敗すると ``NULL`` を返します。Python の式 "
"``~o`` と同じです。"

#: ../../c-api/number.rst:111
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr ""
"成功すると *o1* を *o2* だけ左シフトした結果を返し、失敗すると ``NULL`` を返します。Python の式 ``o1 << o2`` "
"と同じです。"

#: ../../c-api/number.rst:117
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on"
" failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr ""
"成功すると *o1* を *o2* だけ右シフトした結果を返し、失敗すると ``NULL`` を返します。Python の式 ``o1 >> o2`` "
"と同じです。"

#: ../../c-api/number.rst:123
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理積 (bitwise and)\" を返し、失敗すると ``NULL`` "
"を返します。Python の式 ``o1 & o2`` と同じです。"

#: ../../c-api/number.rst:129
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL``"
" on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr ""
"成功すると *o1* と *o2* の  \"ビット単位排他的論理和 (bitwise exclusive or)\" を返し、失敗すると "
"``NULL`` を返します。Python の式 ``o1 ^ o2`` と同じです。"

#: ../../c-api/number.rst:135
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理和 (bitwise or)\" を返し失敗すると ``NULL`` を返します。Python"
" の式 ``o1 | o2`` と同じです。"

#: ../../c-api/number.rst:141
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""
"成功すると *o1* と *o2* を加算した結果を返し、失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 += o2`` と同じです。"

#: ../../c-api/number.rst:148
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 -= o2``."
msgstr ""
"成功すると *o1* から *o2* を減算した結果を返し、失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 -= o2`` と同じです。"

#: ../../c-api/number.rst:155
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 *= o2``."
msgstr ""
"成功すると *o1* と *o2* を乗算した結果を返し、失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 *= o2`` と同じです。"

#: ../../c-api/number.rst:162
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on"
" failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 @= o2``."
msgstr ""
"成功すると *o1* と *o2* を行列乗算した結果を返し、失敗すると ``NULL`` を返します。\n"
"*o1* が *in-place* 演算をサポートする場合、 in-place 演算を行います。\n"
"Python の文 ``o1 @= o2`` と同じです。"

#: ../../c-api/number.rst:171
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した切捨て値を返し、失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 //= o2`` と同じです。"

#: ../../c-api/number.rst:178
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided"
" by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to"
" represent all real numbers in base two.  This function can return a "
"floating point value when passed two integers.  The operation is done *in-"
"place* when *o1* supports it."
msgstr ""
"成功すると、数学的な *o1* の *o2* による除算値に対する妥当な近似 (reasonable approximation) を返し、失敗すると "
"``NULL`` を返します。全ての実数を 2 を基数として表現するのは不可能なため、二進の浮動小数点数は \"近似値\" "
"しか表現できません。このため、戻り値も近似になります。この関数に二つの整数を渡した際、浮動小数点の値を返すことがあります。*o1* が *in-"
"place* 演算をサポートする場合、in-place 演算を行います。"

#: ../../c-api/number.rst:187
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  The"
" operation is done *in-place* when *o1* supports it.  This is the equivalent"
" of the Python statement ``o1 %= o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した剰余を返し、, 失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 %= o2`` と同じです。"

#: ../../c-api/number.rst:196
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an "
"in-place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored,"
" pass :c:data:`Py_None` in its place (passing ``NULL`` for *o3* would cause "
"an illegal memory access)."
msgstr ""
"組み込み関数 :func:`pow` を参照してください。失敗すると ``NULL`` を返します。 *o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。この関数は *o3* が :c:data:`Py_None` の場合は Python 文 "
"``o1 **= o2`` と同じで、それ以外の場合は ``pow(o1, o2, o3)`` の in-place 版です。 *o3* "
"を無視させたいなら、 :c:data:`Py_None` を入れてください (*o3* に ``NULL`` "
"を渡すと、不正なメモリアクセスを引き起こすことがあります)。"

#: ../../c-api/number.rst:205
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""
"成功すると *o1* を *o2* だけ左シフトした結果を返し、失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 <<= o2`` と同じです。"

#: ../../c-api/number.rst:212
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on"
" failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""
"成功すると *o1* を *o2* だけ右シフトした結果を返し、失敗すると ``NULL`` を返します。*o1* が *in-place* "
"演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 >>= o2`` と同じです。"

#: ../../c-api/number.rst:219
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理積 (bitwise and)\" を返し、失敗すると ``NULL`` を返します。*o1*"
" が *in-place* 演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 &= o2`` と同じです。"

#: ../../c-api/number.rst:226
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL``"
" on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位排他的論理和  (bitwise exclusive or)\" を返し、失敗すると "
"``NULL`` を返します。*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。Python の文 ``o1"
" ^= o2`` と同じです。"

#: ../../c-api/number.rst:233
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理和 (bitwise or)\" を返し失敗すると ``NULL`` を返します。*o1* が"
" *in-place* 演算をサポートする場合、in-place 演算を行います。Python の文 ``o1 |= o2`` と同じです。"

#: ../../c-api/number.rst:242
msgid ""
"Returns the *o* converted to an integer object on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``int(o)``."
msgstr ""
"成功すると *o* を整数に変換したものを返し、失敗すると ``NULL`` を返します。Python の式 ``int(o)`` と同じです。"

#: ../../c-api/number.rst:250
msgid ""
"Returns the *o* converted to a float object on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr ""
"成功すると *o* を浮動小数点数に変換したものを返し、失敗すると ``NULL`` を返します。Python の式 ``float(o)`` "
"と同じです。"

#: ../../c-api/number.rst:256
msgid ""
"Returns the *o* converted to a Python int on success or ``NULL`` with a "
":exc:`TypeError` exception raised on failure."
msgstr ""
"*o* をPythonのint型に変換し、成功したらその値を返します。失敗したら ``NULL`` が返され、 :exc:`TypeError` "
"例外が送出されます。"

#: ../../c-api/number.rst:262
msgid ""
"Returns the integer *n* converted to base *base* as a string.  The *base* "
"argument must be one of 2, 8, 10, or 16.  For base 2, 8, or 16, the returned"
" string is prefixed with a base marker of ``'0b'``, ``'0o'``, or ``'0x'``, "
"respectively.  If *n* is not a Python int, it is converted with "
":c:func:`PyNumber_Index` first."
msgstr ""
"*base* 進数に変換された整数 *n* を文字列として返します。 *base* 引数は2, 8, 10または16のいずれかでなければなりません。  "
"基数2、8、16について、返される文字列の先頭には基数マーカー ``'0b'`` 、 ``'0o'`` または ``'0x'`` "
"が、それぞれ付与されます。  もし *n* が Python のint型でなければ、まず :c:func:`PyNumber_Index` "
"で変換されます。"

#: ../../c-api/number.rst:271
msgid ""
"Returns *o* converted to a Py_ssize_t value if *o* can be interpreted as an "
"integer.  If the call fails, an exception is raised and ``-1`` is returned."
msgstr ""
"*o* を整数として解釈可能だった場合、Py_ssize_t型の値に変換して返します。呼び出しが失敗したら、例外が送出され、 ``-1`` "
"が返されます。"

#: ../../c-api/number.rst:274
msgid ""
"If *o* can be converted to a Python int but the attempt to convert to a "
"Py_ssize_t value would raise an :exc:`OverflowError`, then the *exc* "
"argument is the type of exception that will be raised (usually "
":exc:`IndexError` or :exc:`OverflowError`).  If *exc* is ``NULL``, then the "
"exception is cleared and the value is clipped to ``PY_SSIZE_T_MIN`` for a "
"negative integer or ``PY_SSIZE_T_MAX`` for a positive integer."
msgstr ""
"もし *o* がPythonのintに変換できたのに、Py_ssize_tへの変換が :exc:`OverflowError` になる場合は、 "
"*exc* 引数で渡された型 (普通は :exc:`IndexError` か :exc:`OverflowError`) の例外を送出します。もし、 "
"*exc* が ``NULL`` なら、例外はクリアされて、値が負の場合は ``PY_SSIZE_T_MIN`` へ、正の場合は "
"``PY_SSIZE_T_MAX`` へと制限されます。"

#: ../../c-api/number.rst:284
msgid ""
"Returns ``1`` if *o* is an index integer (has the nb_index slot of  the "
"tp_as_number structure filled in), and ``0`` otherwise. This function always"
" succeeds."
msgstr ""
"*o* がインデックス整数である場合 (tp_as_number構造体のnb_indexスロットが埋まっている場合) に ``1`` を返し、そうでない場合に ``0`` を返します。\n"
"この関数は常に成功します。"
