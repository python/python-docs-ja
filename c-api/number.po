# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2018-01-20 20:55+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/number.rst:6
msgid "Number Protocol"
msgstr "数値型プロトコル (number protocol)"

#: ../../c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr ""
"オブジェクト *o* が数値型プロトコルを提供している場合に ``1`` を返し、そうで"
"ないときには偽を返します。この関数呼び出しは常に成功します。"

#: ../../c-api/number.rst:17
msgid ""
"Returns the result of adding *o1* and *o2*, or *NULL* on failure.  This is "
"the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"成功すると *o1* と *o2* を加算した結果を返し、失敗すると *NULL* を返します。"
"Python の式 ``o1 + o2`` と同じです。"

#: ../../c-api/number.rst:23
msgid ""
"Returns the result of subtracting *o2* from *o1*, or *NULL* on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr ""
"成功すると *o1* から *o2* を減算した結果を返し、失敗すると *NULL* を返しま"
"す。Python の式 ``o1 - o2`` と同じです。"

#: ../../c-api/number.rst:29
msgid ""
"Returns the result of multiplying *o1* and *o2*, or *NULL* on failure.  This "
"is the equivalent of the Python expression ``o1 * o2``."
msgstr ""
"成功すると *o1* と *o2* を乗算した結果を返し、失敗すると *NULL* を返します。"
"Python の式 ``o1 * o2`` と同じです。"

#: ../../c-api/number.rst:35
msgid ""
"Returns the result of dividing *o1* by *o2*, or *NULL* on failure.  This is "
"the equivalent of the Python expression ``o1 / o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した結果を返し, 失敗すると *NULL* を返します。 "
"Python の式 ``o1 / o2`` と同じです。"

#: ../../c-api/number.rst:41
msgid ""
"Return the floor of *o1* divided by *o2*, or *NULL* on failure.  This is "
"equivalent to the \"classic\" division of integers."
msgstr ""
"成功すると *o1* を *o2* で除算した切捨て値を返し、失敗すると *NULL* を返しま"
"す。\"旧仕様の\" 整数間での除算と同じです。"

#: ../../c-api/number.rst:49
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or *NULL* on failure.  The return value is \"approximate\" because "
"binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers."
msgstr ""
"成功すると、数学的な *o1* の *o2* による除算値に対する妥当な近似 (reasonable "
"approximation) を返し、失敗すると *NULL* を返します。全ての実数を 2 を基数と"
"して表現するのは不可能なため、二進の浮動小数点数は \"近似値\" しか表現できま"
"せん。このため、戻り値も近似になります。この関数に二つの整数を渡した際、浮動"
"小数点の値を返すことがあります。"

#: ../../c-api/number.rst:60
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or *NULL* on failure.  This "
"is the equivalent of the Python expression ``o1 % o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した剰余を返し、失敗すると *NULL* を返します。"
"Python の式 ``o1 % o2`` と同じです。"

#: ../../c-api/number.rst:68
msgid ""
"See the built-in function :func:`divmod`. Returns *NULL* on failure.  This "
"is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""
"組み込み関数 :func:`divmod` を参照してください。失敗すると *NULL* を返しま"
"す。 Python の式 ``divmod(o1, o2)`` と同じです。"

#: ../../c-api/number.rst:76
msgid ""
"See the built-in function :func:`pow`. Returns *NULL* on failure.  This is "
"the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing *NULL* for *o3* would cause an illegal memory access)."
msgstr ""
"組み込み関数 :func:`pow` を参照してください。失敗すると *NULL* を返します。 "
"Python の式 ``pow(o1, o2, o3)`` と同じです。 *o3* はオプションです。 *o3* を"
"無視させたいなら、 :c:data:`Py_None` を入れてください (*o3* に *NULL* を渡す"
"と、不正なメモリアクセスを引き起こすことがあります)。"

#: ../../c-api/number.rst:84
msgid ""
"Returns the negation of *o* on success, or *NULL* on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr ""
"成功すると *o* の符号反転を返し、失敗すると *NULL* を返します。Python の式 "
"``-o`` と同じです。"

#: ../../c-api/number.rst:90
msgid ""
"Returns *o* on success, or *NULL* on failure.  This is the equivalent of the "
"Python expression ``+o``."
msgstr ""
"成功すると *o* を返し、失敗すると *NULL* を返します。Python の式 ``+o`` と同"
"じです。"

#: ../../c-api/number.rst:98
msgid ""
"Returns the absolute value of *o*, or *NULL* on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr ""
"成功すると *o* の絶対値を返し、失敗すると *NULL* を返します。Python の式 "
"``abs(o)`` と同じです。"

#: ../../c-api/number.rst:104
msgid ""
"Returns the bitwise negation of *o* on success, or *NULL* on failure.  This "
"is the equivalent of the Python expression ``~o``."
msgstr ""
"成功すると *o* のビット単位反転 (bitwise negation) を返し、失敗すると *NULL* "
"を返します。Python の式 ``~o`` と同じです。"

#: ../../c-api/number.rst:110
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr ""
"成功すると *o1* を *o2* だけ左シフトした結果を返し、失敗すると *NULL* を返し"
"ます。Python の式 ``o1 << o2`` と同じです。"

#: ../../c-api/number.rst:116
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr ""
"成功すると *o1* を *o2* だけ右シフトした結果を返し、失敗すると *NULL* を返し"
"ます。Python の式 ``o1 >> o2`` と同じです。"

#: ../../c-api/number.rst:122
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and *NULL* on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理積 (bitwise and)\" を返し、失敗す"
"ると *NULL* を返します。Python の式 ``o1 & o2`` と同じです。"

#: ../../c-api/number.rst:128
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or *NULL* "
"on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr ""
"成功すると *o1* と *o2* の  \"ビット単位排他的論理和 (bitwise exclusive "
"or)\" を返し、失敗すると *NULL* を返します。Python の式 ``o1 ^ o2`` と同じで"
"す。"

#: ../../c-api/number.rst:134
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or *NULL* on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理和 (bitwise or)\" を返し失敗する"
"と *NULL* を返します。Python の式 ``o1 | o2`` と同じです。"

#: ../../c-api/number.rst:140
msgid ""
"Returns the result of adding *o1* and *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""
"成功すると *o1* と *o2* を加算した結果を返し、失敗すると *NULL* を返します。"
"*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。Python の"
"文 ``o1 += o2`` と同じです。"

#: ../../c-api/number.rst:147
msgid ""
"Returns the result of subtracting *o2* from *o1*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 -= o2``."
msgstr ""
"成功すると *o1* から *o2* を減算した結果を返し、失敗すると *NULL* を返しま"
"す。*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。"
"Python の文 ``o1 -= o2`` と同じです。"

#: ../../c-api/number.rst:154
msgid ""
"Returns the result of multiplying *o1* and *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 *= o2``."
msgstr ""
"成功すると *o1* と *o2* を乗算した結果を返し、失敗すると *NULL* を返します。"
"*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。Python の"
"文 ``o1 *= o2`` と同じです。"

#: ../../c-api/number.rst:161
msgid ""
"Returns the result of dividing *o1* by *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it. This is the equivalent "
"of the Python statement ``o1 /= o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した結果を返し, 失敗すると *NULL* を返します。 "
"*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。 Python "
"の文 ``o1 /= o2`` と同じです。"

#: ../../c-api/number.rst:168
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or *NULL* on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した切捨て値を返し、失敗すると *NULL* を返しま"
"す。*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。"
"Python の文 ``o1 //= o2`` と同じです。"

#: ../../c-api/number.rst:177
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or *NULL* on failure.  The return value is \"approximate\" because "
"binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers.  The operation is done *in-place* when "
"*o1* supports it."
msgstr ""
"成功すると、数学的な *o1* の *o2* による除算値に対する妥当な近似 (reasonable "
"approximation) を返し、失敗すると *NULL* を返します。全ての実数を 2 を基数と"
"して表現するのは不可能なため、二進の浮動小数点数は \"近似値\" しか表現できま"
"せん。このため、戻り値も近似になります。この関数に二つの整数を渡した際、浮動"
"小数点の値を返すことがあります。*o1* が *in-place* 演算をサポートする場合、"
"in-place 演算を行います。"

#: ../../c-api/number.rst:188
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 %= o2``."
msgstr ""
"成功すると *o1* を *o2* で除算した剰余を返し、, 失敗すると *NULL* を返しま"
"す。*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。"
"Python の文 ``o1 %= o2`` と同じです。"

#: ../../c-api/number.rst:197
msgid ""
"See the built-in function :func:`pow`. Returns *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an in-"
"place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored, "
"pass :c:data:`Py_None` in its place (passing *NULL* for *o3* would cause an "
"illegal memory access)."
msgstr ""
"組み込み関数 :func:`pow` を参照してください。失敗すると *NULL* を返します。 "
"*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。この関数"
"は *o3* が :c:data:`Py_None` の場合は Python 文 ``o1 **= o2`` と同じで、それ"
"以外の場合は ``pow(o1, o2, o3)`` の in-place 版です。 *o3* を無視させたいな"
"ら、 :c:data:`Py_None` を入れてください (*o3* に *NULL* を渡すと、不正なメモ"
"リアクセスを引き起こすことがあります)。"

#: ../../c-api/number.rst:206
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""
"成功すると *o1* を *o2* だけ左シフトした結果を返し、失敗すると *NULL* を返し"
"ます。*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。"
"Python の文 ``o1 <<= o2`` と同じです。"

#: ../../c-api/number.rst:213
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""
"成功すると *o1* を *o2* だけ右シフトした結果を返し、失敗すると *NULL* を返し"
"ます。*o1* が *in-place* 演算をサポートする場合、in-place 演算を行います。"
"Python の文 ``o1 >>= o2`` と同じです。"

#: ../../c-api/number.rst:220
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and *NULL* on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理積 (bitwise and)\" を返し、失敗す"
"ると *NULL* を返します。*o1* が *in-place* 演算をサポートする場合、in-place "
"演算を行います。Python の文 ``o1 &= o2`` と同じです。"

#: ../../c-api/number.rst:227
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or *NULL* "
"on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位排他的論理和  (bitwise exclusive "
"or)\" を返し、失敗すると *NULL* を返します。*o1* が *in-place* 演算をサポート"
"する場合、in-place 演算を行います。Python の文 ``o1 ^= o2`` と同じです。"

#: ../../c-api/number.rst:234
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""
"成功すると *o1* と *o2* の \"ビット単位論理和 (bitwise or)\" を返し失敗する"
"と *NULL* を返します。*o1* が *in-place* 演算をサポートする場合、in-place 演"
"算を行います。Python の文 ``o1 |= o2`` と同じです。"

#: ../../c-api/number.rst:243
msgid ""
"This function takes the addresses of two variables of type :c:type:"
"`PyObject\\*`. If the objects pointed to by ``*p1`` and ``*p2`` have the "
"same type, increment their reference count and return ``0`` (success). If "
"the objects can be converted to a common numeric type, replace ``*p1`` and "
"``*p2`` by their converted value (with 'new' reference counts), and return "
"``0``. If no conversion is possible, or if some other error occurs, return "
"``-1`` (failure) and don't increment the reference counts.  The call "
"``PyNumber_Coerce(&o1, &o2)`` is equivalent to the Python statement ``o1, o2 "
"= coerce(o1, o2)``."
msgstr ""
"この関数は :c:type:`PyObject\\*` 型の二つの変数のアドレスを引数にとります。 "
"``*p1`` と ``*p2`` が指すオブジェクトが同じ型の場合、それぞれの参照カウントを"
"インクリメントして ``0`` (成功) を返します。オブジェクトを変換して共通の数値"
"型にできる場合、 ``*p1`` と ``*p2`` を変換後の値に置き換えて (参照カウントを "
"'新しく' して) 、 ``0`` を返します。変換が不可能な場合や、その他何らかのエ"
"ラーが生じた場合、 ``-1`` (失敗) を返し、参照カウントをインクリメントしませ"
"ん。 ``PyNumber_Coerce(&o1, &o2)`` の呼び出しは Python 文 ``o1, o2 = "
"coerce(o1, o2)`` と同じです。"

#: ../../c-api/number.rst:255
msgid ""
"This function is similar to :c:func:`PyNumber_Coerce`, except that it "
"returns ``1`` when the conversion is not possible and when no error is "
"raised. Reference counts are still not increased in this case."
msgstr ""
"この関数は :c:func:`PyNumber_Coerce` と似ていますが、変換が失敗た場合にはエ"
"ラーを発生させず、 ``1`` (訳注: ``-1`` の間違いではありません、 ``1`` です) "
"を返します。この場合、参照カウントはインクリメントされません。"

#: ../../c-api/number.rst:264
msgid ""
"Returns the *o* converted to an integer object on success, or *NULL* on "
"failure. If the argument is outside the integer range a long object will be "
"returned instead. This is the equivalent of the Python expression ``int(o)``."
msgstr ""
"成功すると *o* を整数に変換したものを返し、失敗すると *NULL* を返します。引数"
"の値が整数の範囲外の場合、長整数を代わりに返します。 Python の式 ``int(o)`` "
"と同じです。"

#: ../../c-api/number.rst:273
msgid ""
"Returns the *o* converted to a long integer object on success, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``long(o)``."
msgstr ""
"成功すると *o* を長整数に変換したものを返し、失敗すると *NULL* を返します。 "
"Python の式 ``long(o)`` と同じです。"

#: ../../c-api/number.rst:281
msgid ""
"Returns the *o* converted to a float object on success, or *NULL* on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr ""
"成功すると *o* を浮動小数点数に変換したものを返し、失敗すると *NULL* を返しま"
"す。Python の式 ``float(o)`` と同じです。"

#: ../../c-api/number.rst:287
msgid ""
"Returns the *o* converted to a Python int or long on success or *NULL* with "
"a :exc:`TypeError` exception raised on failure."
msgstr ""
"*o* を Python の int もしくは long 型に変換し、成功したらその値を返します。失"
"敗すると *NULL* が返され、 :exc:`TypeError` 例外が送出されます。"

#: ../../c-api/number.rst:295
msgid ""
"Returns the integer *n* converted to *base* as a string with a base marker "
"of ``'0b'``, ``'0o'``, or ``'0x'`` if applicable.  When *base* is not 2, 8, "
"10, or 16, the format is ``'x#num'`` where x is the base. If *n* is not an "
"int object, it is converted with :c:func:`PyNumber_Index` first."
msgstr ""
"整数 *n* を、基数 *base* 進数の文字列に変換し、適切であれば ``'0b'``, "
"``'0o'``, ``'0x'`` の基数マーカーをつけます。 *base* が 2, 8, 10, 16 のいずれ"
"でも無い場合、フォーマットは x を基数として ``'x#num'`` となります。もし *n* "
"が整数オブジェクトでない場合、まず :c:func:`PyNumber_Index` を使って変換され"
"ます。"

#: ../../c-api/number.rst:306
msgid ""
"Returns *o* converted to a Py_ssize_t value if *o* can be interpreted as an "
"integer. If *o* can be converted to a Python int or long but the attempt to "
"convert to a Py_ssize_t value would raise an :exc:`OverflowError`, then the "
"*exc* argument is the type of exception that will be raised (usually :exc:"
"`IndexError` or :exc:`OverflowError`).  If *exc* is *NULL*, then the "
"exception is cleared and the value is clipped to *PY_SSIZE_T_MIN* for a "
"negative integer or *PY_SSIZE_T_MAX* for a positive integer."
msgstr ""
"*o* を整数として解釈可能だった場合、Py_ssize_t 型の値に変換して返します。も"
"し *o* がPython の int もしくは long に変換できたのに、 Py_ssize_t への変換"
"が :exc:`OverflowError` になる場合は、 *exc* 引数で渡された型 (普通は :exc:"
"`IndexError` か :exc:`OverflowError`) の例外を送出します。もし、 *exc* が "
"*NULL* なら、例外はクリアされて、値が負の場合は *PY_SSIZE_T_MIN* へ、正の場合"
"は *PY_SSIZE_T_MAX* へと制限されます。"

#: ../../c-api/number.rst:319
msgid ""
"Returns ``1`` if *o* is an index integer (has the nb_index slot of  the "
"tp_as_number structure filled in), and ``0`` otherwise."
msgstr ""
"*o* がインデックス整数である場合 (tp_as_number構造体のnb_indexスロットが埋"
"まっている場合) に ``1`` を返し、そうでない場合に ``0`` を返します。"
