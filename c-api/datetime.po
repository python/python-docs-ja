# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "DateTime オブジェクト"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
":mod:`datetime` モジュールでは、様々な日付オブジェクトや時刻オブジェクトを提"
"供しています。以下に示す関数を使う場合には、あらかじめヘッダファイル :file:"
"`datetime.h` をソースに include し (:file:`Python.h` はこのファイルを "
"include しません)、 :c:macro:`PyDateTime_IMPORT` マクロを、通常はモジュール初"
"期化関数から、起動しておく必要があります。このマクロは以下のマクロで使われる"
"静的変数 :c:data:`PyDateTimeAPI` に C 構造体へのポインタを入れます。"

#: ../../c-api/datetime.rst:16
msgid "Macro for access to the UTC singleton:"
msgstr "UTCシングルトンにアクセスするためのマクロ:"

#: ../../c-api/datetime.rst:20
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"UTCタイムゾーンに相当するシングルトンを返します。\n"
"これは :attr:`datetime.timezon.utc` と同じオブジェクトです。"

#: ../../c-api/datetime.rst:26
msgid "Type-check macros:"
msgstr "型チェックマクロ:"

#: ../../c-api/datetime.rst:30
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."

#: ../../c-api/datetime.rst:37
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:43
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateTimeType` 型か :c:data:"
"`PyDateTime_DateTimeType` 型のサブタイプのオブジェクトの場合に真を返します; "
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateTimeType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TimeType` 型か :c:data:`PyDateTime_TimeType` 型の"
"サブタイプのオブジェクトの場合に真を返します; *ob* は ``NULL`` であってはなり"
"ません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:63
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TimeType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:69
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DeltaType` 型か :c:data:`PyDateTime_DeltaType` 型"
"のサブタイプのオブジェクトの場合に真を返します; *ob* は ``NULL`` であってはな"
"りません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:76
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DeltaType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:82
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TZInfoType` 型か :c:data:`PyDateTime_TZInfoType` "
"型のサブタイプのオブジェクトの場合に真を返します; *ob* は ``NULL`` であっては"
"なりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:89
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TZInfoType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:93
msgid "Macros to create objects:"
msgstr "以下はオブジェクトを作成するためのマクロです:"

#: ../../c-api/datetime.rst:97
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr "指定した年、月、日の :class:`datetime.date` オブジェクトを返します。"

#: ../../c-api/datetime.rst:102
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"指定した年、月、日、時、分、秒、マイクロ秒の :class:`datetime.datetime` オブ"
"ジェクトを返します。"

#: ../../c-api/datetime.rst:108
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"指定された年、月、日、時、分、秒、マイクロ秒、fold の :class:`datetime."
"datetime` オブジェクトを返します。"

#: ../../c-api/datetime.rst:116
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"指定された時、分、秒、マイクロ秒の :class:`datetime.time` オブジェクトを返し"
"ます。"

#: ../../c-api/datetime.rst:122
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"指定された時、分、秒、マイクロ秒、fold の :class:`datetime.time` オブジェクト"
"を返します。"

#: ../../c-api/datetime.rst:130
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"指定された日、秒、マイクロ秒の :class:`datetime.timedelta` オブジェクトを返し"
"ます。マイクロ秒と秒が :class:`datetime.timedelta` オブジェクトで定義されてい"
"る範囲に入るように正規化を行います。"

#: ../../c-api/datetime.rst:138
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"*offset* 引数で指定した固定オフセットを持つ、名前のない :class:`datetime."
"timezone` オブジェクトを返します。"

#: ../../c-api/datetime.rst:146
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"*offset*引数で指定した固定のオフセットと、*name* のタイムゾーン名を持つ :"
"class:`datetime.timezone` オブジェクトを返します。"

#: ../../c-api/datetime.rst:152
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"以下のマクロは date オブジェクトからフィールド値を取り出すためのものです。引"
"数は :c:data:`PyDateTime_Date` またはそのサブクラス (例えば :c:data:"
"`PyDateTime_DateTime`)の  インスタンスでなければなりません。引数を ``NULL`` "
"にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:159
msgid "Return the year, as a positive int."
msgstr "年を正の整数で返します。"

#: ../../c-api/datetime.rst:164
msgid "Return the month, as an int from 1 through 12."
msgstr "月を 1 から 12 の間の整数で返します。"

#: ../../c-api/datetime.rst:169
msgid "Return the day, as an int from 1 through 31."
msgstr "日を 1 から 31 の間の整数で返します。"

#: ../../c-api/datetime.rst:172
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"以下のマクロは datetime オブジェクトからフィールド値を取り出すためのもので"
"す。引数は :c:data:`PyDateTime_DateTime` またはそのサブクラスのインスタンスで"
"なければなりません。引数を ``NULL`` にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:178 ../../c-api/datetime.rst:216
msgid "Return the hour, as an int from 0 through 23."
msgstr "時を 0 から 23 の間の整数で返します。"

#: ../../c-api/datetime.rst:183 ../../c-api/datetime.rst:221
msgid "Return the minute, as an int from 0 through 59."
msgstr "分を 0 から 59 の間の整数で返します。"

#: ../../c-api/datetime.rst:188 ../../c-api/datetime.rst:226
msgid "Return the second, as an int from 0 through 59."
msgstr "秒を 0 から 59 の間の整数で返します。"

#: ../../c-api/datetime.rst:193 ../../c-api/datetime.rst:231
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "マイクロ秒を 0 から 999999 の間の整数で返します。"

#: ../../c-api/datetime.rst:198 ../../c-api/datetime.rst:236
msgid "Return the fold, as an int from 0 through 1."
msgstr ""
"フォールド(訳注: サマータイムによる時間のずれのこと)を 0 から 1 までの整数で"
"返します。"

#: ../../c-api/datetime.rst:205 ../../c-api/datetime.rst:243
msgid "Return the tzinfo (which may be ``None``)."
msgstr ""

#: ../../c-api/datetime.rst:210
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"以下のマクロは time オブジェクトからフィールド値を取り出すためのものです。引"
"数は :c:data:`PyDateTime_Time` またはそのサブクラスのインスタンスでなければな"
"りません。引数を ``NULL`` にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:248
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"以下のマクロは time delta オブジェクトからフィールド値をとりだすためのもので"
"す。引数は :c:data:`PyDateTime_Delta` かそのサブクラスのインスタンスでなけれ"
"ばなりません。引数を ``NULL`` にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:254
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "日数を -999999999 から 999999999 の間の整数で返します。"

#: ../../c-api/datetime.rst:261
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "秒数を 0 から 86399 の間の整数で返します。"

#: ../../c-api/datetime.rst:268
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "マイクロ秒を 0 から 999999 の間の整数で返します。"

#: ../../c-api/datetime.rst:273
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "以下のマクロは DB API を実装する上での便宜用です:"

#: ../../c-api/datetime.rst:277
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""
":meth:`dateitme.datetime.fromtimestamp()` に渡すのに適した引数タプルから新た"
"な :class:`datetime.datetime` オブジェクトを生成して返します。"

#: ../../c-api/datetime.rst:283
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
":meth:`dateitme.date.fromtimestamp()` に渡すのに適した引数タプルから新たな :"
"class:`datetime.date` オブジェクトを生成して返します。"
