# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
# yaakiyu, 2022
# Arihiro TAKASE, 2023
# Taichi Haradaguchi, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:48+0000\n"
"Last-Translator: Taichi Haradaguchi, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "DateTime オブジェクト"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`!PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`!PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
":mod:`datetime` モジュールでは、様々な日付オブジェクトや時刻オブジェクトを提"
"供しています。以下に示す関数を使う場合には、あらかじめヘッダファイル :file:"
"`datetime.h` をソースに include し (:file:`Python.h` はこのファイルを "
"include しません)、 :c:macro:`!PyDateTime_IMPORT` マクロを、通常はモジュール"
"初期化関数から、起動しておく必要があります。このマクロは以下のマクロで使われ"
"る静的変数 :c:data:`!PyDateTimeAPI` に C 構造体へのポインタを入れます。"

#: ../../c-api/datetime.rst:18
msgid "This subtype of :c:type:`PyObject` represents a Python date object."
msgstr ""
"この :c:type:`PyObject` のサブタイプは、Pythonの日付オブジェクトを表します。"

#: ../../c-api/datetime.rst:22
msgid "This subtype of :c:type:`PyObject` represents a Python datetime object."
msgstr ""
"この :c:type:`PyObject` のサブタイプは Python の datetime オブジェクトを表し"
"ます。"

#: ../../c-api/datetime.rst:26
msgid "This subtype of :c:type:`PyObject` represents a Python time object."
msgstr ""
"この :c:type:`PyObject` のサブタイプは Python の time オブジェクトを表現しま"
"す。"

#: ../../c-api/datetime.rst:30
msgid ""
"This subtype of :c:type:`PyObject` represents the difference between two "
"datetime values."
msgstr ""
"この :c:type:`PyObject` のサブタイプは二つの datetime の値の差分を表します。"

#: ../../c-api/datetime.rst:34
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python date type; it "
"is the same object as :class:`datetime.date` in the Python layer."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python の date 型を表します; "
"Python レイヤにおける :class:`datetime.date` と同じオブジェクトです。"

#: ../../c-api/datetime.rst:39
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python datetime type; "
"it is the same object as :class:`datetime.datetime` in the Python layer."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python の datetime 型を表現しま"
"す; Python レイヤにおける :class:`datetime.datetime` と同じオブジェクトです。"

#: ../../c-api/datetime.rst:44
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python time type; it "
"is the same object as :class:`datetime.time` in the Python layer."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python の time 型を表します; "
"Python レイヤにおける :class:`datetime.time` と同じオブジェクトです。"

#: ../../c-api/datetime.rst:49
msgid ""
"This instance of :c:type:`PyTypeObject` represents Python type for the "
"difference between two datetime values; it is the same object as :class:"
"`datetime.timedelta` in the Python layer."
msgstr ""

#: ../../c-api/datetime.rst:55
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python time zone info "
"type; it is the same object as :class:`datetime.tzinfo` in the Python layer."
msgstr ""
"この :c:type:`PyTypeObject` のインスタンスは Python の タイムゾーン情報型を表"
"します; Python レイヤにおける :class:`datetime.tzinfo` と同じオブジェクトで"
"す。"

#: ../../c-api/datetime.rst:59
msgid "Macro for access to the UTC singleton:"
msgstr "UTCシングルトンにアクセスするためのマクロ:"

#: ../../c-api/datetime.rst:63
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"UTCタイムゾーンに相当するシングルトンを返します。これは :attr:`datetime."
"timezone.utc` と同じオブジェクトです。"

#: ../../c-api/datetime.rst:69
msgid "Type-check macros:"
msgstr "型チェックマクロ:"

#: ../../c-api/datetime.rst:73
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`!PyDateTime_DateType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateType` 型か :c:data:`!PyDateTime_DateType` 型"
"のサブタイプのオブジェクトの場合に真を返します; *ob* は ``NULL`` であってはな"
"りません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:80
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:86
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`!PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateTimeType` 型か :c:data:`!"
"PyDateTime_DateTimeType` 型のサブタイプのオブジェクトの場合に真を返します; "
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:93
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DateTimeType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:99
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`!PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TimeType` 型か :c:data:`!PyDateTime_TimeType` 型"
"のサブタイプのオブジェクトの場合に真を返します; *ob* は ``NULL`` であってはな"
"りません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:106
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TimeType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:112
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`!PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DeltaType` 型か :c:data:`!PyDateTime_DeltaType` "
"型のサブタイプのオブジェクトの場合に真を返します; *ob* は ``NULL`` であっては"
"なりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:119
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_DeltaType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:125
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`!PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TZInfoType` 型か :c:data:`!"
"PyDateTime_TZInfoType` 型のサブタイプのオブジェクトの場合に真を返します; "
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:132
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"*ob* が :c:data:`PyDateTime_TZInfoType` の場合に真を返します。\n"
"*ob* は ``NULL`` であってはなりません。この関数は常に成功します。"

#: ../../c-api/datetime.rst:136
msgid "Macros to create objects:"
msgstr "以下はオブジェクトを作成するためのマクロです:"

#: ../../c-api/datetime.rst:140
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr "指定した年、月、日の :class:`datetime.date` オブジェクトを返します。"

#: ../../c-api/datetime.rst:145
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"指定した年、月、日、時、分、秒、マイクロ秒の :class:`datetime.datetime` オブ"
"ジェクトを返します。"

#: ../../c-api/datetime.rst:151
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"指定された年、月、日、時、分、秒、マイクロ秒、fold の :class:`datetime."
"datetime` オブジェクトを返します。"

#: ../../c-api/datetime.rst:159
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"指定された時、分、秒、マイクロ秒の :class:`datetime.time` オブジェクトを返し"
"ます。"

#: ../../c-api/datetime.rst:165
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"指定された時、分、秒、マイクロ秒、fold の :class:`datetime.time` オブジェクト"
"を返します。"

#: ../../c-api/datetime.rst:173
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"指定された日、秒、マイクロ秒の :class:`datetime.timedelta` オブジェクトを返し"
"ます。マイクロ秒と秒が :class:`datetime.timedelta` オブジェクトで定義されてい"
"る範囲に入るように正規化を行います。"

#: ../../c-api/datetime.rst:181
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"*offset* 引数で指定した固定オフセットを持つ、名前のない :class:`datetime."
"timezone` オブジェクトを返します。"

#: ../../c-api/datetime.rst:189
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"*offset*引数で指定した固定のオフセットと、*name* のタイムゾーン名を持つ :"
"class:`datetime.timezone` オブジェクトを返します。"

#: ../../c-api/datetime.rst:195
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Date`, including subclasses (such as :c:type:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"以下のマクロは date オブジェクトからフィールド値を取り出すためのものです。引"
"数は :c:type:`PyDateTime_Date` またはそのサブクラス (例えば :c:type:"
"`PyDateTime_DateTime`)の  インスタンスでなければなりません。引数を ``NULL`` "
"にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:202
msgid "Return the year, as a positive int."
msgstr "年を正の整数で返します。"

#: ../../c-api/datetime.rst:207
msgid "Return the month, as an int from 1 through 12."
msgstr "月を 1 から 12 の間の整数で返します。"

#: ../../c-api/datetime.rst:212
msgid "Return the day, as an int from 1 through 31."
msgstr "日を 1 から 31 の間の整数で返します。"

#: ../../c-api/datetime.rst:215
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:type:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"以下のマクロは datetime オブジェクトからフィールド値を取り出すためのもので"
"す。引数は :c:type:`PyDateTime_DateTime` またはそのサブクラスのインスタンスで"
"なければなりません。引数を ``NULL`` にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:221 ../../c-api/datetime.rst:259
msgid "Return the hour, as an int from 0 through 23."
msgstr "時を 0 から 23 の間の整数で返します。"

#: ../../c-api/datetime.rst:226 ../../c-api/datetime.rst:264
msgid "Return the minute, as an int from 0 through 59."
msgstr "分を 0 から 59 の間の整数で返します。"

#: ../../c-api/datetime.rst:231 ../../c-api/datetime.rst:269
msgid "Return the second, as an int from 0 through 59."
msgstr "秒を 0 から 59 の間の整数で返します。"

#: ../../c-api/datetime.rst:236 ../../c-api/datetime.rst:274
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "マイクロ秒を 0 から 999999 の間の整数で返します。"

#: ../../c-api/datetime.rst:241 ../../c-api/datetime.rst:279
msgid "Return the fold, as an int from 0 through 1."
msgstr ""
"フォールド(訳注: サマータイムによる時間のずれのこと)を 0 から 1 までの整数で"
"返します。"

#: ../../c-api/datetime.rst:248 ../../c-api/datetime.rst:286
msgid "Return the tzinfo (which may be ``None``)."
msgstr ""

#: ../../c-api/datetime.rst:253
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"以下のマクロは time オブジェクトからフィールド値を取り出すためのものです。引"
"数は :c:type:`PyDateTime_Time` またはそのサブクラスのインスタンスでなければな"
"りません。引数を ``NULL`` にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:291
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"以下のマクロは time delta オブジェクトからフィールド値をとりだすためのもので"
"す。引数は :c:type:`PyDateTime_Delta` かそのサブクラスのインスタンスでなけれ"
"ばなりません。引数を ``NULL`` にしてはならず、型チェックは行いません:"

#: ../../c-api/datetime.rst:297
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "日数を -999999999 から 999999999 の間の整数で返します。"

#: ../../c-api/datetime.rst:304
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "秒数を 0 から 86399 の間の整数で返します。"

#: ../../c-api/datetime.rst:311
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "マイクロ秒を 0 から 999999 の間の整数で返します。"

#: ../../c-api/datetime.rst:316
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "以下のマクロは DB API を実装する上での便宜用です:"

#: ../../c-api/datetime.rst:320
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp`."
msgstr ""

#: ../../c-api/datetime.rst:326
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp`."
msgstr ""
