# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/stable.rst:7
msgid "C API Stability"
msgstr "C API の安定性"

#: ../../c-api/stable.rst:9
msgid ""
"Python's C API is covered by the Backwards Compatibility Policy, :pep:`387`. "
"While the C API will change with every minor release (e.g. from 3.9 to "
"3.10), most changes will be source-compatible, typically by only adding new "
"API. Changing existing API or removing API is only done after a deprecation "
"period or to fix serious issues."
msgstr ""
"Python の C API は、 Backwards Compatibility Policy, :pep:`387` によって保護"
"されています。C API はマイナーリリースごとに変更されますが(例えば 3.9 から "
"3.10 へ)、ほとんどの変更はソース互換であり、通常は新しい API を追加するだけで"
"す。既存の API を変更したり、 API を削除したりするのは、非推奨期間の後か、深"
"刻な問題を修正する場合のみです。"

#: ../../c-api/stable.rst:15
msgid ""
"CPython's Application Binary Interface (ABI) is forward- and backwards-"
"compatible across a minor release (if these are compiled the same way; see :"
"ref:`stable-abi-platform` below). So, code compiled for Python 3.10.0 will "
"work on 3.10.8 and vice versa, but will need to be compiled separately for "
"3.9.x and 3.10.x."
msgstr ""
"CPython の Application Binary Interface(ABI)は、マイナーリリース間で前方およ"
"び後方互換性があります(これらが同じ方法でコンパイルされた場合。以下の :ref:"
"`stable-abi-platform` を参照)。そのため、Python 3.10.0 用にコンパイルされた"
"コードは 3.10.8 で動作し、その逆も同様ですが、 3.9.x と 3.10.x では別々にコン"
"パイルする必要があります。"

#: ../../c-api/stable.rst:21
msgid ""
"Names prefixed by an underscore, such as ``_Py_InternalState``, are private "
"API that can change without notice even in patch releases."
msgstr ""
"``_Py_InternalState`` のようにアンダースコアが前につくものは、パッチリリース"
"でも予告なく変更される可能性があるプライベートAPIです。"

#: ../../c-api/stable.rst:26
msgid "Stable Application Binary Interface"
msgstr "安定 ABI (Stable Appliction Binary Interface)"

#: ../../c-api/stable.rst:28
msgid ""
"Python 3.2 introduced the *Limited API*, a subset of Python's C API. "
"Extensions that only use the Limited API can be compiled once and work with "
"multiple versions of Python. Contents of the Limited API are :ref:`listed "
"below <stable-abi-list>`."
msgstr ""
"Python 3.2 では、 Python の C API のサブセットである *Limited API* が導入され"
"ました。Limited API のみを使用する拡張機能は、一度コンパイルすれば、複数の"
"バージョンの Python で動作させることができます。Limited API の内容は :ref:"
"`listed below <stable-abi-list>` です。"

#: ../../c-api/stable.rst:33
msgid ""
"To enable this, Python provides a *Stable ABI*: a set of symbols that will "
"remain compatible across Python 3.x versions. The Stable ABI contains "
"symbols exposed in the Limited API, but also other ones – for example, "
"functions necessary to support older versions of the Limited API."
msgstr ""
"これを可能にするために、 Python は *Stable ABI* を提供しています。これは、"
"Python 3.x のバージョン間で互換性を保つシンボルの集合です。Stable ABI には、 "
"Limited API で公開されているシンボルだけでなく、 Limited API の古いバージョン"
"をサポートするために必要な関数など、他のシンボルも含まれています。"

#: ../../c-api/stable.rst:38
msgid ""
"(For simplicity, this document talks about *extensions*, but the Limited API "
"and Stable ABI work the same way for all uses of the API – for example, "
"embedding Python.)"
msgstr ""
"(簡単にするため、このドキュメントでは *拡張機能* について話していますが、 "
"Limited API と Stable ABI は、 API のすべての使用、たとえばPythonの組み込みに"
"対して同じように動作します)"

#: ../../c-api/stable.rst:44
msgid ""
"Define this macro before including ``Python.h`` to opt in to only use the "
"Limited API, and to select the Limited API version."
msgstr ""
"このマクロを ``Python.h`` をインクルードする前に定義することで、 Limited API "
"のみを使用することを選択し、 Limited API バージョンを選択することができます。"

#: ../../c-api/stable.rst:47
msgid ""
"Define ``Py_LIMITED_API`` to the value of :c:data:`PY_VERSION_HEX` "
"corresponding to the lowest Python version your extension supports. The "
"extension will work without recompilation with all Python 3 releases from "
"the specified one onward, and can use Limited API introduced up to that "
"version."
msgstr ""
"``Py_LIMITED_API`` を :c:data:`PY_VERSION_HEX` の値として定義し、拡張機能がサ"
"ポートする Python の最低バージョンに対応します。この拡張機能は、指定された"
"バージョン以降のすべての Python 3 リリースで再コンパイルせずに動作し、その"
"バージョンまでに導入された Limited API を使用することができます。"

#: ../../c-api/stable.rst:53
msgid ""
"Rather than using the ``PY_VERSION_HEX`` macro directly, hardcode a minimum "
"minor version (e.g. ``0x030A0000`` for Python 3.10) for stability when "
"compiling with future Python versions."
msgstr ""
"``PY_VERSION_HEX`` マクロを直接使うのではなく、将来の Python のバージョンでコ"
"ンパイルするときの安定性のために、最小のマイナーバージョン(例えば、 Python "
"3.10なら ``0x030A0000`` )をハードコードします。"

#: ../../c-api/stable.rst:57
msgid ""
"You can also define ``Py_LIMITED_API`` to ``3``. This works the same as "
"``0x03020000`` (Python 3.2, the version that introduced Limited API)."
msgstr ""
"また、 ``Py_LIMITED_API`` を ``3`` に定義することができます。これは "
"``0x03020000`` (Python 3.2, Limited API が導入されたバージョン)と同じように動"
"作します。"

#: ../../c-api/stable.rst:60
msgid ""
"On Windows, extensions that use the Stable ABI should be linked against "
"``python3.dll`` rather than a version-specific library such as ``python39."
"dll``."
msgstr ""
"Windows では、 Stable ABI を使用する拡張機能は、 ``python39.dll`` のような"
"バージョン固有のライブラリではなく、 ``python3.dll`` に対してリンクする必要が"
"あります。"

#: ../../c-api/stable.rst:64
msgid ""
"On some platforms, Python will look for and load shared library files named "
"with the ``abi3`` tag (e.g. ``mymodule.abi3.so``). It does not check if such "
"extensions conform to a Stable ABI. The user (or their packaging tools) need "
"to ensure that, for example, extensions built with the 3.10+ Limited API are "
"not installed for lower versions of Python."
msgstr ""
"いくつかのプラットフォームでは、 Python は ``abi3`` タグで名付けられた共有ラ"
"イブラリファイルを探して読み込みます(例: ``mymodule.abi3.so``)。このような拡"
"張モジュールが Stable ABI に適合しているかどうかはチェックされません。ユー"
"ザー(またはそのパッケージングツール)は、たとえば 3.10+ Limited API でビルドさ"
"れた拡張モジュールが、それ以下のバージョンの Python にインストールされないこ"
"とを確認する必要があります。"

#: ../../c-api/stable.rst:71
msgid ""
"All functions in the Stable ABI are present as functions in Python's shared "
"library, not solely as macros. This makes them usable from languages that "
"don't use the C preprocessor."
msgstr ""
"Stable ABI に含まれるすべての関数は、マクロとしてだけでなく、 Python の共有ラ"
"イブラリの関数として存在します。そのため、Cプリプロセッサを使用しない言語から"
"使用することができます。"

#: ../../c-api/stable.rst:77
msgid "Limited API Scope and Performance"
msgstr "APIスコープとパフォーマンスの制限"

#: ../../c-api/stable.rst:79
msgid ""
"The goal for the Limited API is to allow everything that is possible with "
"the full C API, but possibly with a performance penalty."
msgstr ""
"Limited API の目標は、フル C API で可能なすべてのことを実現することですが、お"
"そらく性能上の制約があります。"

#: ../../c-api/stable.rst:82
msgid ""
"For example, while :c:func:`PyList_GetItem` is available, its “unsafe” macro "
"variant :c:func:`PyList_GET_ITEM` is not. The macro can be faster because it "
"can rely on version-specific implementation details of the list object."
msgstr ""
"例えば、 :c:func:`PyList_GetItem` は利用可能ですが、その “unsafe” マクロの変"
"種 :c:func:`PyList_GET_ITEM` は利用できません。このマクロは、リストオブジェク"
"トのバージョン固有の実装の詳細に依存することができるため、より高速に処理する"
"ことができます。"

#: ../../c-api/stable.rst:87
msgid ""
"Without ``Py_LIMITED_API`` defined, some C API functions are inlined or "
"replaced by macros. Defining ``Py_LIMITED_API`` disables this inlining, "
"allowing stability as Python's data structures are improved, but possibly "
"reducing performance."
msgstr ""
"``Py_LIMITED_API`` を定義しないと、いくつかの C API 関数がインライン化された"
"り、マクロに置き換わったりします。``Py_LIMITED_API`` を定義すると、このインラ"
"イン化が無効になり、 Python のデータ構造が改善されても安定した動作が可能にな"
"りますが、性能が低下する可能性があります。"

#: ../../c-api/stable.rst:92
msgid ""
"By leaving out the ``Py_LIMITED_API`` definition, it is possible to compile "
"a Limited API extension with a version-specific ABI. This can improve "
"performance for that Python version, but will limit compatibility. Compiling "
"with ``Py_LIMITED_API`` will then yield an extension that can be distributed "
"where a version-specific one is not available – for example, for prereleases "
"of an upcoming Python version."
msgstr ""
"``Py_LIMITED_API`` の定義を省くことで、 Limited API 拡張をバージョン固有の "
"ABI でコンパイルすることが可能です。これにより、その Python のバージョンでパ"
"フォーマンスを向上させることができますが、互換性は制限されます。"
"``Py_LIMITED_API`` でコンパイルすると、バージョンに依存しない拡張機能が利用で"
"きない場合、例えば、次期 Python バージョンのプレリリースに対応した拡張モ"
"ジュールを配布することができるようになります。"

#: ../../c-api/stable.rst:101
msgid "Limited API Caveats"
msgstr "制限付きAPIの注意点"

#: ../../c-api/stable.rst:103
msgid ""
"Note that compiling with ``Py_LIMITED_API`` is *not* a complete guarantee "
"that code conforms to the Limited API or the Stable ABI. ``Py_LIMITED_API`` "
"only covers definitions, but an API also includes other issues, such as "
"expected semantics."
msgstr ""
"``Py_LIMITED_API`` でコンパイルすることは、 Limited API や Stable ABI に準拠"
"したコードであることを完全に保証するものではないことに注意してください。"
"``Py_LIMITED_API`` は定義だけをカバーしていますが、 API には期待されるセマン"
"ティクスのような他の課題も含まれています。"

#: ../../c-api/stable.rst:108
msgid ""
"One issue that ``Py_LIMITED_API`` does not guard against is calling a "
"function with arguments that are invalid in a lower Python version. For "
"example, consider a function that starts accepting ``NULL`` for an argument. "
"In Python 3.9, ``NULL`` now selects a default behavior, but in Python 3.8, "
"the argument will be used directly, causing a ``NULL`` dereference and "
"crash. A similar argument works for fields of structs."
msgstr ""
"``Py_LIMITED_API`` が防げない問題の1つは、 Python の下位バージョンでは無効な"
"引数を持つ関数を呼び出すことです。例えば、引数に ``NULL`` を受け取る関数を考"
"えてみましょう。Python 3.9 では ``NULL`` はデフォルトの挙動を選択しますが、"
"Python 3.8 ではこの引数は直接使用され、 ``NULL`` の参照外れを起こしクラッシュ"
"します。同様の引数は、構造体のフィールドに対しても機能します。"

#: ../../c-api/stable.rst:115
msgid ""
"Another issue is that some struct fields are currently not hidden when "
"``Py_LIMITED_API`` is defined, even though they're part of the Limited API."
msgstr ""
"もう一つの問題は、一部の構造体フィールドがLimited APIの一部であるにもかかわら"
"ず、 ``Py_LIMITED_API`` が定義されたときに現在非表示になっていないことです。"

#: ../../c-api/stable.rst:118
msgid ""
"For these reasons, we recommend testing an extension with *all* minor Python "
"versions it supports, and preferably to build with the *lowest* such version."
msgstr ""
"これらの理由から、私たちは拡張モジュールがサポートする *すべての* マイナーな "
"Python バージョンでテストすること、そしてできれば *最も低い* バージョンでビル"
"ドすることを推奨します。"

#: ../../c-api/stable.rst:121
msgid ""
"We also recommend reviewing documentation of all used API to check if it is "
"explicitly part of the Limited API. Even with ``Py_LIMITED_API`` defined, a "
"few private declarations are exposed for technical reasons (or even "
"unintentionally, as bugs)."
msgstr ""
"また、使用するすべての API のドキュメントを確認し、それが明示的に Limited "
"API の一部であるかどうかをチェックすることをお勧めします。``Py_LIMITED_API`` "
"が定義されていても、技術的な理由で(あるいはバグとして意図せず)いくつかのプラ"
"イベート宣言が公開されることがあります。"

#: ../../c-api/stable.rst:126
msgid ""
"Also note that the Limited API is not necessarily stable: compiling with "
"``Py_LIMITED_API`` with Python 3.8 means that the extension will run with "
"Python 3.12, but it will not necessarily *compile* with Python 3.12. In "
"particular, parts of the Limited API may be deprecated and removed, provided "
"that the Stable ABI stays stable."
msgstr ""
"Python 3.8 で ``Py_LIMITED_API`` をコンパイルすると、その拡張モジュールは "
"Python 3.12 で動作しますが、必ずしも Python 3.12 で *コンパイル* できるとは限"
"らないことに注意してください。特に、Limited API の一部は、 Stable ABI が安定"
"している限り、非推奨で削除されるかもしれません。"

#: ../../c-api/stable.rst:136
msgid "Platform Considerations"
msgstr "プラットフォームで考慮すべき点"

#: ../../c-api/stable.rst:138
msgid ""
"ABI stability depends not only on Python, but also on the compiler used, "
"lower-level libraries and compiler options. For the purposes of the Stable "
"ABI, these details define a “platform”. They usually depend on the OS type "
"and processor architecture"
msgstr ""
"ABI の安定性は Python だけでなく、使用するコンパイラ、低レベルのライブラリ、"
"コンパイラのオプションにも依存します。安定した ABI の目的では、これらの詳細が"
"「プラットフォーム」を定義します。通常、 OS の種類とプロセッサのアーキテク"
"チャに依存します。"

#: ../../c-api/stable.rst:143
msgid ""
"It is the responsibility of each particular distributor of Python to ensure "
"that all Python versions on a particular platform are built in a way that "
"does not break the Stable ABI. This is the case with Windows and macOS "
"releases from ``python.org`` and many third-party distributors."
msgstr ""
"特定のプラットフォーム上のすべての Python バージョンが安定版 ABI を破壊しない"
"方法でビルドされていることを保証するのは、 Python の各特定配布者の責任です。"
"これは ``python.org`` や多くのサードパーティーの配布元からの Windows と "
"macOS のリリースの場合です。"

#: ../../c-api/stable.rst:153
msgid "Contents of Limited API"
msgstr "限定版APIの内容"

#: ../../c-api/stable.rst:156
msgid "Currently, the Limited API includes the following items:"
msgstr "現在、Limited APIには以下の項目が含まれています::"
