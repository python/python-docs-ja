# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2024
# tomo, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: tomo, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/cell.rst:6
msgid "Cell Objects"
msgstr "セルオブジェクト (cell object)"

#: ../../c-api/cell.rst:8
msgid ""
"\"Cell\" objects are used to implement variables referenced by multiple "
"scopes. For each such variable, a cell object is created to store the value; "
"the local variables of each stack frame that references the value contains a "
"reference to the cells from outer scopes which also use that variable.  When "
"the value is accessed, the value contained in the cell is used instead of "
"the cell object itself.  This de-referencing of the cell object requires "
"support from the generated byte-code; these are not automatically de-"
"referenced when accessed. Cell objects are not likely to be useful elsewhere."
msgstr ""
"\"セル (cell)\" オブジェクトは、複数のスコープから参照される変数群を実装する"
"ために使われます。セルは各変数について作成され、各々の値を記憶します; この値"
"を参照する各スタックフレームにおけるローカル変数には、そのスタックフレームの"
"外側で同じ値を参照しているセルに対する参照が入ります。セルで表現された値にア"
"クセスすると、セルオブジェクト自体の代わりにセル内の値が使われます。このセル"
"オブジェクトを使った間接参照 (dereference) は、インタプリタによって生成された"
"バイトコード内でサポートされている必要があります; セルオブジェクトにアクセス"
"した際に、自動的に間接参照は起こりません。上記以外の状況では、セルオブジェク"
"トは役に立たないはずです。"

#: ../../c-api/cell.rst:20
msgid "The C structure used for cell objects."
msgstr "セルオブジェクトに使われる C 構造体です。"

#: ../../c-api/cell.rst:25
msgid "The type object corresponding to cell objects."
msgstr "セルオブジェクトに対応する型オブジェクトです。"

#: ../../c-api/cell.rst:30
msgid ""
"Return true if *ob* is a cell object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"*ob* がセルオブジェクトの場合に真を返します; *ob* は ``NULL`` であってはなり"
"ません。この関数は常に成功します。"

#: ../../c-api/cell.rst:36
msgid ""
"Create and return a new cell object containing the value *ob*. The parameter "
"may be ``NULL``."
msgstr ""
"値 *ob* の入った新たなセルオブジェクトを生成して返します。\n"
"引数を ``NULL`` にしてもかまいません。"

#: ../../c-api/cell.rst:42
msgid ""
"Return the contents of the cell *cell*, which can be ``NULL``. If *cell* is "
"not a cell object, returns ``NULL`` with an exception set."
msgstr ""

#: ../../c-api/cell.rst:48
msgid ""
"Return the contents of the cell *cell*, but without checking that *cell* is "
"non-``NULL`` and a cell object."
msgstr ""
"*cell* の内容を返しますが、*cell* が非 ``NULL`` かつセルオブジェクトであるか"
"どうかはチェックしません。"

#: ../../c-api/cell.rst:54
msgid ""
"Set the contents of the cell object *cell* to *value*.  This releases the "
"reference to any current content of the cell. *value* may be ``NULL``.  "
"*cell* must be non-``NULL``."
msgstr ""

#: ../../c-api/cell.rst:58
msgid ""
"On success, return ``0``. If *cell* is not a cell object, set an exception "
"and return ``-1``."
msgstr ""

#: ../../c-api/cell.rst:64
msgid ""
"Sets the value of the cell object *cell* to *value*.  No reference counts "
"are adjusted, and no checks are made for safety; *cell* must be non-``NULL`` "
"and must be a cell object."
msgstr ""
"セルオブジェクト *cell* の値を *value* に設定します。\n"
"参照カウントに対する変更はなく、安全のためのチェックは何も行いません。*cell* "
"は非 ``NULL`` でなければならず、かつセルオブジェクトでなければなりません。"
