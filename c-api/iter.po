# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 01:01+0900\n"
"PO-Revision-Date: 2018-01-20 20:54+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/iter.rst:6
msgid "Iterator Protocol"
msgstr "イテレータプロトコル (iterator protocol)"

#: ../../c-api/iter.rst:10
msgid "There are two functions specifically for working with iterators."
msgstr "イテレータを扱うための固有の関数は二つあります。"

#: ../../c-api/iter.rst:15
msgid "Return true if the object *o* supports the iterator protocol."
msgstr "*o* がイテレータプロトコルをサポートする場合に真を返します。"

#: ../../c-api/iter.rst:17
msgid ""
"This function can return a false positive in the case of old-style classes "
"because those classes always define a :c:member:`tp_iternext` slot with "
"logic that either invokes a :meth:`next` method or raises a :exc:`TypeError`."
msgstr ""
"この関数は旧スタイルクラスの場合に虚偽の真値を返します。というのもそれらのク"
"ラスは :meth:`next` メソッドを呼び出すか :exc:`TypeError` を投げる実装を持っ"
"た :c:member:`tp_iternext` スロットを常に定義しているからです。"

#: ../../c-api/iter.rst:24
msgid ""
"Return the next value from the iteration *o*.  The object must be an "
"iterator (it is up to the caller to check this).  If there are no remaining "
"values, returns *NULL* with no exception set.  If an error occurs while "
"retrieving the item, returns *NULL* and passes along the exception."
msgstr ""
"反復処理 *o* における次の値を返します。オブジェクトはイテレータでなければなり"
"ません (これをチェックするのは呼び出し側の責任です)。要素が何も残っていない場"
"合は、例外がセットされていない状態で *NULL* を返します。要素を取り出す際にエ"
"ラーが生じた場合は、*NULL* を返し、発生した例外を送出します。"

#: ../../c-api/iter.rst:29
msgid ""
"To write a loop which iterates over an iterator, the C code should look "
"something like this::"
msgstr ""
"イテレータの返す要素にわたって反復処理を行うループを書くと、C のコードは以下"
"のようになるはずです::"
