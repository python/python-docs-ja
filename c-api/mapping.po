# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 14:59+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "マップ型プロトコル (mapping protocol)"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""
":c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem`, :c:func:"
"`PyObject_DelItem` も参照してください。"

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes "
"with a :meth:`__getitem__` method, since in general it is impossible to "
"determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"オブジェクトがマップ型プロトコルを提供しているか、スライスをサポートしている"
"場合は ``1`` を、そうでない場合は ``0`` を返します。\n"
":meth:`__getitem__` メソッドを持つ Python クラスについては ``1`` を返すのに注"
"意してください。そうなる理由は、一般的にはクラスがどの種類のキーをサポートし"
"ているかを判別するのが不可能だからです。\n"
"この関数は常に成功します。"

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"成功するとオブジェクト *o* 中のキーの数を返し、失敗すると ``-1`` を返します。"
"これは、Python の式 ``len(o)`` と同じになります。"

#: ../../c-api/mapping.rst:31
msgid ""
"Return element of *o* corresponding to the string *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``. See "
"also :c:func:`PyObject_GetItem`."
msgstr ""
"文字列 *key* に対応する *o* の要素を返します。失敗すると ``NULL`` を返しま"
"す。\n"
"Python の式 ``o[key]`` と同じです。\n"
":c:func:`PyObject_GetItem` も参照してください。"

#: ../../c-api/mapping.rst:38
msgid ""
"Map the string *key* to the value *v* in object *o*.  Returns ``-1`` on "
"failure.  This is the equivalent of the Python statement ``o[key] = v``. See "
"also :c:func:`PyObject_SetItem`.  This function *does not* steal a reference "
"to *v*."
msgstr ""
"オブジェクト *o* 上で文字列 *key* を値 *v* に対応付けます。失敗すると ``-1`` "
"を返します。\n"
"Python の文 ``o[key] = v`` と同じです。\n"
":c:func:`PyObject_SetItem` も参照してください。\n"
"この関数は *v* への参照を盗み取り *ません*。"

#: ../../c-api/mapping.rst:46
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``. This "
"is an alias of :c:func:`PyObject_DelItem`."
msgstr ""
"オブジェクト *o* から、オブジェクト *key* に関する対応付けを削除します。\n"
"失敗すると ``-1`` を返します。\n"
"Python の文 ``del o[key]`` と同じです。\n"
"この関数は :c:func:`PyObject_DelItem` の別名です。"

#: ../../c-api/mapping.rst:53
msgid ""
"Remove the mapping for the string *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"オブジェクト *o* から、文字列 *key* に関する対応付けを削除します。\n"
"失敗すると ``-1`` を返します。\n"
"Python の文 ``del o[key]`` と同じです。"

#: ../../c-api/mapping.rst:59 ../../c-api/mapping.rst:70
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"マップ型オブジェクトがキー *key* を持つ場合に ``1`` を返し、そうでないときに"
"は ``0`` を返します。これは、Python の式 ``key in o`` と等価です。この関数呼"
"び出しは常に成功します。"

#: ../../c-api/mapping.rst:63
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method will get suppressed. To get error reporting use :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""
":meth:`__getitem__` メソッドの呼び出し中に起こる例外は抑制されることに注意し"
"てください。\n"
"エラーを報告させるには、代わりに :c:func:`PyObject_GetItem()` を使ってくださ"
"い。"

#: ../../c-api/mapping.rst:74
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method and creating a temporary string object will get suppressed. To get "
"error reporting use :c:func:`PyMapping_GetItemString()` instead."
msgstr ""
":meth:`__getitem__` メソッドの呼び出し中や、一時的な文字列オブジェクトの作成"
"中に起こる例外は抑制されることに注意してください。\n"
"エラーを報告させるには、代わりに :c:func:`PyMapping_GetItemString()` を使って"
"ください。"

#: ../../c-api/mapping.rst:81
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"成功するとオブジェクト *o* のキーからなるリストを返します。\n"
"失敗すると ``NULL`` を返します。"

#: ../../c-api/mapping.rst:84 ../../c-api/mapping.rst:93
#: ../../c-api/mapping.rst:102
msgid "Previously, the function returned a list or a tuple."
msgstr "以前は、関数はリストもしくはタプルを返していました。"

#: ../../c-api/mapping.rst:90
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"成功するとオブジェクト *o* の値からなるリストを返します。\n"
"失敗すると ``NULL`` を返します。"

#: ../../c-api/mapping.rst:99
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"成功するとオブジェクト *o* の要素からなるリストを返し、各要素はキーと値のペア"
"が入ったタプルになっています。\n"
"失敗すると ``NULL`` を返します。"
