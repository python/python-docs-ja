# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
# Taichi Haradaguchi, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 10:59+0000\n"
"PO-Revision-Date: 2021-06-28 00:49+0000\n"
"Last-Translator: Taichi Haradaguchi, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/iterator.rst:6
msgid "Iterator Objects"
msgstr "イテレータオブジェクト (iterator object)"

#: ../../c-api/iterator.rst:8
msgid ""
"Python provides two general-purpose iterator objects.  The first, a sequence "
"iterator, works with an arbitrary sequence supporting the :meth:`~object."
"__getitem__` method.  The second works with a callable object and a sentinel "
"value, calling the callable for each item in the sequence, and ending the "
"iteration when the sentinel value is returned."
msgstr ""
"Python では二種類のイテレータオブジェクトを提供しています。一つ目はシーケンス"
"イテレータで、 :meth:`~object.__getitem__` メソッドをサポートする任意のシーケ"
"ンスを取り扱います。二つ目は呼び出し可能オブジェクトと番兵 (sentinel value) "
"を扱い、シーケンス内の要素ごとに呼び出し可能オブジェクトを呼び出して、センチ"
"ネル値が返されたときに反復処理を終了します。"

#: ../../c-api/iterator.rst:17
msgid ""
"Type object for iterator objects returned by :c:func:`PySeqIter_New` and the "
"one-argument form of the :func:`iter` built-in function for built-in "
"sequence types."
msgstr ""
":c:func:`PySeqIter_New` や、組み込みシーケンス型に対して 1 引数形式の組み込み"
"関数 :func:`iter` を呼び出したときに返される、イテレータオブジェクトの型オブ"
"ジェクトです。"

#: ../../c-api/iterator.rst:24
msgid ""
"Return true if the type of *op* is :c:data:`PySeqIter_Type`.  This function "
"always succeeds."
msgstr ""
"*op* の型が :c:data:`PySeqlter_Type` 型の場合に真を返します。この関数は常に成"
"功します。"

#: ../../c-api/iterator.rst:30
msgid ""
"Return an iterator that works with a general sequence object, *seq*.  The "
"iteration ends when the sequence raises :exc:`IndexError` for the "
"subscripting operation."
msgstr ""
"一般的なシーケンスオブジェクト *seq* を扱うイテレータを返します。反復処理は、"
"シーケンスが添字指定操作の際に :exc:`IndexError` を返したときに終了します。"

#: ../../c-api/iterator.rst:37
msgid ""
"Type object for iterator objects returned by :c:func:`PyCallIter_New` and "
"the two-argument form of the :func:`iter` built-in function."
msgstr ""
":c:func:`PyCallIter_New` や、組み込み関数 :func:`iter` の 2 引数形式が返すイ"
"テレータオブジェクトの型オブジェクトです。"

#: ../../c-api/iterator.rst:43
msgid ""
"Return true if the type of *op* is :c:data:`PyCallIter_Type`.  This function "
"always succeeds."
msgstr ""
"*op* の型が :c:data:`PyCallIter_Type` 型の場合に真を返します。この関数は常に"
"成功します。"

#: ../../c-api/iterator.rst:49
msgid ""
"Return a new iterator.  The first parameter, *callable*, can be any Python "
"callable object that can be called with no parameters; each call to it "
"should return the next item in the iteration.  When *callable* returns a "
"value equal to *sentinel*, the iteration will be terminated."
msgstr ""
"新たなイテレータを返します。最初のパラメタ *callable* は引数なしで呼び出せる "
"Python の呼び出し可能オブジェクトならなんでもかまいません; *callable* は、呼"
"び出されるたびに次の反復処理対象オブジェクトを返さなければなりません。生成さ"
"れたイテレータは、*callable* が *sentinel* に等しい値を返すと反復処理を終了し"
"ます。"
